SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT DISTINCT country FROM singer WHERE age > 20;
SELECT DISTINCT country FROM singer WHERE age > 20;
SELECT COUNT(*) FROM pets WHERE weight > 10;
SELECT COUNT(*) FROM pets WHERE weight > 10;
SELECT pets.weight FROM pets WHERE pets.pettype = 'dog' ORDER BY pets.pet_age ASC LIMIT 1;
SELECT MIN(weight) FROM pets WHERE pettype = 'dog';
SELECT COUNT(DISTINCT pettype) FROM pets;
SELECT COUNT(DISTINCT pettype) FROM pets;
SELECT COUNT(*) FROM continents;
SELECT count(*) FROM continents;
SELECT COUNT(*) FROM countries;
SELECT count(*) FROM countries;
SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4;
SELECT avg(mpg) FROM cars_data WHERE cylinders = 4;
SELECT COUNT(*) FROM cars_data WHERE horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE horsepower > 150;
SELECT AVG(horsepower) FROM cars_data WHERE year < 1980;
SELECT AVG(horsepower) FROM cars_data WHERE year < 1980;
SELECT COUNT(*) FROM cars_data WHERE cylinders > 4;
SELECT count(*) FROM cars_data WHERE cylinders > 4;
SELECT count(*) FROM cars_data WHERE year = 1980;
SELECT COUNT(*) FROM cars_data WHERE year = 1980;
SELECT COUNT(*) FROM cars_data WHERE cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE cylinders > 6;
SELECT country FROM airlines WHERE airline = "JetBlue Airways";
SELECT country FROM airlines WHERE airline = 'JetBlue Airways';
SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways';
SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways';
SELECT COUNT(*) FROM airlines;
SELECT count(*) FROM airlines;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT airline FROM airlines WHERE abbreviation = 'UAL';
SELECT airline FROM airlines WHERE abbreviation = 'UAL';
SELECT COUNT(*) FROM airlines WHERE country = "USA";
SELECT COUNT(*) FROM airlines WHERE country = 'USA';
SELECT airportname FROM airports WHERE airportcode = 'AKO';
SELECT airportname FROM airports WHERE airportcode = 'AKO';
SELECT airportname FROM airports WHERE city = 'Aberdeen';
SELECT airportname FROM airports WHERE city = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE sourceairport = 'APG';
SELECT COUNT(*) FROM flights WHERE sourceairport = 'APG';
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO';
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO';
SELECT flightno FROM flights WHERE sourceairport = 'APG';
SELECT flightno FROM flights WHERE sourceairport = 'APG';
SELECT flightno FROM flights WHERE destairport = "APG";
SELECT flightno FROM flights WHERE destairport = 'APG';
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT name FROM employee ORDER BY age ASC;
SELECT employee.name FROM employee ORDER BY employee.age ASC;
SELECT employee.city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(*) > 1;
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(*) > 1;
SELECT SUM(bonus) FROM evaluation;
SELECT SUM(bonus) FROM evaluation;
SELECT hiring.* FROM hiring;
SELECT shop_id, employee_id, start_from, is_full_time FROM hiring;
SELECT COUNT(DISTINCT location) FROM shop;
SELECT COUNT(DISTINCT location) FROM shop;
SELECT COUNT(*) FROM documents;
SELECT COUNT(*) FROM documents;
SELECT COUNT(DISTINCT templates.template_id) FROM documents JOIN templates ON documents.template_id = templates.template_id;
SELECT COUNT(DISTINCT templates.template_id) as template_count FROM templates JOIN documents ON templates.template_id = documents.template_id;
SELECT templates.template_id FROM templates JOIN documents ON documents.template_id = templates.template_id GROUP BY templates.template_id HAVING COUNT(DISTINCT documents.document_id) > 1
SELECT templates.template_id FROM templates WHERE templates.template_id IN (SELECT documents.template_id FROM documents GROUP BY documents.template_id HAVING COUNT(*) > 1);
SELECT templates.template_id FROM templates LEFT JOIN documents ON templates.template_id = documents.template_id WHERE documents.document_id IS NULL;
SELECT templates.template_id FROM templates LEFT JOIN documents ON templates.template_id = documents.template_id WHERE documents.document_id IS NULL;
SELECT COUNT(*) FROM templates;
SELECT COUNT(*) FROM templates;
SELECT DISTINCT template_type_code FROM templates;
SELECT template_type_code FROM templates;
SELECT COUNT(*) FROM templates WHERE template_type_code = 'CV';
SELECT COUNT(*) FROM templates WHERE template_type_code = 'CV';
SELECT ref_template_types.template_type_code FROM ref_template_types LEFT JOIN templates ON templates.template_type_code = ref_template_types.template_type_code GROUP BY ref_template_types.template_type_code HAVING COUNT(templates.template_id) < 3;
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(template_id) < 3;
SELECT template_type_description FROM ref_template_types WHERE template_type_code = 'AD';
SELECT ref_template_types.template_type_description FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.template_type_code = 'AD';
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book';
SELECT ref_template_types.template_type_code FROM ref_template_types WHERE ref_template_types.template_type_description = "Book";
SELECT COUNT(*) FROM paragraphs;
SELECT COUNT(*) FROM paragraphs;
SELECT paragraph_text, paragraph_id, document_id, other_details FROM paragraphs WHERE paragraph_text = 'Korea';
SELECT paragraph_text, other_details FROM paragraphs WHERE paragraph_text = 'Korea';
SELECT documents.document_id FROM documents INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id HAVING COUNT(paragraphs.paragraph_id) >= 2;
SELECT documents.document_id FROM documents INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id HAVING COUNT(paragraphs.paragraph_id) >= 2;
SELECT COUNT(*) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT name FROM teacher ORDER BY age ASC;
SELECT name FROM teacher ORDER BY age ASC;
SELECT teacher.name FROM teacher WHERE teacher.hometown != 'Little Lever Urban District';
SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District';
SELECT hometown FROM teacher ORDER BY age ASC LIMIT 1;
SELECT hometown FROM teacher ORDER BY age ASC LIMIT 1;
SELECT DISTINCT hometown FROM teacher GROUP BY hometown HAVING COUNT(*) > 1;
SELECT teacher.hometown FROM teacher GROUP BY teacher.hometown HAVING COUNT(DISTINCT teacher.teacher_id) >= 2;
SELECT avg(num_of_staff) FROM museum WHERE open_year < 2009;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT AVG(rankings.ranking) as average_rank FROM matches JOIN players ON matches.winner_id = players.player_id JOIN rankings ON players.player_id = rankings.player_id;
SELECT AVG(winner_rank) FROM matches;
SELECT MAX(loser_rank) FROM matches;
SELECT MAX(loser_rank) FROM matches;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT matches.winner_name FROM matches JOIN players ON players.player_id = matches.winner_id JOIN rankings ON rankings.player_id = players.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1;
SELECT matches.winner_name FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.tourney_name = "Australian Open" ORDER BY matches.winner_rank_points DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT players.country_code FROM players GROUP BY players.country_code HAVING COUNT(players.player_id) > 50;
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT AVG(injured) FROM death;
SELECT COUNT(DISTINCT result) FROM battle;
SELECT note FROM death WHERE note LIKE '%East%';
SELECT COUNT(*) FROM courses;
SELECT COUNT(*) FROM courses;
SELECT course_description FROM courses WHERE course_name = 'math';
SELECT course_description FROM courses WHERE course_name = "math";
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM addresses WHERE city = "Port Chelsea";
SELECT COUNT(DISTINCT department_id) FROM degree_programs;
SELECT COUNT(DISTINCT department_id) FROM degree_programs;
SELECT COUNT(DISTINCT degree_summary_name) FROM degree_programs;
SELECT COUNT(DISTINCT degree_program_id) FROM degree_programs;
SELECT section_name FROM sections ORDER BY section_name DESC;
SELECT section_name FROM sections ORDER BY section_name DESC;
SELECT department_description FROM departments WHERE department_name LIKE '%computer%';
SELECT department_description FROM departments WHERE department_name LIKE '%computer%';
SELECT AVG(transcript_date) AS average_print_date FROM transcripts;
SELECT AVG(transcript_date) FROM transcripts;
SELECT COUNT(*) FROM transcripts;
SELECT COUNT(*) FROM transcripts;
SELECT transcript_date FROM transcripts ORDER BY transcript_date DESC LIMIT 1;
SELECT transcript_date FROM transcripts ORDER BY transcript_date DESC LIMIT 1;
SELECT count(DISTINCT students.current_address_id) FROM students;
SELECT DISTINCT line_1, line_2, line_3, city FROM addresses JOIN students ON students.permanent_address_id = addresses.address_id OR students.current_address_id = addresses.address_id;
SELECT students.first_name, students.last_name, students.middle_name, students.student_id, students.email_address, addresses.line_1, addresses.line_2, addresses.line_3, addresses.city FROM students INNER JOIN addresses ON students.permanent_address_id = addresses.address_id ORDER BY students.last_name DESC;
SELECT students.last_name, students.first_name, students.middle_name, students.other_student_details FROM students ORDER BY students.last_name DESC;
SELECT section_name, section_description, section_id, course_id FROM sections WHERE section_name = 'h';
SELECT sections.section_description FROM sections WHERE sections.section_name = 'h';
SELECT title FROM cartoon ORDER BY title ASC;
SELECT cartoon.title FROM cartoon ORDER BY cartoon.title ASC;
SELECT title FROM cartoon WHERE directed_by = 'Ben Jones';
SELECT cartoon.title FROM cartoon WHERE cartoon.directed_by = 'Ben Jones';
SELECT COUNT(*) FROM cartoon WHERE written_by = "Joseph Kuhr";
SELECT count(*) FROM cartoon WHERE written_by = "Joseph Kuhr";
SELECT content FROM tv_channel WHERE series_name = "Sky Radio";
SELECT content FROM tv_channel WHERE series_name = "Sky Radio";
SELECT package_option FROM tv_channel WHERE series_name = "Sky Radio";
SELECT tv_channel.package_option FROM tv_channel WHERE tv_channel.series_name = 'Sky Radio';
SELECT count(*) FROM tv_channel WHERE language = 'English';
SELECT COUNT(DISTINCT id) FROM tv_channel WHERE language = 'English';
SELECT episode FROM tv_series ORDER BY rating DESC;
SELECT episode FROM tv_series ORDER BY rating;
SELECT air_date FROM tv_series WHERE episode = "A Love of a Lifetime";
SELECT air_date FROM tv_series WHERE episode = "A Love of a Lifetime";
SELECT weekly_rank FROM tv_series WHERE episode = "A Love of a Lifetime";
SELECT tv_series.weekly_rank FROM tv_series WHERE tv_series.episode = 'A Love of a Lifetime';
SELECT tv_channel.id FROM tv_channel WHERE country IN ( SELECT country FROM tv_channel GROUP BY country HAVING COUNT(DISTINCT id) > 2 )
SELECT tv_channel.id FROM tv_channel GROUP BY tv_channel.id HAVING COUNT(*) > 2;
SELECT COUNT(*) FROM poker_player;
SELECT COUNT(*) FROM poker_player;
SELECT earnings FROM poker_player ORDER BY earnings DESC;
SELECT earnings FROM poker_player ORDER BY earnings DESC;
SELECT AVG(earnings) FROM poker_player;
SELECT avg(earnings) FROM poker_player;
SELECT money_rank FROM poker_player WHERE earnings = ( SELECT MAX(earnings) FROM poker_player ) LIMIT 1;
SELECT money_rank FROM poker_player ORDER BY earnings DESC LIMIT 1;
SELECT MAX(final_table_made) FROM poker_player WHERE earnings < 200000;
SELECT MAX(final_table_made) FROM poker_player WHERE earnings < 200000;
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(*) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(*) >= 2;
SELECT name FROM people WHERE nationality != "Russia";
SELECT name FROM people WHERE nationality <> 'Russia';
SELECT COUNT(DISTINCT nationality) FROM people;
SELECT COUNT(DISTINCT nationality) FROM people;
SELECT COUNT(DISTINCT state) FROM area_code_state;
SELECT MAX(created) FROM votes WHERE state = 'CA';
SELECT contestant_name FROM contestants WHERE contestant_name <> 'Jessie Alloway';
SELECT contestant_name FROM contestants WHERE contestant_name LIKE '%Al%';
SELECT name FROM country WHERE indepyear > 1950;
SELECT name FROM country WHERE indepyear > 1950;
SELECT COUNT(*) FROM country WHERE governmentform = 'Republic';
SELECT COUNT(*) FROM country WHERE governmentform = 'Republic';
SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean';
SELECT SUM(surfacearea) FROM country WHERE continent = 'Caribbean';
SELECT continent FROM country WHERE name = 'Anguilla';
SELECT continent FROM country WHERE name = 'Anguilla';
SELECT AVG(lifeexpectancy) FROM country WHERE region = 'Central Africa';
SELECT AVG(lifeexpectancy) FROM country WHERE region = "Central Africa";
SELECT country.name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1;
SELECT country.name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1;
SELECT SUM(population) FROM city WHERE district = 'Gelderland';
SELECT SUM(population) FROM city WHERE district = 'Gelderland';
SELECT COUNT(DISTINCT language) AS unique_languages FROM countrylanguage;
SELECT COUNT(DISTINCT language) FROM countrylanguage;
SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = "Africa";
SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa';
SELECT DISTINCT countrycode FROM countrylanguage WHERE language <> "English";
SELECT countrycode FROM countrylanguage WHERE language != "English";
SELECT name FROM country ORDER BY population DESC LIMIT 3;
SELECT country.name FROM country ORDER BY population DESC LIMIT 3;
SELECT name FROM country ORDER BY population ASC LIMIT 3;
SELECT name FROM country ORDER BY population LIMIT 3;
SELECT COUNT(*) FROM country WHERE continent = 'Asia';
SELECT COUNT(*) FROM country WHERE continent = 'Asia';
SELECT COUNT(conductor_id) FROM conductor;
SELECT COUNT(*) FROM conductor;
SELECT orchestra.record_company FROM orchestra ORDER BY orchestra.year_of_founded DESC;
SELECT record_company FROM orchestra ORDER BY year_of_founded DESC;
SELECT AVG(attendance) FROM show;
SELECT AVG(attendance) AS average_attendance FROM show;
SELECT COUNT(DISTINCT nationality) FROM conductor;
SELECT COUNT(DISTINCT nationality) FROM conductor;
SELECT COUNT(*) FROM highschooler;
SELECT COUNT(*) FROM highschooler;
SELECT grade FROM highschooler;
SELECT grade FROM highschooler
SELECT grade FROM highschooler WHERE name = 'Kyle';
SELECT grade FROM highschooler WHERE name = 'Kyle';
SELECT name FROM highschooler WHERE grade = 10;
SELECT name FROM highschooler WHERE grade = 10;
SELECT id FROM highschooler WHERE name = 'Kyle';
SELECT id FROM highschooler WHERE name = "Kyle";
SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(*) >= 4;
SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(*) >= 4;
SELECT id FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
SELECT id FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
SELECT COUNT(DISTINCT dog_id) FROM treatments;
SELECT COUNT(DISTINCT dogs.dog_id) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id;
SELECT COUNT(DISTINCT professional_id) FROM treatments;
SELECT COUNT(DISTINCT professional_id) FROM treatments;
SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT AVG(age) FROM dogs;
SELECT AVG(age) FROM dogs;
SELECT MAX(age) FROM dogs;
SELECT max(age) AS oldest_dog_age FROM dogs;
SELECT MAX(charge_amount) FROM charges
SELECT charge_amount FROM charges WHERE charge_type = ( SELECT charge_type FROM charges ORDER BY charge_amount DESC LIMIT 1 )
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT name FROM singer ORDER BY net_worth_millions ASC;
SELECT name FROM singer ORDER BY net_worth_millions ASC;
SELECT name FROM singer WHERE citizenship != 'France';
SELECT name FROM singer WHERE citizenship != 'French';
SELECT name FROM singer ORDER BY net_worth_millions DESC LIMIT 1;
SELECT name FROM singer ORDER BY net_worth_millions DESC LIMIT 1;
SELECT COUNT(*) FROM other_available_features;
