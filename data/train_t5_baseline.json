[
  {
    "prompt": "What are the different names of all the races in reverse alphabetical order? database is formula_1. tables are circuits, races, drivers, status, seasons, constructors, constructor standings, results, driver standings, constructor results, qualifying, pit stops, lap times. columns in circuits are circuit id, circuit reference, name, location, country, latitude, longitude, altitude, url. columns in races are race id, year, round, circuit id, name, date, time, url. columns in drivers are driver id, driver reference, number, code, forename, surname, dob, nationality, url. columns in status are status id, status. columns in seasons are year, url. columns in constructors are constructor id, constructor reference, name, nationality, url. columns in constructor standings are constructor standings id, race id, constructor id, points, position, position text, wins. columns in results are result id, race id, driver id, constructor id, number, grid, position, position text, position order, points, laps, time, milliseconds, fastest lap, rank, fastest lap time, fastest lap speed, status id. columns in driver standings are driver standings id, race id, driver id, points, position, position text, wins. columns in constructor results are constructor results id, race id, constructor id, points, status. columns in qualifying are qualify id, race id, driver id, constructor id, number, position, q1, q2, q3. columns in pit stops are race id, driver id, stop, lap, time, duration, milliseconds. columns in lap times are race id, driver id, lap, position, time, milliseconds.",
    "target": "SELECT DISTINCT name FROM races ORDER BY name DESC"
  },
  {
    "prompt": "How many king beds are there? database is inn_1. tables are rooms, reservations. columns in rooms are room id, room name, beds, bed type, max occupancy, base price, decor. columns in reservations are code, room, check in, check out, rate, last name, first name, adults, kids.",
    "target": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';"
  },
  {
    "prompt": "What are the addresses of the course authors or tutors with personal name \"Cathrine\" database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\""
  },
  {
    "prompt": "What are the first names for students who have an \"a\" in their first name? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'"
  },
  {
    "prompt": "Find the name of the youngest organization. database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1"
  },
  {
    "prompt": "What details are there on the research staff? List the result in ascending alphabetical order. database is tracking_grants_for_research. tables are document types, documents, grants, organisation types, organisations, project outcomes, project staff, projects, research outcomes, research staff, staff roles, tasks. columns in document types are document type code, document description. columns in documents are document id, document type code, grant id, sent date, response received date, other details. columns in grants are grant id, organisation id, grant amount, grant start date, grant end date, other details. columns in organisation types are organisation type, organisation type description. columns in organisations are organisation id, organisation type, organisation details. columns in project outcomes are project id, outcome code, outcome details. columns in project staff are staff id, project id, role code, date from, date to, other details. columns in projects are project id, organisation id, project details. columns in research outcomes are outcome code, outcome description. columns in research staff are staff id, employer organisation id, staff details. columns in staff roles are role code, role description. columns in tasks are task id, project id, task details, eg agree objectives.",
    "target": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC"
  },
  {
    "prompt": "Which party had the most hosts? Give me the party location. database is party_host. tables are party, host, party host. columns in party are party id, party theme, location, first year, last year, number of hosts. columns in host are host id, name, nationality, age. columns in party host are party id, host id, is main in charge.",
    "target": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1"
  },
  {
    "prompt": "Find the patient who most recently stayed in room 111. database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1"
  },
  {
    "prompt": "How many services are there? database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT count(*) FROM services"
  },
  {
    "prompt": "What is the detail of the location UK Gallery? database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\""
  },
  {
    "prompt": "Find the number of students who have the word \"son\" in their personal names. database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\""
  },
  {
    "prompt": "How many appointments are there? database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT count(*) FROM appointment"
  },
  {
    "prompt": "List the enrollment for each school that does not have \"Catholic\" as denomination. database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\""
  },
  {
    "prompt": "On average how large is the population of the counties? database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT avg(Population) FROM county"
  },
  {
    "prompt": "How many users are there? database is epinions_1. tables are item, review, useracct, trust. columns in item are item id, title. columns in review are a id, user id, item id, rating, rank. columns in useracct are user id, name. columns in trust are source user id, target user id, trust.",
    "target": "SELECT count(*) FROM useracct"
  },
  {
    "prompt": "what is the highest point in delaware in meters database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";"
  },
  {
    "prompt": "How many projects are there? database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT count(*) FROM Projects"
  },
  {
    "prompt": "what state is springfield in database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "what is the highest elevation in delaware database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";"
  },
  {
    "prompt": "what is the capital of the texas state database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT capital FROM state WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "Count the number of clubs located at \"HHH\". database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT count(*) FROM club WHERE clublocation  =  \"HHH\""
  },
  {
    "prompt": "What is id of the city that hosted events in the most recent year? database is city_record. tables are city, match, temperature, hosting city. columns in city are city id, city, hanzi, hanyu pinyin, regional population, gdp. columns in match are match id, date, venue, score, result, competition. columns in temperature are city id, jan, feb, mar, apr, jun, jul, aug, sep, oct, nov, dec. columns in hosting city are year, match id, host city.",
    "target": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1"
  },
  {
    "prompt": "What are the names of the mills which are not located in Donceel? database is architecture. tables are architect, bridge, mill. columns in architect are id, name, nationality, gender. columns in bridge are architect id, id, name, location, length meters, length feet. columns in mill are architect id, id, location, name, type, built year, notes.",
    "target": "SELECT name FROM mill WHERE LOCATION != 'Donceel'"
  },
  {
    "prompt": "Find the names of all wines produced in 2008. database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\""
  },
  {
    "prompt": "How many aircrafts are there? database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT count(*) FROM aircraft"
  },
  {
    "prompt": "How many orders have detail \"Second time\"? database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"Second time\""
  },
  {
    "prompt": "What document type codes do we have? database is cre_Doc_Control_Systems. tables are reference document types, roles, addresses, reference document status, reference shipping agents, documents, employees, document drafts, draft copies, circulation history, documents mailed. columns in reference document types are document type code, document type description. columns in roles are role code, role description. columns in addresses are address id, address details. columns in reference document status are document status code, document status description. columns in reference shipping agents are shipping agent code, shipping agent name, shipping agent description. columns in documents are document id, document status code, document type code, shipping agent code, receipt date, receipt number, other details. columns in employees are employee id, role code, employee name, other details. columns in document drafts are document id, draft number, draft details. columns in draft copies are document id, draft number, copy number. columns in circulation history are document id, draft number, copy number, employee id. columns in documents mailed are document id, mailed to address id, mailing date.",
    "target": "SELECT document_type_code FROM Ref_Document_Types;"
  },
  {
    "prompt": "what is the size of the largest state in the usa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT MAX ( area ) FROM state;"
  },
  {
    "prompt": "What are the distinct payment method codes in all the invoices? database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT DISTINCT payment_method_code FROM INVOICES"
  },
  {
    "prompt": "Return the addresses of the course authors or tutors whose personal name is \"Cathrine\". database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\""
  },
  {
    "prompt": "How many movie ratings have more than 3 stars? database is movie_1. tables are movie, reviewer, rating. columns in movie are movie id, title, year, director. columns in reviewer are reviewer id, name. columns in rating are reviewer id, movie id, rating stars, rating date.",
    "target": "SELECT count(*) FROM Rating WHERE stars  >  3"
  },
  {
    "prompt": "What is the name of the student who has the highest total credits in the History department. database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1"
  },
  {
    "prompt": "What is the sum of revenue from companies with headquarters in Austin? database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'"
  },
  {
    "prompt": "Sort all captain names by their ages from old to young. database is ship_1. tables are captain, ship. columns in captain are captain id, name, ship id, age, class, rank. columns in ship are ship id, name, type, built year, class, flag.",
    "target": "SELECT name FROM captain ORDER BY age DESC"
  },
  {
    "prompt": "Count the number of candidates. database is candidate_poll. tables are candidate, people. columns in candidate are candidate id, people id, poll source, date, support rate, consider rate, oppose rate, unsure rate. columns in people are people id, sex, name, date of birth, height, weight.",
    "target": "SELECT count(*) FROM candidate"
  },
  {
    "prompt": "List the camera lens names containing substring \"Digital\". database is mountain_photos. tables are mountain, camera lens, photos. columns in mountain are id, name, height, prominence, range, country. columns in camera lens are id, brand, name, focal length mm, max aperture. columns in photos are id, camera lens id, mountain id, color, name.",
    "target": "SELECT name FROM camera_lens WHERE name LIKE \"%Digital%\""
  },
  {
    "prompt": "How many markets have number of cities smaller than 300? database is film_rank. tables are film, market, film market estimation. columns in film are film id, title, studio, director, gross in dollar. columns in market are market id, country, number cities. columns in film market estimation are estimation id, low estimate, high estimate, film id, type, market id, year.",
    "target": "SELECT count(*) FROM market WHERE Number_cities  <  300"
  },
  {
    "prompt": "What is the id of the reviewer whose name has substring \u201cMike\u201d? database is movie_1. tables are movie, reviewer, rating. columns in movie are movie id, title, year, director. columns in reviewer are reviewer id, name. columns in rating are reviewer id, movie id, rating stars, rating date.",
    "target": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\""
  },
  {
    "prompt": "How many faculty is there in total in the year of 2002? database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002"
  },
  {
    "prompt": "How many stations does Mountain View city has? database is bike_1. tables are station, status, trip, weather. columns in station are id, name, latitude, longitude, dock count, city, installation date. columns in status are station id, bikes available, docks available, time. columns in trip are id, duration, start date, start station name, start station id, end date, end station name, end station id, bike id, subscription type, zip code. columns in weather are date, max temperature f, mean temperature f, min temperature f, max dew point f, mean dew point f, min dew point f, max humidity, mean humidity, min humidity, max sea level pressure inches, mean sea level pressure inches, min sea level pressure inches, max visibility miles, mean visibility miles, min visibility miles, max wind speed mph, mean wind speed mph, max gust speed mph, precipitation inches, cloud cover, events, wind dir degrees, zip code.",
    "target": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\""
  },
  {
    "prompt": "How many wines are produced at Robert Biale winery? database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\""
  },
  {
    "prompt": "give me the cities in texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT city_name FROM city WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "How many movies were made before 2000? database is movie_1. tables are movie, reviewer, rating. columns in movie are movie id, title, year, director. columns in reviewer are reviewer id, name. columns in rating are reviewer id, movie id, rating stars, rating date.",
    "target": "SELECT count(*) FROM Movie WHERE YEAR  <  2000"
  },
  {
    "prompt": "How many actors are there? database is musical. tables are musical, actor. columns in musical are musical id, name, year, award, category, nominee, result. columns in actor are actor id, name, musical id, character, duration, age.",
    "target": "SELECT count(*) FROM actor"
  },
  {
    "prompt": "Which states have more than 2 parks? database is baseball_1. tables are all star, appearances, manager award, player award, manager award vote, player award vote, batting, batting postseason, player college, fielding, fielding outfield, fielding postseason, hall of fame, home game, manager, manager half, player, park, pitching, pitching postseason, salary, college, postseason, team, team franchise, team half. columns in all star are player id, year, game num, game id, team id, league id, gp, starting pos. columns in appearances are year, team id, league id, player id, g all, gs, g batting, g defense, g p, g c, g 1b, g 2b, g 3b, g ss, g lf, g cf, g rf, g of, g dh, g ph, g pr. columns in manager award are player id, award id, year, league id, tie, notes. columns in player award are player id, award id, year, league id, tie, notes. columns in manager award vote are award id, year, league id, player id, points won, points max, votes first. columns in player award vote are award id, year, league id, player id, points won, points max, votes first. columns in batting are player id, year, stint, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in batting postseason are year, round, player id, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in player college are player id, college id, year. columns in fielding are player id, year, stint, team id, league id, pos, g, gs, inn outs, po, a, e, dp, pb, wp, sb, cs, zr. columns in fielding outfield are player id, year, stint, glf, gcf, grf. columns in fielding postseason are player id, year, team id, league id, round, pos, g, gs, inn outs, po, a, e, dp, tp, pb, sb, cs. columns in hall of fame are player id, yearid, votedby, ballots, needed, votes, inducted, category, needed note. columns in home game are year, league id, team id, park id, span first, span last, games, openings, attendance. columns in manager are player id, year, team id, league id, inseason, g, w, l, rank, plyr mgr. columns in manager half are player id, year, team id, league id, inseason, half, g, w, l, rank. columns in player are player id, birth year, birth month, birth day, birth country, birth state, birth city, death year, death month, death day, death country, death state, death city, name first, name last, name given, weight, height, bats, throws, debut, final game, retro id, bbref id. columns in park are park id, park name, park alias, city, state, country. columns in pitching are player id, year, stint, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in pitching postseason are player id, year, round, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in salary are year, team id, league id, player id, salary. columns in college are college id, name full, city, state, country. columns in postseason are year, round, team id winner, league id winner, team id loser, league id loser, wins, losses, ties. columns in team are year, league id, team id, franchise id, div id, rank, g, ghome, w, l, div win, wc win, lg win, ws win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team id br, team id lahman45, team id retro. columns in team franchise are franchise id, franchise name, active, na assoc. columns in team half are year, league id, team id, half, div id, div win, rank, g, w, l.",
    "target": "SELECT state FROM park GROUP BY state HAVING count(*)  >  2;"
  },
  {
    "prompt": "Find the name and age of all males in order of their age. database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT name FROM Person WHERE gender  =  'male' ORDER BY age"
  },
  {
    "prompt": "List the document type code for the document with the id 2. database is cre_Doc_Control_Systems. tables are reference document types, roles, addresses, reference document status, reference shipping agents, documents, employees, document drafts, draft copies, circulation history, documents mailed. columns in reference document types are document type code, document type description. columns in roles are role code, role description. columns in addresses are address id, address details. columns in reference document status are document status code, document status description. columns in reference shipping agents are shipping agent code, shipping agent name, shipping agent description. columns in documents are document id, document status code, document type code, shipping agent code, receipt date, receipt number, other details. columns in employees are employee id, role code, employee name, other details. columns in document drafts are document id, draft number, draft details. columns in draft copies are document id, draft number, copy number. columns in circulation history are document id, draft number, copy number, employee id. columns in documents mailed are document id, mailed to address id, mailing date.",
    "target": "SELECT document_type_code FROM Documents WHERE document_id = 2;"
  },
  {
    "prompt": "Find the last names of students studying in room 111. database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT lastname FROM list WHERE classroom  =  111"
  },
  {
    "prompt": "Find the name of the campuses opened before 1800. database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT campus FROM campuses WHERE YEAR  <  1800"
  },
  {
    "prompt": "How many products are there under the category \"Seeds\"? database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\""
  },
  {
    "prompt": "List the locations of schools in descending order of founded year. database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT LOCATION FROM school ORDER BY Founded DESC"
  },
  {
    "prompt": "How many CSU campuses are there? database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT count(*) FROM campuses"
  },
  {
    "prompt": "What are the elimination moves of wrestlers whose team is \"Team Orton\"? database is wrestler. tables are wrestler, elimination. columns in wrestler are wrestler id, name, reign, days held, location, event. columns in elimination are elimination id, wrestler id, team, eliminated by, elimination move, time.",
    "target": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"Team Orton\""
  },
  {
    "prompt": "Find the names of all the tracks that contain the word \"you\". database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'"
  },
  {
    "prompt": "what is the capital of the state texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT capital FROM state WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "What is the alphabetically ordered list of all distinct medications? database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT DISTINCT name FROM medication ORDER BY name"
  },
  {
    "prompt": "What cities do students live in? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT DISTINCT city_code FROM Student"
  },
  {
    "prompt": "Find the first names of students studying in room 108. database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT firstname FROM list WHERE classroom  =  108"
  },
  {
    "prompt": "What is the total number of ratings that has more than 3 stars? database is movie_1. tables are movie, reviewer, rating. columns in movie are movie id, title, year, director. columns in reviewer are reviewer id, name. columns in rating are reviewer id, movie id, rating stars, rating date.",
    "target": "SELECT count(*) FROM Rating WHERE stars  >  3"
  },
  {
    "prompt": "What are the catalog entry names of the products with next entry ID above 8? database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8"
  },
  {
    "prompt": "Find the marketing region description of China? database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\""
  },
  {
    "prompt": "How many sections does course ACCT-211 has? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'"
  },
  {
    "prompt": "List the names of companies in descending order of market value. database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC"
  },
  {
    "prompt": "What are the distinct Famous release dates? database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT distinct(Famous_Release_date) FROM artist"
  },
  {
    "prompt": "List all information about the assessment notes sorted by date in ascending order. database is behavior_monitoring. tables are reference address types, reference detention type, reference incident type, addresses, students, teachers, assessment notes, behavior incident, detention, student addresses, students in detention. columns in reference address types are address type code, address type description. columns in reference detention type are detention type code, detention type description. columns in reference incident type are incident type code, incident type description. columns in addresses are address id, line 1, line 2, line 3, city, zip postcode, state province county, country, other address details. columns in students are student id, address id, first name, middle name, last name, cell mobile number, email address, date first rental, date left university, other student details. columns in teachers are teacher id, address id, first name, middle name, last name, gender, cell mobile number, email address, other details. columns in assessment notes are notes id, student id, teacher id, date of notes, text of notes, other details. columns in behavior incident are incident id, incident type code, student id, date incident start, date incident end, incident summary, recommendations, other details. columns in detention are detention id, detention type code, teacher id, datetime detention start, datetime detention end, detention summary, other details. columns in student addresses are student id, address id, date address from, date address to, monthly rental, other details. columns in students in detention are student id, detention id, incident id.",
    "target": "SELECT * FROM Assessment_Notes ORDER BY date_of_notes ASC"
  },
  {
    "prompt": "How many different cities have these stations? database is bike_1. tables are station, status, trip, weather. columns in station are id, name, latitude, longitude, dock count, city, installation date. columns in status are station id, bikes available, docks available, time. columns in trip are id, duration, start date, start station name, start station id, end date, end station name, end station id, bike id, subscription type, zip code. columns in weather are date, max temperature f, mean temperature f, min temperature f, max dew point f, mean dew point f, min dew point f, max humidity, mean humidity, min humidity, max sea level pressure inches, mean sea level pressure inches, min sea level pressure inches, max visibility miles, mean visibility miles, min visibility miles, max wind speed mph, mean wind speed mph, max gust speed mph, precipitation inches, cloud cover, events, wind dir degrees, zip code.",
    "target": "SELECT count(DISTINCT city) FROM station"
  },
  {
    "prompt": "List the names of 5 users followed by the largest number of other users. database is twitter_1. tables are follows, tweets, user profiles. columns in follows are user id, follower id. columns in tweets are id, user id, text, create date. columns in user profiles are uid, name, email, partition id, followers.",
    "target": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5"
  },
  {
    "prompt": "How many students whose are playing the role of goalie? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT count(*) FROM tryout WHERE pPos  =  'goalie'"
  },
  {
    "prompt": "List all the businesses with more than 4.5 stars database is yelp. tables are business, category, user, checkin, neighbourhood, review, tip. columns in business are bid, business id, name, full address, city, latitude, longitude, review count, is open, rating, state. columns in category are id, business id, category name. columns in user are uid, user id, name. columns in checkin are cid, business id, count, day. columns in neighbourhood are id, business id, neighbourhood name. columns in review are rid, business id, user id, rating, text, year, month. columns in tip are tip id, business id, text, user id, likes, year, month.",
    "target": "SELECT name FROM business WHERE rating  >  4.5;"
  },
  {
    "prompt": "How many regions do we have? database is party_people. tables are region, party, member, party events. columns in region are region id, region name, date, label, format, catalogue. columns in party are party id, minister, took office, left office, region id, party name. columns in member are member id, member name, party id, in office. columns in party events are event id, event name, party id, member in charge id.",
    "target": "SELECT count(*) FROM region"
  },
  {
    "prompt": "Count the number of distinct company industries. database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT count(DISTINCT Industry) FROM Companies"
  },
  {
    "prompt": "Return the number of companies created by Andy. database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'"
  },
  {
    "prompt": "What are the venues of all the matches? Sort them in the descending order of match date. database is city_record. tables are city, match, temperature, hosting city. columns in city are city id, city, hanzi, hanyu pinyin, regional population, gdp. columns in match are match id, date, venue, score, result, competition. columns in temperature are city id, jan, feb, mar, apr, jun, jul, aug, sep, oct, nov, dec. columns in hosting city are year, match id, host city.",
    "target": "SELECT venue FROM MATCH ORDER BY date DESC"
  },
  {
    "prompt": "Find the attribute data type for the attribute named \"Green\". database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\""
  },
  {
    "prompt": "Give the city that the student whose family name is Kim lives in. database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT city_code FROM Student WHERE LName  =  \"Kim\""
  },
  {
    "prompt": "Count the number of different software platforms. database is device. tables are device, shop, stock. columns in device are device id, device, carrier, package version, applications, software platform. columns in shop are shop id, shop name, location, open date, open year. columns in stock are shop id, device id, quantity.",
    "target": "SELECT count(DISTINCT Software_Platform) FROM device"
  },
  {
    "prompt": "List the names of countries whose language is not \"German\". database is roller_coaster. tables are roller coaster, country. columns in roller coaster are roller coaster id, name, park, country id, length, height, speed, opened, status. columns in country are country id, name, population, area, languages.",
    "target": "SELECT Name FROM country WHERE Languages != \"German\""
  },
  {
    "prompt": "Count the number of distinct product types. database is department_store. tables are addresses, staff, suppliers, department store chain, customers, products, supplier addresses, customer addresses, customer orders, department stores, departments, order items, product suppliers, staff department assignments. columns in addresses are address id, address details. columns in staff are staff id, staff gender, staff name. columns in suppliers are supplier id, supplier name, supplier phone. columns in department store chain are department store chain id, department store chain name. columns in customers are customer id, payment method code, customer code, customer name, customer address, customer phone, customer email. columns in products are product id, product type code, product name, product price. columns in supplier addresses are supplier id, address id, date from, date to. columns in customer addresses are customer id, address id, date from, date to. columns in customer orders are order id, customer id, order status code, order date. columns in department stores are department store id, department store chain id, store name, store address, store phone, store email. columns in departments are department id, department store id, department name. columns in order items are order item id, order id, product id. columns in product suppliers are product id, supplier id, date supplied from, date supplied to, total amount purchased, total value purchased. columns in staff department assignments are staff id, department id, date assigned from, job title code, date assigned to.",
    "target": "SELECT count(DISTINCT product_type_code) FROM products"
  },
  {
    "prompt": "List the votes of elections in descending order. database is election_representative. tables are election, representative. columns in election are election id, representative id, date, votes, vote percent, seats, place. columns in representative are representative id, name, state, party, lifespan.",
    "target": "SELECT Votes FROM election ORDER BY Votes DESC"
  },
  {
    "prompt": "What is the founded year of the non public school that was founded most recently? database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1"
  },
  {
    "prompt": "Find the number of students that have at least one grade \"B\". database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\""
  },
  {
    "prompt": "List the 3 highest salaries of the players in 2001? database is baseball_1. tables are all star, appearances, manager award, player award, manager award vote, player award vote, batting, batting postseason, player college, fielding, fielding outfield, fielding postseason, hall of fame, home game, manager, manager half, player, park, pitching, pitching postseason, salary, college, postseason, team, team franchise, team half. columns in all star are player id, year, game num, game id, team id, league id, gp, starting pos. columns in appearances are year, team id, league id, player id, g all, gs, g batting, g defense, g p, g c, g 1b, g 2b, g 3b, g ss, g lf, g cf, g rf, g of, g dh, g ph, g pr. columns in manager award are player id, award id, year, league id, tie, notes. columns in player award are player id, award id, year, league id, tie, notes. columns in manager award vote are award id, year, league id, player id, points won, points max, votes first. columns in player award vote are award id, year, league id, player id, points won, points max, votes first. columns in batting are player id, year, stint, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in batting postseason are year, round, player id, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in player college are player id, college id, year. columns in fielding are player id, year, stint, team id, league id, pos, g, gs, inn outs, po, a, e, dp, pb, wp, sb, cs, zr. columns in fielding outfield are player id, year, stint, glf, gcf, grf. columns in fielding postseason are player id, year, team id, league id, round, pos, g, gs, inn outs, po, a, e, dp, tp, pb, sb, cs. columns in hall of fame are player id, yearid, votedby, ballots, needed, votes, inducted, category, needed note. columns in home game are year, league id, team id, park id, span first, span last, games, openings, attendance. columns in manager are player id, year, team id, league id, inseason, g, w, l, rank, plyr mgr. columns in manager half are player id, year, team id, league id, inseason, half, g, w, l, rank. columns in player are player id, birth year, birth month, birth day, birth country, birth state, birth city, death year, death month, death day, death country, death state, death city, name first, name last, name given, weight, height, bats, throws, debut, final game, retro id, bbref id. columns in park are park id, park name, park alias, city, state, country. columns in pitching are player id, year, stint, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in pitching postseason are player id, year, round, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in salary are year, team id, league id, player id, salary. columns in college are college id, name full, city, state, country. columns in postseason are year, round, team id winner, league id winner, team id loser, league id loser, wins, losses, ties. columns in team are year, league id, team id, franchise id, div id, rank, g, ghome, w, l, div win, wc win, lg win, ws win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team id br, team id lahman45, team id retro. columns in team franchise are franchise id, franchise name, active, na assoc. columns in team half are year, league id, team id, half, div id, div win, rank, g, w, l.",
    "target": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;"
  },
  {
    "prompt": "Count the number of book clubs. database is culture_company. tables are book club, movie, culture company. columns in book club are book club id, year, author or editor, book title, publisher, category, result. columns in movie are movie id, title, year, director, budget million, gross worldwide. columns in culture company are company name, type, incorporated in, group equity shareholding, book club id, movie id.",
    "target": "SELECT count(*) FROM book_club"
  },
  {
    "prompt": "Count the number of countries. database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT count(*) FROM country"
  },
  {
    "prompt": "What are the employee ids for employees who have held two or more jobs? database is hr_1. tables are regions, countries, departments, jobs, employees, job history, locations. columns in regions are region id, region name. columns in countries are country id, country name, region id. columns in departments are department id, department name, manager id, location id. columns in jobs are job id, job title, min salary, max salary. columns in employees are employee id, first name, last name, email, phone number, hire date, job id, salary, commission pct, manager id, department id. columns in job history are employee id, start date, end date, job id, department id. columns in locations are location id, street address, postal code, city, state province, country id.",
    "target": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
  },
  {
    "prompt": "what states border the ohio river database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
  },
  {
    "prompt": "List all product names in ascending order of price. database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"
  },
  {
    "prompt": "what states have towns named springfield database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "What are the price ranges of hotels? database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT price_range FROM HOTELS"
  },
  {
    "prompt": "Please show the categories of the music festivals with count more than 1. database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1"
  },
  {
    "prompt": "could you tell me what is the highest point in the state of texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "Show student ids for all male students. database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT StuID FROM Student WHERE Sex  =  'M'"
  },
  {
    "prompt": "how tall is guadalupe peak database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"guadalupe peak\";"
  },
  {
    "prompt": "Find the total number of available hotels. database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT count(*) FROM HOTELS"
  },
  {
    "prompt": "What are the albums produced in year 2010? database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT * FROM Albums WHERE YEAR  =  2010"
  },
  {
    "prompt": "List the names of wrestlers in descending order of days held. database is wrestler. tables are wrestler, elimination. columns in wrestler are wrestler id, name, reign, days held, location, event. columns in elimination are elimination id, wrestler id, team, eliminated by, elimination move, time.",
    "target": "SELECT Name FROM wrestler ORDER BY Days_held DESC"
  },
  {
    "prompt": "What are the names of representatives whose party is not \"Republican\"? database is election_representative. tables are election, representative. columns in election are election id, representative id, date, votes, vote percent, seats, place. columns in representative are representative id, name, state, party, lifespan.",
    "target": "SELECT Name FROM Representative WHERE Party != \"Republican\""
  },
  {
    "prompt": "What are all of the products whose name includes the substring \"Scanner\"? database is store_product. tables are product, store, district, store product, store district. columns in product are product id, product, dimensions, dpi, pages per minute color, max page size, interface. columns in store are store id, store name, type, area size, number of product category, ranking. columns in district are district id, district name, headquartered city, city population, city area. columns in store product are store id, product id. columns in store district are store id, district id.",
    "target": "SELECT product FROM product WHERE product LIKE \"%Scanner%\""
  },
  {
    "prompt": "Select the name of the products with a price less than or equal to $200. database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT name FROM products WHERE price  <=  200"
  },
  {
    "prompt": "Count the number of different companies. database is entrepreneur. tables are entrepreneur, people. columns in entrepreneur are entrepreneur id, people id, company, money requested, investor. columns in people are people id, name, height, weight, date of birth.",
    "target": "SELECT count(DISTINCT Company) FROM entrepreneur"
  },
  {
    "prompt": "Return all the information for each election record. database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT * FROM election"
  },
  {
    "prompt": "what is the average population of the us by state database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT AVG ( population ) FROM state;"
  },
  {
    "prompt": "Show the headquarters that have at least two companies. database is company_employee. tables are people, company, employment. columns in people are people id, age, name, nationality, graduation college. columns in company are company id, name, headquarters, industry, sales in billion, profits in billion, assets in billion, market value in billion. columns in employment are company id, people id, year working.",
    "target": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*)  >=  2"
  },
  {
    "prompt": "Find the name of the most expensive hardware product. database is department_store. tables are addresses, staff, suppliers, department store chain, customers, products, supplier addresses, customer addresses, customer orders, department stores, departments, order items, product suppliers, staff department assignments. columns in addresses are address id, address details. columns in staff are staff id, staff gender, staff name. columns in suppliers are supplier id, supplier name, supplier phone. columns in department store chain are department store chain id, department store chain name. columns in customers are customer id, payment method code, customer code, customer name, customer address, customer phone, customer email. columns in products are product id, product type code, product name, product price. columns in supplier addresses are supplier id, address id, date from, date to. columns in customer addresses are customer id, address id, date from, date to. columns in customer orders are order id, customer id, order status code, order date. columns in department stores are department store id, department store chain id, store name, store address, store phone, store email. columns in departments are department id, department store id, department name. columns in order items are order item id, order id, product id. columns in product suppliers are product id, supplier id, date supplied from, date supplied to, total amount purchased, total value purchased. columns in staff department assignments are staff id, department id, date assigned from, job title code, date assigned to.",
    "target": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1"
  },
  {
    "prompt": "Find the number of rooms with a king bed. database is inn_1. tables are rooms, reservations. columns in rooms are room id, room name, beds, bed type, max occupancy, base price, decor. columns in reservations are code, room, check in, check out, rate, last name, first name, adults, kids.",
    "target": "SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";"
  },
  {
    "prompt": "return me the paper after 2000 with the most citations . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT title FROM publication WHERE YEAR  >  2000 ORDER BY citation_num DESC LIMIT 1;"
  },
  {
    "prompt": "What are the total number of Domestic Passengers of airports that contain the word \"London\". database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\""
  },
  {
    "prompt": "Find the total number of scientists. database is scientist_1. tables are scientists, projects, assigned to. columns in scientists are ssn, name. columns in projects are code, name, hours. columns in assigned to are scientist, project.",
    "target": "SELECT count(*) FROM scientists"
  },
  {
    "prompt": "What are the unique block codes that have available rooms? database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0"
  },
  {
    "prompt": "order all gas station locations by the opening year. database is gas_company. tables are company, gas station, station company. columns in company are company id, rank, company, headquarters, main industry, sales billion, profits billion, assets billion, market value. columns in gas station are station id, open year, location, manager name, vice manager name, representative name. columns in station company are station id, company id, rank of the year.",
    "target": "SELECT LOCATION FROM gas_station ORDER BY open_year"
  },
  {
    "prompt": "How many games are played for all students? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT sum(gamesplayed) FROM Sportsinfo"
  },
  {
    "prompt": "What is the average horizontal bar points for all gymnasts? database is gymnast. tables are gymnast, people. columns in gymnast are gymnast id, floor exercise points, pommel horse points, rings points, vault points, parallel bars points, horizontal bar points, total points. columns in people are people id, name, age, height, hometown.",
    "target": "SELECT avg(Horizontal_Bar_Points) FROM gymnast"
  },
  {
    "prompt": "What is the starting year of the oldest technicians? database is machine_repair. tables are repair, machine, technician, repair assignment. columns in repair are repair id, name, launch date, notes. columns in machine are machine id, making year, class, team, machine series, value points, quality rank. columns in technician are technician id, name, team, starting year, age. columns in repair assignment are technician id, repair id, machine id.",
    "target": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1"
  },
  {
    "prompt": "What are the last names of students in room 111? database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT lastname FROM list WHERE classroom  =  111"
  },
  {
    "prompt": "What are the names of the chairs of festivals, sorted in ascending order of the year held? database is entertainment_awards. tables are festival detail, artwork, nomination. columns in festival detail are festival id, festival name, chair name, location, year, num of audience. columns in artwork are artwork id, type, name. columns in nomination are artwork id, festival id, result.",
    "target": "SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC"
  },
  {
    "prompt": "Return the device carriers that do not have Android as their software platform. database is device. tables are device, shop, stock. columns in device are device id, device, carrier, package version, applications, software platform. columns in shop are shop id, shop name, location, open date, open year. columns in stock are shop id, device id, quantity.",
    "target": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'"
  },
  {
    "prompt": "what is the size of new mexico database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT area FROM state WHERE state_name  =  \"new mexico\";"
  },
  {
    "prompt": "How many different projects are there? database is scientist_1. tables are scientists, projects, assigned to. columns in scientists are ssn, name. columns in projects are code, name, hours. columns in assigned to are scientist, project.",
    "target": "SELECT count(DISTINCT name) FROM projects"
  },
  {
    "prompt": "Count the number of different teams involved in match season. database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT count(DISTINCT Team) FROM match_season"
  },
  {
    "prompt": "What are the names of all the media types? database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT name FROM media_types;"
  },
  {
    "prompt": "Return the founded year for the school with the largest enrollment. database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1"
  },
  {
    "prompt": "Find all the product whose name contains the word \"Scanner\". database is store_product. tables are product, store, district, store product, store district. columns in product are product id, product, dimensions, dpi, pages per minute color, max page size, interface. columns in store are store id, store name, type, area size, number of product category, ranking. columns in district are district id, district name, headquartered city, city population, city area. columns in store product are store id, product id. columns in store district are store id, district id.",
    "target": "SELECT product FROM product WHERE product LIKE \"%Scanner%\""
  },
  {
    "prompt": "What are all the players who played in match season, sorted by college in ascending alphabetical order? database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT player FROM match_season ORDER BY College ASC"
  },
  {
    "prompt": "Find the description of the club called \"Tennis Club\". database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\""
  },
  {
    "prompt": "What are the titles of all the albums alphabetically ascending? database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT title FROM albums ORDER BY title;"
  },
  {
    "prompt": "how many states border at least one other state database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( DISTINCT state_name ) FROM border_info;"
  },
  {
    "prompt": "When did the first staff for the projects started working? database is tracking_grants_for_research. tables are document types, documents, grants, organisation types, organisations, project outcomes, project staff, projects, research outcomes, research staff, staff roles, tasks. columns in document types are document type code, document description. columns in documents are document id, document type code, grant id, sent date, response received date, other details. columns in grants are grant id, organisation id, grant amount, grant start date, grant end date, other details. columns in organisation types are organisation type, organisation type description. columns in organisations are organisation id, organisation type, organisation details. columns in project outcomes are project id, outcome code, outcome details. columns in project staff are staff id, project id, role code, date from, date to, other details. columns in projects are project id, organisation id, project details. columns in research outcomes are outcome code, outcome description. columns in research staff are staff id, employer organisation id, staff details. columns in staff roles are role code, role description. columns in tasks are task id, project id, task details, eg agree objectives.",
    "target": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1"
  },
  {
    "prompt": "Find the name of physicians whose position title contains the word senior. database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'"
  },
  {
    "prompt": "What are the names of all wines produced in 2008? database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\""
  },
  {
    "prompt": "Find the first names of all the teachers that teach in classroom 110. database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT firstname FROM teachers WHERE classroom  =  110"
  },
  {
    "prompt": "what is the combined area of all 50 states database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT SUM ( area ) FROM state;"
  },
  {
    "prompt": "Count the number of distinct claim outcome codes. database is insurance_and_eClaims. tables are customers, staff, policies, claim headers, claims documents, claims processing stages, claims processing. columns in customers are customer id, customer details. columns in staff are staff id, staff details. columns in policies are policy id, customer id, policy type code, start date, end date. columns in claim headers are claim header id, claim status code, claim type code, policy id, date of claim, date of settlement, amount claimed, amount piad. columns in claims documents are claim id, document type code, created by staff id, created date. columns in claims processing stages are claim stage id, next claim stage id, claim status name, claim status description. columns in claims processing are claim processing id, claim id, claim outcome code, claim stage id, staff id.",
    "target": "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing"
  },
  {
    "prompt": "Show the name of aircrafts with top three lowest distances. database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3"
  },
  {
    "prompt": "How many different types of rooms are there? database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT count(DISTINCT roomtype) FROM room"
  },
  {
    "prompt": "Show all the information about election. database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT * FROM election"
  },
  {
    "prompt": "List all different genre types. database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT DISTINCT name FROM genres;"
  },
  {
    "prompt": "where is the lowest point in iowa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"
  },
  {
    "prompt": "What are the student ids for students over 20 years old? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT StuID FROM Student WHERE age  >  20"
  },
  {
    "prompt": "Count the total number of clubs. database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT count(*) FROM club"
  },
  {
    "prompt": "Which employees do not authorize destruction for any document? Give me their employee ids. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "prompt": "Find the number of distinct bed types available in this inn. database is inn_1. tables are rooms, reservations. columns in rooms are room id, room name, beds, bed type, max occupancy, base price, decor. columns in reservations are code, room, check in, check out, rate, last name, first name, adults, kids.",
    "target": "SELECT count(DISTINCT bedType) FROM Rooms;"
  },
  {
    "prompt": "where is the highest point in texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "How many distinct cities does the employees live in? database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE"
  },
  {
    "prompt": "Find the names of all swimmers, sorted by their 100 meter scores in ascending order. database is swimming. tables are swimmer, stadium, event, record. columns in swimmer are id, name, nationality, meter 100, meter 200, meter 300, meter 400, meter 500, meter 600, meter 700, time. columns in stadium are id, name, capacity, city, country, opening year. columns in event are id, name, stadium id, year. columns in record are id, result, swimmer id, event id.",
    "target": "SELECT name FROM swimmer ORDER BY meter_100"
  },
  {
    "prompt": "How many staff in total? database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT count(*) FROM Staff;"
  },
  {
    "prompt": "How many buildings are there? database is protein_institute. tables are building, institution, protein. columns in building are building id, name, street address, years as tallest, height feet, floors. columns in institution are institution id, institution, location, founded, type, enrollment, team, primary conference, building id. columns in protein are common name, protein name, divergence from human lineage, accession number, sequence length, sequence identity to human protein, institution id.",
    "target": "SELECT count(*) FROM building"
  },
  {
    "prompt": "how many people in boulder database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM city WHERE city_name  =  \"boulder\";"
  },
  {
    "prompt": "What are the nations that have more than two ships? database is ship_mission. tables are mission, ship. columns in mission are mission id, ship id, code, launched year, location, speed knots, fate. columns in ship are ship id, name, type, nationality, tonnage.",
    "target": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2"
  },
  {
    "prompt": "How many campuses are there in Los Angeles county? database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\""
  },
  {
    "prompt": "How many train stations are there? database is train_station. tables are station, train, train station. columns in station are station id, name, annual entry exit, annual interchanges, total passengers, location, main services, number of platforms. columns in train are train id, name, time, service. columns in train station are train id, station id.",
    "target": "SELECT count(*) FROM station"
  },
  {
    "prompt": "How many wrestlers are there? database is wrestler. tables are wrestler, elimination. columns in wrestler are wrestler id, name, reign, days held, location, event. columns in elimination are elimination id, wrestler id, team, eliminated by, elimination move, time.",
    "target": "SELECT count(*) FROM wrestler"
  },
  {
    "prompt": "Find all the order items whose product id is 11. What are the order item ids? database is tracking_orders. tables are customers, invoices, orders, products, order items, shipments, shipment items. columns in customers are customer id, customer name, customer details. columns in invoices are invoice number, invoice date, invoice details. columns in orders are order id, customer id, order status, date order placed, order details. columns in products are product id, product name, product details. columns in order items are order item id, product id, order id, order item status, order item details. columns in shipments are shipment id, order id, invoice number, shipment tracking number, shipment date, other shipment details. columns in shipment items are shipment id, order item id.",
    "target": "SELECT order_item_id FROM order_items WHERE product_id = 11"
  },
  {
    "prompt": "Give me all the distinct location codes for documents. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT DISTINCT location_code FROM Document_locations"
  },
  {
    "prompt": "Sort the names of products in ascending order of their price. database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"
  },
  {
    "prompt": "What year was the movie \" The Imitation Game \" produced database is imdb. tables are actor, copyright, cast, genre, classification, company, director, producer, directed by, keyword, made by, movie, tags, tv series, writer, written by. columns in actor are aid, gender, name, nationality, birth city, birth year. columns in copyright are id, msid, cid. columns in cast are id, msid, aid, role. columns in genre are gid, genre. columns in classification are id, msid, gid. columns in company are id, name, country code. columns in director are did, gender, name, nationality, birth city, birth year. columns in producer are pid, gender, name, nationality, birth city, birth year. columns in directed by are id, msid, did. columns in keyword are id, keyword. columns in made by are id, msid, pid. columns in movie are mid, title, release year, title aka, budget. columns in tags are id, msid, kid. columns in tv series are sid, title, release year, num of seasons, num of episodes, title aka, budget. columns in writer are wid, gender, name, nationality, num of episodes, birth city, birth year. columns in written by are id, msid, wid.",
    "target": "SELECT release_year FROM movie WHERE title  =  \"The Imitation Game\";"
  },
  {
    "prompt": "How many events are there? database is swimming. tables are swimmer, stadium, event, record. columns in swimmer are id, name, nationality, meter 100, meter 200, meter 300, meter 400, meter 500, meter 600, meter 700, time. columns in stadium are id, name, capacity, city, country, opening year. columns in event are id, name, stadium id, year. columns in record are id, result, swimmer id, event id.",
    "target": "SELECT count(*) FROM event"
  },
  {
    "prompt": "Find the average checking balance. database is small_bank_1. tables are accounts, savings, checking. columns in accounts are customer id, name. columns in savings are customer id, balance. columns in checking are customer id, balance.",
    "target": "SELECT avg(balance) FROM checking"
  },
  {
    "prompt": "Which customers have the substring \"Diana\" in their names? Return the customer details. database is insurance_and_eClaims. tables are customers, staff, policies, claim headers, claims documents, claims processing stages, claims processing. columns in customers are customer id, customer details. columns in staff are staff id, staff details. columns in policies are policy id, customer id, policy type code, start date, end date. columns in claim headers are claim header id, claim status code, claim type code, policy id, date of claim, date of settlement, amount claimed, amount piad. columns in claims documents are claim id, document type code, created by staff id, created date. columns in claims processing stages are claim stage id, next claim stage id, claim status name, claim status description. columns in claims processing are claim processing id, claim id, claim outcome code, claim stage id, staff id.",
    "target": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\""
  },
  {
    "prompt": "List the name of products in ascending order of price. database is solvency_ii. tables are addresses, locations, products, parties, assets, channels, finances, events, products in events, parties in events, agreements, assets in events. columns in addresses are address id, address details. columns in locations are location id, other details. columns in products are product id, product type code, product name, product price. columns in parties are party id, party details. columns in assets are asset id, other details. columns in channels are channel id, other details. columns in finances are finance id, other details. columns in events are event id, address id, channel id, event type code, finance id, location id. columns in products in events are product in event id, event id, product id. columns in parties in events are party id, event id, role code. columns in agreements are document id, event id. columns in assets in events are asset id, event id.",
    "target": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"
  },
  {
    "prompt": "What are all the employees without a department number? database is hr_1. tables are regions, countries, departments, jobs, employees, job history, locations. columns in regions are region id, region name. columns in countries are country id, country name, region id. columns in departments are department id, department name, manager id, location id. columns in jobs are job id, job title, min salary, max salary. columns in employees are employee id, first name, last name, email, phone number, hire date, job id, salary, commission pct, manager id, department id. columns in job history are employee id, start date, end date, job id, department id. columns in locations are location id, street address, postal code, city, state province, country id.",
    "target": "SELECT * FROM employees WHERE department_id  =  \"null\""
  },
  {
    "prompt": "What is the average age of all artists? database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT avg(Age) FROM artist"
  },
  {
    "prompt": "return me the year of \" Making database systems usable \" database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT YEAR FROM publication WHERE title  =  \"Making database systems usable\";"
  },
  {
    "prompt": "How many games are held after season 2007? database is game_injury. tables are stadium, game, injury accident. columns in stadium are id, name, home games, average attendance, total attendance, capacity percentage. columns in game are stadium id, id, season, date, home team, away team, score, competition. columns in injury accident are game id, id, player, injury, number of matches, source.",
    "target": "SELECT count(*) FROM game WHERE season  >  2007"
  },
  {
    "prompt": "List names of all pilot in descending order of age. database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT Name FROM pilot ORDER BY Age DESC"
  },
  {
    "prompt": "What are the names of organizations, ordered by the date they were formed, ascending? database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT organization_name FROM organizations ORDER BY date_formed ASC"
  },
  {
    "prompt": "display all the details from Employees table for those employees who was hired before 2002-06-21. database is hr_1. tables are regions, countries, departments, jobs, employees, job history, locations. columns in regions are region id, region name. columns in countries are country id, country name, region id. columns in departments are department id, department name, manager id, location id. columns in jobs are job id, job title, min salary, max salary. columns in employees are employee id, first name, last name, email, phone number, hire date, job id, salary, commission pct, manager id, department id. columns in job history are employee id, start date, end date, job id, department id. columns in locations are location id, street address, postal code, city, state province, country id.",
    "target": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'"
  },
  {
    "prompt": "Find the average hours of all projects. database is scientist_1. tables are scientists, projects, assigned to. columns in scientists are ssn, name. columns in projects are code, name, hours. columns in assigned to are scientist, project.",
    "target": "SELECT avg(hours) FROM projects"
  },
  {
    "prompt": "How many countries are there in total? database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT count(*) FROM country"
  },
  {
    "prompt": "What are the different types of player positions? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT count(DISTINCT pPos) FROM tryout"
  },
  {
    "prompt": "What are the ids of all employees that dont have certificates? database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate"
  },
  {
    "prompt": "What are the headquarters with at least two companies in the banking industry? database is gas_company. tables are company, gas station, station company. columns in company are company id, rank, company, headquarters, main industry, sales billion, profits billion, assets billion, market value. columns in gas station are station id, open year, location, manager name, vice manager name, representative name. columns in station company are station id, company id, rank of the year.",
    "target": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2"
  },
  {
    "prompt": "return me the number of keywords . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT COUNT ( DISTINCT keyword ) FROM keyword;"
  },
  {
    "prompt": "Count the number of different ranks of captain. database is ship_1. tables are captain, ship. columns in captain are captain id, name, ship id, age, class, rank. columns in ship are ship id, name, type, built year, class, flag.",
    "target": "SELECT count(DISTINCT rank) FROM captain"
  },
  {
    "prompt": "How many heads of the departments are older than 56 ? database is department_management. tables are department, head, management. columns in department are department id, name, creation, ranking, budget in billions, num employees. columns in head are head id, name, born state, age. columns in management are department id, head id, temporary acting.",
    "target": "SELECT count(*) FROM head WHERE age  >  56"
  },
  {
    "prompt": "List names of all teams in the basketball competition, ordered by all home scores in descending order. database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC"
  },
  {
    "prompt": "Give the average number of working horses on farms with more than 5000 total horses. database is farm. tables are city, farm, farm competition, competition record. columns in city are city id, official name, status, area km 2, population, census ranking. columns in farm are farm id, year, total horses, working horses, total cattle, oxen, bulls, cows, pigs, sheep and goats. columns in farm competition are competition id, year, theme, host city id, hosts. columns in competition record are competition id, farm id, rank.",
    "target": "SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000"
  },
  {
    "prompt": "Find the name of the stadium that has the maximum capacity. database is swimming. tables are swimmer, stadium, event, record. columns in swimmer are id, name, nationality, meter 100, meter 200, meter 300, meter 400, meter 500, meter 600, meter 700, time. columns in stadium are id, name, capacity, city, country, opening year. columns in event are id, name, stadium id, year. columns in record are id, result, swimmer id, event id.",
    "target": "SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1"
  },
  {
    "prompt": "Find the name of all customers. database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT customer_name FROM customers"
  },
  {
    "prompt": "Find the wineries that have at least four wines. database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4"
  },
  {
    "prompt": "Find the names of all the product characteristics. database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS"
  },
  {
    "prompt": "Show all official native languages that contain the word \"English\". database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\""
  },
  {
    "prompt": "what is the length of the rio grande river database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"
  },
  {
    "prompt": "How many bookings do we have? database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT count(*) FROM BOOKINGS"
  },
  {
    "prompt": "What are the names of artist who have the letter a in their names? database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT Name FROM ARTIST WHERE Name LIKE \"%a%\""
  },
  {
    "prompt": "List the names of states that have more than 2 parks. database is baseball_1. tables are all star, appearances, manager award, player award, manager award vote, player award vote, batting, batting postseason, player college, fielding, fielding outfield, fielding postseason, hall of fame, home game, manager, manager half, player, park, pitching, pitching postseason, salary, college, postseason, team, team franchise, team half. columns in all star are player id, year, game num, game id, team id, league id, gp, starting pos. columns in appearances are year, team id, league id, player id, g all, gs, g batting, g defense, g p, g c, g 1b, g 2b, g 3b, g ss, g lf, g cf, g rf, g of, g dh, g ph, g pr. columns in manager award are player id, award id, year, league id, tie, notes. columns in player award are player id, award id, year, league id, tie, notes. columns in manager award vote are award id, year, league id, player id, points won, points max, votes first. columns in player award vote are award id, year, league id, player id, points won, points max, votes first. columns in batting are player id, year, stint, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in batting postseason are year, round, player id, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in player college are player id, college id, year. columns in fielding are player id, year, stint, team id, league id, pos, g, gs, inn outs, po, a, e, dp, pb, wp, sb, cs, zr. columns in fielding outfield are player id, year, stint, glf, gcf, grf. columns in fielding postseason are player id, year, team id, league id, round, pos, g, gs, inn outs, po, a, e, dp, tp, pb, sb, cs. columns in hall of fame are player id, yearid, votedby, ballots, needed, votes, inducted, category, needed note. columns in home game are year, league id, team id, park id, span first, span last, games, openings, attendance. columns in manager are player id, year, team id, league id, inseason, g, w, l, rank, plyr mgr. columns in manager half are player id, year, team id, league id, inseason, half, g, w, l, rank. columns in player are player id, birth year, birth month, birth day, birth country, birth state, birth city, death year, death month, death day, death country, death state, death city, name first, name last, name given, weight, height, bats, throws, debut, final game, retro id, bbref id. columns in park are park id, park name, park alias, city, state, country. columns in pitching are player id, year, stint, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in pitching postseason are player id, year, round, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in salary are year, team id, league id, player id, salary. columns in college are college id, name full, city, state, country. columns in postseason are year, round, team id winner, league id winner, team id loser, league id loser, wins, losses, ties. columns in team are year, league id, team id, franchise id, div id, rank, g, ghome, w, l, div win, wc win, lg win, ws win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team id br, team id lahman45, team id retro. columns in team franchise are franchise id, franchise name, active, na assoc. columns in team half are year, league id, team id, half, div id, div win, rank, g, w, l.",
    "target": "SELECT state FROM park GROUP BY state HAVING count(*)  >  2;"
  },
  {
    "prompt": "What is the average number of international passengers of all airports? database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT avg(International_Passengers) FROM airport"
  },
  {
    "prompt": "how high is guadalupe peak database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"guadalupe peak\";"
  },
  {
    "prompt": "Return the detail of the location named \"UK Gallery\". database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\""
  },
  {
    "prompt": "Show the denomination shared by more than one school. database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1"
  },
  {
    "prompt": "What is the type of the document named \"David CV\"? database is document_management. tables are roles, users, document structures, functional areas, images, documents, document functional areas, document sections, document sections images. columns in roles are role code, role description. columns in users are user id, role code, user name, user login, password. columns in document structures are document structure code, parent document structure code, document structure description. columns in functional areas are functional area code, parent functional area code, functional area description. columns in images are image id, image alt text, image name, image url. columns in documents are document code, document structure code, document type code, access count, document name. columns in document functional areas are document code, functional area code. columns in document sections are section id, document code, section sequence, section code, section title. columns in document sections images are section id, image id.",
    "target": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\""
  },
  {
    "prompt": "Find id of the candidate who most recently accessed the course? database is student_assessment. tables are addresses, people, students, courses, people addresses, student course registrations, student course attendance, candidates, candidate assessments. columns in addresses are address id, line 1, line 2, city, zip postcode, state province county, country. columns in people are person id, first name, middle name, last name, cell mobile number, email address, login name, password. columns in students are student id, student details. columns in courses are course id, course name, course description, other details. columns in people addresses are person address id, person id, address id, date from, date to. columns in student course registrations are student id, course id, registration date. columns in student course attendance are student id, course id, date of attendance. columns in candidates are candidate id, candidate details. columns in candidate assessments are candidate id, qualification, assessment date, asessment outcome code.",
    "target": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1"
  },
  {
    "prompt": "What is the order date of each booking? database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT Order_Date FROM BOOKINGS"
  },
  {
    "prompt": "What are the birthdays of people in ascending order of height? database is body_builder. tables are body builder, people. columns in body builder are body builder id, people id, snatch, clean jerk, total. columns in people are people id, name, height, weight, birth date, birth place.",
    "target": "SELECT Birth_Date FROM People ORDER BY Height ASC"
  },
  {
    "prompt": "Find the IDs of customers whose name contains \"Diana\". database is insurance_fnol. tables are customers, services, available policies, customers policies, first notification of loss, claims, settlements. columns in customers are customer id, customer name. columns in services are service id, service name. columns in available policies are policy id, policy type code, customer phone. columns in customers policies are customer id, policy id, date opened, date closed. columns in first notification of loss are fnol id, customer id, policy id, service id. columns in claims are claim id, fnol id, effective date. columns in settlements are settlement id, claim id, effective date, settlement amount.",
    "target": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\""
  },
  {
    "prompt": "List the distinct police forces of counties whose location is not on east side. database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"East\""
  },
  {
    "prompt": "how high is the highest point in delaware database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";"
  },
  {
    "prompt": "What are the countries for each market ordered by decreasing number of cities? database is film_rank. tables are film, market, film market estimation. columns in film are film id, title, studio, director, gross in dollar. columns in market are market id, country, number cities. columns in film market estimation are estimation id, low estimate, high estimate, film id, type, market id, year.",
    "target": "SELECT Country FROM market ORDER BY Number_cities DESC"
  },
  {
    "prompt": "What is the name of the hardware product with the greatest price? database is department_store. tables are addresses, staff, suppliers, department store chain, customers, products, supplier addresses, customer addresses, customer orders, department stores, departments, order items, product suppliers, staff department assignments. columns in addresses are address id, address details. columns in staff are staff id, staff gender, staff name. columns in suppliers are supplier id, supplier name, supplier phone. columns in department store chain are department store chain id, department store chain name. columns in customers are customer id, payment method code, customer code, customer name, customer address, customer phone, customer email. columns in products are product id, product type code, product name, product price. columns in supplier addresses are supplier id, address id, date from, date to. columns in customer addresses are customer id, address id, date from, date to. columns in customer orders are order id, customer id, order status code, order date. columns in department stores are department store id, department store chain id, store name, store address, store phone, store email. columns in departments are department id, department store id, department name. columns in order items are order item id, order id, product id. columns in product suppliers are product id, supplier id, date supplied from, date supplied to, total amount purchased, total value purchased. columns in staff department assignments are staff id, department id, date assigned from, job title code, date assigned to.",
    "target": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1"
  },
  {
    "prompt": "How many students are there? database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT count(*) FROM student"
  },
  {
    "prompt": "number of citizens in boulder database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM city WHERE city_name  =  \"boulder\";"
  },
  {
    "prompt": "In how many different cities are banks located? database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT count(DISTINCT city) FROM bank"
  },
  {
    "prompt": "Where is the history department? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT dept_address FROM department WHERE dept_name  =  'History'"
  },
  {
    "prompt": "Count the number of programs. database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT count(*) FROM program"
  },
  {
    "prompt": "Show the working years of managers in descending order of their level. database is railway. tables are railway, train, manager, railway manage. columns in railway are railway id, railway, builder, built, wheels, location, objectnumber. columns in train are train id, train num, name, from, arrival, railway id. columns in manager are manager id, name, country, working year starts, age, level. columns in railway manage are railway id, manager id, from year.",
    "target": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC"
  },
  {
    "prompt": "How many calendar items do we have? database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT count(*) FROM Ref_calendar"
  },
  {
    "prompt": "How many different items were reviewed by some users? database is epinions_1. tables are item, review, useracct, trust. columns in item are item id, title. columns in review are a id, user id, item id, rating, rank. columns in useracct are user id, name. columns in trust are source user id, target user id, trust.",
    "target": "SELECT count(DISTINCT i_id) FROM review"
  },
  {
    "prompt": "What are the enrollments of schools whose denomination is not \"Catholic\"? database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\""
  },
  {
    "prompt": "return me the citations of \" Making database systems usable \" . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT citation_num FROM publication WHERE title  =  \"Making database systems usable\";"
  },
  {
    "prompt": "What is the name of the most expensive product? database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1"
  },
  {
    "prompt": "what is the number of different channel owners? database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT count(DISTINCT OWNER) FROM channel"
  },
  {
    "prompt": "Show the ids of all employees who dont destroy any document. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "prompt": "Show the details of the top 3 most expensive hotels. database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3"
  },
  {
    "prompt": "Find all the distinct visit dates. database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT DISTINCT Visit_Date FROM VISITS"
  },
  {
    "prompt": "What is the name of the technician whose team is not NYY? database is machine_repair. tables are repair, machine, technician, repair assignment. columns in repair are repair id, name, launch date, notes. columns in machine are machine id, making year, class, team, machine series, value points, quality rank. columns in technician are technician id, name, team, starting year, age. columns in repair assignment are technician id, repair id, machine id.",
    "target": "SELECT Name FROM technician WHERE Team != \"NYY\""
  },
  {
    "prompt": "Find the id of the item whose title is \"orange\". database is epinions_1. tables are item, review, useracct, trust. columns in item are item id, title. columns in review are a id, user id, item id, rating, rank. columns in useracct are user id, name. columns in trust are source user id, target user id, trust.",
    "target": "SELECT i_id FROM item WHERE title  =  \"orange\""
  },
  {
    "prompt": "How many characteristics are there? database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT count(*) FROM CHARACTERISTICS"
  },
  {
    "prompt": "Return the titles of films that include Deleted Scenes in their special feature section. database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'"
  },
  {
    "prompt": "What are all the different book publishers? database is culture_company. tables are book club, movie, culture company. columns in book club are book club id, year, author or editor, book title, publisher, category, result. columns in movie are movie id, title, year, director, budget million, gross worldwide. columns in culture company are company name, type, incorporated in, group equity shareholding, book club id, movie id.",
    "target": "SELECT DISTINCT publisher FROM book_club"
  },
  {
    "prompt": "List in alphabetic order all different amenities. database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name"
  },
  {
    "prompt": "What are the ids of the students who registered for course 301? database is student_assessment. tables are addresses, people, students, courses, people addresses, student course registrations, student course attendance, candidates, candidate assessments. columns in addresses are address id, line 1, line 2, city, zip postcode, state province county, country. columns in people are person id, first name, middle name, last name, cell mobile number, email address, login name, password. columns in students are student id, student details. columns in courses are course id, course name, course description, other details. columns in people addresses are person address id, person id, address id, date from, date to. columns in student course registrations are student id, course id, registration date. columns in student course attendance are student id, course id, date of attendance. columns in candidates are candidate id, candidate details. columns in candidate assessments are candidate id, qualification, assessment date, asessment outcome code.",
    "target": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301"
  },
  {
    "prompt": "What is the number of colleges with a student population greater than 15000? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT count(*) FROM College WHERE enr  >  15000"
  },
  {
    "prompt": "how many square kilometers in the us database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT SUM ( area ) FROM state;"
  },
  {
    "prompt": "What are the phone numbers of customers using the policy with the code \"Life Insurance\"? database is insurance_fnol. tables are customers, services, available policies, customers policies, first notification of loss, claims, settlements. columns in customers are customer id, customer name. columns in services are service id, service name. columns in available policies are policy id, policy type code, customer phone. columns in customers policies are customer id, policy id, date opened, date closed. columns in first notification of loss are fnol id, customer id, policy id, service id. columns in claims are claim id, fnol id, effective date. columns in settlements are settlement id, claim id, effective date, settlement amount.",
    "target": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\""
  },
  {
    "prompt": "What are the types of competition that have most 5 competitions for that type? database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5"
  },
  {
    "prompt": "How many customers in state of CA? database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT count(*) FROM customers WHERE state = \"CA\";"
  },
  {
    "prompt": "What are the names of all the customers? database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT customer_name FROM customers"
  },
  {
    "prompt": "Retrieve the list of all cities. database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT DISTINCT city FROM addresses"
  },
  {
    "prompt": "Return the description of the budget type that has the code ORG. database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\""
  },
  {
    "prompt": "which rivers flow through illinois database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
  },
  {
    "prompt": "What are the names of all people who do not have friends? database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend"
  },
  {
    "prompt": "What are the names of all the clubs ordered in descending alphabetical order? database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT name FROM club ORDER BY name DESC"
  },
  {
    "prompt": "Count the number of students who have advisors. database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT count(DISTINCT s_id) FROM advisor"
  },
  {
    "prompt": "Find all the building full names containing the word \"court\". database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\""
  },
  {
    "prompt": "What are the IDs of customers who have \"Diana\" in part of their names? database is insurance_fnol. tables are customers, services, available policies, customers policies, first notification of loss, claims, settlements. columns in customers are customer id, customer name. columns in services are service id, service name. columns in available policies are policy id, policy type code, customer phone. columns in customers policies are customer id, policy id, date opened, date closed. columns in first notification of loss are fnol id, customer id, policy id, service id. columns in claims are claim id, fnol id, effective date. columns in settlements are settlement id, claim id, effective date, settlement amount.",
    "target": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\""
  },
  {
    "prompt": "How many medicines were not approved by the FDA? database is medicine_enzyme_interaction. tables are medicine, enzyme, medicine enzyme interaction. columns in medicine are id, name, trade name, fda approved. columns in enzyme are id, name, location, product, chromosome, omim, porphyria. columns in medicine enzyme interaction are enzyme id, medicine id, interaction type.",
    "target": "SELECT count(*) FROM medicine WHERE FDA_approved  =  'No'"
  },
  {
    "prompt": "What is the document type description for document type named Film? database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\""
  },
  {
    "prompt": "How many video game types exist? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT count(DISTINCT gtype) FROM Video_games"
  },
  {
    "prompt": "What is draft detail of the document with id 7? database is cre_Doc_Control_Systems. tables are reference document types, roles, addresses, reference document status, reference shipping agents, documents, employees, document drafts, draft copies, circulation history, documents mailed. columns in reference document types are document type code, document type description. columns in roles are role code, role description. columns in addresses are address id, address details. columns in reference document status are document status code, document status description. columns in reference shipping agents are shipping agent code, shipping agent name, shipping agent description. columns in documents are document id, document status code, document type code, shipping agent code, receipt date, receipt number, other details. columns in employees are employee id, role code, employee name, other details. columns in document drafts are document id, draft number, draft details. columns in draft copies are document id, draft number, copy number. columns in circulation history are document id, draft number, copy number, employee id. columns in documents mailed are document id, mailed to address id, mailing date.",
    "target": "SELECT draft_details FROM Document_Drafts WHERE document_id = 7;"
  },
  {
    "prompt": "How many architects are female? database is architecture. tables are architect, bridge, mill. columns in architect are id, name, nationality, gender. columns in bridge are architect id, id, name, location, length meters, length feet. columns in mill are architect id, id, location, name, type, built year, notes.",
    "target": "SELECT count(*) FROM architect WHERE gender  =  'female'"
  },
  {
    "prompt": "what are the major cities of the united states database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT city_name FROM city WHERE population  >  150000;"
  },
  {
    "prompt": "Which grade is studying in classroom 103? database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT DISTINCT grade FROM list WHERE classroom  =  103"
  },
  {
    "prompt": "what is the population in boulder database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM city WHERE city_name  =  \"boulder\";"
  },
  {
    "prompt": "How many different jobs are listed? database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT count(DISTINCT job) FROM Person"
  },
  {
    "prompt": "Count the number of courses in the Physics department. database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'"
  },
  {
    "prompt": "What are the titles of courses that are offered in more than one department? database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1"
  },
  {
    "prompt": "What are the names of colleges that have two or more players, listed in descending alphabetical order? database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC"
  },
  {
    "prompt": "Find the list of attribute data types possessed by more than 3 attribute definitions. database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3"
  },
  {
    "prompt": "How many students got accepted after the tryout? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT count(*) FROM tryout WHERE decision  =  'yes'"
  },
  {
    "prompt": "Count the number of accounts. database is small_bank_1. tables are accounts, savings, checking. columns in accounts are customer id, name. columns in savings are customer id, balance. columns in checking are customer id, balance.",
    "target": "SELECT count(*) FROM accounts"
  },
  {
    "prompt": "Which countries have more than one mountain? database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1"
  },
  {
    "prompt": "How many kinds of enzymes are there? database is medicine_enzyme_interaction. tables are medicine, enzyme, medicine enzyme interaction. columns in medicine are id, name, trade name, fda approved. columns in enzyme are id, name, location, product, chromosome, omim, porphyria. columns in medicine enzyme interaction are enzyme id, medicine id, interaction type.",
    "target": "SELECT count(*) FROM enzyme"
  },
  {
    "prompt": "What are the login names of the students with family name \"Ward\"? database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT login_name FROM Students WHERE family_name  =  \"Ward\""
  },
  {
    "prompt": "What is the name of the race held most recently? database is formula_1. tables are circuits, races, drivers, status, seasons, constructors, constructor standings, results, driver standings, constructor results, qualifying, pit stops, lap times. columns in circuits are circuit id, circuit reference, name, location, country, latitude, longitude, altitude, url. columns in races are race id, year, round, circuit id, name, date, time, url. columns in drivers are driver id, driver reference, number, code, forename, surname, dob, nationality, url. columns in status are status id, status. columns in seasons are year, url. columns in constructors are constructor id, constructor reference, name, nationality, url. columns in constructor standings are constructor standings id, race id, constructor id, points, position, position text, wins. columns in results are result id, race id, driver id, constructor id, number, grid, position, position text, position order, points, laps, time, milliseconds, fastest lap, rank, fastest lap time, fastest lap speed, status id. columns in driver standings are driver standings id, race id, driver id, points, position, position text, wins. columns in constructor results are constructor results id, race id, constructor id, points, status. columns in qualifying are qualify id, race id, driver id, constructor id, number, position, q1, q2, q3. columns in pit stops are race id, driver id, stop, lap, time, duration, milliseconds. columns in lap times are race id, driver id, lap, position, time, milliseconds.",
    "target": "SELECT name FROM races ORDER BY date DESC LIMIT 1"
  },
  {
    "prompt": "What are the names of the physicians who have senior in their titles. database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'"
  },
  {
    "prompt": "What is all the information about employees hired before June 21, 2002? database is hr_1. tables are regions, countries, departments, jobs, employees, job history, locations. columns in regions are region id, region name. columns in countries are country id, country name, region id. columns in departments are department id, department name, manager id, location id. columns in jobs are job id, job title, min salary, max salary. columns in employees are employee id, first name, last name, email, phone number, hire date, job id, salary, commission pct, manager id, department id. columns in job history are employee id, start date, end date, job id, department id. columns in locations are location id, street address, postal code, city, state province, country id.",
    "target": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'"
  },
  {
    "prompt": "what state borders kentucky database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "What are the different locations of the school with the code BUS? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'"
  },
  {
    "prompt": "What is the number of distinct publication dates? database is book_2. tables are publication, book. columns in publication are publication id, book id, publisher, publication date, price. columns in book are book id, title, issues, writer.",
    "target": "SELECT COUNT (DISTINCT Publication_Date) FROM publication"
  },
  {
    "prompt": "Find the ids of orders whose status is Success. database is customer_deliveries. tables are products, addresses, customers, regular orders, regular order products, actual orders, actual order products, customer addresses, delivery routes, delivery route locations, trucks, employees, order deliveries. columns in products are product id, product name, product price, product description. columns in addresses are address id, address details, city, zip postcode, state province county, country. columns in customers are customer id, payment method, customer name, customer phone, customer email, date became customer. columns in regular orders are regular order id, distributer id. columns in regular order products are regular order id, product id. columns in actual orders are actual order id, order status code, regular order id, actual order date. columns in actual order products are actual order id, product id. columns in customer addresses are customer id, address id, date from, address type, date to. columns in delivery routes are route id, route name, other route details. columns in delivery route locations are location code, route id, location address id, location name. columns in trucks are truck id, truck licence number, truck details. columns in employees are employee id, employee address id, employee name, employee phone. columns in order deliveries are location code, actual order id, delivery status code, driver employee id, truck id, delivery date.",
    "target": "SELECT actual_order_id FROM actual_orders WHERE order_status_code  =  'Success'"
  },
  {
    "prompt": "what is the area of new mexico database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT area FROM state WHERE state_name  =  \"new mexico\";"
  },
  {
    "prompt": "how long is the rio grande database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"
  },
  {
    "prompt": "List all department names ordered by their starting date. database is company_1. tables are works on, employee, department, project, dependent, department locations. columns in works on are employee ssn, project number, hours. columns in employee are first name, minit, last name, ssn, birth date, address, sex, salary, super ssn, department no. columns in department are department name, department number, manager ssn, manager start date. columns in project are dependent name, dependent number, dependent location, department number. columns in dependent are employee ssn, dependent name, sex, birth date, relationship. columns in department locations are department number, department location.",
    "target": "SELECT dname FROM department ORDER BY mgr_start_date"
  },
  {
    "prompt": "How many distinct courses are enrolled in by students? database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT count(course_id) FROM Student_Course_Enrolment"
  },
  {
    "prompt": "What are the distinct move in dates of the residents? database is local_govt_and_lot. tables are customers, properties, residents, organizations, services, residents services, things, customer events, customer event notes, timed status of things, timed locations of things. columns in customers are customer id, customer details. columns in properties are property id, property type code, property address, other details. columns in residents are resident id, property id, date moved in, date moved out, other details. columns in organizations are organization id, parent organization id, organization details. columns in services are service id, organization id, service type code, service details. columns in residents services are resident id, service id, date moved in, property id, date requested, date provided, other details. columns in things are thing id, organization id, type of thing code, service type code, service details. columns in customer events are customer event id, customer id, date moved in, property id, resident id, thing id. columns in customer event notes are customer event note id, customer event id, service type code, resident id, property id, date moved in. columns in timed status of things are thing id, date and date, status of thing code. columns in timed locations of things are thing id, date and time, location code.",
    "target": "SELECT DISTINCT date_moved_in FROM residents"
  },
  {
    "prompt": "Count the number of devices. database is device. tables are device, shop, stock. columns in device are device id, device, carrier, package version, applications, software platform. columns in shop are shop id, shop name, location, open date, open year. columns in stock are shop id, device id, quantity.",
    "target": "SELECT count(*) FROM device"
  },
  {
    "prompt": "Find all the distinct district names ordered by city area in descending. database is store_product. tables are product, store, district, store product, store district. columns in product are product id, product, dimensions, dpi, pages per minute color, max page size, interface. columns in store are store id, store name, type, area size, number of product category, ranking. columns in district are district id, district name, headquartered city, city population, city area. columns in store product are store id, product id. columns in store district are store id, district id.",
    "target": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC"
  },
  {
    "prompt": "Count the number of colors. database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT count(*) FROM ref_colors"
  },
  {
    "prompt": "what are the major lakes in united states database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT lake_name FROM lake WHERE area  >  750;"
  },
  {
    "prompt": "Count the number of schools that have had basketball matches. database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT count(DISTINCT school_id) FROM basketball_match"
  },
  {
    "prompt": "What are the roles with three or more employees? Give me the role codes. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3"
  },
  {
    "prompt": "papers from 2014 database is scholar. tables are venue, author, dataset, journal, key phrase, paper, cite, paper dataset, paper key phrase, writes. columns in venue are venue id, venue name. columns in author are author id, author name. columns in dataset are dataset id, dataset name. columns in journal are journal id, journal name. columns in key phrase are key phrase id, key phrase name. columns in paper are paper id, title, venue id, year, number citing, number cited by, journal id. columns in cite are citing paper id, cited paper id. columns in paper dataset are paper id, dataset id. columns in paper key phrase are paper id, key phrase id. columns in writes are paper id, author id.",
    "target": "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  2014;"
  },
  {
    "prompt": "What are the names of managers in ascending order of level? database is railway. tables are railway, train, manager, railway manage. columns in railway are railway id, railway, builder, built, wheels, location, objectnumber. columns in train are train id, train num, name, from, arrival, railway id. columns in manager are manager id, name, country, working year starts, age, level. columns in railway manage are railway id, manager id, from year.",
    "target": "SELECT Name FROM manager ORDER BY LEVEL ASC"
  },
  {
    "prompt": "Which authors have first name \"Amal\"? List their last names. database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT lname FROM authors WHERE fname  =  \"Amal\""
  },
  {
    "prompt": "Find all the albums in 2012. database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT * FROM Albums WHERE YEAR  =  2012"
  },
  {
    "prompt": "Find the number of airports whose name contain the word International. database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT count(*) FROM airports WHERE name LIKE '%International%'"
  },
  {
    "prompt": "Show the opening year in whcih at least two churches opened. database is wedding. tables are people, church, wedding. columns in people are people id, name, country, is male, age. columns in church are church id, name, organized by, open date, continuation of. columns in wedding are church id, male id, female id, year.",
    "target": "SELECT open_date FROM church GROUP BY open_date HAVING count(*)  >=  2"
  },
  {
    "prompt": "In how many cities are there airports in the country of Greenland? database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'"
  },
  {
    "prompt": "Show all transaction ids with transaction code PUR. database is tracking_share_transactions. tables are investors, lots, reference transaction types, transactions, sales, purchases, transactions lots. columns in investors are investor id, investor details. columns in lots are lot id, investor id, lot details. columns in reference transaction types are transaction type code, transaction type description. columns in transactions are transaction id, investor id, transaction type code, date of transaction, amount of transaction, share count, other details. columns in sales are sales transaction id, sales details. columns in purchases are purchase transaction id, purchase details. columns in transactions lots are transaction id, lot id.",
    "target": "SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code  =  'PUR'"
  },
  {
    "prompt": "Count the number of customers who have an account. database is customers_and_invoices. tables are customers, orders, invoices, accounts, product categories, products, financial transactions, order items, invoice line items. columns in customers are customer id, customer first name, customer middle initial, customer last name, gender, email address, login name, login password, phone number, town city, state county province, country. columns in orders are order id, customer id, date order placed, order details. columns in invoices are invoice number, order id, invoice date. columns in accounts are account id, customer id, date account opened, account name, other account details. columns in product categories are production type code, product type description, vat rating. columns in products are product id, parent product id, production type code, unit price, product name, product color, product size. columns in financial transactions are transaction id, account id, invoice number, transaction type, transaction date, transaction amount, transaction comment, other transaction details. columns in order items are order item id, order id, product id, product quantity, other order item details. columns in invoice line items are order item id, invoice number, product id, product title, product quantity, product price, derived product cost, derived vat payable, derived total cost.",
    "target": "SELECT count(DISTINCT customer_id) FROM Accounts"
  },
  {
    "prompt": "Tell me the the date when the first claim was made. database is insurance_policies. tables are customers, customer policies, claims, settlements, payments. columns in customers are customer id, customer details. columns in customer policies are policy id, customer id, policy type code, start date, end date. columns in claims are claim id, policy id, date claim made, date claim settled, amount claimed, amount settled. columns in settlements are settlement id, claim id, date claim made, date claim settled, amount claimed, amount settled, customer policy id. columns in payments are payment id, settlement id, payment method code, date payment made, amount payment.",
    "target": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1"
  },
  {
    "prompt": "Show the name of employees with three lowest salaries. database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3"
  },
  {
    "prompt": "What are the names of customers who use payment method \"Cash\"? database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT customer_name FROM customers WHERE payment_method  =  \"Cash\""
  },
  {
    "prompt": "where is massachusetts database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT country_name FROM state WHERE state_name  =  \"massachusetts\";"
  },
  {
    "prompt": "What are all the movies rated as R? List the titles. database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT title FROM film WHERE rating  =  'R'"
  },
  {
    "prompt": "Show all video games with type Collectible card game. database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT gname FROM Video_games WHERE gtype  =  \"Collectible card game\""
  },
  {
    "prompt": "Count the number of customers who hold an account. database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT count(DISTINCT customer_id) FROM Accounts"
  },
  {
    "prompt": "How many draft copies does the document with id 2 have? database is cre_Doc_Control_Systems. tables are reference document types, roles, addresses, reference document status, reference shipping agents, documents, employees, document drafts, draft copies, circulation history, documents mailed. columns in reference document types are document type code, document type description. columns in roles are role code, role description. columns in addresses are address id, address details. columns in reference document status are document status code, document status description. columns in reference shipping agents are shipping agent code, shipping agent name, shipping agent description. columns in documents are document id, document status code, document type code, shipping agent code, receipt date, receipt number, other details. columns in employees are employee id, role code, employee name, other details. columns in document drafts are document id, draft number, draft details. columns in draft copies are document id, draft number, copy number. columns in circulation history are document id, draft number, copy number, employee id. columns in documents mailed are document id, mailed to address id, mailing date.",
    "target": "SELECT count(*) FROM Draft_Copies WHERE document_id = 2;"
  },
  {
    "prompt": "show me all the major lakes in the us database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT lake_name FROM lake WHERE area  >  750;"
  },
  {
    "prompt": "Find the names of all the products whose stock number starts with \"2\". database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\""
  },
  {
    "prompt": "What are the names of the regions in alphabetical order? database is storm_record. tables are storm, region, affected region. columns in storm are storm id, name, dates active, max speed, damage millions usd, number deaths. columns in region are region id, region code, region name. columns in affected region are region id, storm id, number city affected.",
    "target": "SELECT region_name FROM region ORDER BY region_name"
  },
  {
    "prompt": "List all user ids with name Michelle database is yelp. tables are business, category, user, checkin, neighbourhood, review, tip. columns in business are bid, business id, name, full address, city, latitude, longitude, review count, is open, rating, state. columns in category are id, business id, category name. columns in user are uid, user id, name. columns in checkin are cid, business id, count, day. columns in neighbourhood are id, business id, neighbourhood name. columns in review are rid, business id, user id, rating, text, year, month. columns in tip are tip id, business id, text, user id, likes, year, month.",
    "target": "SELECT user_id FROM USER WHERE name  =  \"Michelle\";"
  },
  {
    "prompt": "What is the number of cities in the United States with more than 3 airports? database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3"
  },
  {
    "prompt": "Count the number of parties. database is party_host. tables are party, host, party host. columns in party are party id, party theme, location, first year, last year, number of hosts. columns in host are host id, name, nationality, age. columns in party host are party id, host id, is main in charge.",
    "target": "SELECT count(*) FROM party"
  },
  {
    "prompt": "What are the distinct location names? database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT DISTINCT Location_Name FROM LOCATIONS"
  },
  {
    "prompt": "What are the ids of all reviewers who have not given 4 stars at least once? database is movie_1. tables are movie, reviewer, rating. columns in movie are movie id, title, year, director. columns in reviewer are reviewer id, name. columns in rating are reviewer id, movie id, rating stars, rating date.",
    "target": "SELECT rID FROM Rating WHERE stars != 4"
  },
  {
    "prompt": "What are the distinct unit prices of all tracks? database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT distinct(UnitPrice) FROM TRACK"
  },
  {
    "prompt": "Find the number of employees we have. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT count(*) FROM Employees"
  },
  {
    "prompt": "what is the maximum elevation of guadalupe peak database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"guadalupe peak\";"
  },
  {
    "prompt": "How many diffrent dorm amenities are there? database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT count(*) FROM dorm_amenity"
  },
  {
    "prompt": "how many cities named austin are there in the usa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( city_name ) FROM city WHERE city_name  =  \"austin\";"
  },
  {
    "prompt": "What year is the movie \" The Imitation Game \" from ? database is imdb. tables are actor, copyright, cast, genre, classification, company, director, producer, directed by, keyword, made by, movie, tags, tv series, writer, written by. columns in actor are aid, gender, name, nationality, birth city, birth year. columns in copyright are id, msid, cid. columns in cast are id, msid, aid, role. columns in genre are gid, genre. columns in classification are id, msid, gid. columns in company are id, name, country code. columns in director are did, gender, name, nationality, birth city, birth year. columns in producer are pid, gender, name, nationality, birth city, birth year. columns in directed by are id, msid, did. columns in keyword are id, keyword. columns in made by are id, msid, pid. columns in movie are mid, title, release year, title aka, budget. columns in tags are id, msid, kid. columns in tv series are sid, title, release year, num of seasons, num of episodes, title aka, budget. columns in writer are wid, gender, name, nationality, num of episodes, birth city, birth year. columns in written by are id, msid, wid.",
    "target": "SELECT release_year FROM movie WHERE title  =  \"The Imitation Game\";"
  },
  {
    "prompt": "Which location names contain the word \"film\"? database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\""
  },
  {
    "prompt": "2014 papers database is scholar. tables are venue, author, dataset, journal, key phrase, paper, cite, paper dataset, paper key phrase, writes. columns in venue are venue id, venue name. columns in author are author id, author name. columns in dataset are dataset id, dataset name. columns in journal are journal id, journal name. columns in key phrase are key phrase id, key phrase name. columns in paper are paper id, title, venue id, year, number citing, number cited by, journal id. columns in cite are citing paper id, cited paper id. columns in paper dataset are paper id, dataset id. columns in paper key phrase are paper id, key phrase id. columns in writes are paper id, author id.",
    "target": "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  2014;"
  },
  {
    "prompt": "What is the unit of measuerment of the product category code \"Herbs\"? database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\""
  },
  {
    "prompt": "List every album ordered by album title in ascending order. database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT title FROM albums ORDER BY title;"
  },
  {
    "prompt": "what is the lowest point of iowa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"
  },
  {
    "prompt": "What is the average quantities ordered with payment method code \"MasterCard\" on invoices? database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\""
  },
  {
    "prompt": "What is the famous release date of the artist with the oldest age? database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1"
  },
  {
    "prompt": "Find the average number of customers cross all banks. database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT avg(no_of_customers) FROM bank"
  },
  {
    "prompt": "What is the average number of audience for festivals? database is entertainment_awards. tables are festival detail, artwork, nomination. columns in festival detail are festival id, festival name, chair name, location, year, num of audience. columns in artwork are artwork id, type, name. columns in nomination are artwork id, festival id, result.",
    "target": "SELECT avg(Num_of_Audience) FROM festival_detail"
  },
  {
    "prompt": "List all open years when at least two shops are opened. database is shop_membership. tables are member, branch, membership register branch, purchase. columns in member are member id, card number, name, hometown, level. columns in branch are branch id, name, open year, address road, city, membership amount. columns in membership register branch are member id, branch id, register year. columns in purchase are member id, branch id, year, total pounds.",
    "target": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2"
  },
  {
    "prompt": "How many artists are there? database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT count(*) FROM artist"
  },
  {
    "prompt": "how many states does the missouri river flow through database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";"
  },
  {
    "prompt": "What is the number of aircraft? database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT count(*) FROM aircraft"
  },
  {
    "prompt": "what is the capital of texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT capital FROM state WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "How many different captain ranks are there? database is ship_1. tables are captain, ship. columns in captain are captain id, name, ship id, age, class, rank. columns in ship are ship id, name, type, built year, class, flag.",
    "target": "SELECT count(DISTINCT rank) FROM captain"
  },
  {
    "prompt": "List the year in which there are more than one festivals. database is entertainment_awards. tables are festival detail, artwork, nomination. columns in festival detail are festival id, festival name, chair name, location, year, num of audience. columns in artwork are artwork id, type, name. columns in nomination are artwork id, festival id, result.",
    "target": "SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT(*)  >  1"
  },
  {
    "prompt": "Find the number of dorms that have some amenity. database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT count(DISTINCT dormid) FROM has_amenity"
  },
  {
    "prompt": "How many participants belong to the type Organizer? database is local_govt_in_alabama. tables are services, participants, events, participants in events. columns in services are service id, service type code. columns in participants are participant id, participant type code, participant details. columns in events are event id, service id, event details. columns in participants in events are event id, participant id.",
    "target": "SELECT count(*) FROM participants WHERE participant_type_code  =  'Organizer'"
  },
  {
    "prompt": "What activities do we have? database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT activity_name FROM Activity"
  },
  {
    "prompt": "What are the names of musicals with nominee \"Bob Fosse\"? database is musical. tables are musical, actor. columns in musical are musical id, name, year, award, category, nominee, result. columns in actor are actor id, name, musical id, character, duration, age.",
    "target": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\""
  },
  {
    "prompt": "List all channel names ordered by their rating in percent from big to small. database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT name FROM channel ORDER BY rating_in_percent DESC"
  },
  {
    "prompt": "Find how many school locations have the word NY. database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\""
  },
  {
    "prompt": "find the name of the program that was launched most recently. database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT name FROM program ORDER BY launch DESC LIMIT 1"
  },
  {
    "prompt": "what cities in texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT city_name FROM city WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "Which papers have the substring \"ML\" in their titles? Return the titles of the papers. database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT title FROM papers WHERE title LIKE \"%ML%\""
  },
  {
    "prompt": "What is the list of program origins ordered alphabetically? database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT origin FROM program ORDER BY origin"
  },
  {
    "prompt": "What are the different dorm amenity names in alphabetical order? database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name"
  },
  {
    "prompt": "what is the combined population of all 50 states database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT SUM ( population ) FROM state;"
  },
  {
    "prompt": "what states does the ohio run through database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
  },
  {
    "prompt": "List the types of competition that have at most five competitions of that type. database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5"
  },
  {
    "prompt": "how many people live in the united states database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT SUM ( population ) FROM state;"
  },
  {
    "prompt": "What are the distinct publishers of publications with price higher than 5000000? database is book_2. tables are publication, book. columns in publication are publication id, book id, publisher, publication date, price. columns in book are book id, title, issues, writer.",
    "target": "SELECT DISTINCT Publisher FROM publication WHERE Price  >  5000000"
  },
  {
    "prompt": "What are the categories of music festivals for which there have been more than 1 music festival? database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1"
  },
  {
    "prompt": "Find the classrooms in which grade 4 is studying. database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT DISTINCT classroom FROM list WHERE grade  =  4"
  },
  {
    "prompt": "How many devices are there? database is device. tables are device, shop, stock. columns in device are device id, device, carrier, package version, applications, software platform. columns in shop are shop id, shop name, location, open date, open year. columns in stock are shop id, device id, quantity.",
    "target": "SELECT count(*) FROM device"
  },
  {
    "prompt": "What is the owner of the channel that has the highest rating ratio? database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1"
  },
  {
    "prompt": "Sort the information about course authors and tutors in alphabetical order of the personal name. database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name"
  },
  {
    "prompt": "List all the types of forms. database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT DISTINCT form_type_code FROM forms"
  },
  {
    "prompt": "Show teams that have suffered more than three eliminations. database is wrestler. tables are wrestler, elimination. columns in wrestler are wrestler id, name, reign, days held, location, event. columns in elimination are elimination id, wrestler id, team, eliminated by, elimination move, time.",
    "target": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3"
  },
  {
    "prompt": "Show the ids of all employees who have authorized destruction. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "prompt": "How many performances are there? database is performance_attendance. tables are member, performance, member attendance. columns in member are member id, name, nationality, role. columns in performance are performance id, date, host, location, attendance. columns in member attendance are member id, performance id, num of pieces.",
    "target": "SELECT count(*) FROM performance"
  },
  {
    "prompt": "return me the paper with more than 200 citations . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT title FROM publication WHERE citation_num  >  200;"
  },
  {
    "prompt": "Show all information about each body builder. database is body_builder. tables are body builder, people. columns in body builder are body builder id, people id, snatch, clean jerk, total. columns in people are people id, name, height, weight, birth date, birth place.",
    "target": "SELECT * FROM body_builder"
  },
  {
    "prompt": "What is the name of the customer with the worst credit score? database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1"
  },
  {
    "prompt": "What is the address of the restaurant Subway? database is restaurant_1. tables are student, restaurant, type of restaurant, restaurant type, visits restaurant. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in restaurant are restaurant id, restaurant name, address, rating. columns in type of restaurant are restaurant id, restaurant type id. columns in restaurant type are restaurant type id, restaurant type name, restaurant type description. columns in visits restaurant are student id, restaurant id, time, spent.",
    "target": "SELECT Address FROM Restaurant WHERE ResName = \"Subway\";"
  },
  {
    "prompt": "Count the number of customer cards of the type Debit. database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT count(*) FROM Customers_cards WHERE card_type_code  =  \"Debit\""
  },
  {
    "prompt": "Return the number of customers who have at least one order with \"Cancelled\" status. database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  \"Cancelled\""
  },
  {
    "prompt": "List the name of the colleges whose enrollment is greater 18000 sorted by the colleges name. database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName"
  },
  {
    "prompt": "Which three cities have the largest regional population? database is city_record. tables are city, match, temperature, hosting city. columns in city are city id, city, hanzi, hanyu pinyin, regional population, gdp. columns in match are match id, date, venue, score, result, competition. columns in temperature are city id, jan, feb, mar, apr, jun, jul, aug, sep, oct, nov, dec. columns in hosting city are year, match id, host city.",
    "target": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3"
  },
  {
    "prompt": "List the total points of gymnasts in descending order of floor exercise points. database is gymnast. tables are gymnast, people. columns in gymnast are gymnast id, floor exercise points, pommel horse points, rings points, vault points, parallel bars points, horizontal bar points, total points. columns in people are people id, name, age, height, hometown.",
    "target": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC"
  },
  {
    "prompt": "What is the name of the county with the greatest population? database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1"
  },
  {
    "prompt": "Show the 3 counties with the smallest population. database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3"
  },
  {
    "prompt": "How many artworks are there? database is entertainment_awards. tables are festival detail, artwork, nomination. columns in festival detail are festival id, festival name, chair name, location, year, num of audience. columns in artwork are artwork id, type, name. columns in nomination are artwork id, festival id, result.",
    "target": "SELECT count(*) FROM artwork"
  },
  {
    "prompt": "Show me the number of parks the state of NY has. database is baseball_1. tables are all star, appearances, manager award, player award, manager award vote, player award vote, batting, batting postseason, player college, fielding, fielding outfield, fielding postseason, hall of fame, home game, manager, manager half, player, park, pitching, pitching postseason, salary, college, postseason, team, team franchise, team half. columns in all star are player id, year, game num, game id, team id, league id, gp, starting pos. columns in appearances are year, team id, league id, player id, g all, gs, g batting, g defense, g p, g c, g 1b, g 2b, g 3b, g ss, g lf, g cf, g rf, g of, g dh, g ph, g pr. columns in manager award are player id, award id, year, league id, tie, notes. columns in player award are player id, award id, year, league id, tie, notes. columns in manager award vote are award id, year, league id, player id, points won, points max, votes first. columns in player award vote are award id, year, league id, player id, points won, points max, votes first. columns in batting are player id, year, stint, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in batting postseason are year, round, player id, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in player college are player id, college id, year. columns in fielding are player id, year, stint, team id, league id, pos, g, gs, inn outs, po, a, e, dp, pb, wp, sb, cs, zr. columns in fielding outfield are player id, year, stint, glf, gcf, grf. columns in fielding postseason are player id, year, team id, league id, round, pos, g, gs, inn outs, po, a, e, dp, tp, pb, sb, cs. columns in hall of fame are player id, yearid, votedby, ballots, needed, votes, inducted, category, needed note. columns in home game are year, league id, team id, park id, span first, span last, games, openings, attendance. columns in manager are player id, year, team id, league id, inseason, g, w, l, rank, plyr mgr. columns in manager half are player id, year, team id, league id, inseason, half, g, w, l, rank. columns in player are player id, birth year, birth month, birth day, birth country, birth state, birth city, death year, death month, death day, death country, death state, death city, name first, name last, name given, weight, height, bats, throws, debut, final game, retro id, bbref id. columns in park are park id, park name, park alias, city, state, country. columns in pitching are player id, year, stint, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in pitching postseason are player id, year, round, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in salary are year, team id, league id, player id, salary. columns in college are college id, name full, city, state, country. columns in postseason are year, round, team id winner, league id winner, team id loser, league id loser, wins, losses, ties. columns in team are year, league id, team id, franchise id, div id, rank, g, ghome, w, l, div win, wc win, lg win, ws win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team id br, team id lahman45, team id retro. columns in team franchise are franchise id, franchise name, active, na assoc. columns in team half are year, league id, team id, half, div id, div win, rank, g, w, l.",
    "target": "SELECT count(*) FROM park WHERE state  =  'NY';"
  },
  {
    "prompt": "What are the average enrollment size of the universities that are founded before 1850? database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT avg(enrollment) FROM university WHERE founded  <  1850"
  },
  {
    "prompt": "What is the maximum elevation of all airports in the country of Iceland? database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'"
  },
  {
    "prompt": "Find the average fee on a CSU campus in 1996 database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996"
  },
  {
    "prompt": "How many reviews does \" Acacia Cafe \" have ? database is yelp. tables are business, category, user, checkin, neighbourhood, review, tip. columns in business are bid, business id, name, full address, city, latitude, longitude, review count, is open, rating, state. columns in category are id, business id, category name. columns in user are uid, user id, name. columns in checkin are cid, business id, count, day. columns in neighbourhood are id, business id, neighbourhood name. columns in review are rid, business id, user id, rating, text, year, month. columns in tip are tip id, business id, text, user id, likes, year, month.",
    "target": "SELECT review_count FROM business WHERE name  =  \"Acacia Cafe\";"
  },
  {
    "prompt": "Show all student ids who are older than 20. database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT StuID FROM Student WHERE age  >  20"
  },
  {
    "prompt": "How many different countries are all the swimmers from? database is swimming. tables are swimmer, stadium, event, record. columns in swimmer are id, name, nationality, meter 100, meter 200, meter 300, meter 400, meter 500, meter 600, meter 700, time. columns in stadium are id, name, capacity, city, country, opening year. columns in event are id, name, stadium id, year. columns in record are id, result, swimmer id, event id.",
    "target": "SELECT count(DISTINCT nationality) FROM swimmer"
  },
  {
    "prompt": "What is the id of the shortest trip? database is bike_1. tables are station, status, trip, weather. columns in station are id, name, latitude, longitude, dock count, city, installation date. columns in status are station id, bikes available, docks available, time. columns in trip are id, duration, start date, start station name, start station id, end date, end station name, end station id, bike id, subscription type, zip code. columns in weather are date, max temperature f, mean temperature f, min temperature f, max dew point f, mean dew point f, min dew point f, max humidity, mean humidity, min humidity, max sea level pressure inches, mean sea level pressure inches, min sea level pressure inches, max visibility miles, mean visibility miles, min visibility miles, max wind speed mph, mean wind speed mph, max gust speed mph, precipitation inches, cloud cover, events, wind dir degrees, zip code.",
    "target": "SELECT id FROM trip ORDER BY duration LIMIT 1"
  },
  {
    "prompt": "Return the average gross sales in dollars across all films. database is film_rank. tables are film, market, film market estimation. columns in film are film id, title, studio, director, gross in dollar. columns in market are market id, country, number cities. columns in film market estimation are estimation id, low estimate, high estimate, film id, type, market id, year.",
    "target": "SELECT avg(Gross_in_dollar) FROM film"
  },
  {
    "prompt": "List the total points of gymnasts in descending order. database is gymnast. tables are gymnast, people. columns in gymnast are gymnast id, floor exercise points, pommel horse points, rings points, vault points, parallel bars points, horizontal bar points, total points. columns in people are people id, name, age, height, hometown.",
    "target": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC"
  },
  {
    "prompt": "How many churches opened before 1850 are there? database is wedding. tables are people, church, wedding. columns in people are people id, name, country, is male, age. columns in church are church id, name, organized by, open date, continuation of. columns in wedding are church id, male id, female id, year.",
    "target": "SELECT count(*) FROM Church WHERE Open_Date  <  1850"
  },
  {
    "prompt": "What are the distinct nominees of the musicals with the award that is not \"Tony Award\"? database is musical. tables are musical, actor. columns in musical are musical id, name, year, award, category, nominee, result. columns in actor are actor id, name, musical id, character, duration, age.",
    "target": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\""
  },
  {
    "prompt": "How many distinct hometowns did these people have? database is gymnast. tables are gymnast, people. columns in gymnast are gymnast id, floor exercise points, pommel horse points, rings points, vault points, parallel bars points, horizontal bar points, total points. columns in people are people id, name, age, height, hometown.",
    "target": "SELECT count(DISTINCT Hometown) FROM people"
  },
  {
    "prompt": "What are distinct locations where tracks are located? database is race_track. tables are race, track. columns in race are race id, name, class, date, track id. columns in track are track id, name, location, seating, year opened.",
    "target": "SELECT DISTINCT LOCATION FROM track"
  },
  {
    "prompt": "return all columns of the albums created in the year of 2012. database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT * FROM Albums WHERE YEAR  =  2012"
  },
  {
    "prompt": "List the description of all the colors. database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT color_description FROM ref_colors"
  },
  {
    "prompt": "Give the name of the wine with the highest score. database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT Name FROM WINE ORDER BY Score LIMIT 1"
  },
  {
    "prompt": "Show the number of customers. database is customers_and_invoices. tables are customers, orders, invoices, accounts, product categories, products, financial transactions, order items, invoice line items. columns in customers are customer id, customer first name, customer middle initial, customer last name, gender, email address, login name, login password, phone number, town city, state county province, country. columns in orders are order id, customer id, date order placed, order details. columns in invoices are invoice number, order id, invoice date. columns in accounts are account id, customer id, date account opened, account name, other account details. columns in product categories are production type code, product type description, vat rating. columns in products are product id, parent product id, production type code, unit price, product name, product color, product size. columns in financial transactions are transaction id, account id, invoice number, transaction type, transaction date, transaction amount, transaction comment, other transaction details. columns in order items are order item id, order id, product id, product quantity, other order item details. columns in invoice line items are order item id, invoice number, product id, product title, product quantity, product price, derived product cost, derived vat payable, derived total cost.",
    "target": "SELECT count(*) FROM Customers"
  },
  {
    "prompt": "What are the names of buildings sorted in descending order of building height? database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT name FROM buildings ORDER BY Height DESC"
  },
  {
    "prompt": "How many faculty do we have? database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT count(*) FROM Faculty"
  },
  {
    "prompt": "What is the id of the candidate with the lowest oppose rate? database is candidate_poll. tables are candidate, people. columns in candidate are candidate id, people id, poll source, date, support rate, consider rate, oppose rate, unsure rate. columns in people are people id, sex, name, date of birth, height, weight.",
    "target": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1"
  },
  {
    "prompt": "List all countries of markets in ascending alphabetical order. database is film_rank. tables are film, market, film market estimation. columns in film are film id, title, studio, director, gross in dollar. columns in market are market id, country, number cities. columns in film market estimation are estimation id, low estimate, high estimate, film id, type, market id, year.",
    "target": "SELECT Country FROM market ORDER BY Country ASC"
  },
  {
    "prompt": "Return the login names of the students whose family name is \"Ward\". database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT login_name FROM Students WHERE family_name  =  \"Ward\""
  },
  {
    "prompt": "What are the names of climbers who are not from the country of Switzerland? database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT Name FROM climber WHERE Country != \"Switzerland\""
  },
  {
    "prompt": "How many races are there? database is race_track. tables are race, track. columns in race are race id, name, class, date, track id. columns in track are track id, name, location, seating, year opened.",
    "target": "SELECT count(*) FROM race"
  },
  {
    "prompt": "What are the names of people in ascending order of weight? database is entrepreneur. tables are entrepreneur, people. columns in entrepreneur are entrepreneur id, people id, company, money requested, investor. columns in people are people id, name, height, weight, date of birth.",
    "target": "SELECT Name FROM People ORDER BY Weight ASC"
  },
  {
    "prompt": "springfield is in what state database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "What is the velocity of the pilot named Thompson? database is flight_company. tables are airport, operate company, flight. columns in airport are id, city, country, iata, icao, name. columns in operate company are id, name, type, principal activities, incorporated in, group equity shareholding. columns in flight are id, vehicle flight number, date, pilot, velocity, altitude, airport id, company id.",
    "target": "SELECT avg(velocity) FROM flight WHERE pilot  =  'Thompson'"
  },
  {
    "prompt": "How many different types of beds are there? database is inn_1. tables are rooms, reservations. columns in rooms are room id, room name, beds, bed type, max occupancy, base price, decor. columns in reservations are code, room, check in, check out, rate, last name, first name, adults, kids.",
    "target": "SELECT count(DISTINCT bedType) FROM Rooms;"
  },
  {
    "prompt": "Show all school names in alphabetical order. database is school_finance. tables are school, budget, endowment. columns in school are school id, school name, location, mascot, enrollment, ihsaa class, ihsaa football class, county. columns in budget are school id, year, budgeted, total budget percent budgeted, invested, total budget percent invested, budget invested percent. columns in endowment are endowment id, school id, donator name, amount.",
    "target": "SELECT school_name FROM school ORDER BY school_name"
  },
  {
    "prompt": "how long is rio grande database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"
  },
  {
    "prompt": "What are the carriers of devices whose software platforms are not \"Android\"? database is device. tables are device, shop, stock. columns in device are device id, device, carrier, package version, applications, software platform. columns in shop are shop id, shop name, location, open date, open year. columns in stock are shop id, device id, quantity.",
    "target": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'"
  },
  {
    "prompt": "What is the date of birth of every customer whose status code is Good Customer? database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'"
  },
  {
    "prompt": "Which team has the oldest player? database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1"
  },
  {
    "prompt": "Count the number of customers. database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT count(*) FROM Customers"
  },
  {
    "prompt": "Find the name of dorms only for female (F gender). database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT dorm_name FROM dorm WHERE gender  =  'F'"
  },
  {
    "prompt": "How many companies are there? database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT count(*) FROM Companies"
  },
  {
    "prompt": "What is the name of the person whose age is below 30? database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT name FROM Person WHERE age  <  30"
  },
  {
    "prompt": "How many distinct companies are there? database is entrepreneur. tables are entrepreneur, people. columns in entrepreneur are entrepreneur id, people id, company, money requested, investor. columns in people are people id, name, height, weight, date of birth.",
    "target": "SELECT count(DISTINCT Company) FROM entrepreneur"
  },
  {
    "prompt": "How many fault status codes are recorded in the fault log parts table? database is assets_maintenance. tables are third party companies, maintenance contracts, parts, skills, staff, assets, asset parts, maintenance engineers, engineer skills, fault log, engineer visits, part faults, fault log parts, skills required to fix. columns in third party companies are company id, company type, company name, company address, other company details. columns in maintenance contracts are maintenance contract id, maintenance contract company id, contract start date, contract end date, other contract details. columns in parts are part id, part name, chargeable yn, chargeable amount, other part details. columns in skills are skill id, skill code, skill description. columns in staff are staff id, staff name, gender, other staff details. columns in assets are asset id, maintenance contract id, supplier company id, asset details, asset make, asset model, asset acquired date, asset disposed date, other asset details. columns in asset parts are asset id, part id. columns in maintenance engineers are engineer id, company id, first name, last name, other details. columns in engineer skills are engineer id, skill id. columns in fault log are fault log entry id, asset id, recorded by staff id, fault log entry datetime, fault description, other fault details. columns in engineer visits are engineer visit id, contact staff id, engineer id, fault log entry id, fault status, visit start datetime, visit end datetime, other visit details. columns in part faults are part fault id, part id, fault short name, fault description, other fault details. columns in fault log parts are fault log entry id, part fault id, fault status. columns in skills required to fix are part fault id, skill id.",
    "target": "SELECT DISTINCT fault_status FROM Fault_Log_Parts"
  },
  {
    "prompt": "how many states have cities or towns named springfield database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "What is the id of the appointment that started most recently? database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1"
  },
  {
    "prompt": "How many tips have been written in 2015 database is yelp. tables are business, category, user, checkin, neighbourhood, review, tip. columns in business are bid, business id, name, full address, city, latitude, longitude, review count, is open, rating, state. columns in category are id, business id, category name. columns in user are uid, user id, name. columns in checkin are cid, business id, count, day. columns in neighbourhood are id, business id, neighbourhood name. columns in review are rid, business id, user id, rating, text, year, month. columns in tip are tip id, business id, text, user id, likes, year, month.",
    "target": "SELECT COUNT ( DISTINCT text ) FROM tip WHERE YEAR  =  2015;"
  },
  {
    "prompt": "What are the names of products with price at most 200? database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT name FROM products WHERE price  <=  200"
  },
  {
    "prompt": "How many albums are there? database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT count(*) FROM ALBUM"
  },
  {
    "prompt": "How many different instructors have taught some course? database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT COUNT (DISTINCT id) FROM teaches"
  },
  {
    "prompt": "Who is the delegate of district 1 in the elections? database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT Delegate FROM election WHERE District  =  1"
  },
  {
    "prompt": "List the names of all the customers in alphabetical order. database is insurance_and_eClaims. tables are customers, staff, policies, claim headers, claims documents, claims processing stages, claims processing. columns in customers are customer id, customer details. columns in staff are staff id, staff details. columns in policies are policy id, customer id, policy type code, start date, end date. columns in claim headers are claim header id, claim status code, claim type code, policy id, date of claim, date of settlement, amount claimed, amount piad. columns in claims documents are claim id, document type code, created by staff id, created date. columns in claims processing stages are claim stage id, next claim stage id, claim status name, claim status description. columns in claims processing are claim processing id, claim id, claim outcome code, claim stage id, staff id.",
    "target": "SELECT customer_details FROM customers ORDER BY customer_details"
  },
  {
    "prompt": "find the names of programs whose origin is not in Beijing. database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT name FROM program WHERE origin != 'Beijing'"
  },
  {
    "prompt": "Count the number of items store 1 has in stock. database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT count(*) FROM inventory WHERE store_id  =  1"
  },
  {
    "prompt": "give me the number of rivers in idaho database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"
  },
  {
    "prompt": "Which patient is undergoing the most recent treatment? database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1"
  },
  {
    "prompt": "Which districts have at least two addresses? database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2"
  },
  {
    "prompt": "List all the name of organizations in order of the date formed. database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT organization_name FROM organizations ORDER BY date_formed ASC"
  },
  {
    "prompt": "List the id of students who attended some courses? database is student_assessment. tables are addresses, people, students, courses, people addresses, student course registrations, student course attendance, candidates, candidate assessments. columns in addresses are address id, line 1, line 2, city, zip postcode, state province county, country. columns in people are person id, first name, middle name, last name, cell mobile number, email address, login name, password. columns in students are student id, student details. columns in courses are course id, course name, course description, other details. columns in people addresses are person address id, person id, address id, date from, date to. columns in student course registrations are student id, course id, registration date. columns in student course attendance are student id, course id, date of attendance. columns in candidates are candidate id, candidate details. columns in candidate assessments are candidate id, qualification, assessment date, asessment outcome code.",
    "target": "SELECT student_id FROM student_course_attendance"
  },
  {
    "prompt": "Which of the airport names contains the word international? database is flight_company. tables are airport, operate company, flight. columns in airport are id, city, country, iata, icao, name. columns in operate company are id, name, type, principal activities, incorporated in, group equity shareholding. columns in flight are id, vehicle flight number, date, pilot, velocity, altitude, airport id, company id.",
    "target": "SELECT name FROM airport WHERE name LIKE '%international%'"
  },
  {
    "prompt": "What is the number of distinct teams that suffer elimination? database is wrestler. tables are wrestler, elimination. columns in wrestler are wrestler id, name, reign, days held, location, event. columns in elimination are elimination id, wrestler id, team, eliminated by, elimination move, time.",
    "target": "SELECT COUNT (DISTINCT team) FROM elimination"
  },
  {
    "prompt": "How many items in inventory does store 1 have? database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT count(*) FROM inventory WHERE store_id  =  1"
  },
  {
    "prompt": "How many different status codes of things are there? database is local_govt_and_lot. tables are customers, properties, residents, organizations, services, residents services, things, customer events, customer event notes, timed status of things, timed locations of things. columns in customers are customer id, customer details. columns in properties are property id, property type code, property address, other details. columns in residents are resident id, property id, date moved in, date moved out, other details. columns in organizations are organization id, parent organization id, organization details. columns in services are service id, organization id, service type code, service details. columns in residents services are resident id, service id, date moved in, property id, date requested, date provided, other details. columns in things are thing id, organization id, type of thing code, service type code, service details. columns in customer events are customer event id, customer id, date moved in, property id, resident id, thing id. columns in customer event notes are customer event note id, customer event id, service type code, resident id, property id, date moved in. columns in timed status of things are thing id, date and date, status of thing code. columns in timed locations of things are thing id, date and time, location code.",
    "target": "SELECT count(DISTINCT Status_of_Thing_Code) FROM Timed_Status_of_Things"
  },
  {
    "prompt": "What are the id of all the files in mp3 format? database is music_1. tables are genre, artist, files, song. columns in genre are genre name, rating, most popular in. columns in artist are artist name, country, gender, preferred genre. columns in files are song id, artist name, file size, duration, formats. columns in song are song name, artist name, country, song id, genre is, rating, languages, releasedate, resolution.",
    "target": "SELECT f_id FROM files WHERE formats  =  \"mp3\""
  },
  {
    "prompt": "How many different students play games? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT count(DISTINCT StuID) FROM Plays_games"
  },
  {
    "prompt": "Find the grade taught in classroom 103. database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT DISTINCT grade FROM list WHERE classroom  =  103"
  },
  {
    "prompt": "How many customers have an account? database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT count(DISTINCT customer_id) FROM Accounts"
  },
  {
    "prompt": "What are the aircrafts with top 3 shortest lengthes? List their names. database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3"
  },
  {
    "prompt": "What are the ids of courses without prerequisites? database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq"
  },
  {
    "prompt": "what are the top 3 highest support rates? database is candidate_poll. tables are candidate, people. columns in candidate are candidate id, people id, poll source, date, support rate, consider rate, oppose rate, unsure rate. columns in people are people id, sex, name, date of birth, height, weight.",
    "target": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3"
  },
  {
    "prompt": "Count the number of distinct names associated with the photos. database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT count(DISTINCT Name) FROM PHOTOS"
  },
  {
    "prompt": "Count the number of customers who are active. database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT count(*) FROM customer WHERE active = '1'"
  },
  {
    "prompt": "What is the average hours across all projects? database is scientist_1. tables are scientists, projects, assigned to. columns in scientists are ssn, name. columns in projects are code, name, hours. columns in assigned to are scientist, project.",
    "target": "SELECT avg(hours) FROM projects"
  },
  {
    "prompt": "Give me the number of faculty members who participate in an activity database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in"
  },
  {
    "prompt": "How many users are there? database is twitter_1. tables are follows, tweets, user profiles. columns in follows are user id, follower id. columns in tweets are id, user id, text, create date. columns in user profiles are uid, name, email, partition id, followers.",
    "target": "SELECT count(*) FROM user_profiles"
  },
  {
    "prompt": "how many rivers are there in us database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( river_name ) FROM river;"
  },
  {
    "prompt": "What are the names of festivals held in year 2007? database is entertainment_awards. tables are festival detail, artwork, nomination. columns in festival detail are festival id, festival name, chair name, location, year, num of audience. columns in artwork are artwork id, type, name. columns in nomination are artwork id, festival id, result.",
    "target": "SELECT Festival_Name FROM festival_detail WHERE YEAR  =  2007"
  },
  {
    "prompt": "How many customers do we have? database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT count(*) FROM Customers"
  },
  {
    "prompt": "What are the employee ids for those who had two or more jobs. database is hr_1. tables are regions, countries, departments, jobs, employees, job history, locations. columns in regions are region id, region name. columns in countries are country id, country name, region id. columns in departments are department id, department name, manager id, location id. columns in jobs are job id, job title, min salary, max salary. columns in employees are employee id, first name, last name, email, phone number, hire date, job id, salary, commission pct, manager id, department id. columns in job history are employee id, start date, end date, job id, department id. columns in locations are location id, street address, postal code, city, state province, country id.",
    "target": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
  },
  {
    "prompt": "Which months have more than 2 happy hours? database is coffee_shop. tables are shop, member, happy hour, happy hour member. columns in shop are shop id, address, num of staff, score, open year. columns in member are member id, name, membership card, age, time of purchase, level of membership, address. columns in happy hour are hh id, shop id, month, num of shaff in charge. columns in happy hour member are hh id, member id, total amount.",
    "target": "SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count(*)  >  2"
  },
  {
    "prompt": "Find the stories of the building with the largest height. database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1"
  },
  {
    "prompt": "What is the average age for all people in the table? database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT avg(age) FROM Person"
  },
  {
    "prompt": "Count the number of cities in the state of Colorado. database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\""
  },
  {
    "prompt": "What are the document ids for the budget type code SF? database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'"
  },
  {
    "prompt": "Show me the classrooms grade 5 is using. database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT DISTINCT classroom FROM list WHERE grade  =  5"
  },
  {
    "prompt": "How many students are there? database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT count(*) FROM list"
  },
  {
    "prompt": "List the names of climbers in descending order of points. database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT Name FROM climber ORDER BY Points DESC"
  },
  {
    "prompt": "How many different industries are the companies in? database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT count(DISTINCT Industry) FROM Companies"
  },
  {
    "prompt": "How many customers are there? database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT count(*) FROM Customers;"
  },
  {
    "prompt": "How many professors are teaching class with code ACCT-211? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\""
  },
  {
    "prompt": "What are the companies of entrepreneurs, ordered descending by amount of money requested? database is entrepreneur. tables are entrepreneur, people. columns in entrepreneur are entrepreneur id, people id, company, money requested, investor. columns in people are people id, name, height, weight, date of birth.",
    "target": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC"
  },
  {
    "prompt": "which states border the ohio river database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
  },
  {
    "prompt": "Show the description of transaction type with code \"PUR\". database is tracking_share_transactions. tables are investors, lots, reference transaction types, transactions, sales, purchases, transactions lots. columns in investors are investor id, investor details. columns in lots are lot id, investor id, lot details. columns in reference transaction types are transaction type code, transaction type description. columns in transactions are transaction id, investor id, transaction type code, date of transaction, amount of transaction, share count, other details. columns in sales are sales transaction id, sales details. columns in purchases are purchase transaction id, purchase details. columns in transactions lots are transaction id, lot id.",
    "target": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code\t  =  \"PUR\""
  },
  {
    "prompt": "What are the names of people in ascending order of height? database is perpetrator. tables are perpetrator, people. columns in perpetrator are perpetrator id, people id, date, year, location, country, killed, injured. columns in people are people id, name, height, weight, home town.",
    "target": "SELECT Name FROM People ORDER BY Height ASC"
  },
  {
    "prompt": "Find the total population of the top 3 districts with the largest area. database is store_product. tables are product, store, district, store product, store district. columns in product are product id, product, dimensions, dpi, pages per minute color, max page size, interface. columns in store are store id, store name, type, area size, number of product category, ranking. columns in district are district id, district name, headquartered city, city population, city area. columns in store product are store id, product id. columns in store district are store id, district id.",
    "target": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3"
  },
  {
    "prompt": "Return all the distinct secretary votes made in the fall election cycle. database is voter_2. tables are student, voting record. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in voting record are student id, registration date, election cycle, president vote, vice president vote, secretary vote, treasurer vote, class president vote, class senator vote.",
    "target": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\""
  },
  {
    "prompt": "Which cmi cross reference id is not related to any parking taxes? database is local_govt_mdm. tables are customer master index, cmi cross references, council tax, business rates, benefits overpayments, parking fines, rent arrears, electoral register. columns in customer master index are master customer id, cmi details. columns in cmi cross references are cmi cross reference id, master customer id, source system code. columns in council tax are council tax id, cmi cross reference id. columns in business rates are business rates id, cmi cross reference id. columns in benefits overpayments are council tax id, cmi cross ref id. columns in parking fines are council tax id, cmi cross reference id. columns in rent arrears are council tax id, cmi cross reference id. columns in electoral register are electoral register id, cmi cross reference id.",
    "target": "SELECT cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT cmi_cross_ref_id FROM parking_fines"
  },
  {
    "prompt": "Compute the average number of hosts for parties. database is party_host. tables are party, host, party host. columns in party are party id, party theme, location, first year, last year, number of hosts. columns in host are host id, name, nationality, age. columns in party host are party id, host id, is main in charge.",
    "target": "SELECT avg(Number_of_hosts) FROM party"
  },
  {
    "prompt": "find the event names that have more than 2 records. database is party_people. tables are region, party, member, party events. columns in region are region id, region name, date, label, format, catalogue. columns in party are party id, minister, took office, left office, region id, party name. columns in member are member id, member name, party id, in office. columns in party events are event id, event name, party id, member in charge id.",
    "target": "SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2"
  },
  {
    "prompt": "What are the names of the schools with the top 3 largest class sizes? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3"
  },
  {
    "prompt": "Show the average amount of transactions with type code \"SALE\". database is tracking_share_transactions. tables are investors, lots, reference transaction types, transactions, sales, purchases, transactions lots. columns in investors are investor id, investor details. columns in lots are lot id, investor id, lot details. columns in reference transaction types are transaction type code, transaction type description. columns in transactions are transaction id, investor id, transaction type code, date of transaction, amount of transaction, share count, other details. columns in sales are sales transaction id, sales details. columns in purchases are purchase transaction id, purchase details. columns in transactions lots are transaction id, lot id.",
    "target": "SELECT avg(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\""
  },
  {
    "prompt": "through which states does the ohio flow database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
  },
  {
    "prompt": "Which enzyme names have the substring \"ALA\"? database is medicine_enzyme_interaction. tables are medicine, enzyme, medicine enzyme interaction. columns in medicine are id, name, trade name, fda approved. columns in enzyme are id, name, location, product, chromosome, omim, porphyria. columns in medicine enzyme interaction are enzyme id, medicine id, interaction type.",
    "target": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\""
  },
  {
    "prompt": "Count the number of departments which offer courses. database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT count(DISTINCT dept_name) FROM course"
  },
  {
    "prompt": "What is the name of the 3 employees who get paid the least? database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3"
  },
  {
    "prompt": "Find the total capacity of all dorms. database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT sum(student_capacity) FROM dorm"
  },
  {
    "prompt": "how many citizens live in california database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM state WHERE state_name  =  \"california\";"
  },
  {
    "prompt": "How many distinct payment methods are used by parties? database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT count(DISTINCT payment_method_code) FROM parties"
  },
  {
    "prompt": "Show ids for all employees with at least 100000 salary. database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT eid FROM Employee WHERE salary  >  100000"
  },
  {
    "prompt": "What are all distinct country for artists? database is theme_gallery. tables are artist, exhibition, exhibition record. columns in artist are artist id, name, country, year join, age. columns in exhibition are exhibition id, year, theme, artist id, ticket price. columns in exhibition record are exhibition id, date, attendance.",
    "target": "SELECT DISTINCT country FROM artist"
  },
  {
    "prompt": "What are the names of courses with 1 credit? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT CName FROM COURSE WHERE Credits  =  1"
  },
  {
    "prompt": "List the publication dates of publications with 3 lowest prices. database is book_2. tables are publication, book. columns in publication are publication id, book id, publisher, publication date, price. columns in book are book id, title, issues, writer.",
    "target": "SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3"
  },
  {
    "prompt": "What are the total number of the audiences who visited any of the festivals? database is entertainment_awards. tables are festival detail, artwork, nomination. columns in festival detail are festival id, festival name, chair name, location, year, num of audience. columns in artwork are artwork id, type, name. columns in nomination are artwork id, festival id, result.",
    "target": "SELECT sum(Num_of_Audience) FROM festival_detail"
  },
  {
    "prompt": "How many hours do the players train on average? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT avg(HS) FROM Player"
  },
  {
    "prompt": "Find the total number of reviews written in March database is yelp. tables are business, category, user, checkin, neighbourhood, review, tip. columns in business are bid, business id, name, full address, city, latitude, longitude, review count, is open, rating, state. columns in category are id, business id, category name. columns in user are uid, user id, name. columns in checkin are cid, business id, count, day. columns in neighbourhood are id, business id, neighbourhood name. columns in review are rid, business id, user id, rating, text, year, month. columns in tip are tip id, business id, text, user id, likes, year, month.",
    "target": "SELECT COUNT ( DISTINCT text ) FROM review WHERE MONTH  =  \"March\";"
  },
  {
    "prompt": "What is the average access count of documents? database is document_management. tables are roles, users, document structures, functional areas, images, documents, document functional areas, document sections, document sections images. columns in roles are role code, role description. columns in users are user id, role code, user name, user login, password. columns in document structures are document structure code, parent document structure code, document structure description. columns in functional areas are functional area code, parent functional area code, functional area description. columns in images are image id, image alt text, image name, image url. columns in documents are document code, document structure code, document type code, access count, document name. columns in document functional areas are document code, functional area code. columns in document sections are section id, document code, section sequence, section code, section title. columns in document sections images are section id, image id.",
    "target": "SELECT avg(access_count) FROM documents"
  },
  {
    "prompt": "what is the GDP of the city with the largest population. database is city_record. tables are city, match, temperature, hosting city. columns in city are city id, city, hanzi, hanyu pinyin, regional population, gdp. columns in match are match id, date, venue, score, result, competition. columns in temperature are city id, jan, feb, mar, apr, jun, jul, aug, sep, oct, nov, dec. columns in hosting city are year, match id, host city.",
    "target": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1"
  },
  {
    "prompt": "What is all the information about courses, ordered by credits ascending? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT * FROM COURSE ORDER BY Credits"
  },
  {
    "prompt": "What is the name of the bank branch with the greatest number of customers? database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1"
  },
  {
    "prompt": "what cities are located in texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT city_name FROM city WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "Find the id of the order whose shipment tracking number is \"3452\". database is tracking_orders. tables are customers, invoices, orders, products, order items, shipments, shipment items. columns in customers are customer id, customer name, customer details. columns in invoices are invoice number, invoice date, invoice details. columns in orders are order id, customer id, order status, date order placed, order details. columns in products are product id, product name, product details. columns in order items are order item id, product id, order id, order item status, order item details. columns in shipments are shipment id, order id, invoice number, shipment tracking number, shipment date, other shipment details. columns in shipment items are shipment id, order item id.",
    "target": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\""
  },
  {
    "prompt": "List the ids of all distinct orders ordered by placed date. database is tracking_orders. tables are customers, invoices, orders, products, order items, shipments, shipment items. columns in customers are customer id, customer name, customer details. columns in invoices are invoice number, invoice date, invoice details. columns in orders are order id, customer id, order status, date order placed, order details. columns in products are product id, product name, product details. columns in order items are order item id, product id, order id, order item status, order item details. columns in shipments are shipment id, order id, invoice number, shipment tracking number, shipment date, other shipment details. columns in shipment items are shipment id, order item id.",
    "target": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed"
  },
  {
    "prompt": "what states contain at least one major rivers database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE LENGTH  >  750;"
  },
  {
    "prompt": "List the forenames of all distinct drivers in alphabetical order? database is formula_1. tables are circuits, races, drivers, status, seasons, constructors, constructor standings, results, driver standings, constructor results, qualifying, pit stops, lap times. columns in circuits are circuit id, circuit reference, name, location, country, latitude, longitude, altitude, url. columns in races are race id, year, round, circuit id, name, date, time, url. columns in drivers are driver id, driver reference, number, code, forename, surname, dob, nationality, url. columns in status are status id, status. columns in seasons are year, url. columns in constructors are constructor id, constructor reference, name, nationality, url. columns in constructor standings are constructor standings id, race id, constructor id, points, position, position text, wins. columns in results are result id, race id, driver id, constructor id, number, grid, position, position text, position order, points, laps, time, milliseconds, fastest lap, rank, fastest lap time, fastest lap speed, status id. columns in driver standings are driver standings id, race id, driver id, points, position, position text, wins. columns in constructor results are constructor results id, race id, constructor id, points, status. columns in qualifying are qualify id, race id, driver id, constructor id, number, position, q1, q2, q3. columns in pit stops are race id, driver id, stop, lap, time, duration, milliseconds. columns in lap times are race id, driver id, lap, position, time, milliseconds.",
    "target": "SELECT DISTINCT forename FROM drivers ORDER BY forename ASC"
  },
  {
    "prompt": "Which problems are reported before 1978-06-26? Give me the ids of the problems. database is tracking_software_problems. tables are problem category codes, problem log, problem status codes, product, staff, problems. columns in problem category codes are problem category code, problem category description. columns in problem log are problem log id, assigned to staff id, problem id, problem category code, problem status code, log entry date, log entry description, log entry fix, other log details. columns in problem status codes are problem status code, problem status description. columns in product are product id, product name, product details. columns in staff are staff id, staff first name, staff last name, other staff details. columns in problems are problem id, product id, closure authorised by staff id, reported by staff id, date problem reported, date problem closed, problem description, other problem details.",
    "target": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\""
  },
  {
    "prompt": "display those employees who joined after 7th September, 1987. database is hr_1. tables are regions, countries, departments, jobs, employees, job history, locations. columns in regions are region id, region name. columns in countries are country id, country name, region id. columns in departments are department id, department name, manager id, location id. columns in jobs are job id, job title, min salary, max salary. columns in employees are employee id, first name, last name, email, phone number, hire date, job id, salary, commission pct, manager id, department id. columns in job history are employee id, start date, end date, job id, department id. columns in locations are location id, street address, postal code, city, state province, country id.",
    "target": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'"
  },
  {
    "prompt": "Show all student IDs who have at least two allergies. database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2"
  },
  {
    "prompt": "List the names of all distinct medications, ordered in an alphabetical order. database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT DISTINCT name FROM medication ORDER BY name"
  },
  {
    "prompt": "Count the number of different affiliation types. database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT count(DISTINCT affiliation) FROM university"
  },
  {
    "prompt": "what states border kentucky database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "Which buildings does \"Emma\" manage? Give me the short names of the buildings. database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\""
  },
  {
    "prompt": "Return the description of the product called \"Chocolate\". database is customer_complaints. tables are staff, customers, products, complaints. columns in staff are staff id, gender, first name, last name, email address, phone number. columns in customers are customer id, customer type code, address line 1, address line 2, town city, state, email address, phone number. columns in products are product id, parent product id, product category code, date product first available, date product discontinued, product name, product description, product price. columns in complaints are complaint id, product id, customer id, complaint outcome code, complaint status code, complaint type code, date complaint raised, date complaint closed, staff id.",
    "target": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\""
  },
  {
    "prompt": "Take the average of the school enrollment. database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT avg(Enrollment) FROM school"
  },
  {
    "prompt": "What is the id of the reviewer named Daniel Lewis? database is movie_1. tables are movie, reviewer, rating. columns in movie are movie id, title, year, director. columns in reviewer are reviewer id, name. columns in rating are reviewer id, movie id, rating stars, rating date.",
    "target": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\""
  },
  {
    "prompt": "Count the number of distinct player positions. database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT count(DISTINCT POSITION) FROM player"
  },
  {
    "prompt": "What is the average length in feet of the bridges? database is architecture. tables are architect, bridge, mill. columns in architect are id, name, nationality, gender. columns in bridge are architect id, id, name, location, length meters, length feet. columns in mill are architect id, id, location, name, type, built year, notes.",
    "target": "SELECT avg(length_feet) FROM bridge"
  },
  {
    "prompt": "Find the total revenue created by the companies whose headquarter is located at Austin. database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'"
  },
  {
    "prompt": "which states does the ohio river pass through database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
  },
  {
    "prompt": "What is the highest acc percent score in the competition? database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1"
  },
  {
    "prompt": "What is average number of students enrolled in Florida colleges? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT avg(enr) FROM College WHERE state  =  'FL'"
  },
  {
    "prompt": "Count the number of video games with Massively multiplayer online game type . database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT count(*) FROM Video_games WHERE gtype  =  \"Massively multiplayer online game\""
  },
  {
    "prompt": "Find the name of the first 5 customers. database is customer_deliveries. tables are products, addresses, customers, regular orders, regular order products, actual orders, actual order products, customer addresses, delivery routes, delivery route locations, trucks, employees, order deliveries. columns in products are product id, product name, product price, product description. columns in addresses are address id, address details, city, zip postcode, state province county, country. columns in customers are customer id, payment method, customer name, customer phone, customer email, date became customer. columns in regular orders are regular order id, distributer id. columns in regular order products are regular order id, product id. columns in actual orders are actual order id, order status code, regular order id, actual order date. columns in actual order products are actual order id, product id. columns in customer addresses are customer id, address id, date from, address type, date to. columns in delivery routes are route id, route name, other route details. columns in delivery route locations are location code, route id, location address id, location name. columns in trucks are truck id, truck licence number, truck details. columns in employees are employee id, employee address id, employee name, employee phone. columns in order deliveries are location code, actual order id, delivery status code, driver employee id, truck id, delivery date.",
    "target": "SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5"
  },
  {
    "prompt": "what is capital of texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT capital FROM state WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "what is the height of the highest point in the usa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT MAX ( highest_elevation ) FROM highlow;"
  },
  {
    "prompt": "Find the payment method code used by more than 3 parties. database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3"
  },
  {
    "prompt": "Count the number of documents with expenses. database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT count(*) FROM Documents_with_expenses"
  },
  {
    "prompt": "What is the apartment number of the apartment with the most beds? database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1"
  },
  {
    "prompt": "Which stadium name contains the substring \"Bank\"? database is game_injury. tables are stadium, game, injury accident. columns in stadium are id, name, home games, average attendance, total attendance, capacity percentage. columns in game are stadium id, id, season, date, home team, away team, score, competition. columns in injury accident are game id, id, player, injury, number of matches, source.",
    "target": "SELECT name FROM stadium WHERE name LIKE \"%Bank%\""
  },
  {
    "prompt": "what is the area of the states database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT area FROM state;"
  },
  {
    "prompt": "List the name of all customers sorted by their account balance in ascending order. database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT cust_name FROM customer ORDER BY acc_bal"
  },
  {
    "prompt": "Count the number of different directors. database is culture_company. tables are book club, movie, culture company. columns in book club are book club id, year, author or editor, book title, publisher, category, result. columns in movie are movie id, title, year, director, budget million, gross worldwide. columns in culture company are company name, type, incorporated in, group equity shareholding, book club id, movie id.",
    "target": "SELECT COUNT (DISTINCT director) FROM movie"
  },
  {
    "prompt": "what is the total length of all rivers in the usa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT SUM ( LENGTH ) FROM river;"
  },
  {
    "prompt": "Return the ids of documents that do not have expenses. database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses"
  },
  {
    "prompt": "what is the elevation of the highest point in the usa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT MAX ( highest_elevation ) FROM highlow;"
  },
  {
    "prompt": "what is the number of neighboring states for kentucky database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "Return the elimination movies of wrestlers on Team Orton. database is wrestler. tables are wrestler, elimination. columns in wrestler are wrestler id, name, reign, days held, location, event. columns in elimination are elimination id, wrestler id, team, eliminated by, elimination move, time.",
    "target": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"Team Orton\""
  },
  {
    "prompt": "which states does the ohio run through database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
  },
  {
    "prompt": "Find the name of the most expensive product. database is customer_deliveries. tables are products, addresses, customers, regular orders, regular order products, actual orders, actual order products, customer addresses, delivery routes, delivery route locations, trucks, employees, order deliveries. columns in products are product id, product name, product price, product description. columns in addresses are address id, address details, city, zip postcode, state province county, country. columns in customers are customer id, payment method, customer name, customer phone, customer email, date became customer. columns in regular orders are regular order id, distributer id. columns in regular order products are regular order id, product id. columns in actual orders are actual order id, order status code, regular order id, actual order date. columns in actual order products are actual order id, product id. columns in customer addresses are customer id, address id, date from, address type, date to. columns in delivery routes are route id, route name, other route details. columns in delivery route locations are location code, route id, location address id, location name. columns in trucks are truck id, truck licence number, truck details. columns in employees are employee id, employee address id, employee name, employee phone. columns in order deliveries are location code, actual order id, delivery status code, driver employee id, truck id, delivery date.",
    "target": "SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1"
  },
  {
    "prompt": "List the addresses of all the course authors or tutors. database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT address_line_1 FROM Course_Authors_and_Tutors"
  },
  {
    "prompt": "Show the distinct themes of journals. database is journal_committee. tables are journal, editor, journal committee. columns in journal are journal id, date, theme, sales. columns in editor are editor id, name, age. columns in journal committee are editor id, journal id, work type.",
    "target": "SELECT DISTINCT Theme FROM journal"
  },
  {
    "prompt": "What are the names of wines, sorted by price ascending? database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT DISTINCT Name FROM WINE ORDER BY price"
  },
  {
    "prompt": "Return the countries of the mountains that have a height larger than 5000. database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT Country FROM mountain WHERE Height  >  5000"
  },
  {
    "prompt": "What are the details of the car with id 1? database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;"
  },
  {
    "prompt": "How many different product types are there? database is products_for_hire. tables are discount coupons, customers, bookings, products for hire, payments, products booked, view product availability. columns in discount coupons are coupon id, date issued, coupon amount. columns in customers are customer id, coupon id, good or bad customer, first name, last name, gender, date became customer, date last hire. columns in bookings are booking id, customer id, booking status code, returned damaged yes or no, booking start date, booking end date, count hired, amount payable, amount of discount, amount outstanding, amount of refund. columns in products for hire are product id, product type code, daily hire cost, product name, product description. columns in payments are payment id, booking id, customer id, payment type code, amount paid in full yn, payment date, amount due, amount paid. columns in products booked are booking id, product id, returned yes or no, returned late yes or no, booked count, booked amount. columns in view product availability are product id, booking id, status date, available yes or no.",
    "target": "SELECT count(DISTINCT product_type_code) FROM products_for_hire"
  },
  {
    "prompt": "How many reviewers are there? database is movie_1. tables are movie, reviewer, rating. columns in movie are movie id, title, year, director. columns in reviewer are reviewer id, name. columns in rating are reviewer id, movie id, rating stars, rating date.",
    "target": "SELECT count(*) FROM Reviewer"
  },
  {
    "prompt": "List the phone numbers of all employees. database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT Phone FROM EMPLOYEE"
  },
  {
    "prompt": "which state is mount whitney in database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";"
  },
  {
    "prompt": "Which distinct source system code includes the substring en? database is local_govt_mdm. tables are customer master index, cmi cross references, council tax, business rates, benefits overpayments, parking fines, rent arrears, electoral register. columns in customer master index are master customer id, cmi details. columns in cmi cross references are cmi cross reference id, master customer id, source system code. columns in council tax are council tax id, cmi cross reference id. columns in business rates are business rates id, cmi cross reference id. columns in benefits overpayments are council tax id, cmi cross ref id. columns in parking fines are council tax id, cmi cross reference id. columns in rent arrears are council tax id, cmi cross reference id. columns in electoral register are electoral register id, cmi cross reference id.",
    "target": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'"
  },
  {
    "prompt": "What are the names of all campuses located at Chico? database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\""
  },
  {
    "prompt": "List all the subject names. database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT subject_name FROM SUBJECTS"
  },
  {
    "prompt": "What is the name of the district with the most residents? database is store_product. tables are product, store, district, store product, store district. columns in product are product id, product, dimensions, dpi, pages per minute color, max page size, interface. columns in store are store id, store name, type, area size, number of product category, ranking. columns in district are district id, district name, headquartered city, city population, city area. columns in store product are store id, product id. columns in store district are store id, district id.",
    "target": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1"
  },
  {
    "prompt": "What is the starting year for the oldest technician? database is machine_repair. tables are repair, machine, technician, repair assignment. columns in repair are repair id, name, launch date, notes. columns in machine are machine id, making year, class, team, machine series, value points, quality rank. columns in technician are technician id, name, team, starting year, age. columns in repair assignment are technician id, repair id, machine id.",
    "target": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1"
  },
  {
    "prompt": "Count the number of cinemas. database is cinema. tables are film, cinema, schedule. columns in film are film id, rank in series, number in season, title, directed by, original air date, production code. columns in cinema are cinema id, name, openning year, capacity, location. columns in schedule are cinema id, film id, date, show times per day, price.",
    "target": "SELECT count(*) FROM cinema"
  },
  {
    "prompt": "How many elections are there? database is election_representative. tables are election, representative. columns in election are election id, representative id, date, votes, vote percent, seats, place. columns in representative are representative id, name, state, party, lifespan.",
    "target": "SELECT count(*) FROM election"
  },
  {
    "prompt": "What are the names of all stations with a latitude smaller than 37.5? database is bike_1. tables are station, status, trip, weather. columns in station are id, name, latitude, longitude, dock count, city, installation date. columns in status are station id, bikes available, docks available, time. columns in trip are id, duration, start date, start station name, start station id, end date, end station name, end station id, bike id, subscription type, zip code. columns in weather are date, max temperature f, mean temperature f, min temperature f, max dew point f, mean dew point f, min dew point f, max humidity, mean humidity, min humidity, max sea level pressure inches, mean sea level pressure inches, min sea level pressure inches, max visibility miles, mean visibility miles, min visibility miles, max wind speed mph, mean wind speed mph, max gust speed mph, precipitation inches, cloud cover, events, wind dir degrees, zip code.",
    "target": "SELECT name FROM station WHERE lat  <  37.5"
  },
  {
    "prompt": "How many regions are affected? database is storm_record. tables are storm, region, affected region. columns in storm are storm id, name, dates active, max speed, damage millions usd, number deaths. columns in region are region id, region code, region name. columns in affected region are region id, storm id, number city affected.",
    "target": "SELECT count(DISTINCT region_id) FROM affected_region"
  },
  {
    "prompt": "What are the codes of all the courses that are located in room KLR209? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'"
  },
  {
    "prompt": "What are the first names of all the students? database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT DISTINCT fname FROM student"
  },
  {
    "prompt": "How many different cities do people originate from? database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT count(DISTINCT city) FROM Person"
  },
  {
    "prompt": "Show the residences that have at least two players. database is riding_club. tables are player, club, coach, player coach, match result. columns in player are player id, sponsor name, player name, gender, residence, occupation, votes, rank. columns in club are club id, club name, region, start year. columns in coach are coach id, player name, gender, club id, rank. columns in player coach are player id, coach id, starting year. columns in match result are rank, club id, gold, big silver, small silver, bronze, points.",
    "target": "SELECT Residence FROM player GROUP BY Residence HAVING COUNT(*)  >=  2"
  },
  {
    "prompt": "Return the highest acc percent across all basketball matches. database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1"
  },
  {
    "prompt": "Which courses are taught on days MTW? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\""
  },
  {
    "prompt": "Find all states in which there is a Whataburger database is yelp. tables are business, category, user, checkin, neighbourhood, review, tip. columns in business are bid, business id, name, full address, city, latitude, longitude, review count, is open, rating, state. columns in category are id, business id, category name. columns in user are uid, user id, name. columns in checkin are cid, business id, count, day. columns in neighbourhood are id, business id, neighbourhood name. columns in review are rid, business id, user id, rating, text, year, month. columns in tip are tip id, business id, text, user id, likes, year, month.",
    "target": "SELECT state FROM business WHERE name  =  \"Whataburger\";"
  },
  {
    "prompt": "how many states does the missouri run through database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";"
  },
  {
    "prompt": "how many residents live in california database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM state WHERE state_name  =  \"california\";"
  },
  {
    "prompt": "Count the number of invoices. database is customers_and_invoices. tables are customers, orders, invoices, accounts, product categories, products, financial transactions, order items, invoice line items. columns in customers are customer id, customer first name, customer middle initial, customer last name, gender, email address, login name, login password, phone number, town city, state county province, country. columns in orders are order id, customer id, date order placed, order details. columns in invoices are invoice number, order id, invoice date. columns in accounts are account id, customer id, date account opened, account name, other account details. columns in product categories are production type code, product type description, vat rating. columns in products are product id, parent product id, production type code, unit price, product name, product color, product size. columns in financial transactions are transaction id, account id, invoice number, transaction type, transaction date, transaction amount, transaction comment, other transaction details. columns in order items are order item id, order id, product id, product quantity, other order item details. columns in invoice line items are order item id, invoice number, product id, product title, product quantity, product price, derived product cost, derived vat payable, derived total cost.",
    "target": "SELECT count(*) FROM Invoices"
  },
  {
    "prompt": "return me the paper with the most citations . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT title FROM publication ORDER BY citation_num DESC LIMIT 1;"
  },
  {
    "prompt": "Find the average number of factories for the manufacturers that have more than 20 shops. database is manufacturer. tables are manufacturer, furniture, furniture manufacte. columns in manufacturer are manufacturer id, open year, name, num of factories, num of shops. columns in furniture are furniture id, name, num of component, market rate. columns in furniture manufacte are manufacturer id, furniture id, price in dollar.",
    "target": "SELECT avg(Num_of_Factories) FROM manufacturer WHERE num_of_shops  >  20"
  },
  {
    "prompt": "Count the number of wines produced at Robert Biale winery. database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\""
  },
  {
    "prompt": "what is the height of the highest mountain in texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT MAX ( DISTINCT highest_elevation ) FROM highlow WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "Find the number of different cities which banks are located at. database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT count(DISTINCT city) FROM bank"
  },
  {
    "prompt": "List the name of technicians whose team is not \"NYY\". database is machine_repair. tables are repair, machine, technician, repair assignment. columns in repair are repair id, name, launch date, notes. columns in machine are machine id, making year, class, team, machine series, value points, quality rank. columns in technician are technician id, name, team, starting year, age. columns in repair assignment are technician id, repair id, machine id.",
    "target": "SELECT Name FROM technician WHERE Team != \"NYY\""
  },
  {
    "prompt": "what is the population density in the state with capital austin database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT density FROM state WHERE capital  =  \"austin\";"
  },
  {
    "prompt": "How many languages are in these films? database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT count(DISTINCT language_id) FROM film"
  },
  {
    "prompt": "Show the distinct venues of debates database is debate. tables are people, debate, debate people. columns in people are people id, district, name, party, age. columns in debate are debate id, date, venue, num of audience. columns in debate people are debate id, affirmative, negative, if affirmative win.",
    "target": "SELECT DISTINCT Venue FROM debate"
  },
  {
    "prompt": "What are the names of cities in ascending alphabetical order? database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT Name FROM city ORDER BY Name ASC"
  },
  {
    "prompt": "Count the number of total papers. database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT count(*) FROM papers"
  },
  {
    "prompt": "Which city does the student whose last name is \"Kim\" live in? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT city_code FROM Student WHERE LName  =  \"Kim\""
  },
  {
    "prompt": "What is the first name of the author with last name \"Ueno\"? database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT fname FROM authors WHERE lname  =  \"Ueno\""
  },
  {
    "prompt": "How many different cities are they from? database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT count(DISTINCT city) FROM Person"
  },
  {
    "prompt": "what is the area of new mexico in square kilometers database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT area FROM state WHERE state_name  =  \"new mexico\";"
  },
  {
    "prompt": "name the 50 capitals in the usa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT DISTINCT capital FROM state;"
  },
  {
    "prompt": "How many distinct names are associated with all the photos? database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT count(DISTINCT Name) FROM PHOTOS"
  },
  {
    "prompt": "How many stadiums are there? database is swimming. tables are swimmer, stadium, event, record. columns in swimmer are id, name, nationality, meter 100, meter 200, meter 300, meter 400, meter 500, meter 600, meter 700, time. columns in stadium are id, name, capacity, city, country, opening year. columns in event are id, name, stadium id, year. columns in record are id, result, swimmer id, event id.",
    "target": "SELECT count(*) FROM stadium"
  },
  {
    "prompt": "list all the names of programs, ordering by launch time. database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT name FROM program ORDER BY launch"
  },
  {
    "prompt": "Find the name of project that continues for the longest time. database is scientist_1. tables are scientists, projects, assigned to. columns in scientists are ssn, name. columns in projects are code, name, hours. columns in assigned to are scientist, project.",
    "target": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1"
  },
  {
    "prompt": "Please list all songs in volumes in ascending alphabetical order. database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Song FROM volume ORDER BY Song"
  },
  {
    "prompt": "What are the famous titles of the artist \"Triumfall\"? database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\""
  },
  {
    "prompt": "Find the first names of students whose first names contain letter \"a\". database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'"
  },
  {
    "prompt": "What are the themes of farm competitions sorted by year in ascending order? database is farm. tables are city, farm, farm competition, competition record. columns in city are city id, official name, status, area km 2, population, census ranking. columns in farm are farm id, year, total horses, working horses, total cattle, oxen, bulls, cows, pigs, sheep and goats. columns in farm competition are competition id, year, theme, host city id, hosts. columns in competition record are competition id, farm id, rank.",
    "target": "SELECT Theme FROM farm_competition ORDER BY YEAR ASC"
  },
  {
    "prompt": "How many clubs have total medals less than 10? database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT count(*) FROM club_rank WHERE Total  <  10"
  },
  {
    "prompt": "What are the names of tracks that contain the the word you in them? database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'"
  },
  {
    "prompt": "What is the shipping agent code of shipping agent UPS? database is cre_Doc_Control_Systems. tables are reference document types, roles, addresses, reference document status, reference shipping agents, documents, employees, document drafts, draft copies, circulation history, documents mailed. columns in reference document types are document type code, document type description. columns in roles are role code, role description. columns in addresses are address id, address details. columns in reference document status are document status code, document status description. columns in reference shipping agents are shipping agent code, shipping agent name, shipping agent description. columns in documents are document id, document status code, document type code, shipping agent code, receipt date, receipt number, other details. columns in employees are employee id, role code, employee name, other details. columns in document drafts are document id, draft number, draft details. columns in draft copies are document id, draft number, copy number. columns in circulation history are document id, draft number, copy number, employee id. columns in documents mailed are document id, mailed to address id, mailing date.",
    "target": "SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = \"UPS\";"
  },
  {
    "prompt": "Show the details of all trucks in the order of their license number. database is customer_deliveries. tables are products, addresses, customers, regular orders, regular order products, actual orders, actual order products, customer addresses, delivery routes, delivery route locations, trucks, employees, order deliveries. columns in products are product id, product name, product price, product description. columns in addresses are address id, address details, city, zip postcode, state province county, country. columns in customers are customer id, payment method, customer name, customer phone, customer email, date became customer. columns in regular orders are regular order id, distributer id. columns in regular order products are regular order id, product id. columns in actual orders are actual order id, order status code, regular order id, actual order date. columns in actual order products are actual order id, product id. columns in customer addresses are customer id, address id, date from, address type, date to. columns in delivery routes are route id, route name, other route details. columns in delivery route locations are location code, route id, location address id, location name. columns in trucks are truck id, truck licence number, truck details. columns in employees are employee id, employee address id, employee name, employee phone. columns in order deliveries are location code, actual order id, delivery status code, driver employee id, truck id, delivery date.",
    "target": "SELECT truck_details FROM trucks ORDER BY truck_licence_number"
  },
  {
    "prompt": "Count the number of climbers. database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT count(*) FROM climber"
  },
  {
    "prompt": "List the names of courses in alphabetical order? database is student_assessment. tables are addresses, people, students, courses, people addresses, student course registrations, student course attendance, candidates, candidate assessments. columns in addresses are address id, line 1, line 2, city, zip postcode, state province county, country. columns in people are person id, first name, middle name, last name, cell mobile number, email address, login name, password. columns in students are student id, student details. columns in courses are course id, course name, course description, other details. columns in people addresses are person address id, person id, address id, date from, date to. columns in student course registrations are student id, course id, registration date. columns in student course attendance are student id, course id, date of attendance. columns in candidates are candidate id, candidate details. columns in candidate assessments are candidate id, qualification, assessment date, asessment outcome code.",
    "target": "SELECT course_name FROM courses ORDER BY course_name"
  },
  {
    "prompt": "Find the different billing countries for all invoices. database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT distinct(BillingCountry) FROM INVOICE"
  },
  {
    "prompt": "papers that were not published in the last year database is scholar. tables are venue, author, dataset, journal, key phrase, paper, cite, paper dataset, paper key phrase, writes. columns in venue are venue id, venue name. columns in author are author id, author name. columns in dataset are dataset id, dataset name. columns in journal are journal id, journal name. columns in key phrase are key phrase id, key phrase name. columns in paper are paper id, title, venue id, year, number citing, number cited by, journal id. columns in cite are citing paper id, cited paper id. columns in paper dataset are paper id, dataset id. columns in paper key phrase are paper id, key phrase id. columns in writes are paper id, author id.",
    "target": "SELECT DISTINCT paperid FROM paper WHERE YEAR != 2015;"
  },
  {
    "prompt": "How many bank branches are there? database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT count(*) FROM bank"
  },
  {
    "prompt": "What are the ids for all sporty students who are on scholarship? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'"
  },
  {
    "prompt": "What is the gender of the teacher with last name \"Medhurst\"? database is behavior_monitoring. tables are reference address types, reference detention type, reference incident type, addresses, students, teachers, assessment notes, behavior incident, detention, student addresses, students in detention. columns in reference address types are address type code, address type description. columns in reference detention type are detention type code, detention type description. columns in reference incident type are incident type code, incident type description. columns in addresses are address id, line 1, line 2, line 3, city, zip postcode, state province county, country, other address details. columns in students are student id, address id, first name, middle name, last name, cell mobile number, email address, date first rental, date left university, other student details. columns in teachers are teacher id, address id, first name, middle name, last name, gender, cell mobile number, email address, other details. columns in assessment notes are notes id, student id, teacher id, date of notes, text of notes, other details. columns in behavior incident are incident id, incident type code, student id, date incident start, date incident end, incident summary, recommendations, other details. columns in detention are detention id, detention type code, teacher id, datetime detention start, datetime detention end, detention summary, other details. columns in student addresses are student id, address id, date address from, date address to, monthly rental, other details. columns in students in detention are student id, detention id, incident id.",
    "target": "SELECT gender FROM TEACHERS WHERE last_name  =  \"Medhurst\""
  },
  {
    "prompt": "What are the dates of the assessment notes? database is behavior_monitoring. tables are reference address types, reference detention type, reference incident type, addresses, students, teachers, assessment notes, behavior incident, detention, student addresses, students in detention. columns in reference address types are address type code, address type description. columns in reference detention type are detention type code, detention type description. columns in reference incident type are incident type code, incident type description. columns in addresses are address id, line 1, line 2, line 3, city, zip postcode, state province county, country, other address details. columns in students are student id, address id, first name, middle name, last name, cell mobile number, email address, date first rental, date left university, other student details. columns in teachers are teacher id, address id, first name, middle name, last name, gender, cell mobile number, email address, other details. columns in assessment notes are notes id, student id, teacher id, date of notes, text of notes, other details. columns in behavior incident are incident id, incident type code, student id, date incident start, date incident end, incident summary, recommendations, other details. columns in detention are detention id, detention type code, teacher id, datetime detention start, datetime detention end, detention summary, other details. columns in student addresses are student id, address id, date address from, date address to, monthly rental, other details. columns in students in detention are student id, detention id, incident id.",
    "target": "SELECT date_of_notes FROM Assessment_Notes"
  },
  {
    "prompt": "Show the ids of all employees who have destroyed a document. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "prompt": "How many products are there in the records? database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT count(*) FROM catalog_contents"
  },
  {
    "prompt": "What are the names of shops in ascending order of open year? database is device. tables are device, shop, stock. columns in device are device id, device, carrier, package version, applications, software platform. columns in shop are shop id, shop name, location, open date, open year. columns in stock are shop id, device id, quantity.",
    "target": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC"
  },
  {
    "prompt": "What are the names of the counties of public safety, ordered by population descending? database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT Name FROM county_public_safety ORDER BY Population DESC"
  },
  {
    "prompt": "How many aircrafts do we have? database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT count(*) FROM Aircraft"
  },
  {
    "prompt": "Count the number of storms in which at least 1 person died. database is storm_record. tables are storm, region, affected region. columns in storm are storm id, name, dates active, max speed, damage millions usd, number deaths. columns in region are region id, region code, region name. columns in affected region are region id, storm id, number city affected.",
    "target": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0"
  },
  {
    "prompt": "Show the description for role name \"Proof Reader\". database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\""
  },
  {
    "prompt": "Which document type is described with the prefix Initial? database is tracking_grants_for_research. tables are document types, documents, grants, organisation types, organisations, project outcomes, project staff, projects, research outcomes, research staff, staff roles, tasks. columns in document types are document type code, document description. columns in documents are document id, document type code, grant id, sent date, response received date, other details. columns in grants are grant id, organisation id, grant amount, grant start date, grant end date, other details. columns in organisation types are organisation type, organisation type description. columns in organisations are organisation id, organisation type, organisation details. columns in project outcomes are project id, outcome code, outcome details. columns in project staff are staff id, project id, role code, date from, date to, other details. columns in projects are project id, organisation id, project details. columns in research outcomes are outcome code, outcome description. columns in research staff are staff id, employer organisation id, staff details. columns in staff roles are role code, role description. columns in tasks are task id, project id, task details, eg agree objectives.",
    "target": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'"
  },
  {
    "prompt": "Find the first name of students in the descending order of age. database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT Fname FROM STUDENT ORDER BY Age DESC"
  },
  {
    "prompt": "How many models do not have the wifi function? database is phone_1. tables are chip model, screen mode, phone. columns in chip model are model name, launch year, ram mib, rom mib, slots, wifi, bluetooth. columns in screen mode are graphics mode, char cells, pixels, hardware colours, used kb, map, type. columns in phone are company name, hardware model name, accreditation type, accreditation level, date, chip model, screen mode.",
    "target": "SELECT count(*) FROM chip_model WHERE wifi  =  'No'"
  },
  {
    "prompt": "How many distinct types of accounts are there? database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT count(DISTINCT acc_type) FROM customer"
  },
  {
    "prompt": "how many people lived in boulder database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM city WHERE city_name  =  \"boulder\";"
  },
  {
    "prompt": "how many people live in boulder database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM city WHERE city_name  =  \"boulder\";"
  },
  {
    "prompt": "Find the number of distinct amenities. database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT count(*) FROM dorm_amenity"
  },
  {
    "prompt": "Count the number of distinct channel owners. database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT count(DISTINCT OWNER) FROM channel"
  },
  {
    "prompt": "How many regions do we have? database is storm_record. tables are storm, region, affected region. columns in storm are storm id, name, dates active, max speed, damage millions usd, number deaths. columns in region are region id, region code, region name. columns in affected region are region id, storm id, number city affected.",
    "target": "SELECT count(*) FROM region"
  },
  {
    "prompt": "How many phones are there? database is phone_market. tables are phone, market, phone market. columns in phone are name, phone id, memory in g, carrier, price. columns in market are market id, district, num of employees, num of shops, ranking. columns in phone market are market id, phone id, num of stock.",
    "target": "SELECT count(*) FROM phone"
  },
  {
    "prompt": "How many debates are there? database is debate. tables are people, debate, debate people. columns in people are people id, district, name, party, age. columns in debate are debate id, date, venue, num of audience. columns in debate people are debate id, affirmative, negative, if affirmative win.",
    "target": "SELECT count(*) FROM debate"
  },
  {
    "prompt": "What are the different region names, ordered by labels? database is party_people. tables are region, party, member, party events. columns in region are region id, region name, date, label, format, catalogue. columns in party are party id, minister, took office, left office, region id, party name. columns in member are member id, member name, party id, in office. columns in party events are event id, event name, party id, member in charge id.",
    "target": "SELECT DISTINCT region_name FROM region ORDER BY Label"
  },
  {
    "prompt": "Return the name of the youngest captain. database is ship_1. tables are captain, ship. columns in captain are captain id, name, ship id, age, class, rank. columns in ship are ship id, name, type, built year, class, flag.",
    "target": "SELECT name FROM captain ORDER BY age LIMIT 1"
  },
  {
    "prompt": "What are the numbers of the shortest flights? database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3"
  },
  {
    "prompt": "List the builders of railways in ascending alphabetical order. database is railway. tables are railway, train, manager, railway manage. columns in railway are railway id, railway, builder, built, wheels, location, objectnumber. columns in train are train id, train num, name, from, arrival, railway id. columns in manager are manager id, name, country, working year starts, age, level. columns in railway manage are railway id, manager id, from year.",
    "target": "SELECT Builder FROM railway ORDER BY Builder ASC"
  },
  {
    "prompt": "What are the names of all songs that are ordered by their resolution numbers? database is music_1. tables are genre, artist, files, song. columns in genre are genre name, rating, most popular in. columns in artist are artist name, country, gender, preferred genre. columns in files are song id, artist name, file size, duration, formats. columns in song are song name, artist name, country, song id, genre is, rating, languages, releasedate, resolution.",
    "target": "SELECT song_name FROM song ORDER BY resolution"
  },
  {
    "prompt": "What are the names of the ships that are not from the United States? database is ship_mission. tables are mission, ship. columns in mission are mission id, ship id, code, launched year, location, speed knots, fate. columns in ship are ship id, name, type, nationality, tonnage.",
    "target": "SELECT Name FROM ship WHERE Nationality != \"United States\""
  },
  {
    "prompt": "What is the total checking balance in all accounts? database is small_bank_1. tables are accounts, savings, checking. columns in accounts are customer id, name. columns in savings are customer id, balance. columns in checking are customer id, balance.",
    "target": "SELECT sum(balance) FROM checking"
  },
  {
    "prompt": "What is the average ticket sales gross in dollars of films? database is film_rank. tables are film, market, film market estimation. columns in film are film id, title, studio, director, gross in dollar. columns in market are market id, country, number cities. columns in film market estimation are estimation id, low estimate, high estimate, film id, type, market id, year.",
    "target": "SELECT avg(Gross_in_dollar) FROM film"
  },
  {
    "prompt": "Find the total claimed amount of all the claims. database is insurance_policies. tables are customers, customer policies, claims, settlements, payments. columns in customers are customer id, customer details. columns in customer policies are policy id, customer id, policy type code, start date, end date. columns in claims are claim id, policy id, date claim made, date claim settled, amount claimed, amount settled. columns in settlements are settlement id, claim id, date claim made, date claim settled, amount claimed, amount settled, customer policy id. columns in payments are payment id, settlement id, payment method code, date payment made, amount payment.",
    "target": "SELECT sum(Amount_Claimed) FROM Claims"
  },
  {
    "prompt": "What are the names of all the playlists? database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT name FROM playlists;"
  },
  {
    "prompt": "What are the names of the airports which are not in the country Iceland? database is flight_company. tables are airport, operate company, flight. columns in airport are id, city, country, iata, icao, name. columns in operate company are id, name, type, principal activities, incorporated in, group equity shareholding. columns in flight are id, vehicle flight number, date, pilot, velocity, altitude, airport id, company id.",
    "target": "SELECT name FROM airport WHERE country != 'Iceland'"
  },
  {
    "prompt": "In which buildings are there at least ten professors? database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT building FROM Faculty WHERE rank  =  \"Professor\" GROUP BY building HAVING count(*)  >=  10"
  },
  {
    "prompt": "Count the number of different account types. database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT count(DISTINCT acc_type) FROM customer"
  },
  {
    "prompt": "tell me what cities are in texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT city_name FROM city WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "How many different allergy types exist? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT count(DISTINCT allergytype) FROM Allergy_type"
  },
  {
    "prompt": "How many departments does the college has? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT count(DISTINCT dept_name) FROM department"
  },
  {
    "prompt": "Show all the distinct districts for elections. database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT DISTINCT District FROM election"
  },
  {
    "prompt": "What is all the information about all people? database is candidate_poll. tables are candidate, people. columns in candidate are candidate id, people id, poll source, date, support rate, consider rate, oppose rate, unsure rate. columns in people are people id, sex, name, date of birth, height, weight.",
    "target": "SELECT * FROM people"
  },
  {
    "prompt": "How many budget record has a budget amount smaller than the invested amount? database is school_finance. tables are school, budget, endowment. columns in school are school id, school name, location, mascot, enrollment, ihsaa class, ihsaa football class, county. columns in budget are school id, year, budgeted, total budget percent budgeted, invested, total budget percent invested, budget invested percent. columns in endowment are endowment id, school id, donator name, amount.",
    "target": "SELECT count(*) FROM budget WHERE budgeted  <  invested"
  },
  {
    "prompt": "How many schools are there? database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT count(*) FROM school"
  },
  {
    "prompt": "What is the name of customers who do not use Cash as payment method. database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'"
  },
  {
    "prompt": "What is the shop name corresponding to the shop that opened in the most recent year? database is device. tables are device, shop, stock. columns in device are device id, device, carrier, package version, applications, software platform. columns in shop are shop id, shop name, location, open date, open year. columns in stock are shop id, device id, quantity.",
    "target": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1"
  },
  {
    "prompt": "What states have at least two representatives? database is election_representative. tables are election, representative. columns in election are election id, representative id, date, votes, vote percent, seats, place. columns in representative are representative id, name, state, party, lifespan.",
    "target": "SELECT State FROM representative GROUP BY State HAVING COUNT(*)  >=  2"
  },
  {
    "prompt": "In which locations are there more than one movie theater with capacity above 300? database is cinema. tables are film, cinema, schedule. columns in film are film id, rank in series, number in season, title, directed by, original air date, production code. columns in cinema are cinema id, name, openning year, capacity, location. columns in schedule are cinema id, film id, date, show times per day, price.",
    "target": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1"
  },
  {
    "prompt": "Return the apartment numbers of the apartments with type code \"Flat\". database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\""
  },
  {
    "prompt": "What are all locations of train stations? database is train_station. tables are station, train, train station. columns in station are station id, name, annual entry exit, annual interchanges, total passengers, location, main services, number of platforms. columns in train are train id, name, time, service. columns in train station are train id, station id.",
    "target": "SELECT DISTINCT LOCATION FROM station"
  },
  {
    "prompt": "List categories that have at least two books after year 1989. database is culture_company. tables are book club, movie, culture company. columns in book club are book club id, year, author or editor, book title, publisher, category, result. columns in movie are movie id, title, year, director, budget million, gross worldwide. columns in culture company are company name, type, incorporated in, group equity shareholding, book club id, movie id.",
    "target": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2"
  },
  {
    "prompt": "What campuses are in Los Angeles county? database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""
  },
  {
    "prompt": "Count the number of party events. database is party_people. tables are region, party, member, party events. columns in region are region id, region name, date, label, format, catalogue. columns in party are party id, minister, took office, left office, region id, party name. columns in member are member id, member name, party id, in office. columns in party events are event id, event name, party id, member in charge id.",
    "target": "SELECT count(*) FROM party_events"
  },
  {
    "prompt": "What are the faculty ids of all the male faculty members? database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT FacID FROM Faculty WHERE Sex  =  'M'"
  },
  {
    "prompt": "List all businesses with rating 3.5 database is yelp. tables are business, category, user, checkin, neighbourhood, review, tip. columns in business are bid, business id, name, full address, city, latitude, longitude, review count, is open, rating, state. columns in category are id, business id, category name. columns in user are uid, user id, name. columns in checkin are cid, business id, count, day. columns in neighbourhood are id, business id, neighbourhood name. columns in review are rid, business id, user id, rating, text, year, month. columns in tip are tip id, business id, text, user id, likes, year, month.",
    "target": "SELECT name FROM business WHERE rating  =  3.5;"
  },
  {
    "prompt": "Show all video game types. database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT DISTINCT gtype FROM Video_games"
  },
  {
    "prompt": "What are the titles of the books whose writer is not \"Elaine Lee\"? database is book_2. tables are publication, book. columns in publication are publication id, book id, publisher, publication date, price. columns in book are book id, title, issues, writer.",
    "target": "SELECT Title FROM book WHERE Writer != \"Elaine Lee\""
  },
  {
    "prompt": "What are the titles of all the albums? database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT title FROM albums;"
  },
  {
    "prompt": "What are all the different start station names for a trip that lasted less than 100? database is bike_1. tables are station, status, trip, weather. columns in station are id, name, latitude, longitude, dock count, city, installation date. columns in status are station id, bikes available, docks available, time. columns in trip are id, duration, start date, start station name, start station id, end date, end station name, end station id, bike id, subscription type, zip code. columns in weather are date, max temperature f, mean temperature f, min temperature f, max dew point f, mean dew point f, min dew point f, max humidity, mean humidity, min humidity, max sea level pressure inches, mean sea level pressure inches, min sea level pressure inches, max visibility miles, mean visibility miles, min visibility miles, max wind speed mph, mean wind speed mph, max gust speed mph, precipitation inches, cloud cover, events, wind dir degrees, zip code.",
    "target": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100"
  },
  {
    "prompt": "What is the average enrollment number? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT avg(enr) FROM College"
  },
  {
    "prompt": "How many candidates are there? database is candidate_poll. tables are candidate, people. columns in candidate are candidate id, people id, poll source, date, support rate, consider rate, oppose rate, unsure rate. columns in people are people id, sex, name, date of birth, height, weight.",
    "target": "SELECT count(*) FROM candidate"
  },
  {
    "prompt": "What are the different types of forms? database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT DISTINCT form_type_code FROM forms"
  },
  {
    "prompt": "Find the number of students in total. database is voter_2. tables are student, voting record. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in voting record are student id, registration date, election cycle, president vote, vice president vote, secretary vote, treasurer vote, class president vote, class senator vote.",
    "target": "SELECT count(*) FROM STUDENT"
  },
  {
    "prompt": "Count the number of authors. database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT count(*) FROM authors"
  },
  {
    "prompt": "What is the phone number of the performer Ashley? database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\""
  },
  {
    "prompt": "Retrieve all the last names of authors in alphabetical order. database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT lname FROM authors ORDER BY lname"
  },
  {
    "prompt": "How many different payment methods are there? database is customer_deliveries. tables are products, addresses, customers, regular orders, regular order products, actual orders, actual order products, customer addresses, delivery routes, delivery route locations, trucks, employees, order deliveries. columns in products are product id, product name, product price, product description. columns in addresses are address id, address details, city, zip postcode, state province county, country. columns in customers are customer id, payment method, customer name, customer phone, customer email, date became customer. columns in regular orders are regular order id, distributer id. columns in regular order products are regular order id, product id. columns in actual orders are actual order id, order status code, regular order id, actual order date. columns in actual order products are actual order id, product id. columns in customer addresses are customer id, address id, date from, address type, date to. columns in delivery routes are route id, route name, other route details. columns in delivery route locations are location code, route id, location address id, location name. columns in trucks are truck id, truck licence number, truck details. columns in employees are employee id, employee address id, employee name, employee phone. columns in order deliveries are location code, actual order id, delivery status code, driver employee id, truck id, delivery date.",
    "target": "SELECT count(DISTINCT payment_method) FROM customers"
  },
  {
    "prompt": "Show the nicknames of schools that are not in division 1. database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\""
  },
  {
    "prompt": "rivers in illinois database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
  },
  {
    "prompt": "how many ships are there? database is ship_1. tables are captain, ship. columns in captain are captain id, name, ship id, age, class, rank. columns in ship are ship id, name, type, built year, class, flag.",
    "target": "SELECT count(*) FROM ship"
  },
  {
    "prompt": "how many schools exist in total? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT count(DISTINCT school_code) FROM department"
  },
  {
    "prompt": "Find the number of distinct students enrolled in courses. database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment"
  },
  {
    "prompt": "What are the campuses that opened in 1958? database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT campus FROM campuses WHERE YEAR  =  1958"
  },
  {
    "prompt": "What are the ids of the problems which are reported before 1978-06-26? database is tracking_software_problems. tables are problem category codes, problem log, problem status codes, product, staff, problems. columns in problem category codes are problem category code, problem category description. columns in problem log are problem log id, assigned to staff id, problem id, problem category code, problem status code, log entry date, log entry description, log entry fix, other log details. columns in problem status codes are problem status code, problem status description. columns in product are product id, product name, product details. columns in staff are staff id, staff first name, staff last name, other staff details. columns in problems are problem id, product id, closure authorised by staff id, reported by staff id, date problem reported, date problem closed, problem description, other problem details.",
    "target": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\""
  },
  {
    "prompt": "what is the population density of wyoming database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT density FROM state WHERE state_name  =  \"wyoming\";"
  },
  {
    "prompt": "Find the players whose names contain letter a. database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'"
  },
  {
    "prompt": "List the names of buildings in descending order of building height. database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT name FROM buildings ORDER BY Height DESC"
  },
  {
    "prompt": "How many party events do we have? database is party_people. tables are region, party, member, party events. columns in region are region id, region name, date, label, format, catalogue. columns in party are party id, minister, took office, left office, region id, party name. columns in member are member id, member name, party id, in office. columns in party events are event id, event name, party id, member in charge id.",
    "target": "SELECT count(*) FROM party_events"
  },
  {
    "prompt": "How many distinct currency codes are there for all drama workshop groups? database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups"
  },
  {
    "prompt": "What is the name of the tallest building? database is protein_institute. tables are building, institution, protein. columns in building are building id, name, street address, years as tallest, height feet, floors. columns in institution are institution id, institution, location, founded, type, enrollment, team, primary conference, building id. columns in protein are common name, protein name, divergence from human lineage, accession number, sequence length, sequence identity to human protein, institution id.",
    "target": "SELECT name FROM building ORDER BY height_feet DESC LIMIT 1"
  },
  {
    "prompt": "Show other account details for account with name 338. database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\""
  },
  {
    "prompt": "how many inhabitants does boulder have database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM city WHERE city_name  =  \"boulder\";"
  },
  {
    "prompt": "return me the homepage of PVLDB . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT homepage FROM journal WHERE name  =  \"PVLDB\";"
  },
  {
    "prompt": "List the nominees that have been nominated more than two musicals. database is musical. tables are musical, actor. columns in musical are musical id, name, year, award, category, nominee, result. columns in actor are actor id, name, musical id, character, duration, age.",
    "target": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2"
  },
  {
    "prompt": "How many different positions of players are there? database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT count(DISTINCT POSITION) FROM player"
  },
  {
    "prompt": "What is the name of the wrestler with the fewest days held? database is wrestler. tables are wrestler, elimination. columns in wrestler are wrestler id, name, reign, days held, location, event. columns in elimination are elimination id, wrestler id, team, eliminated by, elimination move, time.",
    "target": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1"
  },
  {
    "prompt": "How many different colleges are there? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT count(*) FROM College"
  },
  {
    "prompt": "What are the distinct buildings with capacities of greater than 50? database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50"
  },
  {
    "prompt": "Return the names of all counties sorted by population in ascending order. database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT County_name FROM county ORDER BY Population ASC"
  },
  {
    "prompt": "How many different colleges do attend the tryout test? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT count(DISTINCT cName) FROM tryout"
  },
  {
    "prompt": "What are the building full names that contain the word \"court\"? database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\""
  },
  {
    "prompt": "Which catalog contents have a product stock number that starts from \"2\"? Show the catalog entry names. database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\""
  },
  {
    "prompt": "Find the locations that have more than one movie theater with capacity above 300. database is cinema. tables are film, cinema, schedule. columns in film are film id, rank in series, number in season, title, directed by, original air date, production code. columns in cinema are cinema id, name, openning year, capacity, location. columns in schedule are cinema id, film id, date, show times per day, price.",
    "target": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1"
  },
  {
    "prompt": "What is the name of the ship with the largest tonnage? database is ship_mission. tables are mission, ship. columns in mission are mission id, ship id, code, launched year, location, speed knots, fate. columns in ship are ship id, name, type, nationality, tonnage.",
    "target": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1"
  },
  {
    "prompt": "how many states are next to major rivers database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH  >  750;"
  },
  {
    "prompt": "Find all the campuses opened in 1958. database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT campus FROM campuses WHERE YEAR  =  1958"
  },
  {
    "prompt": "What are the ids of the top three products that were purchased in the largest amount? database is department_store. tables are addresses, staff, suppliers, department store chain, customers, products, supplier addresses, customer addresses, customer orders, department stores, departments, order items, product suppliers, staff department assignments. columns in addresses are address id, address details. columns in staff are staff id, staff gender, staff name. columns in suppliers are supplier id, supplier name, supplier phone. columns in department store chain are department store chain id, department store chain name. columns in customers are customer id, payment method code, customer code, customer name, customer address, customer phone, customer email. columns in products are product id, product type code, product name, product price. columns in supplier addresses are supplier id, address id, date from, date to. columns in customer addresses are customer id, address id, date from, date to. columns in customer orders are order id, customer id, order status code, order date. columns in department stores are department store id, department store chain id, store name, store address, store phone, store email. columns in departments are department id, department store id, department name. columns in order items are order item id, order id, product id. columns in product suppliers are product id, supplier id, date supplied from, date supplied to, total amount purchased, total value purchased. columns in staff department assignments are staff id, department id, date assigned from, job title code, date assigned to.",
    "target": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3"
  },
  {
    "prompt": "When was the first asset acquired? database is assets_maintenance. tables are third party companies, maintenance contracts, parts, skills, staff, assets, asset parts, maintenance engineers, engineer skills, fault log, engineer visits, part faults, fault log parts, skills required to fix. columns in third party companies are company id, company type, company name, company address, other company details. columns in maintenance contracts are maintenance contract id, maintenance contract company id, contract start date, contract end date, other contract details. columns in parts are part id, part name, chargeable yn, chargeable amount, other part details. columns in skills are skill id, skill code, skill description. columns in staff are staff id, staff name, gender, other staff details. columns in assets are asset id, maintenance contract id, supplier company id, asset details, asset make, asset model, asset acquired date, asset disposed date, other asset details. columns in asset parts are asset id, part id. columns in maintenance engineers are engineer id, company id, first name, last name, other details. columns in engineer skills are engineer id, skill id. columns in fault log are fault log entry id, asset id, recorded by staff id, fault log entry datetime, fault description, other fault details. columns in engineer visits are engineer visit id, contact staff id, engineer id, fault log entry id, fault status, visit start datetime, visit end datetime, other visit details. columns in part faults are part fault id, part id, fault short name, fault description, other fault details. columns in fault log parts are fault log entry id, part fault id, fault status. columns in skills required to fix are part fault id, skill id.",
    "target": "SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1"
  },
  {
    "prompt": "where is springfield database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "Show all donor names. database is school_finance. tables are school, budget, endowment. columns in school are school id, school name, location, mascot, enrollment, ihsaa class, ihsaa football class, county. columns in budget are school id, year, budgeted, total budget percent budgeted, invested, total budget percent invested, budget invested percent. columns in endowment are endowment id, school id, donator name, amount.",
    "target": "SELECT DISTINCT donator_name FROM endowment"
  },
  {
    "prompt": "How many papers are published in total? database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT count(*) FROM papers"
  },
  {
    "prompt": "what states capital is salem database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM state WHERE capital  =  \"salem\";"
  },
  {
    "prompt": "Show all directors. database is cinema. tables are film, cinema, schedule. columns in film are film id, rank in series, number in season, title, directed by, original air date, production code. columns in cinema are cinema id, name, openning year, capacity, location. columns in schedule are cinema id, film id, date, show times per day, price.",
    "target": "SELECT DISTINCT directed_by FROM film"
  },
  {
    "prompt": "List the names of all distinct products in alphabetical order. database is tracking_orders. tables are customers, invoices, orders, products, order items, shipments, shipment items. columns in customers are customer id, customer name, customer details. columns in invoices are invoice number, invoice date, invoice details. columns in orders are order id, customer id, order status, date order placed, order details. columns in products are product id, product name, product details. columns in order items are order item id, product id, order id, order item status, order item details. columns in shipments are shipment id, order id, invoice number, shipment tracking number, shipment date, other shipment details. columns in shipment items are shipment id, order item id.",
    "target": "SELECT DISTINCT product_name FROM products ORDER BY product_name"
  },
  {
    "prompt": "What are the different product sizes? database is customers_and_invoices. tables are customers, orders, invoices, accounts, product categories, products, financial transactions, order items, invoice line items. columns in customers are customer id, customer first name, customer middle initial, customer last name, gender, email address, login name, login password, phone number, town city, state county province, country. columns in orders are order id, customer id, date order placed, order details. columns in invoices are invoice number, order id, invoice date. columns in accounts are account id, customer id, date account opened, account name, other account details. columns in product categories are production type code, product type description, vat rating. columns in products are product id, parent product id, production type code, unit price, product name, product color, product size. columns in financial transactions are transaction id, account id, invoice number, transaction type, transaction date, transaction amount, transaction comment, other transaction details. columns in order items are order item id, order id, product id, product quantity, other order item details. columns in invoice line items are order item id, invoice number, product id, product title, product quantity, product price, derived product cost, derived vat payable, derived total cost.",
    "target": "SELECT DISTINCT product_size FROM Products"
  },
  {
    "prompt": "Find the last name of the author with first name \"Amal\". database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT lname FROM authors WHERE fname  =  \"Amal\""
  },
  {
    "prompt": "Show origins of all flights with destination Honolulu. database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\""
  },
  {
    "prompt": "What are the names of the airports in the city of Goroka? database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT name FROM airports WHERE city  =  'Goroka'"
  },
  {
    "prompt": "Count the number of tests with \"Fail\" result. database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  \"Fail\""
  },
  {
    "prompt": "What are the first names of the people in alphabetical order? database is student_assessment. tables are addresses, people, students, courses, people addresses, student course registrations, student course attendance, candidates, candidate assessments. columns in addresses are address id, line 1, line 2, city, zip postcode, state province county, country. columns in people are person id, first name, middle name, last name, cell mobile number, email address, login name, password. columns in students are student id, student details. columns in courses are course id, course name, course description, other details. columns in people addresses are person address id, person id, address id, date from, date to. columns in student course registrations are student id, course id, registration date. columns in student course attendance are student id, course id, date of attendance. columns in candidates are candidate id, candidate details. columns in candidate assessments are candidate id, qualification, assessment date, asessment outcome code.",
    "target": "SELECT first_name FROM people ORDER BY first_name"
  },
  {
    "prompt": "What are the codes of the locations with at least three documents? database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3"
  },
  {
    "prompt": "How many companies were created by Andy? database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'"
  },
  {
    "prompt": "What is the school color of the school with the largest enrollment? database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1"
  },
  {
    "prompt": "Give me a list of all the distinct building descriptions. database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT DISTINCT building_description FROM Apartment_Buildings"
  },
  {
    "prompt": "Find the name of organizations whose names contain \"Party\". database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\""
  },
  {
    "prompt": "Count the number of distinct artists who have volumes. database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"
  },
  {
    "prompt": "How many accounts are there in total? database is small_bank_1. tables are accounts, savings, checking. columns in accounts are customer id, name. columns in savings are customer id, balance. columns in checking are customer id, balance.",
    "target": "SELECT count(*) FROM accounts"
  },
  {
    "prompt": "What is the total number of campuses? database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT count(*) FROM campuses"
  },
  {
    "prompt": "What are the names of wines, sorted in alphabetical order? database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT DISTINCT Name FROM WINE ORDER BY Name"
  },
  {
    "prompt": "how long is the rio grande river database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"
  },
  {
    "prompt": "List the name of the school with the smallest enrollment. database is school_finance. tables are school, budget, endowment. columns in school are school id, school name, location, mascot, enrollment, ihsaa class, ihsaa football class, county. columns in budget are school id, year, budgeted, total budget percent budgeted, invested, total budget percent invested, budget invested percent. columns in endowment are endowment id, school id, donator name, amount.",
    "target": "SELECT school_name FROM school ORDER BY enrollment LIMIT 1"
  },
  {
    "prompt": "How many animal type allergies exist? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"animal\""
  },
  {
    "prompt": "What are all the distinct last names of all the engineers? database is assets_maintenance. tables are third party companies, maintenance contracts, parts, skills, staff, assets, asset parts, maintenance engineers, engineer skills, fault log, engineer visits, part faults, fault log parts, skills required to fix. columns in third party companies are company id, company type, company name, company address, other company details. columns in maintenance contracts are maintenance contract id, maintenance contract company id, contract start date, contract end date, other contract details. columns in parts are part id, part name, chargeable yn, chargeable amount, other part details. columns in skills are skill id, skill code, skill description. columns in staff are staff id, staff name, gender, other staff details. columns in assets are asset id, maintenance contract id, supplier company id, asset details, asset make, asset model, asset acquired date, asset disposed date, other asset details. columns in asset parts are asset id, part id. columns in maintenance engineers are engineer id, company id, first name, last name, other details. columns in engineer skills are engineer id, skill id. columns in fault log are fault log entry id, asset id, recorded by staff id, fault log entry datetime, fault description, other fault details. columns in engineer visits are engineer visit id, contact staff id, engineer id, fault log entry id, fault status, visit start datetime, visit end datetime, other visit details. columns in part faults are part fault id, part id, fault short name, fault description, other fault details. columns in fault log parts are fault log entry id, part fault id, fault status. columns in skills required to fix are part fault id, skill id.",
    "target": "SELECT DISTINCT last_name FROM Maintenance_Engineers"
  },
  {
    "prompt": "List the names of pilots in ascending order of rank. database is pilot_record. tables are aircraft, pilot, pilot record. columns in aircraft are aircraft id, order year, manufacturer, model, fleet series, powertrain, fuel propulsion. columns in pilot are pilot id, pilot name, rank, age, nationality, position, join year, team. columns in pilot record are record id, pilot id, aircraft id, date.",
    "target": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC"
  },
  {
    "prompt": "Count the number of all the calendar items. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT count(*) FROM Ref_calendar"
  },
  {
    "prompt": "How many lessons were in cancelled state? database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Cancelled\";"
  },
  {
    "prompt": "Give the codes of document types that have more than 2 corresponding documents. database is document_management. tables are roles, users, document structures, functional areas, images, documents, document functional areas, document sections, document sections images. columns in roles are role code, role description. columns in users are user id, role code, user name, user login, password. columns in document structures are document structure code, parent document structure code, document structure description. columns in functional areas are functional area code, parent functional area code, functional area description. columns in images are image id, image alt text, image name, image url. columns in documents are document code, document structure code, document type code, access count, document name. columns in document functional areas are document code, functional area code. columns in document sections are section id, document code, section sequence, section code, section title. columns in document sections images are section id, image id.",
    "target": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2"
  },
  {
    "prompt": "Find the average room count of the apartments that have the \"Studio\" type code. database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"Studio\""
  },
  {
    "prompt": "Give the songs included in volumes that have more than 1 week on top. database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1"
  },
  {
    "prompt": "what river runs through illinois database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
  },
  {
    "prompt": "Show the shop addresses ordered by their opening year. database is coffee_shop. tables are shop, member, happy hour, happy hour member. columns in shop are shop id, address, num of staff, score, open year. columns in member are member id, name, membership card, age, time of purchase, level of membership, address. columns in happy hour are hh id, shop id, month, num of shaff in charge. columns in happy hour member are hh id, member id, total amount.",
    "target": "SELECT address FROM shop ORDER BY open_year"
  },
  {
    "prompt": "List the dates of games by the home team name in descending order. database is game_injury. tables are stadium, game, injury accident. columns in stadium are id, name, home games, average attendance, total attendance, capacity percentage. columns in game are stadium id, id, season, date, home team, away team, score, competition. columns in injury accident are game id, id, player, injury, number of matches, source.",
    "target": "SELECT Date FROM game ORDER BY home_team DESC"
  },
  {
    "prompt": "Return all distinct detention type codes. database is behavior_monitoring. tables are reference address types, reference detention type, reference incident type, addresses, students, teachers, assessment notes, behavior incident, detention, student addresses, students in detention. columns in reference address types are address type code, address type description. columns in reference detention type are detention type code, detention type description. columns in reference incident type are incident type code, incident type description. columns in addresses are address id, line 1, line 2, line 3, city, zip postcode, state province county, country, other address details. columns in students are student id, address id, first name, middle name, last name, cell mobile number, email address, date first rental, date left university, other student details. columns in teachers are teacher id, address id, first name, middle name, last name, gender, cell mobile number, email address, other details. columns in assessment notes are notes id, student id, teacher id, date of notes, text of notes, other details. columns in behavior incident are incident id, incident type code, student id, date incident start, date incident end, incident summary, recommendations, other details. columns in detention are detention id, detention type code, teacher id, datetime detention start, datetime detention end, detention summary, other details. columns in student addresses are student id, address id, date address from, date address to, monthly rental, other details. columns in students in detention are student id, detention id, incident id.",
    "target": "SELECT DISTINCT detention_type_code FROM Detention"
  },
  {
    "prompt": "What is the name and age of every male? Order the results by age. database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT name FROM Person WHERE gender  =  'male' ORDER BY age"
  },
  {
    "prompt": "Which classrooms are used by grade 4? database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT DISTINCT classroom FROM list WHERE grade  =  4"
  },
  {
    "prompt": "Count the total number of counties. database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT count(*) FROM county"
  },
  {
    "prompt": "Show the short names of the buildings managed by \"Emma\". database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\""
  },
  {
    "prompt": "What is the name of the district with the smallest area? database is store_product. tables are product, store, district, store product, store district. columns in product are product id, product, dimensions, dpi, pages per minute color, max page size, interface. columns in store are store id, store name, type, area size, number of product category, ranking. columns in district are district id, district name, headquartered city, city population, city area. columns in store product are store id, product id. columns in store district are store id, district id.",
    "target": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1"
  },
  {
    "prompt": "Count the number of stores. database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT count(*) FROM store"
  },
  {
    "prompt": "Find the total number of employees. database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT count(*) FROM employee"
  },
  {
    "prompt": "what are the major rivers in the us database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river;"
  },
  {
    "prompt": "Count the number of gymnasts. database is gymnast. tables are gymnast, people. columns in gymnast are gymnast id, floor exercise points, pommel horse points, rings points, vault points, parallel bars points, horizontal bar points, total points. columns in people are people id, name, age, height, hometown.",
    "target": "SELECT count(*) FROM gymnast"
  },
  {
    "prompt": "Which authors have last name \"Ueno\"? List their first names. database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT fname FROM authors WHERE lname  =  \"Ueno\""
  },
  {
    "prompt": "Where is the headquarter of the company founded by James? database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT headquarter FROM manufacturers WHERE founder  =  'James'"
  },
  {
    "prompt": "What buildings have faculty offices? database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT DISTINCT building FROM Faculty"
  },
  {
    "prompt": "Return the average enrollment of universities founded before 1850. database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT avg(enrollment) FROM university WHERE founded  <  1850"
  },
  {
    "prompt": "return me the year of \" Making database systems usable \" . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT YEAR FROM publication WHERE title  =  \"Making database systems usable\";"
  },
  {
    "prompt": "Show all main industry for all companies. database is gas_company. tables are company, gas station, station company. columns in company are company id, rank, company, headquarters, main industry, sales billion, profits billion, assets billion, market value. columns in gas station are station id, open year, location, manager name, vice manager name, representative name. columns in station company are station id, company id, rank of the year.",
    "target": "SELECT DISTINCT main_industry FROM company"
  },
  {
    "prompt": "On which days more than one revisions were made on catalogs. database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1"
  },
  {
    "prompt": "Sort the customer names in alphabetical order. database is insurance_and_eClaims. tables are customers, staff, policies, claim headers, claims documents, claims processing stages, claims processing. columns in customers are customer id, customer details. columns in staff are staff id, staff details. columns in policies are policy id, customer id, policy type code, start date, end date. columns in claim headers are claim header id, claim status code, claim type code, policy id, date of claim, date of settlement, amount claimed, amount piad. columns in claims documents are claim id, document type code, created by staff id, created date. columns in claims processing stages are claim stage id, next claim stage id, claim status name, claim status description. columns in claims processing are claim processing id, claim id, claim outcome code, claim stage id, staff id.",
    "target": "SELECT customer_details FROM customers ORDER BY customer_details"
  },
  {
    "prompt": "What are project ids of projects that have 2 or more corresponding documents? database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2"
  },
  {
    "prompt": "Give the average quantity of stocks. database is device. tables are device, shop, stock. columns in device are device id, device, carrier, package version, applications, software platform. columns in shop are shop id, shop name, location, open date, open year. columns in stock are shop id, device id, quantity.",
    "target": "SELECT avg(Quantity) FROM stock"
  },
  {
    "prompt": "Count the number of addressed in the California district. database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT count(*) FROM address WHERE district  =  'California'"
  },
  {
    "prompt": "Find the id of the song that lasts the longest. database is music_1. tables are genre, artist, files, song. columns in genre are genre name, rating, most popular in. columns in artist are artist name, country, gender, preferred genre. columns in files are song id, artist name, file size, duration, formats. columns in song are song name, artist name, country, song id, genre is, rating, languages, releasedate, resolution.",
    "target": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1"
  },
  {
    "prompt": "Show publishers that have more than one publication. database is book_2. tables are publication, book. columns in publication are publication id, book id, publisher, publication date, price. columns in book are book id, title, issues, writer.",
    "target": "SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(*)  >  1"
  },
  {
    "prompt": "Show all allergies with type food. database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"food\""
  },
  {
    "prompt": "Which movies have Deleted Scenes as a substring in the special feature? database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'"
  },
  {
    "prompt": "How many customers are there? database is customer_complaints. tables are staff, customers, products, complaints. columns in staff are staff id, gender, first name, last name, email address, phone number. columns in customers are customer id, customer type code, address line 1, address line 2, town city, state, email address, phone number. columns in products are product id, parent product id, product category code, date product first available, date product discontinued, product name, product description, product price. columns in complaints are complaint id, product id, customer id, complaint outcome code, complaint status code, complaint type code, date complaint raised, date complaint closed, staff id.",
    "target": "SELECT count(*) FROM customers"
  },
  {
    "prompt": "Which organizations are not a parent organization of others? List the organization id. database is local_govt_and_lot. tables are customers, properties, residents, organizations, services, residents services, things, customer events, customer event notes, timed status of things, timed locations of things. columns in customers are customer id, customer details. columns in properties are property id, property type code, property address, other details. columns in residents are resident id, property id, date moved in, date moved out, other details. columns in organizations are organization id, parent organization id, organization details. columns in services are service id, organization id, service type code, service details. columns in residents services are resident id, service id, date moved in, property id, date requested, date provided, other details. columns in things are thing id, organization id, type of thing code, service type code, service details. columns in customer events are customer event id, customer id, date moved in, property id, resident id, thing id. columns in customer event notes are customer event note id, customer event id, service type code, resident id, property id, date moved in. columns in timed status of things are thing id, date and date, status of thing code. columns in timed locations of things are thing id, date and time, location code.",
    "target": "SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations"
  },
  {
    "prompt": "What is the average number of customers across banks in the state of Utah? database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'"
  },
  {
    "prompt": "List all vehicle id database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT vehicle_id FROM Vehicles;"
  },
  {
    "prompt": "What are the store names of drama workshop groups? database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT Store_Name FROM Drama_Workshop_Groups"
  },
  {
    "prompt": "How many statements do we have? database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT count(*) FROM Statements"
  },
  {
    "prompt": "what mountains are in alaska database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT mountain_name FROM mountain WHERE state_name  =  \"alaska\";"
  },
  {
    "prompt": "Find the name of different colleges involved in the tryout in alphabetical order. database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT DISTINCT cName FROM tryout ORDER BY cName"
  },
  {
    "prompt": "Return the description of the document type name Film. database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\""
  },
  {
    "prompt": "Show all distinct cities in the address record. database is customers_and_products_contacts. tables are addresses, products, customers, contacts, customer address history, customer orders, order items. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in products are product id, product type code, product name, product price. columns in customers are customer id, payment method code, customer number, customer name, customer address, customer phone, customer email. columns in contacts are contact id, customer id, gender, first name, last name, contact phone. columns in customer address history are customer id, address id, date from, date to. columns in customer orders are order id, customer id, order date, order status code. columns in order items are order item id, order id, product id, order quantity.",
    "target": "SELECT DISTINCT city FROM addresses"
  },
  {
    "prompt": "what is the highest elevation in the united states database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT MAX ( highest_elevation ) FROM highlow;"
  },
  {
    "prompt": "What is the last date of the staff leaving the projects? database is tracking_grants_for_research. tables are document types, documents, grants, organisation types, organisations, project outcomes, project staff, projects, research outcomes, research staff, staff roles, tasks. columns in document types are document type code, document description. columns in documents are document id, document type code, grant id, sent date, response received date, other details. columns in grants are grant id, organisation id, grant amount, grant start date, grant end date, other details. columns in organisation types are organisation type, organisation type description. columns in organisations are organisation id, organisation type, organisation details. columns in project outcomes are project id, outcome code, outcome details. columns in project staff are staff id, project id, role code, date from, date to, other details. columns in projects are project id, organisation id, project details. columns in research outcomes are outcome code, outcome description. columns in research staff are staff id, employer organisation id, staff details. columns in staff roles are role code, role description. columns in tasks are task id, project id, task details, eg agree objectives.",
    "target": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1"
  },
  {
    "prompt": "Which district has the largest population? database is store_product. tables are product, store, district, store product, store district. columns in product are product id, product, dimensions, dpi, pages per minute color, max page size, interface. columns in store are store id, store name, type, area size, number of product category, ranking. columns in district are district id, district name, headquartered city, city population, city area. columns in store product are store id, product id. columns in store district are store id, district id.",
    "target": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1"
  },
  {
    "prompt": "How many dorms are there? database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT count(*) FROM dorm"
  },
  {
    "prompt": "Count the number of different last names actors have. database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT count(DISTINCT last_name) FROM actor"
  },
  {
    "prompt": "Return the names of musicals who have the nominee Bob Fosse. database is musical. tables are musical, actor. columns in musical are musical id, name, year, award, category, nominee, result. columns in actor are actor id, name, musical id, character, duration, age.",
    "target": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\""
  },
  {
    "prompt": "How many employees are there? database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT count(*) FROM Staff;"
  },
  {
    "prompt": "How many campuses exist are in the county of LA? database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\""
  },
  {
    "prompt": "What is the id of the problem log that is created most recently? database is tracking_software_problems. tables are problem category codes, problem log, problem status codes, product, staff, problems. columns in problem category codes are problem category code, problem category description. columns in problem log are problem log id, assigned to staff id, problem id, problem category code, problem status code, log entry date, log entry description, log entry fix, other log details. columns in problem status codes are problem status code, problem status description. columns in product are product id, product name, product details. columns in staff are staff id, staff first name, staff last name, other staff details. columns in problems are problem id, product id, closure authorised by staff id, reported by staff id, date problem reported, date problem closed, problem description, other problem details.",
    "target": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1"
  },
  {
    "prompt": "Sort the first names of all the authors in alphabetical order. database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT fname FROM authors ORDER BY fname"
  },
  {
    "prompt": "What are the different names of the genres? database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT DISTINCT name FROM genres;"
  },
  {
    "prompt": "Give me a list of all the service names sorted alphabetically. database is insurance_fnol. tables are customers, services, available policies, customers policies, first notification of loss, claims, settlements. columns in customers are customer id, customer name. columns in services are service id, service name. columns in available policies are policy id, policy type code, customer phone. columns in customers policies are customer id, policy id, date opened, date closed. columns in first notification of loss are fnol id, customer id, policy id, service id. columns in claims are claim id, fnol id, effective date. columns in settlements are settlement id, claim id, effective date, settlement amount.",
    "target": "SELECT service_name FROM services ORDER BY service_name"
  },
  {
    "prompt": "how many capitals does rhode island have database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( capital ) FROM state WHERE state_name  =  \"rhode island\";"
  },
  {
    "prompt": "What is the total number of hours for all projects? database is scientist_1. tables are scientists, projects, assigned to. columns in scientists are ssn, name. columns in projects are code, name, hours. columns in assigned to are scientist, project.",
    "target": "SELECT sum(hours) FROM projects"
  },
  {
    "prompt": "Return the themes of farm competitions, sorted by year ascending. database is farm. tables are city, farm, farm competition, competition record. columns in city are city id, official name, status, area km 2, population, census ranking. columns in farm are farm id, year, total horses, working horses, total cattle, oxen, bulls, cows, pigs, sheep and goats. columns in farm competition are competition id, year, theme, host city id, hosts. columns in competition record are competition id, farm id, rank.",
    "target": "SELECT Theme FROM farm_competition ORDER BY YEAR ASC"
  },
  {
    "prompt": "How many students received a yes from tryouts? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT count(*) FROM tryout WHERE decision  =  'yes'"
  },
  {
    "prompt": "What are the different ranges of the 3 mountains with the highest prominence? database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3"
  },
  {
    "prompt": "What is the average price across all products? database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT avg(price) FROM products"
  },
  {
    "prompt": "What is the total share (in percent) of all the channels owned by CCTV? database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV'"
  },
  {
    "prompt": "What is the total number of students? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT count(*) FROM Student"
  },
  {
    "prompt": "What is the total amount of all payments? database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT sum(amount) FROM payment"
  },
  {
    "prompt": "List the status shared by more than two roller coaster. database is roller_coaster. tables are roller coaster, country. columns in roller coaster are roller coaster id, name, park, country id, length, height, speed, opened, status. columns in country are country id, name, population, area, languages.",
    "target": "SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT(*)  >  2"
  },
  {
    "prompt": "How many council taxes are collected for renting arrears ? database is local_govt_mdm. tables are customer master index, cmi cross references, council tax, business rates, benefits overpayments, parking fines, rent arrears, electoral register. columns in customer master index are master customer id, cmi details. columns in cmi cross references are cmi cross reference id, master customer id, source system code. columns in council tax are council tax id, cmi cross reference id. columns in business rates are business rates id, cmi cross reference id. columns in benefits overpayments are council tax id, cmi cross ref id. columns in parking fines are council tax id, cmi cross reference id. columns in rent arrears are council tax id, cmi cross reference id. columns in electoral register are electoral register id, cmi cross reference id.",
    "target": "SELECT count(*) FROM rent_arrears"
  },
  {
    "prompt": "What document status codes do we have? database is cre_Doc_Control_Systems. tables are reference document types, roles, addresses, reference document status, reference shipping agents, documents, employees, document drafts, draft copies, circulation history, documents mailed. columns in reference document types are document type code, document type description. columns in roles are role code, role description. columns in addresses are address id, address details. columns in reference document status are document status code, document status description. columns in reference shipping agents are shipping agent code, shipping agent name, shipping agent description. columns in documents are document id, document status code, document type code, shipping agent code, receipt date, receipt number, other details. columns in employees are employee id, role code, employee name, other details. columns in document drafts are document id, draft number, draft details. columns in draft copies are document id, draft number, copy number. columns in circulation history are document id, draft number, copy number, employee id. columns in documents mailed are document id, mailed to address id, mailing date.",
    "target": "SELECT document_status_code FROM Ref_Document_Status;"
  },
  {
    "prompt": "What are the names of all departments in alphabetical order? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT dept_name FROM department ORDER BY dept_name"
  },
  {
    "prompt": "Find the buildings which have rooms with capacity more than 50. database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50"
  },
  {
    "prompt": "How many members have the black membership card? database is coffee_shop. tables are shop, member, happy hour, happy hour member. columns in shop are shop id, address, num of staff, score, open year. columns in member are member id, name, membership card, age, time of purchase, level of membership, address. columns in happy hour are hh id, shop id, month, num of shaff in charge. columns in happy hour member are hh id, member id, total amount.",
    "target": "SELECT count(*) FROM member WHERE Membership_card  =  'Black'"
  },
  {
    "prompt": "What is the product with the highest height? Give me the catalog entry name. database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1"
  },
  {
    "prompt": "List the type of the services in alphabetical order. database is local_govt_in_alabama. tables are services, participants, events, participants in events. columns in services are service id, service type code. columns in participants are participant id, participant type code, participant details. columns in events are event id, service id, event details. columns in participants in events are event id, participant id.",
    "target": "SELECT service_type_code FROM services ORDER BY service_type_code"
  },
  {
    "prompt": "How many stores are there? database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT count(*) FROM store"
  },
  {
    "prompt": "Sort all the distinct product names in alphabetical order. database is tracking_software_problems. tables are problem category codes, problem log, problem status codes, product, staff, problems. columns in problem category codes are problem category code, problem category description. columns in problem log are problem log id, assigned to staff id, problem id, problem category code, problem status code, log entry date, log entry description, log entry fix, other log details. columns in problem status codes are problem status code, problem status description. columns in product are product id, product name, product details. columns in staff are staff id, staff first name, staff last name, other staff details. columns in problems are problem id, product id, closure authorised by staff id, reported by staff id, date problem reported, date problem closed, problem description, other problem details.",
    "target": "SELECT DISTINCT product_name FROM product ORDER BY product_name"
  },
  {
    "prompt": "What is the list of distinct product names sorted by product id? database is tracking_software_problems. tables are problem category codes, problem log, problem status codes, product, staff, problems. columns in problem category codes are problem category code, problem category description. columns in problem log are problem log id, assigned to staff id, problem id, problem category code, problem status code, log entry date, log entry description, log entry fix, other log details. columns in problem status codes are problem status code, problem status description. columns in product are product id, product name, product details. columns in staff are staff id, staff first name, staff last name, other staff details. columns in problems are problem id, product id, closure authorised by staff id, reported by staff id, date problem reported, date problem closed, problem description, other problem details.",
    "target": "SELECT DISTINCT product_name FROM product ORDER BY product_id"
  },
  {
    "prompt": "What is the attribute data type of the attribute with name \"Green\"? database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\""
  },
  {
    "prompt": "What is the maximum OMIM value in the database? database is medicine_enzyme_interaction. tables are medicine, enzyme, medicine enzyme interaction. columns in medicine are id, name, trade name, fda approved. columns in enzyme are id, name, location, product, chromosome, omim, porphyria. columns in medicine enzyme interaction are enzyme id, medicine id, interaction type.",
    "target": "SELECT max(OMIM) FROM enzyme"
  },
  {
    "prompt": "List the order dates of all the bookings. database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT Order_Date FROM BOOKINGS"
  },
  {
    "prompt": "How many document types are there? database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT count(*) FROM Ref_document_types"
  },
  {
    "prompt": "List every albums title. database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT title FROM albums;"
  },
  {
    "prompt": "What are the different names of the product characteristics? database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS"
  },
  {
    "prompt": "what state is salem the capital of database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM state WHERE capital  =  \"salem\";"
  },
  {
    "prompt": "Find the average order quantity per order. database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT avg(order_quantity) FROM order_items"
  },
  {
    "prompt": "List all information about courses sorted by credits in the ascending order. database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT * FROM COURSE ORDER BY Credits"
  },
  {
    "prompt": "What is the number of students playing as a goalie? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT count(*) FROM tryout WHERE pPos  =  'goalie'"
  },
  {
    "prompt": "How many staff have the first name Ludie? database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";"
  },
  {
    "prompt": "List all the distinct product names ordered by product id? database is tracking_software_problems. tables are problem category codes, problem log, problem status codes, product, staff, problems. columns in problem category codes are problem category code, problem category description. columns in problem log are problem log id, assigned to staff id, problem id, problem category code, problem status code, log entry date, log entry description, log entry fix, other log details. columns in problem status codes are problem status code, problem status description. columns in product are product id, product name, product details. columns in staff are staff id, staff first name, staff last name, other staff details. columns in problems are problem id, product id, closure authorised by staff id, reported by staff id, date problem reported, date problem closed, problem description, other problem details.",
    "target": "SELECT DISTINCT product_name FROM product ORDER BY product_id"
  },
  {
    "prompt": "What are the names of different music genres? database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT Name FROM GENRE"
  },
  {
    "prompt": "How many customers have email that contains \"gmail.com\"? database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\""
  },
  {
    "prompt": "what are the capital city in texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT capital FROM state WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "How many camera lenses have a focal length longer than 15 mm? database is mountain_photos. tables are mountain, camera lens, photos. columns in mountain are id, name, height, prominence, range, country. columns in camera lens are id, brand, name, focal length mm, max aperture. columns in photos are id, camera lens id, mountain id, color, name.",
    "target": "SELECT count(*) FROM camera_lens WHERE focal_length_mm  >  15"
  },
  {
    "prompt": "Which catalog publishers have substring \"Murray\" in their names? database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\""
  },
  {
    "prompt": "return me all the keywords . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT keyword FROM keyword;"
  },
  {
    "prompt": "What are the ids of all the employees who have destroyed documents? database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "prompt": "What are the descriptions for each color? database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT color_description FROM ref_colors"
  },
  {
    "prompt": "Which party has two or more records? database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2"
  },
  {
    "prompt": "what states neighbor kentucky database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "What are the names of products with category \"Spices\"? database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\""
  },
  {
    "prompt": "List the names of all distinct nurses ordered by alphabetical order? database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT DISTINCT name FROM nurse ORDER BY name"
  },
  {
    "prompt": "give me the lakes in california database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT lake_name FROM lake WHERE state_name  =  \"california\";"
  },
  {
    "prompt": "Find the patient who has the most recent undergoing treatment? database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1"
  },
  {
    "prompt": "how many states does usa have database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( state_name ) FROM state;"
  },
  {
    "prompt": "find all dependent names who have a spouse relation with some employee. database is company_1. tables are works on, employee, department, project, dependent, department locations. columns in works on are employee ssn, project number, hours. columns in employee are first name, minit, last name, ssn, birth date, address, sex, salary, super ssn, department no. columns in department are department name, department number, manager ssn, manager start date. columns in project are dependent name, dependent number, dependent location, department number. columns in dependent are employee ssn, dependent name, sex, birth date, relationship. columns in department locations are department number, department location.",
    "target": "SELECT Dependent_name FROM dependent WHERE relationship  =  'Spouse'"
  },
  {
    "prompt": "What are the different district names in order of descending city area? database is store_product. tables are product, store, district, store product, store district. columns in product are product id, product, dimensions, dpi, pages per minute color, max page size, interface. columns in store are store id, store name, type, area size, number of product category, ranking. columns in district are district id, district name, headquartered city, city population, city area. columns in store product are store id, product id. columns in store district are store id, district id.",
    "target": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC"
  },
  {
    "prompt": "How many courses are there in total? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT count(*) FROM COURSE"
  },
  {
    "prompt": "How many employees live in Canada? database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT count(*) FROM employees WHERE country = \"Canada\";"
  },
  {
    "prompt": "What is the average attendance of stadiums with capacity percentage higher than 100%? database is game_injury. tables are stadium, game, injury accident. columns in stadium are id, name, home games, average attendance, total attendance, capacity percentage. columns in game are stadium id, id, season, date, home team, away team, score, competition. columns in injury accident are game id, id, player, injury, number of matches, source.",
    "target": "SELECT average_attendance FROM stadium WHERE capacity_percentage  >  100"
  },
  {
    "prompt": "Which clubs are located at \"AKW\"? Return the club names. database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT clubname FROM club WHERE clublocation  =  \"AKW\""
  },
  {
    "prompt": "List the race class with at least two races. database is race_track. tables are race, track. columns in race are race id, name, class, date, track id. columns in track are track id, name, location, seating, year opened.",
    "target": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2"
  },
  {
    "prompt": "return me all the organizations in \" North America \" . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT name FROM organization WHERE continent  =  \"North America\";"
  },
  {
    "prompt": "How many reviewers listed? database is movie_1. tables are movie, reviewer, rating. columns in movie are movie id, title, year, director. columns in reviewer are reviewer id, name. columns in rating are reviewer id, movie id, rating stars, rating date.",
    "target": "SELECT count(*) FROM Reviewer"
  },
  {
    "prompt": "Show the number of customer cards. database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT count(*) FROM Customers_cards"
  },
  {
    "prompt": "Which program was launched most recently? Return the program name. database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT name FROM program ORDER BY launch DESC LIMIT 1"
  },
  {
    "prompt": "How many different cities do have some airport in the country of Greenland? database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'"
  },
  {
    "prompt": "Show all investor details. database is tracking_share_transactions. tables are investors, lots, reference transaction types, transactions, sales, purchases, transactions lots. columns in investors are investor id, investor details. columns in lots are lot id, investor id, lot details. columns in reference transaction types are transaction type code, transaction type description. columns in transactions are transaction id, investor id, transaction type code, date of transaction, amount of transaction, share count, other details. columns in sales are sales transaction id, sales details. columns in purchases are purchase transaction id, purchase details. columns in transactions lots are transaction id, lot id.",
    "target": "SELECT Investor_details FROM INVESTORS"
  },
  {
    "prompt": "List all countries of markets in descending order of number of cities. database is film_rank. tables are film, market, film market estimation. columns in film are film id, title, studio, director, gross in dollar. columns in market are market id, country, number cities. columns in film market estimation are estimation id, low estimate, high estimate, film id, type, market id, year.",
    "target": "SELECT Country FROM market ORDER BY Number_cities DESC"
  },
  {
    "prompt": "What are the average profits of companies? database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT avg(Profits_billion) FROM Companies"
  },
  {
    "prompt": "Tell me the price ranges for all the hotels. database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT price_range FROM HOTELS"
  },
  {
    "prompt": "How many different types of sports do we offer? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT count(DISTINCT sportname) FROM Sportsinfo"
  },
  {
    "prompt": "What are the distinct billing countries of the invoices? database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT distinct(BillingCountry) FROM INVOICE"
  },
  {
    "prompt": "How many video games exist? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT count(*) FROM Video_games"
  },
  {
    "prompt": "What are the id of songs whose format is mp3. database is music_1. tables are genre, artist, files, song. columns in genre are genre name, rating, most popular in. columns in artist are artist name, country, gender, preferred genre. columns in files are song id, artist name, file size, duration, formats. columns in song are song name, artist name, country, song id, genre is, rating, languages, releasedate, resolution.",
    "target": "SELECT f_id FROM files WHERE formats  =  \"mp3\""
  },
  {
    "prompt": "Show all role codes with at least 3 employees. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3"
  },
  {
    "prompt": "Count the number of schools. database is school_finance. tables are school, budget, endowment. columns in school are school id, school name, location, mascot, enrollment, ihsaa class, ihsaa football class, county. columns in budget are school id, year, budgeted, total budget percent budgeted, invested, total budget percent invested, budget invested percent. columns in endowment are endowment id, school id, donator name, amount.",
    "target": "SELECT count(*) FROM school"
  },
  {
    "prompt": "Give me a list of all the last names of authors sorted in alphabetical order database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT lname FROM authors ORDER BY lname"
  },
  {
    "prompt": "What is all the information about the basketball match? database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT * FROM basketball_match"
  },
  {
    "prompt": "What is the description of document status code working? database is cre_Doc_Control_Systems. tables are reference document types, roles, addresses, reference document status, reference shipping agents, documents, employees, document drafts, draft copies, circulation history, documents mailed. columns in reference document types are document type code, document type description. columns in roles are role code, role description. columns in addresses are address id, address details. columns in reference document status are document status code, document status description. columns in reference shipping agents are shipping agent code, shipping agent name, shipping agent description. columns in documents are document id, document status code, document type code, shipping agent code, receipt date, receipt number, other details. columns in employees are employee id, role code, employee name, other details. columns in document drafts are document id, draft number, draft details. columns in draft copies are document id, draft number, copy number. columns in circulation history are document id, draft number, copy number, employee id. columns in documents mailed are document id, mailed to address id, mailing date.",
    "target": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = \"working\";"
  },
  {
    "prompt": "List the first names of people in alphabetical order? database is student_assessment. tables are addresses, people, students, courses, people addresses, student course registrations, student course attendance, candidates, candidate assessments. columns in addresses are address id, line 1, line 2, city, zip postcode, state province county, country. columns in people are person id, first name, middle name, last name, cell mobile number, email address, login name, password. columns in students are student id, student details. columns in courses are course id, course name, course description, other details. columns in people addresses are person address id, person id, address id, date from, date to. columns in student course registrations are student id, course id, registration date. columns in student course attendance are student id, course id, date of attendance. columns in candidates are candidate id, candidate details. columns in candidate assessments are candidate id, qualification, assessment date, asessment outcome code.",
    "target": "SELECT first_name FROM people ORDER BY first_name"
  },
  {
    "prompt": "What are the ids of the candidates that have an outcome code of Pass? database is student_assessment. tables are addresses, people, students, courses, people addresses, student course registrations, student course attendance, candidates, candidate assessments. columns in addresses are address id, line 1, line 2, city, zip postcode, state province county, country. columns in people are person id, first name, middle name, last name, cell mobile number, email address, login name, password. columns in students are student id, student details. columns in courses are course id, course name, course description, other details. columns in people addresses are person address id, person id, address id, date from, date to. columns in student course registrations are student id, course id, registration date. columns in student course attendance are student id, course id, date of attendance. columns in candidates are candidate id, candidate details. columns in candidate assessments are candidate id, qualification, assessment date, asessment outcome code.",
    "target": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"Pass\""
  },
  {
    "prompt": "Which job titles correspond to jobs with salaries over 9000? database is hr_1. tables are regions, countries, departments, jobs, employees, job history, locations. columns in regions are region id, region name. columns in countries are country id, country name, region id. columns in departments are department id, department name, manager id, location id. columns in jobs are job id, job title, min salary, max salary. columns in employees are employee id, first name, last name, email, phone number, hire date, job id, salary, commission pct, manager id, department id. columns in job history are employee id, start date, end date, job id, department id. columns in locations are location id, street address, postal code, city, state province, country id.",
    "target": "SELECT job_title FROM jobs WHERE min_salary  >  9000"
  },
  {
    "prompt": "Count the total number of bookings made. database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT count(*) FROM BOOKINGS"
  },
  {
    "prompt": "how many cities are there in the united states database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( city_name ) FROM city;"
  },
  {
    "prompt": "Return the names of people, ordered by weight ascending. database is entrepreneur. tables are entrepreneur, people. columns in entrepreneur are entrepreneur id, people id, company, money requested, investor. columns in people are people id, name, height, weight, date of birth.",
    "target": "SELECT Name FROM People ORDER BY Weight ASC"
  },
  {
    "prompt": "What information do you have on colleges sorted by increasing enrollment numbers? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT * FROM College ORDER BY enr"
  },
  {
    "prompt": "What are the different carriers for devices, listed in alphabetical order? database is device. tables are device, shop, stock. columns in device are device id, device, carrier, package version, applications, software platform. columns in shop are shop id, shop name, location, open date, open year. columns in stock are shop id, device id, quantity.",
    "target": "SELECT Carrier FROM device ORDER BY Carrier ASC"
  },
  {
    "prompt": "Count the number of courses. database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT count(*) FROM COURSE"
  },
  {
    "prompt": "Show all card type codes. database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT DISTINCT card_type_code FROM Customers_Cards"
  },
  {
    "prompt": "List all the model names sorted by their launch year. database is phone_1. tables are chip model, screen mode, phone. columns in chip model are model name, launch year, ram mib, rom mib, slots, wifi, bluetooth. columns in screen mode are graphics mode, char cells, pixels, hardware colours, used kb, map, type. columns in phone are company name, hardware model name, accreditation type, accreditation level, date, chip model, screen mode.",
    "target": "SELECT model_name FROM chip_model ORDER BY launch_year"
  },
  {
    "prompt": "Return the top 3 greatest support rates. database is candidate_poll. tables are candidate, people. columns in candidate are candidate id, people id, poll source, date, support rate, consider rate, oppose rate, unsure rate. columns in people are people id, sex, name, date of birth, height, weight.",
    "target": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3"
  },
  {
    "prompt": "Find the average access count across all documents? database is document_management. tables are roles, users, document structures, functional areas, images, documents, document functional areas, document sections, document sections images. columns in roles are role code, role description. columns in users are user id, role code, user name, user login, password. columns in document structures are document structure code, parent document structure code, document structure description. columns in functional areas are functional area code, parent functional area code, functional area description. columns in images are image id, image alt text, image name, image url. columns in documents are document code, document structure code, document type code, access count, document name. columns in document functional areas are document code, functional area code. columns in document sections are section id, document code, section sequence, section code, section title. columns in document sections images are section id, image id.",
    "target": "SELECT avg(access_count) FROM documents"
  },
  {
    "prompt": "return me the abstract of \" Making database systems usable \" . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT abstract FROM publication WHERE title  =  \"Making database systems usable\";"
  },
  {
    "prompt": "List all information about college sorted by enrollment number in the ascending order. database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT * FROM College ORDER BY enr"
  },
  {
    "prompt": "Count the number of classrooms in Lamberton. database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'"
  },
  {
    "prompt": "List all information regarding the basketball match. database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT * FROM basketball_match"
  },
  {
    "prompt": "population of boulder database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM city WHERE city_name  =  \"boulder\";"
  },
  {
    "prompt": "Compute the average price of all products with manufacturer code equal to 2. database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT avg(price) FROM products WHERE Manufacturer  =  2"
  },
  {
    "prompt": "How many parks are there in Atlanta city? database is baseball_1. tables are all star, appearances, manager award, player award, manager award vote, player award vote, batting, batting postseason, player college, fielding, fielding outfield, fielding postseason, hall of fame, home game, manager, manager half, player, park, pitching, pitching postseason, salary, college, postseason, team, team franchise, team half. columns in all star are player id, year, game num, game id, team id, league id, gp, starting pos. columns in appearances are year, team id, league id, player id, g all, gs, g batting, g defense, g p, g c, g 1b, g 2b, g 3b, g ss, g lf, g cf, g rf, g of, g dh, g ph, g pr. columns in manager award are player id, award id, year, league id, tie, notes. columns in player award are player id, award id, year, league id, tie, notes. columns in manager award vote are award id, year, league id, player id, points won, points max, votes first. columns in player award vote are award id, year, league id, player id, points won, points max, votes first. columns in batting are player id, year, stint, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in batting postseason are year, round, player id, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in player college are player id, college id, year. columns in fielding are player id, year, stint, team id, league id, pos, g, gs, inn outs, po, a, e, dp, pb, wp, sb, cs, zr. columns in fielding outfield are player id, year, stint, glf, gcf, grf. columns in fielding postseason are player id, year, team id, league id, round, pos, g, gs, inn outs, po, a, e, dp, tp, pb, sb, cs. columns in hall of fame are player id, yearid, votedby, ballots, needed, votes, inducted, category, needed note. columns in home game are year, league id, team id, park id, span first, span last, games, openings, attendance. columns in manager are player id, year, team id, league id, inseason, g, w, l, rank, plyr mgr. columns in manager half are player id, year, team id, league id, inseason, half, g, w, l, rank. columns in player are player id, birth year, birth month, birth day, birth country, birth state, birth city, death year, death month, death day, death country, death state, death city, name first, name last, name given, weight, height, bats, throws, debut, final game, retro id, bbref id. columns in park are park id, park name, park alias, city, state, country. columns in pitching are player id, year, stint, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in pitching postseason are player id, year, round, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in salary are year, team id, league id, player id, salary. columns in college are college id, name full, city, state, country. columns in postseason are year, round, team id winner, league id winner, team id loser, league id loser, wins, losses, ties. columns in team are year, league id, team id, franchise id, div id, rank, g, ghome, w, l, div win, wc win, lg win, ws win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team id br, team id lahman45, team id retro. columns in team franchise are franchise id, franchise name, active, na assoc. columns in team half are year, league id, team id, half, div id, div win, rank, g, w, l.",
    "target": "SELECT count(*) FROM park WHERE city = 'Atlanta';"
  },
  {
    "prompt": "Show all allergy types. database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT DISTINCT allergytype FROM Allergy_type"
  },
  {
    "prompt": "how many states does kentucky border database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "Show the number of card types. database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT count(DISTINCT card_type_code) FROM Customers_Cards"
  },
  {
    "prompt": "What are the names of all products? database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT Name FROM Products"
  },
  {
    "prompt": "what is the height of mount mckinley database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT mountain_altitude FROM mountain WHERE mountain_name  =  \"mckinley\";"
  },
  {
    "prompt": "What are the names of stations that have latitude lower than 37.5? database is bike_1. tables are station, status, trip, weather. columns in station are id, name, latitude, longitude, dock count, city, installation date. columns in status are station id, bikes available, docks available, time. columns in trip are id, duration, start date, start station name, start station id, end date, end station name, end station id, bike id, subscription type, zip code. columns in weather are date, max temperature f, mean temperature f, min temperature f, max dew point f, mean dew point f, min dew point f, max humidity, mean humidity, min humidity, max sea level pressure inches, mean sea level pressure inches, min sea level pressure inches, max visibility miles, mean visibility miles, min visibility miles, max wind speed mph, mean wind speed mph, max gust speed mph, precipitation inches, cloud cover, events, wind dir degrees, zip code.",
    "target": "SELECT name FROM station WHERE lat  <  37.5"
  },
  {
    "prompt": "What are the the songs in volumes, listed in ascending order? database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Song FROM volume ORDER BY Song"
  },
  {
    "prompt": "How many students are there? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT count(*) FROM Student"
  },
  {
    "prompt": "How many roller coasters are there? database is roller_coaster. tables are roller coaster, country. columns in roller coaster are roller coaster id, name, park, country id, length, height, speed, opened, status. columns in country are country id, name, population, area, languages.",
    "target": "SELECT count(*) FROM roller_coaster"
  },
  {
    "prompt": "Find the number of distinct room types available. database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT count(DISTINCT roomtype) FROM room"
  },
  {
    "prompt": "What is the name of the room that can accommodate the most people? database is inn_1. tables are rooms, reservations. columns in rooms are room id, room name, beds, bed type, max occupancy, base price, decor. columns in reservations are code, room, check in, check out, rate, last name, first name, adults, kids.",
    "target": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;"
  },
  {
    "prompt": "Find the emails of the user named \"Mary\". database is twitter_1. tables are follows, tweets, user profiles. columns in follows are user id, follower id. columns in tweets are id, user id, text, create date. columns in user profiles are uid, name, email, partition id, followers.",
    "target": "SELECT email FROM user_profiles WHERE name  =  'Mary'"
  },
  {
    "prompt": "Which county has the largest population? Give me the name of the county. database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1"
  },
  {
    "prompt": "How many employees have a first name of Ludie? database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";"
  },
  {
    "prompt": "How many submissions are there? database is workshop_paper. tables are workshop, submission, acceptance. columns in workshop are workshop id, date, venue, name. columns in submission are submission id, scores, author, college. columns in acceptance are submission id, workshop id, result.",
    "target": "SELECT count(*) FROM submission"
  },
  {
    "prompt": "What are the crime rates of counties sorted by number of offices ascending? database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC"
  },
  {
    "prompt": "What are the names of studios that have made two or more films? database is film_rank. tables are film, market, film market estimation. columns in film are film id, title, studio, director, gross in dollar. columns in market are market id, country, number cities. columns in film market estimation are estimation id, low estimate, high estimate, film id, type, market id, year.",
    "target": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2"
  },
  {
    "prompt": "Find the number of reviews. database is epinions_1. tables are item, review, useracct, trust. columns in item are item id, title. columns in review are a id, user id, item id, rating, rank. columns in useracct are user id, name. columns in trust are source user id, target user id, trust.",
    "target": "SELECT count(*) FROM review"
  },
  {
    "prompt": "what are the major cities of the us database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT city_name FROM city WHERE population  >  150000;"
  },
  {
    "prompt": "What are the names of banks in the state of New York? database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT bname FROM bank WHERE state  =  'New York'"
  },
  {
    "prompt": "List the name of the county with the largest population. database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1"
  },
  {
    "prompt": "What is the average number of hosts for parties? database is party_host. tables are party, host, party host. columns in party are party id, party theme, location, first year, last year, number of hosts. columns in host are host id, name, nationality, age. columns in party host are party id, host id, is main in charge.",
    "target": "SELECT avg(Number_of_hosts) FROM party"
  },
  {
    "prompt": "How many distinct FDA approval statuses are there for the medicines? database is medicine_enzyme_interaction. tables are medicine, enzyme, medicine enzyme interaction. columns in medicine are id, name, trade name, fda approved. columns in enzyme are id, name, location, product, chromosome, omim, porphyria. columns in medicine enzyme interaction are enzyme id, medicine id, interaction type.",
    "target": "SELECT count(DISTINCT FDA_approved) FROM medicine"
  },
  {
    "prompt": "Find the team of the player of the highest age. database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1"
  },
  {
    "prompt": "List every album whose title starts with A in alphabetical order. database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;"
  },
  {
    "prompt": "What is the incident type description for the incident type with code \"VIOLENCE\"? database is behavior_monitoring. tables are reference address types, reference detention type, reference incident type, addresses, students, teachers, assessment notes, behavior incident, detention, student addresses, students in detention. columns in reference address types are address type code, address type description. columns in reference detention type are detention type code, detention type description. columns in reference incident type are incident type code, incident type description. columns in addresses are address id, line 1, line 2, line 3, city, zip postcode, state province county, country, other address details. columns in students are student id, address id, first name, middle name, last name, cell mobile number, email address, date first rental, date left university, other student details. columns in teachers are teacher id, address id, first name, middle name, last name, gender, cell mobile number, email address, other details. columns in assessment notes are notes id, student id, teacher id, date of notes, text of notes, other details. columns in behavior incident are incident id, incident type code, student id, date incident start, date incident end, incident summary, recommendations, other details. columns in detention are detention id, detention type code, teacher id, datetime detention start, datetime detention end, detention summary, other details. columns in student addresses are student id, address id, date address from, date address to, monthly rental, other details. columns in students in detention are student id, detention id, incident id.",
    "target": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code  =  \"VIOLENCE\""
  },
  {
    "prompt": "How many students are there? database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT count(*) FROM student"
  },
  {
    "prompt": "How many females are in the network? database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT count(*) FROM Person WHERE gender  =  'female'"
  },
  {
    "prompt": "Find the names of all the catalog entries. database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT distinct(catalog_entry_name) FROM catalog_contents"
  },
  {
    "prompt": "How many professors teach a class with the code ACCT-211? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\""
  },
  {
    "prompt": "Count the number of transactions. database is customers_and_invoices. tables are customers, orders, invoices, accounts, product categories, products, financial transactions, order items, invoice line items. columns in customers are customer id, customer first name, customer middle initial, customer last name, gender, email address, login name, login password, phone number, town city, state county province, country. columns in orders are order id, customer id, date order placed, order details. columns in invoices are invoice number, order id, invoice date. columns in accounts are account id, customer id, date account opened, account name, other account details. columns in product categories are production type code, product type description, vat rating. columns in products are product id, parent product id, production type code, unit price, product name, product color, product size. columns in financial transactions are transaction id, account id, invoice number, transaction type, transaction date, transaction amount, transaction comment, other transaction details. columns in order items are order item id, order id, product id, product quantity, other order item details. columns in invoice line items are order item id, invoice number, product id, product title, product quantity, product price, derived product cost, derived vat payable, derived total cost.",
    "target": "SELECT count(*) FROM Financial_transactions"
  },
  {
    "prompt": "How many faculty, in total, are there in the year 2002? database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002"
  },
  {
    "prompt": "What are all the phone numbers? database is insurance_fnol. tables are customers, services, available policies, customers policies, first notification of loss, claims, settlements. columns in customers are customer id, customer name. columns in services are service id, service name. columns in available policies are policy id, policy type code, customer phone. columns in customers policies are customer id, policy id, date opened, date closed. columns in first notification of loss are fnol id, customer id, policy id, service id. columns in claims are claim id, fnol id, effective date. columns in settlements are settlement id, claim id, effective date, settlement amount.",
    "target": "SELECT customer_phone FROM available_policies"
  },
  {
    "prompt": "how many states are there in united states database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( state_name ) FROM state;"
  },
  {
    "prompt": "What are the three largest cities in terms of regional population? database is city_record. tables are city, match, temperature, hosting city. columns in city are city id, city, hanzi, hanyu pinyin, regional population, gdp. columns in match are match id, date, venue, score, result, competition. columns in temperature are city id, jan, feb, mar, apr, jun, jul, aug, sep, oct, nov, dec. columns in hosting city are year, match id, host city.",
    "target": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3"
  },
  {
    "prompt": "Show all distinct location names. database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT DISTINCT Location_Name FROM LOCATIONS"
  },
  {
    "prompt": "List the names of the city with the top 5 white percentages. database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT Name FROM city ORDER BY White DESC LIMIT 5"
  },
  {
    "prompt": "Show the locations that have more than one railways. database is railway. tables are railway, train, manager, railway manage. columns in railway are railway id, railway, builder, built, wheels, location, objectnumber. columns in train are train id, train num, name, from, arrival, railway id. columns in manager are manager id, name, country, working year starts, age, level. columns in railway manage are railway id, manager id, from year.",
    "target": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*)  >  1"
  },
  {
    "prompt": "What are the clean and jerk score of the body builder with the highest total score? database is body_builder. tables are body builder, people. columns in body builder are body builder id, people id, snatch, clean jerk, total. columns in people are people id, name, height, weight, birth date, birth place.",
    "target": "SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1"
  },
  {
    "prompt": "Find the id of the appointment with the most recent start date? database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1"
  },
  {
    "prompt": "List the distinct region of clubs in ascending alphabetical order. database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT DISTINCT Region FROM club ORDER BY Region ASC"
  },
  {
    "prompt": "Find the last names of faculties in building Barton in alphabetic order. database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname"
  },
  {
    "prompt": "Which cities have regional population above 10000000? database is city_record. tables are city, match, temperature, hosting city. columns in city are city id, city, hanzi, hanyu pinyin, regional population, gdp. columns in match are match id, date, venue, score, result, competition. columns in temperature are city id, jan, feb, mar, apr, jun, jul, aug, sep, oct, nov, dec. columns in hosting city are year, match id, host city.",
    "target": "SELECT city FROM city WHERE regional_population  >  10000000"
  },
  {
    "prompt": "Count the number of products in the category Seeds. database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\""
  },
  {
    "prompt": "Find the number of distinct courses that have enrolled students. database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT count(course_id) FROM Student_Course_Enrolment"
  },
  {
    "prompt": "List venues of all matches in the order of their dates starting from the most recent one. database is city_record. tables are city, match, temperature, hosting city. columns in city are city id, city, hanzi, hanyu pinyin, regional population, gdp. columns in match are match id, date, venue, score, result, competition. columns in temperature are city id, jan, feb, mar, apr, jun, jul, aug, sep, oct, nov, dec. columns in hosting city are year, match id, host city.",
    "target": "SELECT venue FROM MATCH ORDER BY date DESC"
  },
  {
    "prompt": "What are the first names of students, ordered by age from greatest to least? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT Fname FROM STUDENT ORDER BY Age DESC"
  },
  {
    "prompt": "Count the number of markets that have a number of cities lower than 300. database is film_rank. tables are film, market, film market estimation. columns in film are film id, title, studio, director, gross in dollar. columns in market are market id, country, number cities. columns in film market estimation are estimation id, low estimate, high estimate, film id, type, market id, year.",
    "target": "SELECT count(*) FROM market WHERE Number_cities  <  300"
  },
  {
    "prompt": "Count the number of ships. database is ship_1. tables are captain, ship. columns in captain are captain id, name, ship id, age, class, rank. columns in ship are ship id, name, type, built year, class, flag.",
    "target": "SELECT count(*) FROM ship"
  },
  {
    "prompt": "how high is the highest point of delaware database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";"
  },
  {
    "prompt": "List the campuses in Los Angeles county. database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""
  },
  {
    "prompt": "Find the id of the candidate who got the lowest oppose rate. database is candidate_poll. tables are candidate, people. columns in candidate are candidate id, people id, poll source, date, support rate, consider rate, oppose rate, unsure rate. columns in people are people id, sex, name, date of birth, height, weight.",
    "target": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1"
  },
  {
    "prompt": "Find the names of all artists that have \"a\" in their names. database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT Name FROM ARTIST WHERE Name LIKE \"%a%\""
  },
  {
    "prompt": "How many rooms have a king bed? database is inn_1. tables are rooms, reservations. columns in rooms are room id, room name, beds, bed type, max occupancy, base price, decor. columns in reservations are code, room, check in, check out, rate, last name, first name, adults, kids.",
    "target": "SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";"
  },
  {
    "prompt": "What are the names of wines with scores higher than 90? database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT Name FROM WINE WHERE score  >  90"
  },
  {
    "prompt": "How many debit cards do we have? database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT count(*) FROM Customers_cards WHERE card_type_code  =  \"Debit\""
  },
  {
    "prompt": "What are the names of enzymes whose product is not Heme? database is medicine_enzyme_interaction. tables are medicine, enzyme, medicine enzyme interaction. columns in medicine are id, name, trade name, fda approved. columns in enzyme are id, name, location, product, chromosome, omim, porphyria. columns in medicine enzyme interaction are enzyme id, medicine id, interaction type.",
    "target": "SELECT name FROM enzyme WHERE product != 'Heme'"
  },
  {
    "prompt": "Return the different nominees of musicals that have an award that is not the Tony Award. database is musical. tables are musical, actor. columns in musical are musical id, name, year, award, category, nominee, result. columns in actor are actor id, name, musical id, character, duration, age.",
    "target": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\""
  },
  {
    "prompt": "What is the total enrollment number of all colleges? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT sum(enr) FROM College"
  },
  {
    "prompt": "return me the number of the organizations . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT COUNT ( DISTINCT name ) FROM organization;"
  },
  {
    "prompt": "What is the description of the role named \"Proof Reader\"? database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\""
  },
  {
    "prompt": "How many aircrafts exist in the database? database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT count(*) FROM Aircraft"
  },
  {
    "prompt": "List all club names in ascending order of start year. database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT name FROM club ORDER BY Start_year ASC"
  },
  {
    "prompt": "How many climbers are there? database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT count(*) FROM climber"
  },
  {
    "prompt": "which states border kentucky database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "Find the number of different states which banks are located at. database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT count(DISTINCT state) FROM bank"
  },
  {
    "prompt": "What is the name of the department in the Building Mergenthaler? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"Mergenthaler\""
  },
  {
    "prompt": "Find the number of customers in the banks at New York City. database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City'"
  },
  {
    "prompt": "What is the average number of pages per minute color? database is store_product. tables are product, store, district, store product, store district. columns in product are product id, product, dimensions, dpi, pages per minute color, max page size, interface. columns in store are store id, store name, type, area size, number of product category, ranking. columns in district are district id, district name, headquartered city, city population, city area. columns in store product are store id, product id. columns in store district are store id, district id.",
    "target": "SELECT avg(pages_per_minute_color) FROM product"
  },
  {
    "prompt": "What are the attribute data types with more than 3 attribute definitions? database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3"
  },
  {
    "prompt": "How many students are there in total? database is voter_2. tables are student, voting record. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in voting record are student id, registration date, election cycle, president vote, vice president vote, secretary vote, treasurer vote, class president vote, class senator vote.",
    "target": "SELECT count(*) FROM STUDENT"
  },
  {
    "prompt": "how many rivers are found in idaho database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"
  },
  {
    "prompt": "List official names of cities in descending order of population. database is farm. tables are city, farm, farm competition, competition record. columns in city are city id, official name, status, area km 2, population, census ranking. columns in farm are farm id, year, total horses, working horses, total cattle, oxen, bulls, cows, pigs, sheep and goats. columns in farm competition are competition id, year, theme, host city id, hosts. columns in competition record are competition id, farm id, rank.",
    "target": "SELECT Official_Name FROM city ORDER BY Population DESC"
  },
  {
    "prompt": "How many employees live in Georgia? database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT count(*) FROM Addresses WHERE state_province_county = \"Georgia\";"
  },
  {
    "prompt": "What are the case burdens of counties, ordered descending by population? database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC"
  },
  {
    "prompt": "How many flights have a velocity larger than 200? database is flight_company. tables are airport, operate company, flight. columns in airport are id, city, country, iata, icao, name. columns in operate company are id, name, type, principal activities, incorporated in, group equity shareholding. columns in flight are id, vehicle flight number, date, pilot, velocity, altitude, airport id, company id.",
    "target": "SELECT count(*) FROM flight WHERE velocity  >  200"
  },
  {
    "prompt": "what is the elevation of death valley database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT lowest_elevation FROM highlow WHERE lowest_point  =  \"death valley\";"
  },
  {
    "prompt": "How many ships are there? database is ship_mission. tables are mission, ship. columns in mission are mission id, ship id, code, launched year, location, speed knots, fate. columns in ship are ship id, name, type, nationality, tonnage.",
    "target": "SELECT count(*) FROM ship"
  },
  {
    "prompt": "What is the id of the student who most recently registered course 301? database is student_assessment. tables are addresses, people, students, courses, people addresses, student course registrations, student course attendance, candidates, candidate assessments. columns in addresses are address id, line 1, line 2, city, zip postcode, state province county, country. columns in people are person id, first name, middle name, last name, cell mobile number, email address, login name, password. columns in students are student id, student details. columns in courses are course id, course name, course description, other details. columns in people addresses are person address id, person id, address id, date from, date to. columns in student course registrations are student id, course id, registration date. columns in student course attendance are student id, course id, date of attendance. columns in candidates are candidate id, candidate details. columns in candidate assessments are candidate id, qualification, assessment date, asessment outcome code.",
    "target": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1"
  },
  {
    "prompt": "Return the famous titles of the artist called \"Triumfall\". database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\""
  },
  {
    "prompt": "How many vehicles exist? database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT count(*) FROM Vehicles;"
  },
  {
    "prompt": "How many students have personal names that contain the word \"son\"? database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\""
  },
  {
    "prompt": "How many different services are provided by all stations? database is station_weather. tables are train, station, route, weekly weather. columns in train are id, train number, name, origin, destination, time, interval. columns in station are id, network name, services, local authority. columns in route are train id, station id. columns in weekly weather are station id, day of week, high temperature, low temperature, precipitation, wind speed mph.",
    "target": "SELECT count(DISTINCT services) FROM station"
  },
  {
    "prompt": "What is the count of distinct employees with certificates? database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT count(DISTINCT eid) FROM Certificate"
  },
  {
    "prompt": "How many users are logged in? database is document_management. tables are roles, users, document structures, functional areas, images, documents, document functional areas, document sections, document sections images. columns in roles are role code, role description. columns in users are user id, role code, user name, user login, password. columns in document structures are document structure code, parent document structure code, document structure description. columns in functional areas are functional area code, parent functional area code, functional area description. columns in images are image id, image alt text, image name, image url. columns in documents are document code, document structure code, document type code, access count, document name. columns in document functional areas are document code, functional area code. columns in document sections are section id, document code, section sequence, section code, section title. columns in document sections images are section id, image id.",
    "target": "SELECT count(*) FROM users WHERE user_login  =  1"
  },
  {
    "prompt": "Return the types of film market estimations in 1995. database is film_rank. tables are film, market, film market estimation. columns in film are film id, title, studio, director, gross in dollar. columns in market are market id, country, number cities. columns in film market estimation are estimation id, low estimate, high estimate, film id, type, market id, year.",
    "target": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995"
  },
  {
    "prompt": "Return the maximum enrollment across all schools. database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT max(Enrollment) FROM university"
  },
  {
    "prompt": "What are the codes of card types that have 5 or more cards? database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5"
  },
  {
    "prompt": "What are the details of the three most expensive hotels? database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3"
  },
  {
    "prompt": "Count the number of appelations in Napa County. database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\""
  },
  {
    "prompt": "What is the venue of Fracture of acrylic bone cement ? database is scholar. tables are venue, author, dataset, journal, key phrase, paper, cite, paper dataset, paper key phrase, writes. columns in venue are venue id, venue name. columns in author are author id, author name. columns in dataset are dataset id, dataset name. columns in journal are journal id, journal name. columns in key phrase are key phrase id, key phrase name. columns in paper are paper id, title, venue id, year, number citing, number cited by, journal id. columns in cite are citing paper id, cited paper id. columns in paper dataset are paper id, dataset id. columns in paper key phrase are paper id, key phrase id. columns in writes are paper id, author id.",
    "target": "SELECT DISTINCT venueid FROM paper WHERE title  =  \"Fracture of acrylic bone cement\";"
  },
  {
    "prompt": "How many video games have type Massively multiplayer online game? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT count(*) FROM Video_games WHERE gtype  =  \"Massively multiplayer online game\""
  },
  {
    "prompt": "What is the total horses record for each farm, sorted ascending? database is farm. tables are city, farm, farm competition, competition record. columns in city are city id, official name, status, area km 2, population, census ranking. columns in farm are farm id, year, total horses, working horses, total cattle, oxen, bulls, cows, pigs, sheep and goats. columns in farm competition are competition id, year, theme, host city id, hosts. columns in competition record are competition id, farm id, rank.",
    "target": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC"
  },
  {
    "prompt": "Which employees were hired after September 7th, 1987? database is hr_1. tables are regions, countries, departments, jobs, employees, job history, locations. columns in regions are region id, region name. columns in countries are country id, country name, region id. columns in departments are department id, department name, manager id, location id. columns in jobs are job id, job title, min salary, max salary. columns in employees are employee id, first name, last name, email, phone number, hire date, job id, salary, commission pct, manager id, department id. columns in job history are employee id, start date, end date, job id, department id. columns in locations are location id, street address, postal code, city, state province, country id.",
    "target": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'"
  },
  {
    "prompt": "List the school color of the school that has the largest enrollment. database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1"
  },
  {
    "prompt": "Show me the distinct payment method codes from the invoice record. database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT DISTINCT payment_method_code FROM INVOICES"
  },
  {
    "prompt": "what is the area of the largest state database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT MAX ( area ) FROM state;"
  },
  {
    "prompt": "Show the names of all the employees with role \"HR\". database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT employee_name FROM Employees WHERE role_code  =  \"HR\""
  },
  {
    "prompt": "What are the phones of departments in Room 268? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268"
  },
  {
    "prompt": "what are the population of california database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM state WHERE state_name  =  \"california\";"
  },
  {
    "prompt": "When are the birthdays of customer who are classified as Good Customer status? database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'"
  },
  {
    "prompt": "What is the average number of people injured by all perpetrators? database is perpetrator. tables are perpetrator, people. columns in perpetrator are perpetrator id, people id, date, year, location, country, killed, injured. columns in people are people id, name, height, weight, home town.",
    "target": "SELECT avg(Injured) FROM perpetrator"
  },
  {
    "prompt": "What are the official native languages that contain the string \"English\". database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\""
  },
  {
    "prompt": "Return the distinct customer details. database is insurance_policies. tables are customers, customer policies, claims, settlements, payments. columns in customers are customer id, customer details. columns in customer policies are policy id, customer id, policy type code, start date, end date. columns in claims are claim id, policy id, date claim made, date claim settled, amount claimed, amount settled. columns in settlements are settlement id, claim id, date claim made, date claim settled, amount claimed, amount settled, customer policy id. columns in payments are payment id, settlement id, payment method code, date payment made, amount payment.",
    "target": "SELECT DISTINCT customer_details FROM Customers"
  },
  {
    "prompt": "Which country is the airport that has the highest altitude located in? database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1"
  },
  {
    "prompt": "List all program origins in the alphabetical order. database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT origin FROM program ORDER BY origin"
  },
  {
    "prompt": "Find the names of all races held in 2017. database is formula_1. tables are circuits, races, drivers, status, seasons, constructors, constructor standings, results, driver standings, constructor results, qualifying, pit stops, lap times. columns in circuits are circuit id, circuit reference, name, location, country, latitude, longitude, altitude, url. columns in races are race id, year, round, circuit id, name, date, time, url. columns in drivers are driver id, driver reference, number, code, forename, surname, dob, nationality, url. columns in status are status id, status. columns in seasons are year, url. columns in constructors are constructor id, constructor reference, name, nationality, url. columns in constructor standings are constructor standings id, race id, constructor id, points, position, position text, wins. columns in results are result id, race id, driver id, constructor id, number, grid, position, position text, position order, points, laps, time, milliseconds, fastest lap, rank, fastest lap time, fastest lap speed, status id. columns in driver standings are driver standings id, race id, driver id, points, position, position text, wins. columns in constructor results are constructor results id, race id, constructor id, points, status. columns in qualifying are qualify id, race id, driver id, constructor id, number, position, q1, q2, q3. columns in pit stops are race id, driver id, stop, lap, time, duration, milliseconds. columns in lap times are race id, driver id, lap, position, time, milliseconds.",
    "target": "SELECT name FROM races WHERE YEAR = 2017"
  },
  {
    "prompt": "What are the last names of staff with email addressed containing the substring \"wrau\"? database is customer_complaints. tables are staff, customers, products, complaints. columns in staff are staff id, gender, first name, last name, email address, phone number. columns in customers are customer id, customer type code, address line 1, address line 2, town city, state, email address, phone number. columns in products are product id, parent product id, product category code, date product first available, date product discontinued, product name, product description, product price. columns in complaints are complaint id, product id, customer id, complaint outcome code, complaint status code, complaint type code, date complaint raised, date complaint closed, staff id.",
    "target": "SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\""
  },
  {
    "prompt": "Count the number of different statuses. database is farm. tables are city, farm, farm competition, competition record. columns in city are city id, official name, status, area km 2, population, census ranking. columns in farm are farm id, year, total horses, working horses, total cattle, oxen, bulls, cows, pigs, sheep and goats. columns in farm competition are competition id, year, theme, host city id, hosts. columns in competition record are competition id, farm id, rank.",
    "target": "SELECT count(DISTINCT Status) FROM city"
  },
  {
    "prompt": "What are the names of the wrestlers, ordered descending by days held? database is wrestler. tables are wrestler, elimination. columns in wrestler are wrestler id, name, reign, days held, location, event. columns in elimination are elimination id, wrestler id, team, eliminated by, elimination move, time.",
    "target": "SELECT Name FROM wrestler ORDER BY Days_held DESC"
  },
  {
    "prompt": "What is the id of every employee who has at least a salary of  100000? database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT eid FROM Employee WHERE salary  >  100000"
  },
  {
    "prompt": "How many parties do we have? database is party_people. tables are region, party, member, party events. columns in region are region id, region name, date, label, format, catalogue. columns in party are party id, minister, took office, left office, region id, party name. columns in member are member id, member name, party id, in office. columns in party events are event id, event name, party id, member in charge id.",
    "target": "SELECT count(DISTINCT party_name) FROM party"
  },
  {
    "prompt": "Find the dates on which more than one revisions were made. database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1"
  },
  {
    "prompt": "What are the shipping agent names? database is cre_Doc_Control_Systems. tables are reference document types, roles, addresses, reference document status, reference shipping agents, documents, employees, document drafts, draft copies, circulation history, documents mailed. columns in reference document types are document type code, document type description. columns in roles are role code, role description. columns in addresses are address id, address details. columns in reference document status are document status code, document status description. columns in reference shipping agents are shipping agent code, shipping agent name, shipping agent description. columns in documents are document id, document status code, document type code, shipping agent code, receipt date, receipt number, other details. columns in employees are employee id, role code, employee name, other details. columns in document drafts are document id, draft number, draft details. columns in draft copies are document id, draft number, copy number. columns in circulation history are document id, draft number, copy number, employee id. columns in documents mailed are document id, mailed to address id, mailing date.",
    "target": "SELECT shipping_agent_name FROM Ref_Shipping_Agents;"
  },
  {
    "prompt": "Find how many different affiliation types there are. database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT count(DISTINCT affiliation) FROM university"
  },
  {
    "prompt": "How many flights do we have? database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT count(*) FROM Flight"
  },
  {
    "prompt": "How many authors are there? database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT count(*) FROM authors"
  },
  {
    "prompt": "How many employees do we have? database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT count(*) FROM Employees"
  },
  {
    "prompt": "What is the entry name of the most expensive catalog (in USD)? database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1"
  },
  {
    "prompt": "What are the names of wrestlers days held less than 100? database is wrestler. tables are wrestler, elimination. columns in wrestler are wrestler id, name, reign, days held, location, event. columns in elimination are elimination id, wrestler id, team, eliminated by, elimination move, time.",
    "target": "SELECT Name FROM wrestler WHERE Days_held  <  100"
  },
  {
    "prompt": "Return the date of birth for all the guests with gender code \"Male\". database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\""
  },
  {
    "prompt": "What are the names of organizations that contain the word \"Party\"? database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\""
  },
  {
    "prompt": "Find the number of tweets in record. database is twitter_1. tables are follows, tweets, user profiles. columns in follows are user id, follower id. columns in tweets are id, user id, text, create date. columns in user profiles are uid, name, email, partition id, followers.",
    "target": "SELECT count(*) FROM tweets"
  },
  {
    "prompt": "What are the ids of all vehicles? database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT vehicle_id FROM Vehicles;"
  },
  {
    "prompt": "Find the first names of students with age above 22. database is voter_2. tables are student, voting record. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in voting record are student id, registration date, election cycle, president vote, vice president vote, secretary vote, treasurer vote, class president vote, class senator vote.",
    "target": "SELECT Fname FROM STUDENT WHERE Age  >  22"
  },
  {
    "prompt": "Return the amount of the largest payment. database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1"
  },
  {
    "prompt": "Find the total number of catalog contents. database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT count(*) FROM catalog_contents"
  },
  {
    "prompt": "Sort the company names in descending order of the companys market value. database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC"
  },
  {
    "prompt": "How many different scientists are assigned to any project? database is scientist_1. tables are scientists, projects, assigned to. columns in scientists are ssn, name. columns in projects are code, name, hours. columns in assigned to are scientist, project.",
    "target": "SELECT count(DISTINCT scientist) FROM assignedto"
  },
  {
    "prompt": "Show the number of trains database is train_station. tables are station, train, train station. columns in station are station id, name, annual entry exit, annual interchanges, total passengers, location, main services, number of platforms. columns in train are train id, name, time, service. columns in train station are train id, station id.",
    "target": "SELECT count(*) FROM train"
  },
  {
    "prompt": "in what state is mount whitney database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";"
  },
  {
    "prompt": "What are the locations of all the gas stations ordered by opening year? database is gas_company. tables are company, gas station, station company. columns in company are company id, rank, company, headquarters, main industry, sales billion, profits billion, assets billion, market value. columns in gas station are station id, open year, location, manager name, vice manager name, representative name. columns in station company are station id, company id, rank of the year.",
    "target": "SELECT LOCATION FROM gas_station ORDER BY open_year"
  },
  {
    "prompt": "Find the name of dorms that can accommodate more than 300 students. database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300"
  },
  {
    "prompt": "List all customers\u2019 names in the alphabetical order. database is small_bank_1. tables are accounts, savings, checking. columns in accounts are customer id, name. columns in savings are customer id, balance. columns in checking are customer id, balance.",
    "target": "SELECT name FROM accounts ORDER BY name"
  },
  {
    "prompt": "What categories have two or more corresponding books that were made after 1989? database is culture_company. tables are book club, movie, culture company. columns in book club are book club id, year, author or editor, book title, publisher, category, result. columns in movie are movie id, title, year, director, budget million, gross worldwide. columns in culture company are company name, type, incorporated in, group equity shareholding, book club id, movie id.",
    "target": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2"
  },
  {
    "prompt": "Find the name of the dorm with the largest capacity. database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1"
  },
  {
    "prompt": "What is the team with at least 2 technicians? database is machine_repair. tables are repair, machine, technician, repair assignment. columns in repair are repair id, name, launch date, notes. columns in machine are machine id, making year, class, team, machine series, value points, quality rank. columns in technician are technician id, name, team, starting year, age. columns in repair assignment are technician id, repair id, machine id.",
    "target": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2"
  },
  {
    "prompt": "Which countries have more than two members? database is decoration_competition. tables are college, member, round. columns in college are college id, name, leader name, college location. columns in member are member id, name, country, college id. columns in round are round id, member id, decoration theme, rank in round.",
    "target": "SELECT Country FROM member GROUP BY Country HAVING COUNT(*)  >  2"
  },
  {
    "prompt": "Show flight number for all flights with more than 2000 distance. database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT flno FROM Flight WHERE distance  >  2000"
  },
  {
    "prompt": "What are the birth dates of employees living in Edmonton? database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\""
  },
  {
    "prompt": "How many different bike ids are there? database is bike_1. tables are station, status, trip, weather. columns in station are id, name, latitude, longitude, dock count, city, installation date. columns in status are station id, bikes available, docks available, time. columns in trip are id, duration, start date, start station name, start station id, end date, end station name, end station id, bike id, subscription type, zip code. columns in weather are date, max temperature f, mean temperature f, min temperature f, max dew point f, mean dew point f, min dew point f, max humidity, mean humidity, min humidity, max sea level pressure inches, mean sea level pressure inches, min sea level pressure inches, max visibility miles, mean visibility miles, min visibility miles, max wind speed mph, mean wind speed mph, max gust speed mph, precipitation inches, cloud cover, events, wind dir degrees, zip code.",
    "target": "SELECT count(DISTINCT bike_id) FROM trip"
  },
  {
    "prompt": "What are the names of all the subjects. database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT subject_name FROM SUBJECTS"
  },
  {
    "prompt": "How many drivers are there? database is school_bus. tables are driver, school, school bus. columns in driver are driver id, name, party, home city, age. columns in school are school id, grade, school, location, type. columns in school bus are school id, driver id, years working, if full time.",
    "target": "SELECT count(*) FROM driver"
  },
  {
    "prompt": "What are the other account details for the account with the name 338? database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\""
  },
  {
    "prompt": "What are the percentage of hispanics in cities with the black percentage higher than 10? database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT Hispanic FROM city WHERE Black  >  10"
  },
  {
    "prompt": "Find the number of students in total. database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT count(*) FROM list"
  },
  {
    "prompt": "How many unique classes are offered? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT count(DISTINCT class_code) FROM CLASS"
  },
  {
    "prompt": "How many different kinds of information sources are there for injury accidents? database is game_injury. tables are stadium, game, injury accident. columns in stadium are id, name, home games, average attendance, total attendance, capacity percentage. columns in game are stadium id, id, season, date, home team, away team, score, competition. columns in injury accident are game id, id, player, injury, number of matches, source.",
    "target": "SELECT count(DISTINCT SOURCE) FROM injury_accident"
  },
  {
    "prompt": "What are the customer phone numbers under the policy \"Life Insurance\"? database is insurance_fnol. tables are customers, services, available policies, customers policies, first notification of loss, claims, settlements. columns in customers are customer id, customer name. columns in services are service id, service name. columns in available policies are policy id, policy type code, customer phone. columns in customers policies are customer id, policy id, date opened, date closed. columns in first notification of loss are fnol id, customer id, policy id, service id. columns in claims are claim id, fnol id, effective date. columns in settlements are settlement id, claim id, effective date, settlement amount.",
    "target": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\""
  },
  {
    "prompt": "Show the crime rates of counties in ascending order of number of police officers. database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC"
  },
  {
    "prompt": "What are the names of captains, sorted by age descending? database is ship_1. tables are captain, ship. columns in captain are captain id, name, ship id, age, class, rank. columns in ship are ship id, name, type, built year, class, flag.",
    "target": "SELECT name FROM captain ORDER BY age DESC"
  },
  {
    "prompt": "Which catalog content has the smallest capacity? Return the catalog entry name. database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1"
  },
  {
    "prompt": "What are the types of film market estimations in year 1995? database is film_rank. tables are film, market, film market estimation. columns in film are film id, title, studio, director, gross in dollar. columns in market are market id, country, number cities. columns in film market estimation are estimation id, low estimate, high estimate, film id, type, market id, year.",
    "target": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995"
  },
  {
    "prompt": "through which states does the ohio run database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
  },
  {
    "prompt": "List the names of all the distinct product names in alphabetical order? database is tracking_software_problems. tables are problem category codes, problem log, problem status codes, product, staff, problems. columns in problem category codes are problem category code, problem category description. columns in problem log are problem log id, assigned to staff id, problem id, problem category code, problem status code, log entry date, log entry description, log entry fix, other log details. columns in problem status codes are problem status code, problem status description. columns in product are product id, product name, product details. columns in staff are staff id, staff first name, staff last name, other staff details. columns in problems are problem id, product id, closure authorised by staff id, reported by staff id, date problem reported, date problem closed, problem description, other problem details.",
    "target": "SELECT DISTINCT product_name FROM product ORDER BY product_name"
  },
  {
    "prompt": "List the name of the company that produced more than one phone model. database is phone_1. tables are chip model, screen mode, phone. columns in chip model are model name, launch year, ram mib, rom mib, slots, wifi, bluetooth. columns in screen mode are graphics mode, char cells, pixels, hardware colours, used kb, map, type. columns in phone are company name, hardware model name, accreditation type, accreditation level, date, chip model, screen mode.",
    "target": "SELECT Company_name FROM phone GROUP BY Company_name HAVING count(*)  >  1;"
  },
  {
    "prompt": "What is the name of the oldest manager? database is railway. tables are railway, train, manager, railway manage. columns in railway are railway id, railway, builder, built, wheels, location, objectnumber. columns in train are train id, train num, name, from, arrival, railway id. columns in manager are manager id, name, country, working year starts, age, level. columns in railway manage are railway id, manager id, from year.",
    "target": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1"
  },
  {
    "prompt": "How many distinct countries are the climbers from? database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT COUNT(DISTINCT Country) FROM climber"
  },
  {
    "prompt": "What are the names of the pilots in alphabetical order? database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT Name FROM pilot ORDER BY Name ASC"
  },
  {
    "prompt": "Find the last names of teachers teaching in classroom 109. database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT lastname FROM teachers WHERE classroom  =  109"
  },
  {
    "prompt": "What are the details of all products? database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT DISTINCT product_details FROM products"
  },
  {
    "prompt": "How many type of jobs do they have? database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT count(DISTINCT job) FROM Person"
  },
  {
    "prompt": "What are dates of birth of all the guests whose gender is \"Male\"? database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\""
  },
  {
    "prompt": "How many customers have opened an account? database is customers_and_invoices. tables are customers, orders, invoices, accounts, product categories, products, financial transactions, order items, invoice line items. columns in customers are customer id, customer first name, customer middle initial, customer last name, gender, email address, login name, login password, phone number, town city, state county province, country. columns in orders are order id, customer id, date order placed, order details. columns in invoices are invoice number, order id, invoice date. columns in accounts are account id, customer id, date account opened, account name, other account details. columns in product categories are production type code, product type description, vat rating. columns in products are product id, parent product id, production type code, unit price, product name, product color, product size. columns in financial transactions are transaction id, account id, invoice number, transaction type, transaction date, transaction amount, transaction comment, other transaction details. columns in order items are order item id, order id, product id, product quantity, other order item details. columns in invoice line items are order item id, invoice number, product id, product title, product quantity, product price, derived product cost, derived vat payable, derived total cost.",
    "target": "SELECT count(DISTINCT customer_id) FROM Accounts"
  },
  {
    "prompt": "How many kinds of different ratings are listed? database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT count(DISTINCT rating) FROM film"
  },
  {
    "prompt": "List the names of phones in ascending order of price. database is phone_market. tables are phone, market, phone market. columns in phone are name, phone id, memory in g, carrier, price. columns in market are market id, district, num of employees, num of shops, ranking. columns in phone market are market id, phone id, num of stock.",
    "target": "SELECT Name FROM phone ORDER BY Price ASC"
  },
  {
    "prompt": "How many advisors are there? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT count(DISTINCT advisor) FROM Student"
  },
  {
    "prompt": "What are the category of music festivals with result \"Awarded\"? database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\""
  },
  {
    "prompt": "Find the match ids of the cities that hosted competition \"1994 FIFA World Cup qualification\"? database is city_record. tables are city, match, temperature, hosting city. columns in city are city id, city, hanzi, hanyu pinyin, regional population, gdp. columns in match are match id, date, venue, score, result, competition. columns in temperature are city id, jan, feb, mar, apr, jun, jul, aug, sep, oct, nov, dec. columns in hosting city are year, match id, host city.",
    "target": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\""
  },
  {
    "prompt": "what is the area of the new mexico state database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT area FROM state WHERE state_name  =  \"new mexico\";"
  },
  {
    "prompt": "How many females does this network has? database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT count(*) FROM Person WHERE gender  =  'female'"
  },
  {
    "prompt": "Return the weight of the shortest person. database is entrepreneur. tables are entrepreneur, people. columns in entrepreneur are entrepreneur id, people id, company, money requested, investor. columns in people are people id, name, height, weight, date of birth.",
    "target": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1"
  },
  {
    "prompt": "List the countries that have more than one mountain. database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1"
  },
  {
    "prompt": "what are the population densities of each us state database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT density FROM state;"
  },
  {
    "prompt": "what rivers are there in illinois database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
  },
  {
    "prompt": "Count the number of customers. database is customers_and_invoices. tables are customers, orders, invoices, accounts, product categories, products, financial transactions, order items, invoice line items. columns in customers are customer id, customer first name, customer middle initial, customer last name, gender, email address, login name, login password, phone number, town city, state county province, country. columns in orders are order id, customer id, date order placed, order details. columns in invoices are invoice number, order id, invoice date. columns in accounts are account id, customer id, date account opened, account name, other account details. columns in product categories are production type code, product type description, vat rating. columns in products are product id, parent product id, production type code, unit price, product name, product color, product size. columns in financial transactions are transaction id, account id, invoice number, transaction type, transaction date, transaction amount, transaction comment, other transaction details. columns in order items are order item id, order id, product id, product quantity, other order item details. columns in invoice line items are order item id, invoice number, product id, product title, product quantity, product price, derived product cost, derived vat payable, derived total cost.",
    "target": "SELECT count(*) FROM Customers"
  },
  {
    "prompt": "List the carriers of devices in ascending alphabetical order. database is device. tables are device, shop, stock. columns in device are device id, device, carrier, package version, applications, software platform. columns in shop are shop id, shop name, location, open date, open year. columns in stock are shop id, device id, quantity.",
    "target": "SELECT Carrier FROM device ORDER BY Carrier ASC"
  },
  {
    "prompt": "Show the zip code of the county with name \"Howard\". database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\""
  },
  {
    "prompt": "List the text of all tweets in the order of date. database is twitter_1. tables are follows, tweets, user profiles. columns in follows are user id, follower id. columns in tweets are id, user id, text, create date. columns in user profiles are uid, name, email, partition id, followers.",
    "target": "SELECT text FROM tweets ORDER BY createdate"
  },
  {
    "prompt": "give me the cities which are in texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT city_name FROM city WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "What is the total number of customers who use banks in New York City? database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City'"
  },
  {
    "prompt": "How many distinct teams are involved in match seasons? database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT count(DISTINCT Team) FROM match_season"
  },
  {
    "prompt": "Find the total number of courses offered. database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT count(*) FROM COURSES"
  },
  {
    "prompt": "What are the names of all the races that occurred in the year 2017? database is formula_1. tables are circuits, races, drivers, status, seasons, constructors, constructor standings, results, driver standings, constructor results, qualifying, pit stops, lap times. columns in circuits are circuit id, circuit reference, name, location, country, latitude, longitude, altitude, url. columns in races are race id, year, round, circuit id, name, date, time, url. columns in drivers are driver id, driver reference, number, code, forename, surname, dob, nationality, url. columns in status are status id, status. columns in seasons are year, url. columns in constructors are constructor id, constructor reference, name, nationality, url. columns in constructor standings are constructor standings id, race id, constructor id, points, position, position text, wins. columns in results are result id, race id, driver id, constructor id, number, grid, position, position text, position order, points, laps, time, milliseconds, fastest lap, rank, fastest lap time, fastest lap speed, status id. columns in driver standings are driver standings id, race id, driver id, points, position, position text, wins. columns in constructor results are constructor results id, race id, constructor id, points, status. columns in qualifying are qualify id, race id, driver id, constructor id, number, position, q1, q2, q3. columns in pit stops are race id, driver id, stop, lap, time, duration, milliseconds. columns in lap times are race id, driver id, lap, position, time, milliseconds.",
    "target": "SELECT name FROM races WHERE YEAR = 2017"
  },
  {
    "prompt": "What are the unique types of player positions in the tryout? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT count(DISTINCT pPos) FROM tryout"
  },
  {
    "prompt": "How many different courses offered by Physics department? database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'"
  },
  {
    "prompt": "Return the hispanic percentage for cities in which the black percentage is greater than 10. database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT Hispanic FROM city WHERE Black  >  10"
  },
  {
    "prompt": "What are the 3 counties that have the smallest population? Give me the county names. database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3"
  },
  {
    "prompt": "What are the different main industries for all companies? database is gas_company. tables are company, gas station, station company. columns in company are company id, rank, company, headquarters, main industry, sales billion, profits billion, assets billion, market value. columns in gas station are station id, open year, location, manager name, vice manager name, representative name. columns in station company are station id, company id, rank of the year.",
    "target": "SELECT DISTINCT main_industry FROM company"
  },
  {
    "prompt": "what rivers are in illinois database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
  },
  {
    "prompt": "List the names of all distinct wines in alphabetical order. database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT DISTINCT Name FROM WINE ORDER BY Name"
  },
  {
    "prompt": "What are all the labels? database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT DISTINCT label FROM Albums"
  },
  {
    "prompt": "How many students are affected by cat allergies? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT count(*) FROM Has_allergy WHERE Allergy  =  \"Cat\""
  },
  {
    "prompt": "List all information about customer master index, and sort them by details in descending order. database is local_govt_mdm. tables are customer master index, cmi cross references, council tax, business rates, benefits overpayments, parking fines, rent arrears, electoral register. columns in customer master index are master customer id, cmi details. columns in cmi cross references are cmi cross reference id, master customer id, source system code. columns in council tax are council tax id, cmi cross reference id. columns in business rates are business rates id, cmi cross reference id. columns in benefits overpayments are council tax id, cmi cross ref id. columns in parking fines are council tax id, cmi cross reference id. columns in rent arrears are council tax id, cmi cross reference id. columns in electoral register are electoral register id, cmi cross reference id.",
    "target": "SELECT * FROM customer_master_index ORDER BY cmi_details DESC"
  },
  {
    "prompt": "From the trip record, find the number of unique bikes. database is bike_1. tables are station, status, trip, weather. columns in station are id, name, latitude, longitude, dock count, city, installation date. columns in status are station id, bikes available, docks available, time. columns in trip are id, duration, start date, start station name, start station id, end date, end station name, end station id, bike id, subscription type, zip code. columns in weather are date, max temperature f, mean temperature f, min temperature f, max dew point f, mean dew point f, min dew point f, max humidity, mean humidity, min humidity, max sea level pressure inches, mean sea level pressure inches, min sea level pressure inches, max visibility miles, mean visibility miles, min visibility miles, max wind speed mph, mean wind speed mph, max gust speed mph, precipitation inches, cloud cover, events, wind dir degrees, zip code.",
    "target": "SELECT count(DISTINCT bike_id) FROM trip"
  },
  {
    "prompt": "Give me the name of each club. database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT clubname FROM club"
  },
  {
    "prompt": "Which state can address \"6862 Kaitlyn Knolls\" possibly be in? database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\""
  },
  {
    "prompt": "What is all the customer information for customers in NY state? database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\""
  },
  {
    "prompt": "How many colors are there? database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT count(*) FROM ref_colors"
  },
  {
    "prompt": "What are the phone numbers for each employee? database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT Phone FROM EMPLOYEE"
  },
  {
    "prompt": "List all the distinct stations from which a trip of duration below 100 started. database is bike_1. tables are station, status, trip, weather. columns in station are id, name, latitude, longitude, dock count, city, installation date. columns in status are station id, bikes available, docks available, time. columns in trip are id, duration, start date, start station name, start station id, end date, end station name, end station id, bike id, subscription type, zip code. columns in weather are date, max temperature f, mean temperature f, min temperature f, max dew point f, mean dew point f, min dew point f, max humidity, mean humidity, min humidity, max sea level pressure inches, mean sea level pressure inches, min sea level pressure inches, max visibility miles, mean visibility miles, min visibility miles, max wind speed mph, mean wind speed mph, max gust speed mph, precipitation inches, cloud cover, events, wind dir degrees, zip code.",
    "target": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100"
  },
  {
    "prompt": "Find the average price of all product clothes. database is department_store. tables are addresses, staff, suppliers, department store chain, customers, products, supplier addresses, customer addresses, customer orders, department stores, departments, order items, product suppliers, staff department assignments. columns in addresses are address id, address details. columns in staff are staff id, staff gender, staff name. columns in suppliers are supplier id, supplier name, supplier phone. columns in department store chain are department store chain id, department store chain name. columns in customers are customer id, payment method code, customer code, customer name, customer address, customer phone, customer email. columns in products are product id, product type code, product name, product price. columns in supplier addresses are supplier id, address id, date from, date to. columns in customer addresses are customer id, address id, date from, date to. columns in customer orders are order id, customer id, order status code, order date. columns in department stores are department store id, department store chain id, store name, store address, store phone, store email. columns in departments are department id, department store id, department name. columns in order items are order item id, order id, product id. columns in product suppliers are product id, supplier id, date supplied from, date supplied to, total amount purchased, total value purchased. columns in staff department assignments are staff id, department id, date assigned from, job title code, date assigned to.",
    "target": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'"
  },
  {
    "prompt": "What is allergy type of a cat allergy? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\""
  },
  {
    "prompt": "how many people are there in california database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM state WHERE state_name  =  \"california\";"
  },
  {
    "prompt": "Return complaint status codes have more than 3 corresponding complaints? database is customer_complaints. tables are staff, customers, products, complaints. columns in staff are staff id, gender, first name, last name, email address, phone number. columns in customers are customer id, customer type code, address line 1, address line 2, town city, state, email address, phone number. columns in products are product id, parent product id, product category code, date product first available, date product discontinued, product name, product description, product price. columns in complaints are complaint id, product id, customer id, complaint outcome code, complaint status code, complaint type code, date complaint raised, date complaint closed, staff id.",
    "target": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3"
  },
  {
    "prompt": "What is all the information about the Marketing department? database is hr_1. tables are regions, countries, departments, jobs, employees, job history, locations. columns in regions are region id, region name. columns in countries are country id, country name, region id. columns in departments are department id, department name, manager id, location id. columns in jobs are job id, job title, min salary, max salary. columns in employees are employee id, first name, last name, email, phone number, hire date, job id, salary, commission pct, manager id, department id. columns in job history are employee id, start date, end date, job id, department id. columns in locations are location id, street address, postal code, city, state province, country id.",
    "target": "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
  },
  {
    "prompt": "return me the papers after 2000 . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT title FROM publication WHERE YEAR  >  2000;"
  },
  {
    "prompt": "How many films have the word Dummy in their titles? database is cinema. tables are film, cinema, schedule. columns in film are film id, rank in series, number in season, title, directed by, original air date, production code. columns in cinema are cinema id, name, openning year, capacity, location. columns in schedule are cinema id, film id, date, show times per day, price.",
    "target": "SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\""
  },
  {
    "prompt": "How many exhibition are there in year 2005 or after? database is theme_gallery. tables are artist, exhibition, exhibition record. columns in artist are artist id, name, country, year join, age. columns in exhibition are exhibition id, year, theme, artist id, ticket price. columns in exhibition record are exhibition id, date, attendance.",
    "target": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005"
  },
  {
    "prompt": "Find the number of albums. database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT count(*) FROM ALBUM"
  },
  {
    "prompt": "find the total market rate of the furnitures that have the top 2 market shares. database is manufacturer. tables are manufacturer, furniture, furniture manufacte. columns in manufacturer are manufacturer id, open year, name, num of factories, num of shops. columns in furniture are furniture id, name, num of component, market rate. columns in furniture manufacte are manufacturer id, furniture id, price in dollar.",
    "target": "SELECT sum(market_rate) FROM furniture ORDER BY market_rate DESC LIMIT 2"
  },
  {
    "prompt": "Find the number of bands. database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT count(*) FROM Band"
  },
  {
    "prompt": "What are the first names of all students who are older than 20? database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT fname FROM student WHERE age  >  20"
  },
  {
    "prompt": "which states do ohio river flow through database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
  },
  {
    "prompt": "How many students, on average, does each college have enrolled? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT avg(enr) FROM College"
  },
  {
    "prompt": "What are the dates with a maximum temperature higher than 85? database is bike_1. tables are station, status, trip, weather. columns in station are id, name, latitude, longitude, dock count, city, installation date. columns in status are station id, bikes available, docks available, time. columns in trip are id, duration, start date, start station name, start station id, end date, end station name, end station id, bike id, subscription type, zip code. columns in weather are date, max temperature f, mean temperature f, min temperature f, max dew point f, mean dew point f, min dew point f, max humidity, mean humidity, min humidity, max sea level pressure inches, mean sea level pressure inches, min sea level pressure inches, max visibility miles, mean visibility miles, min visibility miles, max wind speed mph, mean wind speed mph, max gust speed mph, precipitation inches, cloud cover, events, wind dir degrees, zip code.",
    "target": "SELECT date FROM weather WHERE max_temperature_f  >  85"
  },
  {
    "prompt": "Count the number of exhibitions that happened in or after 2005. database is theme_gallery. tables are artist, exhibition, exhibition record. columns in artist are artist id, name, country, year join, age. columns in exhibition are exhibition id, year, theme, artist id, ticket price. columns in exhibition record are exhibition id, date, attendance.",
    "target": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005"
  },
  {
    "prompt": "How many different FDA approval statuses exist for medicines? database is medicine_enzyme_interaction. tables are medicine, enzyme, medicine enzyme interaction. columns in medicine are id, name, trade name, fda approved. columns in enzyme are id, name, location, product, chromosome, omim, porphyria. columns in medicine enzyme interaction are enzyme id, medicine id, interaction type.",
    "target": "SELECT count(DISTINCT FDA_approved) FROM medicine"
  },
  {
    "prompt": "Where is the club \"Hopkins Student Enterprises\" located? database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT clublocation FROM club WHERE clubname  =  \"Hopkins Student Enterprises\""
  },
  {
    "prompt": "How many different classes are there? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT count(DISTINCT class_code) FROM CLASS"
  },
  {
    "prompt": "List the names of the top 5 oldest people. database is gymnast. tables are gymnast, people. columns in gymnast are gymnast id, floor exercise points, pommel horse points, rings points, vault points, parallel bars points, horizontal bar points, total points. columns in people are people id, name, age, height, hometown.",
    "target": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5"
  },
  {
    "prompt": "where are mountains database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM mountain;"
  },
  {
    "prompt": "Give the ids of the three products purchased in the largest amounts. database is department_store. tables are addresses, staff, suppliers, department store chain, customers, products, supplier addresses, customer addresses, customer orders, department stores, departments, order items, product suppliers, staff department assignments. columns in addresses are address id, address details. columns in staff are staff id, staff gender, staff name. columns in suppliers are supplier id, supplier name, supplier phone. columns in department store chain are department store chain id, department store chain name. columns in customers are customer id, payment method code, customer code, customer name, customer address, customer phone, customer email. columns in products are product id, product type code, product name, product price. columns in supplier addresses are supplier id, address id, date from, date to. columns in customer addresses are customer id, address id, date from, date to. columns in customer orders are order id, customer id, order status code, order date. columns in department stores are department store id, department store chain id, store name, store address, store phone, store email. columns in departments are department id, department store id, department name. columns in order items are order item id, order id, product id. columns in product suppliers are product id, supplier id, date supplied from, date supplied to, total amount purchased, total value purchased. columns in staff department assignments are staff id, department id, date assigned from, job title code, date assigned to.",
    "target": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3"
  },
  {
    "prompt": "What is the match id of the competition called \"1994 FIFA World Cup qualification\"? database is city_record. tables are city, match, temperature, hosting city. columns in city are city id, city, hanzi, hanyu pinyin, regional population, gdp. columns in match are match id, date, venue, score, result, competition. columns in temperature are city id, jan, feb, mar, apr, jun, jul, aug, sep, oct, nov, dec. columns in hosting city are year, match id, host city.",
    "target": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\""
  },
  {
    "prompt": "List all church names in descending order of opening date. database is wedding. tables are people, church, wedding. columns in people are people id, name, country, is male, age. columns in church are church id, name, organized by, open date, continuation of. columns in wedding are church id, male id, female id, year.",
    "target": "SELECT name FROM church ORDER BY open_date DESC"
  },
  {
    "prompt": "What is the number of movies produced in 2013 ? database is imdb. tables are actor, copyright, cast, genre, classification, company, director, producer, directed by, keyword, made by, movie, tags, tv series, writer, written by. columns in actor are aid, gender, name, nationality, birth city, birth year. columns in copyright are id, msid, cid. columns in cast are id, msid, aid, role. columns in genre are gid, genre. columns in classification are id, msid, gid. columns in company are id, name, country code. columns in director are did, gender, name, nationality, birth city, birth year. columns in producer are pid, gender, name, nationality, birth city, birth year. columns in directed by are id, msid, did. columns in keyword are id, keyword. columns in made by are id, msid, pid. columns in movie are mid, title, release year, title aka, budget. columns in tags are id, msid, kid. columns in tv series are sid, title, release year, num of seasons, num of episodes, title aka, budget. columns in writer are wid, gender, name, nationality, num of episodes, birth city, birth year. columns in written by are id, msid, wid.",
    "target": "SELECT COUNT ( DISTINCT title  ) FROM movie WHERE release_year  =  2013;"
  },
  {
    "prompt": "List the name of artworks in ascending alphabetical order. database is entertainment_awards. tables are festival detail, artwork, nomination. columns in festival detail are festival id, festival name, chair name, location, year, num of audience. columns in artwork are artwork id, type, name. columns in nomination are artwork id, festival id, result.",
    "target": "SELECT Name FROM artwork ORDER BY Name ASC"
  },
  {
    "prompt": "What are the total points for all gymnasts, ordered by total points descending? database is gymnast. tables are gymnast, people. columns in gymnast are gymnast id, floor exercise points, pommel horse points, rings points, vault points, parallel bars points, horizontal bar points, total points. columns in people are people id, name, age, height, hometown.",
    "target": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC"
  },
  {
    "prompt": "What are the countries of mountains with height bigger than 5000? database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT Country FROM mountain WHERE Height  >  5000"
  },
  {
    "prompt": "What are the distinct districts for elections? database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT DISTINCT District FROM election"
  },
  {
    "prompt": "Which headquarter locations are used by more than 2 companies? database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2"
  },
  {
    "prompt": "What is the name of the race that occurred most recently? database is formula_1. tables are circuits, races, drivers, status, seasons, constructors, constructor standings, results, driver standings, constructor results, qualifying, pit stops, lap times. columns in circuits are circuit id, circuit reference, name, location, country, latitude, longitude, altitude, url. columns in races are race id, year, round, circuit id, name, date, time, url. columns in drivers are driver id, driver reference, number, code, forename, surname, dob, nationality, url. columns in status are status id, status. columns in seasons are year, url. columns in constructors are constructor id, constructor reference, name, nationality, url. columns in constructor standings are constructor standings id, race id, constructor id, points, position, position text, wins. columns in results are result id, race id, driver id, constructor id, number, grid, position, position text, position order, points, laps, time, milliseconds, fastest lap, rank, fastest lap time, fastest lap speed, status id. columns in driver standings are driver standings id, race id, driver id, points, position, position text, wins. columns in constructor results are constructor results id, race id, constructor id, points, status. columns in qualifying are qualify id, race id, driver id, constructor id, number, position, q1, q2, q3. columns in pit stops are race id, driver id, stop, lap, time, duration, milliseconds. columns in lap times are race id, driver id, lap, position, time, milliseconds.",
    "target": "SELECT name FROM races ORDER BY date DESC LIMIT 1"
  },
  {
    "prompt": "Find the average unit price for a track. database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT AVG(UnitPrice) FROM TRACK"
  },
  {
    "prompt": "Find the total hours of all projects. database is scientist_1. tables are scientists, projects, assigned to. columns in scientists are ssn, name. columns in projects are code, name, hours. columns in assigned to are scientist, project.",
    "target": "SELECT sum(hours) FROM projects"
  },
  {
    "prompt": "Give the different locations of tracks. database is race_track. tables are race, track. columns in race are race id, name, class, date, track id. columns in track are track id, name, location, seating, year opened.",
    "target": "SELECT DISTINCT LOCATION FROM track"
  },
  {
    "prompt": "How many books are there? database is book_2. tables are publication, book. columns in publication are publication id, book id, publisher, publication date, price. columns in book are book id, title, issues, writer.",
    "target": "SELECT count(*) FROM book"
  },
  {
    "prompt": "How many assessment notes are there in total? database is behavior_monitoring. tables are reference address types, reference detention type, reference incident type, addresses, students, teachers, assessment notes, behavior incident, detention, student addresses, students in detention. columns in reference address types are address type code, address type description. columns in reference detention type are detention type code, detention type description. columns in reference incident type are incident type code, incident type description. columns in addresses are address id, line 1, line 2, line 3, city, zip postcode, state province county, country, other address details. columns in students are student id, address id, first name, middle name, last name, cell mobile number, email address, date first rental, date left university, other student details. columns in teachers are teacher id, address id, first name, middle name, last name, gender, cell mobile number, email address, other details. columns in assessment notes are notes id, student id, teacher id, date of notes, text of notes, other details. columns in behavior incident are incident id, incident type code, student id, date incident start, date incident end, incident summary, recommendations, other details. columns in detention are detention id, detention type code, teacher id, datetime detention start, datetime detention end, detention summary, other details. columns in student addresses are student id, address id, date address from, date address to, monthly rental, other details. columns in students in detention are student id, detention id, incident id.",
    "target": "SELECT count(*) FROM ASSESSMENT_NOTES"
  },
  {
    "prompt": "What is the average number of gold medals for a club? database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT avg(Gold) FROM club_rank"
  },
  {
    "prompt": "How many premises are there? database is customers_campaigns_ecommerce. tables are premises, products, customers, mailshot campaigns, customer addresses, customer orders, mailshot customers, order items. columns in premises are premise id, premises type, premise details. columns in products are product id, product category, product name. columns in customers are customer id, payment method, customer name, customer phone, customer email, customer address, customer login, customer password. columns in mailshot campaigns are mailshot id, product category, mailshot name, mailshot start date, mailshot end date. columns in customer addresses are customer id, premise id, date address from, address type code, date address to. columns in customer orders are order id, customer id, order status code, shipping method code, order placed datetime, order delivered datetime, order shipping charges. columns in mailshot customers are mailshot id, customer id, outcome code, mailshot customer date. columns in order items are item id, order item status code, order id, product id, item status code, item delivered datetime, item order quantity.",
    "target": "SELECT count(*) FROM premises"
  },
  {
    "prompt": "Sort all the rooms according to the price. Just report the room names. database is inn_1. tables are rooms, reservations. columns in rooms are room id, room name, beds, bed type, max occupancy, base price, decor. columns in reservations are code, room, check in, check out, rate, last name, first name, adults, kids.",
    "target": "SELECT roomName FROM Rooms ORDER BY basePrice;"
  },
  {
    "prompt": "what length is the rio grande database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"
  },
  {
    "prompt": "Return the age of the person with the greatest height. database is gymnast. tables are gymnast, people. columns in gymnast are gymnast id, floor exercise points, pommel horse points, rings points, vault points, parallel bars points, horizontal bar points, total points. columns in people are people id, name, age, height, hometown.",
    "target": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1"
  },
  {
    "prompt": "Count the number of statements. database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT count(*) FROM Statements"
  },
  {
    "prompt": "Please list all album titles in alphabetical order. database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT Title FROM ALBUM ORDER BY Title"
  },
  {
    "prompt": "Show all the locations with at least two cinemas with capacity above 300. database is cinema. tables are film, cinema, schedule. columns in film are film id, rank in series, number in season, title, directed by, original air date, production code. columns in cinema are cinema id, name, openning year, capacity, location. columns in schedule are cinema id, film id, date, show times per day, price.",
    "target": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2"
  },
  {
    "prompt": "Count the number of different hometowns of these people. database is gymnast. tables are gymnast, people. columns in gymnast are gymnast id, floor exercise points, pommel horse points, rings points, vault points, parallel bars points, horizontal bar points, total points. columns in people are people id, name, age, height, hometown.",
    "target": "SELECT count(DISTINCT Hometown) FROM people"
  },
  {
    "prompt": "List all the document names which contains \"CV\". database is document_management. tables are roles, users, document structures, functional areas, images, documents, document functional areas, document sections, document sections images. columns in roles are role code, role description. columns in users are user id, role code, user name, user login, password. columns in document structures are document structure code, parent document structure code, document structure description. columns in functional areas are functional area code, parent functional area code, functional area description. columns in images are image id, image alt text, image name, image url. columns in documents are document code, document structure code, document type code, access count, document name. columns in document functional areas are document code, functional area code. columns in document sections are section id, document code, section sequence, section code, section title. columns in document sections images are section id, image id.",
    "target": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\""
  },
  {
    "prompt": "Show the number of documents. database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT count(*) FROM Documents"
  },
  {
    "prompt": "How many Patent outcomes are generated from all the projects? database is tracking_grants_for_research. tables are document types, documents, grants, organisation types, organisations, project outcomes, project staff, projects, research outcomes, research staff, staff roles, tasks. columns in document types are document type code, document description. columns in documents are document id, document type code, grant id, sent date, response received date, other details. columns in grants are grant id, organisation id, grant amount, grant start date, grant end date, other details. columns in organisation types are organisation type, organisation type description. columns in organisations are organisation id, organisation type, organisation details. columns in project outcomes are project id, outcome code, outcome details. columns in project staff are staff id, project id, role code, date from, date to, other details. columns in projects are project id, organisation id, project details. columns in research outcomes are outcome code, outcome description. columns in research staff are staff id, employer organisation id, staff details. columns in staff roles are role code, role description. columns in tasks are task id, project id, task details, eg agree objectives.",
    "target": "SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent'"
  },
  {
    "prompt": "Find the id of the order made most recently. database is tracking_orders. tables are customers, invoices, orders, products, order items, shipments, shipment items. columns in customers are customer id, customer name, customer details. columns in invoices are invoice number, invoice date, invoice details. columns in orders are order id, customer id, order status, date order placed, order details. columns in products are product id, product name, product details. columns in order items are order item id, product id, order id, order item status, order item details. columns in shipments are shipment id, order id, invoice number, shipment tracking number, shipment date, other shipment details. columns in shipment items are shipment id, order item id.",
    "target": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1"
  },
  {
    "prompt": "How many employees have certificate. database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT count(DISTINCT eid) FROM Certificate"
  },
  {
    "prompt": "How many movies were produced in the year 2013 ? database is imdb. tables are actor, copyright, cast, genre, classification, company, director, producer, directed by, keyword, made by, movie, tags, tv series, writer, written by. columns in actor are aid, gender, name, nationality, birth city, birth year. columns in copyright are id, msid, cid. columns in cast are id, msid, aid, role. columns in genre are gid, genre. columns in classification are id, msid, gid. columns in company are id, name, country code. columns in director are did, gender, name, nationality, birth city, birth year. columns in producer are pid, gender, name, nationality, birth city, birth year. columns in directed by are id, msid, did. columns in keyword are id, keyword. columns in made by are id, msid, pid. columns in movie are mid, title, release year, title aka, budget. columns in tags are id, msid, kid. columns in tv series are sid, title, release year, num of seasons, num of episodes, title aka, budget. columns in writer are wid, gender, name, nationality, num of episodes, birth city, birth year. columns in written by are id, msid, wid.",
    "target": "SELECT COUNT ( DISTINCT title  ) FROM movie WHERE release_year  =  2013;"
  },
  {
    "prompt": "List the names of studios that have at least two films. database is film_rank. tables are film, market, film market estimation. columns in film are film id, title, studio, director, gross in dollar. columns in market are market id, country, number cities. columns in film market estimation are estimation id, low estimate, high estimate, film id, type, market id, year.",
    "target": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2"
  },
  {
    "prompt": "How many stations are in Mountain View? database is bike_1. tables are station, status, trip, weather. columns in station are id, name, latitude, longitude, dock count, city, installation date. columns in status are station id, bikes available, docks available, time. columns in trip are id, duration, start date, start station name, start station id, end date, end station name, end station id, bike id, subscription type, zip code. columns in weather are date, max temperature f, mean temperature f, min temperature f, max dew point f, mean dew point f, min dew point f, max humidity, mean humidity, min humidity, max sea level pressure inches, mean sea level pressure inches, min sea level pressure inches, max visibility miles, mean visibility miles, min visibility miles, max wind speed mph, mean wind speed mph, max gust speed mph, precipitation inches, cloud cover, events, wind dir degrees, zip code.",
    "target": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\""
  },
  {
    "prompt": "Return the names of all counties sorted by county name in descending alphabetical order. database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT County_name FROM county ORDER BY County_name DESC"
  },
  {
    "prompt": "What is the issue date of the volume with the minimum weeks on top? database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1"
  },
  {
    "prompt": "Count the number of films. database is film_rank. tables are film, market, film market estimation. columns in film are film id, title, studio, director, gross in dollar. columns in market are market id, country, number cities. columns in film market estimation are estimation id, low estimate, high estimate, film id, type, market id, year.",
    "target": "SELECT count(*) FROM film"
  },
  {
    "prompt": "How many students play sports? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT count(DISTINCT StuID) FROM Sportsinfo"
  },
  {
    "prompt": "Count the number of customers that have an email containing \"gmail.com\". database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\""
  },
  {
    "prompt": "Count the number of characteristics. database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT count(*) FROM CHARACTERISTICS"
  },
  {
    "prompt": "Find the ids of reviewers who didnt only give 4 star. database is movie_1. tables are movie, reviewer, rating. columns in movie are movie id, title, year, director. columns in reviewer are reviewer id, name. columns in rating are reviewer id, movie id, rating stars, rating date.",
    "target": "SELECT rID FROM Rating WHERE stars != 4"
  },
  {
    "prompt": "What is the partition id of the user named \"Iron Man\". database is twitter_1. tables are follows, tweets, user profiles. columns in follows are user id, follower id. columns in tweets are id, user id, text, create date. columns in user profiles are uid, name, email, partition id, followers.",
    "target": "SELECT partitionid FROM user_profiles WHERE name  =  'Iron Man'"
  },
  {
    "prompt": "Count the number of schools. database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT count(*) FROM school"
  },
  {
    "prompt": "Show all distinct positions of matches. database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT DISTINCT POSITION FROM match_season"
  },
  {
    "prompt": "How many songs use drums as an instrument? database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT count(*) FROM instruments WHERE instrument  =  \"drums\""
  },
  {
    "prompt": "Find the name of the user who has the largest number of followers. database is twitter_1. tables are follows, tweets, user profiles. columns in follows are user id, follower id. columns in tweets are id, user id, text, create date. columns in user profiles are uid, name, email, partition id, followers.",
    "target": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1"
  },
  {
    "prompt": "Give the state corresponding to the line number building \"6862 Kaitlyn Knolls\". database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\""
  },
  {
    "prompt": "What are the names of enzymes that include the string ALA? database is medicine_enzyme_interaction. tables are medicine, enzyme, medicine enzyme interaction. columns in medicine are id, name, trade name, fda approved. columns in enzyme are id, name, location, product, chromosome, omim, porphyria. columns in medicine enzyme interaction are enzyme id, medicine id, interaction type.",
    "target": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\""
  },
  {
    "prompt": "Give me the dates when the max temperature was higher than 85. database is bike_1. tables are station, status, trip, weather. columns in station are id, name, latitude, longitude, dock count, city, installation date. columns in status are station id, bikes available, docks available, time. columns in trip are id, duration, start date, start station name, start station id, end date, end station name, end station id, bike id, subscription type, zip code. columns in weather are date, max temperature f, mean temperature f, min temperature f, max dew point f, mean dew point f, min dew point f, max humidity, mean humidity, min humidity, max sea level pressure inches, mean sea level pressure inches, min sea level pressure inches, max visibility miles, mean visibility miles, min visibility miles, max wind speed mph, mean wind speed mph, max gust speed mph, precipitation inches, cloud cover, events, wind dir degrees, zip code.",
    "target": "SELECT date FROM weather WHERE max_temperature_f  >  85"
  },
  {
    "prompt": "Return the name of the mountain with the greatest height. database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1"
  },
  {
    "prompt": "Return the description for the courses named \"database\". database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\""
  },
  {
    "prompt": "Find all information about student addresses, and sort by monthly rental in descending order. database is behavior_monitoring. tables are reference address types, reference detention type, reference incident type, addresses, students, teachers, assessment notes, behavior incident, detention, student addresses, students in detention. columns in reference address types are address type code, address type description. columns in reference detention type are detention type code, detention type description. columns in reference incident type are incident type code, incident type description. columns in addresses are address id, line 1, line 2, line 3, city, zip postcode, state province county, country, other address details. columns in students are student id, address id, first name, middle name, last name, cell mobile number, email address, date first rental, date left university, other student details. columns in teachers are teacher id, address id, first name, middle name, last name, gender, cell mobile number, email address, other details. columns in assessment notes are notes id, student id, teacher id, date of notes, text of notes, other details. columns in behavior incident are incident id, incident type code, student id, date incident start, date incident end, incident summary, recommendations, other details. columns in detention are detention id, detention type code, teacher id, datetime detention start, datetime detention end, detention summary, other details. columns in student addresses are student id, address id, date address from, date address to, monthly rental, other details. columns in students in detention are student id, detention id, incident id.",
    "target": "SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC"
  },
  {
    "prompt": "Find the name of all customers whose name contains \"Alex\". database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\""
  },
  {
    "prompt": "How many book clubs are there? database is culture_company. tables are book club, movie, culture company. columns in book club are book club id, year, author or editor, book title, publisher, category, result. columns in movie are movie id, title, year, director, budget million, gross worldwide. columns in culture company are company name, type, incorporated in, group equity shareholding, book club id, movie id.",
    "target": "SELECT count(*) FROM book_club"
  },
  {
    "prompt": "What are names for top three branches with most number of membership? database is shop_membership. tables are member, branch, membership register branch, purchase. columns in member are member id, card number, name, hometown, level. columns in branch are branch id, name, open year, address road, city, membership amount. columns in membership register branch are member id, branch id, register year. columns in purchase are member id, branch id, year, total pounds.",
    "target": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3"
  },
  {
    "prompt": "How many parties are there? database is party_host. tables are party, host, party host. columns in party are party id, party theme, location, first year, last year, number of hosts. columns in host are host id, name, nationality, age. columns in party host are party id, host id, is main in charge.",
    "target": "SELECT count(*) FROM party"
  },
  {
    "prompt": "What are the names of the all-female dorms? database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT dorm_name FROM dorm WHERE gender  =  'F'"
  },
  {
    "prompt": "What are the last names of faculty in building Barton, sorted by last name? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname"
  },
  {
    "prompt": "What is the party of the youngest people? database is debate. tables are people, debate, debate people. columns in people are people id, district, name, party, age. columns in debate are debate id, date, venue, num of audience. columns in debate people are debate id, affirmative, negative, if affirmative win.",
    "target": "SELECT Party FROM people ORDER BY Age ASC LIMIT 1"
  },
  {
    "prompt": "What is the average balance in checking accounts? database is small_bank_1. tables are accounts, savings, checking. columns in accounts are customer id, name. columns in savings are customer id, balance. columns in checking are customer id, balance.",
    "target": "SELECT avg(balance) FROM checking"
  },
  {
    "prompt": "What are the denomination more than one school have? database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1"
  },
  {
    "prompt": "Return the type code of the document named \"David CV\". database is document_management. tables are roles, users, document structures, functional areas, images, documents, document functional areas, document sections, document sections images. columns in roles are role code, role description. columns in users are user id, role code, user name, user login, password. columns in document structures are document structure code, parent document structure code, document structure description. columns in functional areas are functional area code, parent functional area code, functional area description. columns in images are image id, image alt text, image name, image url. columns in documents are document code, document structure code, document type code, access count, document name. columns in document functional areas are document code, functional area code. columns in document sections are section id, document code, section sequence, section code, section title. columns in document sections images are section id, image id.",
    "target": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\""
  },
  {
    "prompt": "What is the total number of clubs? database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT count(*) FROM club"
  },
  {
    "prompt": "Where us the club named \"Tennis Club\" located? database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT clublocation FROM club WHERE clubname  =  \"Tennis Club\""
  },
  {
    "prompt": "How many distinct publication dates are there in our record? database is book_2. tables are publication, book. columns in publication are publication id, book id, publisher, publication date, price. columns in book are book id, title, issues, writer.",
    "target": "SELECT COUNT (DISTINCT Publication_Date) FROM publication"
  },
  {
    "prompt": "what is the population of california database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM state WHERE state_name  =  \"california\";"
  },
  {
    "prompt": "display the ID for those employees who did two or more jobs in the past. database is hr_1. tables are regions, countries, departments, jobs, employees, job history, locations. columns in regions are region id, region name. columns in countries are country id, country name, region id. columns in departments are department id, department name, manager id, location id. columns in jobs are job id, job title, min salary, max salary. columns in employees are employee id, first name, last name, email, phone number, hire date, job id, salary, commission pct, manager id, department id. columns in job history are employee id, start date, end date, job id, department id. columns in locations are location id, street address, postal code, city, state province, country id.",
    "target": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
  },
  {
    "prompt": "Show all distinct city where branches with at least 100 memberships are located. database is shop_membership. tables are member, branch, membership register branch, purchase. columns in member are member id, card number, name, hometown, level. columns in branch are branch id, name, open year, address road, city, membership amount. columns in membership register branch are member id, branch id, register year. columns in purchase are member id, branch id, year, total pounds.",
    "target": "SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100"
  },
  {
    "prompt": "What are the speeds of the longest roller coaster? database is roller_coaster. tables are roller coaster, country. columns in roller coaster are roller coaster id, name, park, country id, length, height, speed, opened, status. columns in country are country id, name, population, area, languages.",
    "target": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1"
  },
  {
    "prompt": "What is the total number of airlines? database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT count(*) FROM airlines"
  },
  {
    "prompt": "Count the number of chip model that do not have wifi. database is phone_1. tables are chip model, screen mode, phone. columns in chip model are model name, launch year, ram mib, rom mib, slots, wifi, bluetooth. columns in screen mode are graphics mode, char cells, pixels, hardware colours, used kb, map, type. columns in phone are company name, hardware model name, accreditation type, accreditation level, date, chip model, screen mode.",
    "target": "SELECT count(*) FROM chip_model WHERE wifi  =  'No'"
  },
  {
    "prompt": "What are the teams of the players, sorted in ascending alphabetical order? database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT Team FROM player ORDER BY Team ASC"
  },
  {
    "prompt": "Find the number of investors in total. database is tracking_share_transactions. tables are investors, lots, reference transaction types, transactions, sales, purchases, transactions lots. columns in investors are investor id, investor details. columns in lots are lot id, investor id, lot details. columns in reference transaction types are transaction type code, transaction type description. columns in transactions are transaction id, investor id, transaction type code, date of transaction, amount of transaction, share count, other details. columns in sales are sales transaction id, sales details. columns in purchases are purchase transaction id, purchase details. columns in transactions lots are transaction id, lot id.",
    "target": "SELECT count(*) FROM INVESTORS"
  },
  {
    "prompt": "how much population does california have database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM state WHERE state_name  =  \"california\";"
  },
  {
    "prompt": "return me the number of references of \" Making database systems usable \" . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT reference_num FROM publication WHERE title  =  \"Making database systems usable\";"
  },
  {
    "prompt": "Show the id of the employee named Ebba. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\""
  },
  {
    "prompt": "What are the name of pilots aged 25 or older? database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT Name FROM pilot WHERE Age  >=  25"
  },
  {
    "prompt": "Show all distinct region names ordered by their labels. database is party_people. tables are region, party, member, party events. columns in region are region id, region name, date, label, format, catalogue. columns in party are party id, minister, took office, left office, region id, party name. columns in member are member id, member name, party id, in office. columns in party events are event id, event name, party id, member in charge id.",
    "target": "SELECT DISTINCT region_name FROM region ORDER BY Label"
  },
  {
    "prompt": "How many distinct birth places are there? database is body_builder. tables are body builder, people. columns in body builder are body builder id, people id, snatch, clean jerk, total. columns in people are people id, name, height, weight, birth date, birth place.",
    "target": "SELECT count(DISTINCT Birth_Place) FROM people"
  },
  {
    "prompt": "How many movies were made before 2000? database is movie_1. tables are movie, reviewer, rating. columns in movie are movie id, title, year, director. columns in reviewer are reviewer id, name. columns in rating are reviewer id, movie id, rating stars, rating date.",
    "target": "SELECT count(*) FROM Movie WHERE YEAR  <  2000"
  },
  {
    "prompt": "How many settlements are there in total? database is insurance_policies. tables are customers, customer policies, claims, settlements, payments. columns in customers are customer id, customer details. columns in customer policies are policy id, customer id, policy type code, start date, end date. columns in claims are claim id, policy id, date claim made, date claim settled, amount claimed, amount settled. columns in settlements are settlement id, claim id, date claim made, date claim settled, amount claimed, amount settled, customer policy id. columns in payments are payment id, settlement id, payment method code, date payment made, amount payment.",
    "target": "SELECT count(*) FROM Settlements"
  },
  {
    "prompt": "How many counties are there in total? database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT count(*) FROM county"
  },
  {
    "prompt": "What is the average fee for a CSU campus in the year of 2005? database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005"
  },
  {
    "prompt": "Find the number of team franchises that are active (have Y as \"active\" information). database is baseball_1. tables are all star, appearances, manager award, player award, manager award vote, player award vote, batting, batting postseason, player college, fielding, fielding outfield, fielding postseason, hall of fame, home game, manager, manager half, player, park, pitching, pitching postseason, salary, college, postseason, team, team franchise, team half. columns in all star are player id, year, game num, game id, team id, league id, gp, starting pos. columns in appearances are year, team id, league id, player id, g all, gs, g batting, g defense, g p, g c, g 1b, g 2b, g 3b, g ss, g lf, g cf, g rf, g of, g dh, g ph, g pr. columns in manager award are player id, award id, year, league id, tie, notes. columns in player award are player id, award id, year, league id, tie, notes. columns in manager award vote are award id, year, league id, player id, points won, points max, votes first. columns in player award vote are award id, year, league id, player id, points won, points max, votes first. columns in batting are player id, year, stint, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in batting postseason are year, round, player id, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in player college are player id, college id, year. columns in fielding are player id, year, stint, team id, league id, pos, g, gs, inn outs, po, a, e, dp, pb, wp, sb, cs, zr. columns in fielding outfield are player id, year, stint, glf, gcf, grf. columns in fielding postseason are player id, year, team id, league id, round, pos, g, gs, inn outs, po, a, e, dp, tp, pb, sb, cs. columns in hall of fame are player id, yearid, votedby, ballots, needed, votes, inducted, category, needed note. columns in home game are year, league id, team id, park id, span first, span last, games, openings, attendance. columns in manager are player id, year, team id, league id, inseason, g, w, l, rank, plyr mgr. columns in manager half are player id, year, team id, league id, inseason, half, g, w, l, rank. columns in player are player id, birth year, birth month, birth day, birth country, birth state, birth city, death year, death month, death day, death country, death state, death city, name first, name last, name given, weight, height, bats, throws, debut, final game, retro id, bbref id. columns in park are park id, park name, park alias, city, state, country. columns in pitching are player id, year, stint, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in pitching postseason are player id, year, round, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in salary are year, team id, league id, player id, salary. columns in college are college id, name full, city, state, country. columns in postseason are year, round, team id winner, league id winner, team id loser, league id loser, wins, losses, ties. columns in team are year, league id, team id, franchise id, div id, rank, g, ghome, w, l, div win, wc win, lg win, ws win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team id br, team id lahman45, team id retro. columns in team franchise are franchise id, franchise name, active, na assoc. columns in team half are year, league id, team id, half, div id, div win, rank, g, w, l.",
    "target": "SELECT count(*) FROM team_franchise WHERE active = 'Y';"
  },
  {
    "prompt": "What is the average fee on a CSU campus in 2005? database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005"
  },
  {
    "prompt": "Show all distinct lot details. database is tracking_share_transactions. tables are investors, lots, reference transaction types, transactions, sales, purchases, transactions lots. columns in investors are investor id, investor details. columns in lots are lot id, investor id, lot details. columns in reference transaction types are transaction type code, transaction type description. columns in transactions are transaction id, investor id, transaction type code, date of transaction, amount of transaction, share count, other details. columns in sales are sales transaction id, sales details. columns in purchases are purchase transaction id, purchase details. columns in transactions lots are transaction id, lot id.",
    "target": "SELECT DISTINCT lot_details FROM LOTS"
  },
  {
    "prompt": "what is the area of the state with the capital albany database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT area FROM state WHERE capital  =  \"albany\";"
  },
  {
    "prompt": "How many vehicle in total? database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT count(*) FROM Vehicles;"
  },
  {
    "prompt": "Count the number of different affected regions. database is storm_record. tables are storm, region, affected region. columns in storm are storm id, name, dates active, max speed, damage millions usd, number deaths. columns in region are region id, region code, region name. columns in affected region are region id, storm id, number city affected.",
    "target": "SELECT count(DISTINCT region_id) FROM affected_region"
  },
  {
    "prompt": "which states does the ohio river run through database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
  },
  {
    "prompt": "how many rivers run through idaho database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"
  },
  {
    "prompt": "what are the major cities in the usa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT city_name FROM city WHERE population  >  150000;"
  },
  {
    "prompt": "What is the oldest age among the students? database is voter_2. tables are student, voting record. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in voting record are student id, registration date, election cycle, president vote, vice president vote, secretary vote, treasurer vote, class president vote, class senator vote.",
    "target": "SELECT max(Age) FROM STUDENT"
  },
  {
    "prompt": "List all the event names by year from the most recent to the oldest. database is swimming. tables are swimmer, stadium, event, record. columns in swimmer are id, name, nationality, meter 100, meter 200, meter 300, meter 400, meter 500, meter 600, meter 700, time. columns in stadium are id, name, capacity, city, country, opening year. columns in event are id, name, stadium id, year. columns in record are id, result, swimmer id, event id.",
    "target": "SELECT name FROM event ORDER BY YEAR DESC"
  },
  {
    "prompt": "List the total number of horses on farms in ascending order. database is farm. tables are city, farm, farm competition, competition record. columns in city are city id, official name, status, area km 2, population, census ranking. columns in farm are farm id, year, total horses, working horses, total cattle, oxen, bulls, cows, pigs, sheep and goats. columns in farm competition are competition id, year, theme, host city id, hosts. columns in competition record are competition id, farm id, rank.",
    "target": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC"
  },
  {
    "prompt": "What is the id of the trip that has the shortest duration? database is bike_1. tables are station, status, trip, weather. columns in station are id, name, latitude, longitude, dock count, city, installation date. columns in status are station id, bikes available, docks available, time. columns in trip are id, duration, start date, start station name, start station id, end date, end station name, end station id, bike id, subscription type, zip code. columns in weather are date, max temperature f, mean temperature f, min temperature f, max dew point f, mean dew point f, min dew point f, max humidity, mean humidity, min humidity, max sea level pressure inches, mean sea level pressure inches, min sea level pressure inches, max visibility miles, mean visibility miles, min visibility miles, max wind speed mph, mean wind speed mph, max gust speed mph, precipitation inches, cloud cover, events, wind dir degrees, zip code.",
    "target": "SELECT id FROM trip ORDER BY duration LIMIT 1"
  },
  {
    "prompt": "How many colleges has more than 15000 students? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT count(*) FROM College WHERE enr  >  15000"
  },
  {
    "prompt": "Return the categories of music festivals that have the result \"Awarded\". database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\""
  },
  {
    "prompt": "List the research staff details, and order in ascending order. database is tracking_grants_for_research. tables are document types, documents, grants, organisation types, organisations, project outcomes, project staff, projects, research outcomes, research staff, staff roles, tasks. columns in document types are document type code, document description. columns in documents are document id, document type code, grant id, sent date, response received date, other details. columns in grants are grant id, organisation id, grant amount, grant start date, grant end date, other details. columns in organisation types are organisation type, organisation type description. columns in organisations are organisation id, organisation type, organisation details. columns in project outcomes are project id, outcome code, outcome details. columns in project staff are staff id, project id, role code, date from, date to, other details. columns in projects are project id, organisation id, project details. columns in research outcomes are outcome code, outcome description. columns in research staff are staff id, employer organisation id, staff details. columns in staff roles are role code, role description. columns in tasks are task id, project id, task details, eg agree objectives.",
    "target": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC"
  },
  {
    "prompt": "Give the ids of documents with expenses that have the budget code SF. database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'"
  },
  {
    "prompt": "What is the total count of enzymes? database is medicine_enzyme_interaction. tables are medicine, enzyme, medicine enzyme interaction. columns in medicine are id, name, trade name, fda approved. columns in enzyme are id, name, location, product, chromosome, omim, porphyria. columns in medicine enzyme interaction are enzyme id, medicine id, interaction type.",
    "target": "SELECT count(*) FROM enzyme"
  },
  {
    "prompt": "What are the names of people in ascending alphabetical order? database is gymnast. tables are gymnast, people. columns in gymnast are gymnast id, floor exercise points, pommel horse points, rings points, vault points, parallel bars points, horizontal bar points, total points. columns in people are people id, name, age, height, hometown.",
    "target": "SELECT Name FROM People ORDER BY Name ASC"
  },
  {
    "prompt": "Count the number of customers. database is customer_complaints. tables are staff, customers, products, complaints. columns in staff are staff id, gender, first name, last name, email address, phone number. columns in customers are customer id, customer type code, address line 1, address line 2, town city, state, email address, phone number. columns in products are product id, parent product id, product category code, date product first available, date product discontinued, product name, product description, product price. columns in complaints are complaint id, product id, customer id, complaint outcome code, complaint status code, complaint type code, date complaint raised, date complaint closed, staff id.",
    "target": "SELECT count(*) FROM customers"
  },
  {
    "prompt": "List all region names in alphabetical order. database is storm_record. tables are storm, region, affected region. columns in storm are storm id, name, dates active, max speed, damage millions usd, number deaths. columns in region are region id, region code, region name. columns in affected region are region id, storm id, number city affected.",
    "target": "SELECT region_name FROM region ORDER BY region_name"
  },
  {
    "prompt": "List the venues of debates in ascending order of the number of audience. database is debate. tables are people, debate, debate people. columns in people are people id, district, name, party, age. columns in debate are debate id, date, venue, num of audience. columns in debate people are debate id, affirmative, negative, if affirmative win.",
    "target": "SELECT Venue FROM debate ORDER BY Num_of_Audience ASC"
  },
  {
    "prompt": "What is the total student capacity of all dorms? database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT sum(student_capacity) FROM dorm"
  },
  {
    "prompt": "What are the nicknames of schools whose division is not 1? database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\""
  },
  {
    "prompt": "Find the grade studying in room 105. database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT DISTINCT grade FROM list WHERE classroom  =  105"
  },
  {
    "prompt": "How many dorms are in the database? database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT count(*) FROM dorm"
  },
  {
    "prompt": "Count the number of different countries that climbers are from. database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT COUNT(DISTINCT Country) FROM climber"
  },
  {
    "prompt": "how many states are there in the usa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( state_name ) FROM state;"
  },
  {
    "prompt": "which rivers are in illinois database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
  },
  {
    "prompt": "Find the country of the airlines whose name starts with Orbit. database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'"
  },
  {
    "prompt": "In how many different states are banks located? database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT count(DISTINCT state) FROM bank"
  },
  {
    "prompt": "where is mount whitney located database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";"
  },
  {
    "prompt": "Which orders have shipment after 2000-01-01? Give me the order ids. database is tracking_orders. tables are customers, invoices, orders, products, order items, shipments, shipment items. columns in customers are customer id, customer name, customer details. columns in invoices are invoice number, invoice date, invoice details. columns in orders are order id, customer id, order status, date order placed, order details. columns in products are product id, product name, product details. columns in order items are order item id, product id, order id, order item status, order item details. columns in shipments are shipment id, order id, invoice number, shipment tracking number, shipment date, other shipment details. columns in shipment items are shipment id, order item id.",
    "target": "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\""
  },
  {
    "prompt": "Show home city where at least two drivers older than 40 are from. database is school_bus. tables are driver, school, school bus. columns in driver are driver id, name, party, home city, age. columns in school are school id, grade, school, location, type. columns in school bus are school id, driver id, years working, if full time.",
    "target": "SELECT home_city FROM driver WHERE age  >  40 GROUP BY home_city HAVING count(*)  >=  2"
  },
  {
    "prompt": "What is the code of the category that the product with the name flax belongs to? database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\""
  },
  {
    "prompt": "Give the names of mountains in alphabetical order. database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT Name FROM mountain ORDER BY Name ASC"
  },
  {
    "prompt": "What is the average snatch score of body builders? database is body_builder. tables are body builder, people. columns in body builder are body builder id, people id, snatch, clean jerk, total. columns in people are people id, name, height, weight, birth date, birth place.",
    "target": "SELECT avg(Snatch) FROM body_builder"
  },
  {
    "prompt": "how many states does the missouri river run through database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";"
  },
  {
    "prompt": "Find the first names of teachers whose email address contains the word \"man\". database is behavior_monitoring. tables are reference address types, reference detention type, reference incident type, addresses, students, teachers, assessment notes, behavior incident, detention, student addresses, students in detention. columns in reference address types are address type code, address type description. columns in reference detention type are detention type code, detention type description. columns in reference incident type are incident type code, incident type description. columns in addresses are address id, line 1, line 2, line 3, city, zip postcode, state province county, country, other address details. columns in students are student id, address id, first name, middle name, last name, cell mobile number, email address, date first rental, date left university, other student details. columns in teachers are teacher id, address id, first name, middle name, last name, gender, cell mobile number, email address, other details. columns in assessment notes are notes id, student id, teacher id, date of notes, text of notes, other details. columns in behavior incident are incident id, incident type code, student id, date incident start, date incident end, incident summary, recommendations, other details. columns in detention are detention id, detention type code, teacher id, datetime detention start, datetime detention end, detention summary, other details. columns in student addresses are student id, address id, date address from, date address to, monthly rental, other details. columns in students in detention are student id, detention id, incident id.",
    "target": "SELECT first_name FROM Teachers WHERE email_address LIKE '%man%'"
  },
  {
    "prompt": "How many courses are there in total? database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT count(*) FROM COURSES"
  },
  {
    "prompt": "What is the name of the player with the largest number of votes? database is riding_club. tables are player, club, coach, player coach, match result. columns in player are player id, sponsor name, player name, gender, residence, occupation, votes, rank. columns in club are club id, club name, region, start year. columns in coach are coach id, player name, gender, club id, rank. columns in player coach are player id, coach id, starting year. columns in match result are rank, club id, gold, big silver, small silver, bronze, points.",
    "target": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1"
  },
  {
    "prompt": "how many cities are in texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( city_name ) FROM city WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "What are the first names of students studying in room 107? database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT DISTINCT firstname FROM list WHERE classroom  =  107"
  },
  {
    "prompt": "What is the name of the highest rated wine? database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT Name FROM WINE ORDER BY Score LIMIT 1"
  },
  {
    "prompt": "How many schools are there? database is school_finance. tables are school, budget, endowment. columns in school are school id, school name, location, mascot, enrollment, ihsaa class, ihsaa football class, county. columns in budget are school id, year, budgeted, total budget percent budgeted, invested, total budget percent invested, budget invested percent. columns in endowment are endowment id, school id, donator name, amount.",
    "target": "SELECT count(*) FROM school"
  },
  {
    "prompt": "How many team franchises are active, with active value Y? database is baseball_1. tables are all star, appearances, manager award, player award, manager award vote, player award vote, batting, batting postseason, player college, fielding, fielding outfield, fielding postseason, hall of fame, home game, manager, manager half, player, park, pitching, pitching postseason, salary, college, postseason, team, team franchise, team half. columns in all star are player id, year, game num, game id, team id, league id, gp, starting pos. columns in appearances are year, team id, league id, player id, g all, gs, g batting, g defense, g p, g c, g 1b, g 2b, g 3b, g ss, g lf, g cf, g rf, g of, g dh, g ph, g pr. columns in manager award are player id, award id, year, league id, tie, notes. columns in player award are player id, award id, year, league id, tie, notes. columns in manager award vote are award id, year, league id, player id, points won, points max, votes first. columns in player award vote are award id, year, league id, player id, points won, points max, votes first. columns in batting are player id, year, stint, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in batting postseason are year, round, player id, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in player college are player id, college id, year. columns in fielding are player id, year, stint, team id, league id, pos, g, gs, inn outs, po, a, e, dp, pb, wp, sb, cs, zr. columns in fielding outfield are player id, year, stint, glf, gcf, grf. columns in fielding postseason are player id, year, team id, league id, round, pos, g, gs, inn outs, po, a, e, dp, tp, pb, sb, cs. columns in hall of fame are player id, yearid, votedby, ballots, needed, votes, inducted, category, needed note. columns in home game are year, league id, team id, park id, span first, span last, games, openings, attendance. columns in manager are player id, year, team id, league id, inseason, g, w, l, rank, plyr mgr. columns in manager half are player id, year, team id, league id, inseason, half, g, w, l, rank. columns in player are player id, birth year, birth month, birth day, birth country, birth state, birth city, death year, death month, death day, death country, death state, death city, name first, name last, name given, weight, height, bats, throws, debut, final game, retro id, bbref id. columns in park are park id, park name, park alias, city, state, country. columns in pitching are player id, year, stint, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in pitching postseason are player id, year, round, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in salary are year, team id, league id, player id, salary. columns in college are college id, name full, city, state, country. columns in postseason are year, round, team id winner, league id winner, team id loser, league id loser, wins, losses, ties. columns in team are year, league id, team id, franchise id, div id, rank, g, ghome, w, l, div win, wc win, lg win, ws win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team id br, team id lahman45, team id retro. columns in team franchise are franchise id, franchise name, active, na assoc. columns in team half are year, league id, team id, half, div id, div win, rank, g, w, l.",
    "target": "SELECT count(*) FROM team_franchise WHERE active = 'Y';"
  },
  {
    "prompt": "What campuses opened before 1800? database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT campus FROM campuses WHERE YEAR  <  1800"
  },
  {
    "prompt": "How many employees are there all together? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT count(*) FROM employee"
  },
  {
    "prompt": "Count the number of different complaint type codes. database is customer_complaints. tables are staff, customers, products, complaints. columns in staff are staff id, gender, first name, last name, email address, phone number. columns in customers are customer id, customer type code, address line 1, address line 2, town city, state, email address, phone number. columns in products are product id, parent product id, product category code, date product first available, date product discontinued, product name, product description, product price. columns in complaints are complaint id, product id, customer id, complaint outcome code, complaint status code, complaint type code, date complaint raised, date complaint closed, staff id.",
    "target": "SELECT count(DISTINCT complaint_type_code) FROM complaints"
  },
  {
    "prompt": "How many locations are listed in the database? database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT count(*) FROM Ref_locations"
  },
  {
    "prompt": "What is the joined year of the pilot of the highest rank? database is pilot_record. tables are aircraft, pilot, pilot record. columns in aircraft are aircraft id, order year, manufacturer, model, fleet series, powertrain, fuel propulsion. columns in pilot are pilot id, pilot name, rank, age, nationality, position, join year, team. columns in pilot record are record id, pilot id, aircraft id, date.",
    "target": "SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1"
  },
  {
    "prompt": "how many cities are there in us database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( city_name ) FROM city;"
  },
  {
    "prompt": "List the names of companies by ascending number of sales. database is company_employee. tables are people, company, employment. columns in people are people id, age, name, nationality, graduation college. columns in company are company id, name, headquarters, industry, sales in billion, profits in billion, assets in billion, market value in billion. columns in employment are company id, people id, year working.",
    "target": "SELECT Name FROM company ORDER BY Sales_in_Billion ASC"
  },
  {
    "prompt": "Return the names of shops, ordered by year of opening ascending. database is device. tables are device, shop, stock. columns in device are device id, device, carrier, package version, applications, software platform. columns in shop are shop id, shop name, location, open date, open year. columns in stock are shop id, device id, quantity.",
    "target": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC"
  },
  {
    "prompt": "What are the names of all pilots listed by descending age? database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT Name FROM pilot ORDER BY Age DESC"
  },
  {
    "prompt": "where is mount whitney database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";"
  },
  {
    "prompt": "What are the ids of the students who are not involved in any activity database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in"
  },
  {
    "prompt": "Which complaint status has more than 3 records on file? database is customer_complaints. tables are staff, customers, products, complaints. columns in staff are staff id, gender, first name, last name, email address, phone number. columns in customers are customer id, customer type code, address line 1, address line 2, town city, state, email address, phone number. columns in products are product id, parent product id, product category code, date product first available, date product discontinued, product name, product description, product price. columns in complaints are complaint id, product id, customer id, complaint outcome code, complaint status code, complaint type code, date complaint raised, date complaint closed, staff id.",
    "target": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3"
  },
  {
    "prompt": "Give the classes that have more than two captains. database is ship_1. tables are captain, ship. columns in captain are captain id, name, ship id, age, class, rank. columns in ship are ship id, name, type, built year, class, flag.",
    "target": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2"
  },
  {
    "prompt": "Which types of policy are chosen by more than 2 customers? Give me the policy type codes. database is insurance_and_eClaims. tables are customers, staff, policies, claim headers, claims documents, claims processing stages, claims processing. columns in customers are customer id, customer details. columns in staff are staff id, staff details. columns in policies are policy id, customer id, policy type code, start date, end date. columns in claim headers are claim header id, claim status code, claim type code, policy id, date of claim, date of settlement, amount claimed, amount piad. columns in claims documents are claim id, document type code, created by staff id, created date. columns in claims processing stages are claim stage id, next claim stage id, claim status name, claim status description. columns in claims processing are claim processing id, claim id, claim outcome code, claim stage id, staff id.",
    "target": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2"
  },
  {
    "prompt": "Find the distinct number of president votes. database is voter_2. tables are student, voting record. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in voting record are student id, registration date, election cycle, president vote, vice president vote, secretary vote, treasurer vote, class president vote, class senator vote.",
    "target": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD"
  },
  {
    "prompt": "What are the names of documents that contain the substring \"CV\"? database is document_management. tables are roles, users, document structures, functional areas, images, documents, document functional areas, document sections, document sections images. columns in roles are role code, role description. columns in users are user id, role code, user name, user login, password. columns in document structures are document structure code, parent document structure code, document structure description. columns in functional areas are functional area code, parent functional area code, functional area description. columns in images are image id, image alt text, image name, image url. columns in documents are document code, document structure code, document type code, access count, document name. columns in document functional areas are document code, functional area code. columns in document sections are section id, document code, section sequence, section code, section title. columns in document sections images are section id, image id.",
    "target": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\""
  },
  {
    "prompt": "return me the number of papers after 2000 . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT COUNT ( DISTINCT title ) FROM publication WHERE YEAR  >  2000;"
  },
  {
    "prompt": "Count the number of regions. database is storm_record. tables are storm, region, affected region. columns in storm are storm id, name, dates active, max speed, damage millions usd, number deaths. columns in region are region id, region code, region name. columns in affected region are region id, storm id, number city affected.",
    "target": "SELECT count(*) FROM region"
  },
  {
    "prompt": "How many gas companies are there? database is gas_company. tables are company, gas station, station company. columns in company are company id, rank, company, headquarters, main industry, sales billion, profits billion, assets billion, market value. columns in gas station are station id, open year, location, manager name, vice manager name, representative name. columns in station company are station id, company id, rank of the year.",
    "target": "SELECT count(*) FROM company"
  },
  {
    "prompt": "What is the average price of products with manufacturer codes equal to 2? database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT avg(price) FROM products WHERE Manufacturer  =  2"
  },
  {
    "prompt": "List the publisher of the publication with the highest price. database is book_2. tables are publication, book. columns in publication are publication id, book id, publisher, publication date, price. columns in book are book id, title, issues, writer.",
    "target": "SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1"
  },
  {
    "prompt": "Which ministers are not a part of the Progress Party? database is party_people. tables are region, party, member, party events. columns in region are region id, region name, date, label, format, catalogue. columns in party are party id, minister, took office, left office, region id, party name. columns in member are member id, member name, party id, in office. columns in party events are event id, event name, party id, member in charge id.",
    "target": "SELECT minister FROM party WHERE party_name != 'Progress Party'"
  },
  {
    "prompt": "Show the census ranking of cities whose status are not \"Village\". database is farm. tables are city, farm, farm competition, competition record. columns in city are city id, official name, status, area km 2, population, census ranking. columns in farm are farm id, year, total horses, working horses, total cattle, oxen, bulls, cows, pigs, sheep and goats. columns in farm competition are competition id, year, theme, host city id, hosts. columns in competition record are competition id, farm id, rank.",
    "target": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\""
  },
  {
    "prompt": "Which wineries produce at least four wines? database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4"
  },
  {
    "prompt": "How many distinct transaction types are used in the transactions? database is tracking_share_transactions. tables are investors, lots, reference transaction types, transactions, sales, purchases, transactions lots. columns in investors are investor id, investor details. columns in lots are lot id, investor id, lot details. columns in reference transaction types are transaction type code, transaction type description. columns in transactions are transaction id, investor id, transaction type code, date of transaction, amount of transaction, share count, other details. columns in sales are sales transaction id, sales details. columns in purchases are purchase transaction id, purchase details. columns in transactions lots are transaction id, lot id.",
    "target": "SELECT COUNT(DISTINCT transaction_type_code) FROM TRANSACTIONS"
  },
  {
    "prompt": "List the name of artworks whose type is not \"Program Talent Show\". database is entertainment_awards. tables are festival detail, artwork, nomination. columns in festival detail are festival id, festival name, chair name, location, year, num of audience. columns in artwork are artwork id, type, name. columns in nomination are artwork id, festival id, result.",
    "target": "SELECT Name FROM artwork WHERE TYPE != \"Program Talent Show\""
  },
  {
    "prompt": "How many employees are living in Canada? database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT count(*) FROM employees WHERE country = \"Canada\";"
  },
  {
    "prompt": "how many states are there database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( state_name ) FROM state;"
  },
  {
    "prompt": "What is the average number of bank customers? database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT avg(no_of_customers) FROM bank"
  },
  {
    "prompt": "How many rooms does the Lamberton building have? database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'"
  },
  {
    "prompt": "Sort the names of all counties in ascending order of population. database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT County_name FROM county ORDER BY Population ASC"
  },
  {
    "prompt": "what rivers flow through illinois database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
  },
  {
    "prompt": "Give the districts which have two or more addresses. database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2"
  },
  {
    "prompt": "What is the average price of clothes? database is department_store. tables are addresses, staff, suppliers, department store chain, customers, products, supplier addresses, customer addresses, customer orders, department stores, departments, order items, product suppliers, staff department assignments. columns in addresses are address id, address details. columns in staff are staff id, staff gender, staff name. columns in suppliers are supplier id, supplier name, supplier phone. columns in department store chain are department store chain id, department store chain name. columns in customers are customer id, payment method code, customer code, customer name, customer address, customer phone, customer email. columns in products are product id, product type code, product name, product price. columns in supplier addresses are supplier id, address id, date from, date to. columns in customer addresses are customer id, address id, date from, date to. columns in customer orders are order id, customer id, order status code, order date. columns in department stores are department store id, department store chain id, store name, store address, store phone, store email. columns in departments are department id, department store id, department name. columns in order items are order item id, order id, product id. columns in product suppliers are product id, supplier id, date supplied from, date supplied to, total amount purchased, total value purchased. columns in staff department assignments are staff id, department id, date assigned from, job title code, date assigned to.",
    "target": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'"
  },
  {
    "prompt": "Find the name of customer who has the lowest credit score. database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1"
  },
  {
    "prompt": "What are the different positions for match season? database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT DISTINCT POSITION FROM match_season"
  },
  {
    "prompt": "What is the minimum snatch score? database is body_builder. tables are body builder, people. columns in body builder are body builder id, people id, snatch, clean jerk, total. columns in people are people id, name, height, weight, birth date, birth place.",
    "target": "SELECT min(snatch) FROM body_builder"
  },
  {
    "prompt": "What are the descriptions of the courses with name \"database\"? database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\""
  },
  {
    "prompt": "List all the services in the alphabetical order. database is insurance_fnol. tables are customers, services, available policies, customers policies, first notification of loss, claims, settlements. columns in customers are customer id, customer name. columns in services are service id, service name. columns in available policies are policy id, policy type code, customer phone. columns in customers policies are customer id, policy id, date opened, date closed. columns in first notification of loss are fnol id, customer id, policy id, service id. columns in claims are claim id, fnol id, effective date. columns in settlements are settlement id, claim id, effective date, settlement amount.",
    "target": "SELECT service_name FROM services ORDER BY service_name"
  },
  {
    "prompt": "List the writers who have written more than one book. database is book_2. tables are publication, book. columns in publication are publication id, book id, publisher, publication date, price. columns in book are book id, title, issues, writer.",
    "target": "SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*)  >  1"
  },
  {
    "prompt": "List the locations that are shared by more than two wrestlers. database is wrestler. tables are wrestler, elimination. columns in wrestler are wrestler id, name, reign, days held, location, event. columns in elimination are elimination id, wrestler id, team, eliminated by, elimination move, time.",
    "target": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2"
  },
  {
    "prompt": "Find the names of channels that are not owned by CCTV. database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT name FROM channel WHERE OWNER != 'CCTV'"
  },
  {
    "prompt": "Count the number of farms. database is farm. tables are city, farm, farm competition, competition record. columns in city are city id, official name, status, area km 2, population, census ranking. columns in farm are farm id, year, total horses, working horses, total cattle, oxen, bulls, cows, pigs, sheep and goats. columns in farm competition are competition id, year, theme, host city id, hosts. columns in competition record are competition id, farm id, rank.",
    "target": "SELECT count(*) FROM farm"
  },
  {
    "prompt": "How many different source system code for the cmi cross references are there? database is local_govt_mdm. tables are customer master index, cmi cross references, council tax, business rates, benefits overpayments, parking fines, rent arrears, electoral register. columns in customer master index are master customer id, cmi details. columns in cmi cross references are cmi cross reference id, master customer id, source system code. columns in council tax are council tax id, cmi cross reference id. columns in business rates are business rates id, cmi cross reference id. columns in benefits overpayments are council tax id, cmi cross ref id. columns in parking fines are council tax id, cmi cross reference id. columns in rent arrears are council tax id, cmi cross reference id. columns in electoral register are electoral register id, cmi cross reference id.",
    "target": "SELECT count(DISTINCT source_system_code) FROM CMI_cross_references"
  },
  {
    "prompt": "How many customers have an active value of 1? database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT count(*) FROM customer WHERE active = '1'"
  },
  {
    "prompt": "Find the founded year of the newest non public school. database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1"
  },
  {
    "prompt": "List the teams of the players with the top 5 largest ages. database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5"
  },
  {
    "prompt": "Who is the founder of Sony? database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT founder FROM manufacturers WHERE name  =  'Sony'"
  },
  {
    "prompt": "Which of the mill names contains the french word Moulin? database is architecture. tables are architect, bridge, mill. columns in architect are id, name, nationality, gender. columns in bridge are architect id, id, name, location, length meters, length feet. columns in mill are architect id, id, location, name, type, built year, notes.",
    "target": "SELECT name FROM mill WHERE name LIKE '%Moulin%'"
  },
  {
    "prompt": "Find the highest rank of all reviews. database is epinions_1. tables are item, review, useracct, trust. columns in item are item id, title. columns in review are a id, user id, item id, rating, rank. columns in useracct are user id, name. columns in trust are source user id, target user id, trust.",
    "target": "SELECT min(rank) FROM review"
  },
  {
    "prompt": "How many gymnasts are there? database is gymnast. tables are gymnast, people. columns in gymnast are gymnast id, floor exercise points, pommel horse points, rings points, vault points, parallel bars points, horizontal bar points, total points. columns in people are people id, name, age, height, hometown.",
    "target": "SELECT count(*) FROM gymnast"
  },
  {
    "prompt": "Check the invoices record and compute the average quantities ordered with the payment method \"MasterCard\". database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\""
  },
  {
    "prompt": "Sort the names of all counties in descending alphabetical order. database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT County_name FROM county ORDER BY County_name DESC"
  },
  {
    "prompt": "List the names of all routes in alphabetic order. database is customer_deliveries. tables are products, addresses, customers, regular orders, regular order products, actual orders, actual order products, customer addresses, delivery routes, delivery route locations, trucks, employees, order deliveries. columns in products are product id, product name, product price, product description. columns in addresses are address id, address details, city, zip postcode, state province county, country. columns in customers are customer id, payment method, customer name, customer phone, customer email, date became customer. columns in regular orders are regular order id, distributer id. columns in regular order products are regular order id, product id. columns in actual orders are actual order id, order status code, regular order id, actual order date. columns in actual order products are actual order id, product id. columns in customer addresses are customer id, address id, date from, address type, date to. columns in delivery routes are route id, route name, other route details. columns in delivery route locations are location code, route id, location address id, location name. columns in trucks are truck id, truck licence number, truck details. columns in employees are employee id, employee address id, employee name, employee phone. columns in order deliveries are location code, actual order id, delivery status code, driver employee id, truck id, delivery date.",
    "target": "SELECT route_name FROM Delivery_Routes ORDER BY route_name"
  },
  {
    "prompt": "Show the flight number of flights with three lowest distances. database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3"
  },
  {
    "prompt": "What are all the distinct asset models? database is assets_maintenance. tables are third party companies, maintenance contracts, parts, skills, staff, assets, asset parts, maintenance engineers, engineer skills, fault log, engineer visits, part faults, fault log parts, skills required to fix. columns in third party companies are company id, company type, company name, company address, other company details. columns in maintenance contracts are maintenance contract id, maintenance contract company id, contract start date, contract end date, other contract details. columns in parts are part id, part name, chargeable yn, chargeable amount, other part details. columns in skills are skill id, skill code, skill description. columns in staff are staff id, staff name, gender, other staff details. columns in assets are asset id, maintenance contract id, supplier company id, asset details, asset make, asset model, asset acquired date, asset disposed date, other asset details. columns in asset parts are asset id, part id. columns in maintenance engineers are engineer id, company id, first name, last name, other details. columns in engineer skills are engineer id, skill id. columns in fault log are fault log entry id, asset id, recorded by staff id, fault log entry datetime, fault description, other fault details. columns in engineer visits are engineer visit id, contact staff id, engineer id, fault log entry id, fault status, visit start datetime, visit end datetime, other visit details. columns in part faults are part fault id, part id, fault short name, fault description, other fault details. columns in fault log parts are fault log entry id, part fault id, fault status. columns in skills required to fix are part fault id, skill id.",
    "target": "SELECT DISTINCT asset_model FROM Assets"
  },
  {
    "prompt": "Find the name of customers who did not pay with Cash. database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'"
  },
  {
    "prompt": "What is the total number of customers across banks? database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT sum(no_of_customers) FROM bank"
  },
  {
    "prompt": "What are the opening years in which at least two shops opened? database is shop_membership. tables are member, branch, membership register branch, purchase. columns in member are member id, card number, name, hometown, level. columns in branch are branch id, name, open year, address road, city, membership amount. columns in membership register branch are member id, branch id, register year. columns in purchase are member id, branch id, year, total pounds.",
    "target": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2"
  },
  {
    "prompt": "What is the description of the marketing region China? database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\""
  },
  {
    "prompt": "Return the sum of all payment amounts. database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT sum(amount) FROM payment"
  },
  {
    "prompt": "what states have a city named springfield database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "Find the number of activities available. database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT count(*) FROM Activity"
  },
  {
    "prompt": "What are all role codes? database is cre_Doc_Control_Systems. tables are reference document types, roles, addresses, reference document status, reference shipping agents, documents, employees, document drafts, draft copies, circulation history, documents mailed. columns in reference document types are document type code, document type description. columns in roles are role code, role description. columns in addresses are address id, address details. columns in reference document status are document status code, document status description. columns in reference shipping agents are shipping agent code, shipping agent name, shipping agent description. columns in documents are document id, document status code, document type code, shipping agent code, receipt date, receipt number, other details. columns in employees are employee id, role code, employee name, other details. columns in document drafts are document id, draft number, draft details. columns in draft copies are document id, draft number, copy number. columns in circulation history are document id, draft number, copy number, employee id. columns in documents mailed are document id, mailed to address id, mailing date.",
    "target": "SELECT role_code FROM ROLES;"
  },
  {
    "prompt": "how many programs are there? database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT count(*) FROM program"
  },
  {
    "prompt": "which states adjoin kentucky database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "How many colleges in total? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT count(*) FROM College"
  },
  {
    "prompt": "How many employees do we have? database is cre_Doc_Control_Systems. tables are reference document types, roles, addresses, reference document status, reference shipping agents, documents, employees, document drafts, draft copies, circulation history, documents mailed. columns in reference document types are document type code, document type description. columns in roles are role code, role description. columns in addresses are address id, address details. columns in reference document status are document status code, document status description. columns in reference shipping agents are shipping agent code, shipping agent name, shipping agent description. columns in documents are document id, document status code, document type code, shipping agent code, receipt date, receipt number, other details. columns in employees are employee id, role code, employee name, other details. columns in document drafts are document id, draft number, draft details. columns in draft copies are document id, draft number, copy number. columns in circulation history are document id, draft number, copy number, employee id. columns in documents mailed are document id, mailed to address id, mailing date.",
    "target": "SELECT count(*) FROM Employees;"
  },
  {
    "prompt": "How many distinct allergies are there? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT count(DISTINCT allergytype) FROM Allergy_type"
  },
  {
    "prompt": "What are the official names of cities, ordered descending by population? database is farm. tables are city, farm, farm competition, competition record. columns in city are city id, official name, status, area km 2, population, census ranking. columns in farm are farm id, year, total horses, working horses, total cattle, oxen, bulls, cows, pigs, sheep and goats. columns in farm competition are competition id, year, theme, host city id, hosts. columns in competition record are competition id, farm id, rank.",
    "target": "SELECT Official_Name FROM city ORDER BY Population DESC"
  },
  {
    "prompt": "Show ids for all the male faculty. database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT FacID FROM Faculty WHERE Sex  =  'M'"
  },
  {
    "prompt": "What is the zip code the county named \"Howard\" is located in? database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\""
  },
  {
    "prompt": "find the number of different programs that are broadcast during night time. database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night'"
  },
  {
    "prompt": "What are the different types of video games? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT DISTINCT gtype FROM Video_games"
  },
  {
    "prompt": "What are the student ids of students who dont have any allergies? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy"
  },
  {
    "prompt": "Find the branch names of banks in the New York state. database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT bname FROM bank WHERE state  =  'New York'"
  },
  {
    "prompt": "What is the maximum enrollment across all schools? database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT max(Enrollment) FROM university"
  },
  {
    "prompt": "What is the list of program names, sorted by the order of launch date? database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT name FROM program ORDER BY launch"
  },
  {
    "prompt": "Show the number of accounts. database is customers_and_invoices. tables are customers, orders, invoices, accounts, product categories, products, financial transactions, order items, invoice line items. columns in customers are customer id, customer first name, customer middle initial, customer last name, gender, email address, login name, login password, phone number, town city, state county province, country. columns in orders are order id, customer id, date order placed, order details. columns in invoices are invoice number, order id, invoice date. columns in accounts are account id, customer id, date account opened, account name, other account details. columns in product categories are production type code, product type description, vat rating. columns in products are product id, parent product id, production type code, unit price, product name, product color, product size. columns in financial transactions are transaction id, account id, invoice number, transaction type, transaction date, transaction amount, transaction comment, other transaction details. columns in order items are order item id, order id, product id, product quantity, other order item details. columns in invoice line items are order item id, invoice number, product id, product title, product quantity, product price, derived product cost, derived vat payable, derived total cost.",
    "target": "SELECT count(*) FROM Accounts"
  },
  {
    "prompt": "Find the title of the course that is offered by more than one department. database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1"
  },
  {
    "prompt": "How many budget types do we have? database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT count(*) FROM Ref_budget_codes"
  },
  {
    "prompt": "What is the complete description of the job of a researcher? database is tracking_grants_for_research. tables are document types, documents, grants, organisation types, organisations, project outcomes, project staff, projects, research outcomes, research staff, staff roles, tasks. columns in document types are document type code, document description. columns in documents are document id, document type code, grant id, sent date, response received date, other details. columns in grants are grant id, organisation id, grant amount, grant start date, grant end date, other details. columns in organisation types are organisation type, organisation type description. columns in organisations are organisation id, organisation type, organisation details. columns in project outcomes are project id, outcome code, outcome details. columns in project staff are staff id, project id, role code, date from, date to, other details. columns in projects are project id, organisation id, project details. columns in research outcomes are outcome code, outcome description. columns in research staff are staff id, employer organisation id, staff details. columns in staff roles are role code, role description. columns in tasks are task id, project id, task details, eg agree objectives.",
    "target": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'"
  },
  {
    "prompt": "What is the average unit price of all the tracks? database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT AVG(UnitPrice) FROM TRACK"
  },
  {
    "prompt": "Find the product category description of the product category with code \"Spices\". database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\""
  },
  {
    "prompt": "name all the lakes of us database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT lake_name FROM lake;"
  },
  {
    "prompt": "List the codes of all courses that take place in room KLR209. database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'"
  },
  {
    "prompt": "How many invoices do we have? database is customers_and_invoices. tables are customers, orders, invoices, accounts, product categories, products, financial transactions, order items, invoice line items. columns in customers are customer id, customer first name, customer middle initial, customer last name, gender, email address, login name, login password, phone number, town city, state county province, country. columns in orders are order id, customer id, date order placed, order details. columns in invoices are invoice number, order id, invoice date. columns in accounts are account id, customer id, date account opened, account name, other account details. columns in product categories are production type code, product type description, vat rating. columns in products are product id, parent product id, production type code, unit price, product name, product color, product size. columns in financial transactions are transaction id, account id, invoice number, transaction type, transaction date, transaction amount, transaction comment, other transaction details. columns in order items are order item id, order id, product id, product quantity, other order item details. columns in invoice line items are order item id, invoice number, product id, product title, product quantity, product price, derived product cost, derived vat payable, derived total cost.",
    "target": "SELECT count(*) FROM Invoices"
  },
  {
    "prompt": "how high is the highest point in america database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT MAX ( highest_elevation ) FROM highlow;"
  },
  {
    "prompt": "List all the activities we have. database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT activity_name FROM Activity"
  },
  {
    "prompt": "What is the average rating of reviews written in year 2014 ? database is yelp. tables are business, category, user, checkin, neighbourhood, review, tip. columns in business are bid, business id, name, full address, city, latitude, longitude, review count, is open, rating, state. columns in category are id, business id, category name. columns in user are uid, user id, name. columns in checkin are cid, business id, count, day. columns in neighbourhood are id, business id, neighbourhood name. columns in review are rid, business id, user id, rating, text, year, month. columns in tip are tip id, business id, text, user id, likes, year, month.",
    "target": "SELECT AVG ( rating ) FROM review WHERE YEAR  =  2014;"
  },
  {
    "prompt": "Show all locations with only 1 station. database is train_station. tables are station, train, train station. columns in station are station id, name, annual entry exit, annual interchanges, total passengers, location, main services, number of platforms. columns in train are train id, name, time, service. columns in train station are train id, station id.",
    "target": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1"
  },
  {
    "prompt": "Count the number of bank branches. database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT count(*) FROM bank"
  },
  {
    "prompt": "What is the carrier of the most expensive phone? database is phone_market. tables are phone, market, phone market. columns in phone are name, phone id, memory in g, carrier, price. columns in market are market id, district, num of employees, num of shops, ranking. columns in phone market are market id, phone id, num of stock.",
    "target": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1"
  },
  {
    "prompt": "how many cities are there in usa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( city_name ) FROM city;"
  },
  {
    "prompt": "What is the type of video game Call of Destiny. database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\""
  },
  {
    "prompt": "How many different card types are there? database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT count(DISTINCT card_type_code) FROM Customers_Cards"
  },
  {
    "prompt": "How many cities have a stadium that was opened before the year of 2006? database is swimming. tables are swimmer, stadium, event, record. columns in swimmer are id, name, nationality, meter 100, meter 200, meter 300, meter 400, meter 500, meter 600, meter 700, time. columns in stadium are id, name, capacity, city, country, opening year. columns in event are id, name, stadium id, year. columns in record are id, result, swimmer id, event id.",
    "target": "SELECT count(DISTINCT city) FROM stadium WHERE opening_year  <  2006"
  },
  {
    "prompt": "What are the dates of publications in descending order of price? database is book_2. tables are publication, book. columns in publication are publication id, book id, publisher, publication date, price. columns in book are book id, title, issues, writer.",
    "target": "SELECT Publication_Date FROM publication ORDER BY Price DESC"
  },
  {
    "prompt": "Which category does the product named \"flax\" belong to? database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\""
  },
  {
    "prompt": "What are the census rankings of cities that do not have the status \"Village\"? database is farm. tables are city, farm, farm competition, competition record. columns in city are city id, official name, status, area km 2, population, census ranking. columns in farm are farm id, year, total horses, working horses, total cattle, oxen, bulls, cows, pigs, sheep and goats. columns in farm competition are competition id, year, theme, host city id, hosts. columns in competition record are competition id, farm id, rank.",
    "target": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\""
  },
  {
    "prompt": "Return the names of products in the category Spices. database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\""
  },
  {
    "prompt": "Count the number of documents. database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT count(*) FROM Documents"
  },
  {
    "prompt": "What are the different allergy types? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT DISTINCT allergytype FROM Allergy_type"
  },
  {
    "prompt": "Return the cities with more than 3 airports in the United States. database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3"
  },
  {
    "prompt": "Show all the distinct institution types. database is protein_institute. tables are building, institution, protein. columns in building are building id, name, street address, years as tallest, height feet, floors. columns in institution are institution id, institution, location, founded, type, enrollment, team, primary conference, building id. columns in protein are common name, protein name, divergence from human lineage, accession number, sequence length, sequence identity to human protein, institution id.",
    "target": "SELECT DISTINCT TYPE FROM institution"
  },
  {
    "prompt": "What are the ids of all students who have attended at least one course? database is student_assessment. tables are addresses, people, students, courses, people addresses, student course registrations, student course attendance, candidates, candidate assessments. columns in addresses are address id, line 1, line 2, city, zip postcode, state province county, country. columns in people are person id, first name, middle name, last name, cell mobile number, email address, login name, password. columns in students are student id, student details. columns in courses are course id, course name, course description, other details. columns in people addresses are person address id, person id, address id, date from, date to. columns in student course registrations are student id, course id, registration date. columns in student course attendance are student id, course id, date of attendance. columns in candidates are candidate id, candidate details. columns in candidate assessments are candidate id, qualification, assessment date, asessment outcome code.",
    "target": "SELECT student_id FROM student_course_attendance"
  },
  {
    "prompt": "List the titles of all items in alphabetic order . database is epinions_1. tables are item, review, useracct, trust. columns in item are item id, title. columns in review are a id, user id, item id, rating, rank. columns in useracct are user id, name. columns in trust are source user id, target user id, trust.",
    "target": "SELECT title FROM item ORDER BY title"
  },
  {
    "prompt": "what states are next to the ohio database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
  },
  {
    "prompt": "what are the rivers of illinois database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
  },
  {
    "prompt": "Show all the distinct buildings that have faculty rooms. database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT DISTINCT building FROM Faculty"
  },
  {
    "prompt": "What is the average age of female (sex is F) students? database is voter_2. tables are student, voting record. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in voting record are student id, registration date, election cycle, president vote, vice president vote, secretary vote, treasurer vote, class president vote, class senator vote.",
    "target": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\""
  },
  {
    "prompt": "What are the first names of all the different drivers in alphabetical order? database is formula_1. tables are circuits, races, drivers, status, seasons, constructors, constructor standings, results, driver standings, constructor results, qualifying, pit stops, lap times. columns in circuits are circuit id, circuit reference, name, location, country, latitude, longitude, altitude, url. columns in races are race id, year, round, circuit id, name, date, time, url. columns in drivers are driver id, driver reference, number, code, forename, surname, dob, nationality, url. columns in status are status id, status. columns in seasons are year, url. columns in constructors are constructor id, constructor reference, name, nationality, url. columns in constructor standings are constructor standings id, race id, constructor id, points, position, position text, wins. columns in results are result id, race id, driver id, constructor id, number, grid, position, position text, position order, points, laps, time, milliseconds, fastest lap, rank, fastest lap time, fastest lap speed, status id. columns in driver standings are driver standings id, race id, driver id, points, position, position text, wins. columns in constructor results are constructor results id, race id, constructor id, points, status. columns in qualifying are qualify id, race id, driver id, constructor id, number, position, q1, q2, q3. columns in pit stops are race id, driver id, stop, lap, time, duration, milliseconds. columns in lap times are race id, driver id, lap, position, time, milliseconds.",
    "target": "SELECT DISTINCT forename FROM drivers ORDER BY forename ASC"
  },
  {
    "prompt": "How many companies are headquartered in the US? database is company_employee. tables are people, company, employment. columns in people are people id, age, name, nationality, graduation college. columns in company are company id, name, headquarters, industry, sales in billion, profits in billion, assets in billion, market value in billion. columns in employment are company id, people id, year working.",
    "target": "SELECT count(*) FROM company WHERE Headquarters  =  'USA'"
  },
  {
    "prompt": "What is the number of departments in Division \"AS\"? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"AS\""
  },
  {
    "prompt": "How many storms had death records? database is storm_record. tables are storm, region, affected region. columns in storm are storm id, name, dates active, max speed, damage millions usd, number deaths. columns in region are region id, region code, region name. columns in affected region are region id, storm id, number city affected.",
    "target": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0"
  },
  {
    "prompt": "how tall is the highest point in delaware database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";"
  },
  {
    "prompt": "Show the delegate from district 1 in election. database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT Delegate FROM election WHERE District  =  1"
  },
  {
    "prompt": "Give the phones for departments in room 268. database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268"
  },
  {
    "prompt": "How many allergy entries are there? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT count(DISTINCT allergy) FROM Allergy_type"
  },
  {
    "prompt": "List all the distinct cities database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT DISTINCT city FROM addresses"
  },
  {
    "prompt": "Show all different home cities. database is school_bus. tables are driver, school, school bus. columns in driver are driver id, name, party, home city, age. columns in school are school id, grade, school, location, type. columns in school bus are school id, driver id, years working, if full time.",
    "target": "SELECT DISTINCT home_city FROM driver"
  },
  {
    "prompt": "Count the number of distinct governors. database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT count(DISTINCT Governor) FROM party"
  },
  {
    "prompt": "What are all the album titles, in alphabetical order? database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT Title FROM ALBUM ORDER BY Title"
  },
  {
    "prompt": "Show the number of locations. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT count(*) FROM Ref_locations"
  },
  {
    "prompt": "How many airlines are there? database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT count(*) FROM airlines"
  },
  {
    "prompt": "Return me the number of cities that has \" Panda Express \" . database is yelp. tables are business, category, user, checkin, neighbourhood, review, tip. columns in business are bid, business id, name, full address, city, latitude, longitude, review count, is open, rating, state. columns in category are id, business id, category name. columns in user are uid, user id, name. columns in checkin are cid, business id, count, day. columns in neighbourhood are id, business id, neighbourhood name. columns in review are rid, business id, user id, rating, text, year, month. columns in tip are tip id, business id, text, user id, likes, year, month.",
    "target": "SELECT COUNT ( DISTINCT city ) FROM business WHERE name  =  \"Panda Express\";"
  },
  {
    "prompt": "How many students have cat allergies? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT count(*) FROM Has_allergy WHERE Allergy  =  \"Cat\""
  },
  {
    "prompt": "What are the names of everybody who has exactly one friend? database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1"
  },
  {
    "prompt": "What is the total number of faculty members? database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT count(*) FROM Faculty"
  },
  {
    "prompt": "How many bands are there? database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT count(*) FROM Band"
  },
  {
    "prompt": "How many dorms have amenities? database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT count(DISTINCT dormid) FROM has_amenity"
  },
  {
    "prompt": "What are the names of the courses in alphabetical order? database is student_assessment. tables are addresses, people, students, courses, people addresses, student course registrations, student course attendance, candidates, candidate assessments. columns in addresses are address id, line 1, line 2, city, zip postcode, state province county, country. columns in people are person id, first name, middle name, last name, cell mobile number, email address, login name, password. columns in students are student id, student details. columns in courses are course id, course name, course description, other details. columns in people addresses are person address id, person id, address id, date from, date to. columns in student course registrations are student id, course id, registration date. columns in student course attendance are student id, course id, date of attendance. columns in candidates are candidate id, candidate details. columns in candidate assessments are candidate id, qualification, assessment date, asessment outcome code.",
    "target": "SELECT course_name FROM courses ORDER BY course_name"
  },
  {
    "prompt": "Show the team that have at least two technicians. database is machine_repair. tables are repair, machine, technician, repair assignment. columns in repair are repair id, name, launch date, notes. columns in machine are machine id, making year, class, team, machine series, value points, quality rank. columns in technician are technician id, name, team, starting year, age. columns in repair assignment are technician id, repair id, machine id.",
    "target": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2"
  },
  {
    "prompt": "Find the last name of the staff whose email address contains \"wrau\". database is customer_complaints. tables are staff, customers, products, complaints. columns in staff are staff id, gender, first name, last name, email address, phone number. columns in customers are customer id, customer type code, address line 1, address line 2, town city, state, email address, phone number. columns in products are product id, parent product id, product category code, date product first available, date product discontinued, product name, product description, product price. columns in complaints are complaint id, product id, customer id, complaint outcome code, complaint status code, complaint type code, date complaint raised, date complaint closed, staff id.",
    "target": "SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\""
  },
  {
    "prompt": "What is the date of the performance with the highest number of attendees? database is performance_attendance. tables are member, performance, member attendance. columns in member are member id, name, nationality, role. columns in performance are performance id, date, host, location, attendance. columns in member attendance are member id, performance id, num of pieces.",
    "target": "SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1"
  },
  {
    "prompt": "How many accounts do we have? database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT count(*) FROM Accounts"
  },
  {
    "prompt": "What are the themes of parties ordered by the number of hosts in ascending manner? database is party_host. tables are party, host, party host. columns in party are party id, party theme, location, first year, last year, number of hosts. columns in host are host id, name, nationality, age. columns in party host are party id, host id, is main in charge.",
    "target": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC"
  },
  {
    "prompt": "What are the descriptions for the aircrafts? database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT Description FROM aircraft"
  },
  {
    "prompt": "List all information in the item table. database is epinions_1. tables are item, review, useracct, trust. columns in item are item id, title. columns in review are a id, user id, item id, rating, rank. columns in useracct are user id, name. columns in trust are source user id, target user id, trust.",
    "target": "SELECT * FROM item"
  },
  {
    "prompt": "number of states bordering kentucky database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "List the name of browsers in descending order by market share. database is browser_web. tables are web client accelerator, browser, accelerator compatible browser. columns in web client accelerator are id, name, operating system, client, connection. columns in browser are id, name, market share. columns in accelerator compatible browser are accelerator id, browser id, compatible since year.",
    "target": "SELECT name FROM browser ORDER BY market_share DESC"
  },
  {
    "prompt": "List the first name of all employees with job code PROF ordered by their date of birth. database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob"
  },
  {
    "prompt": "What are the names of all people, ordered by their date of birth? database is candidate_poll. tables are candidate, people. columns in candidate are candidate id, people id, poll source, date, support rate, consider rate, oppose rate, unsure rate. columns in people are people id, sex, name, date of birth, height, weight.",
    "target": "SELECT name FROM people ORDER BY date_of_birth"
  },
  {
    "prompt": "How many claim processing stages are there in total? database is insurance_and_eClaims. tables are customers, staff, policies, claim headers, claims documents, claims processing stages, claims processing. columns in customers are customer id, customer details. columns in staff are staff id, staff details. columns in policies are policy id, customer id, policy type code, start date, end date. columns in claim headers are claim header id, claim status code, claim type code, policy id, date of claim, date of settlement, amount claimed, amount piad. columns in claims documents are claim id, document type code, created by staff id, created date. columns in claims processing stages are claim stage id, next claim stage id, claim status name, claim status description. columns in claims processing are claim processing id, claim id, claim outcome code, claim stage id, staff id.",
    "target": "SELECT count(*) FROM claims_processing_stages"
  },
  {
    "prompt": "How many patents outcomes were listed for all the projects? database is tracking_grants_for_research. tables are document types, documents, grants, organisation types, organisations, project outcomes, project staff, projects, research outcomes, research staff, staff roles, tasks. columns in document types are document type code, document description. columns in documents are document id, document type code, grant id, sent date, response received date, other details. columns in grants are grant id, organisation id, grant amount, grant start date, grant end date, other details. columns in organisation types are organisation type, organisation type description. columns in organisations are organisation id, organisation type, organisation details. columns in project outcomes are project id, outcome code, outcome details. columns in project staff are staff id, project id, role code, date from, date to, other details. columns in projects are project id, organisation id, project details. columns in research outcomes are outcome code, outcome description. columns in research staff are staff id, employer organisation id, staff details. columns in staff roles are role code, role description. columns in tasks are task id, project id, task details, eg agree objectives.",
    "target": "SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent'"
  },
  {
    "prompt": "What is average enrollment of colleges in the state FL? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT avg(enr) FROM College WHERE state  =  'FL'"
  },
  {
    "prompt": "What are the countries of all airlines whose names start with Orbit? database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'"
  },
  {
    "prompt": "How many addresses are in the district of California? database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT count(*) FROM address WHERE district  =  'California'"
  },
  {
    "prompt": "What are the students ids of students who have more than one allergy? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2"
  },
  {
    "prompt": "What are the three most costly procedures? database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT name FROM procedures ORDER BY cost LIMIT 3"
  },
  {
    "prompt": "Find the three most expensive procedures. database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT name FROM procedures ORDER BY cost LIMIT 3"
  },
  {
    "prompt": "How many different kinds of clients are supported by the web clients accelerators? database is browser_web. tables are web client accelerator, browser, accelerator compatible browser. columns in web client accelerator are id, name, operating system, client, connection. columns in browser are id, name, market share. columns in accelerator compatible browser are accelerator id, browser id, compatible since year.",
    "target": "SELECT count(DISTINCT client) FROM web_client_accelerator"
  },
  {
    "prompt": "What is the maximum page size for everything that has more than 3 products listed? database is store_product. tables are product, store, district, store product, store district. columns in product are product id, product, dimensions, dpi, pages per minute color, max page size, interface. columns in store are store id, store name, type, area size, number of product category, ranking. columns in district are district id, district name, headquartered city, city population, city area. columns in store product are store id, product id. columns in store district are store id, district id.",
    "target": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3"
  },
  {
    "prompt": "Find the phone number of performer \"Ashley\". database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\""
  },
  {
    "prompt": "What is the document type code for document type \"Paper\"? database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\""
  },
  {
    "prompt": "which poll source does the highest oppose rate come from? database is candidate_poll. tables are candidate, people. columns in candidate are candidate id, people id, poll source, date, support rate, consider rate, oppose rate, unsure rate. columns in people are people id, sex, name, date of birth, height, weight.",
    "target": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1"
  },
  {
    "prompt": "Which channels are not owned by CCTV? Give me the channel names. database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT name FROM channel WHERE OWNER != 'CCTV'"
  },
  {
    "prompt": "Which winery is the wine that has the highest score from? database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1"
  },
  {
    "prompt": "Who are the players from UCLA? database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT Player FROM match_season WHERE College  =  \"UCLA\""
  },
  {
    "prompt": "Count the number of rooms that are not in the Lamberton building. database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT count(*) FROM classroom WHERE building != 'Lamberton'"
  },
  {
    "prompt": "Count the total number of settlements made. database is insurance_policies. tables are customers, customer policies, claims, settlements, payments. columns in customers are customer id, customer details. columns in customer policies are policy id, customer id, policy type code, start date, end date. columns in claims are claim id, policy id, date claim made, date claim settled, amount claimed, amount settled. columns in settlements are settlement id, claim id, date claim made, date claim settled, amount claimed, amount settled, customer policy id. columns in payments are payment id, settlement id, payment method code, date payment made, amount payment.",
    "target": "SELECT count(*) FROM Settlements"
  },
  {
    "prompt": "Return the total number of distinct customers. database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT count(*) FROM customers"
  },
  {
    "prompt": "return me the number of the organizations in \" North America \" . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT COUNT ( DISTINCT name ) FROM organization WHERE continent  =  \"North America\";"
  },
  {
    "prompt": "List the description of all aircrafts. database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT Description FROM aircraft"
  },
  {
    "prompt": "What are the titles of all albums that start with A in alphabetical order? database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;"
  },
  {
    "prompt": "List the names of all distinct races in reversed  lexicographic order? database is formula_1. tables are circuits, races, drivers, status, seasons, constructors, constructor standings, results, driver standings, constructor results, qualifying, pit stops, lap times. columns in circuits are circuit id, circuit reference, name, location, country, latitude, longitude, altitude, url. columns in races are race id, year, round, circuit id, name, date, time, url. columns in drivers are driver id, driver reference, number, code, forename, surname, dob, nationality, url. columns in status are status id, status. columns in seasons are year, url. columns in constructors are constructor id, constructor reference, name, nationality, url. columns in constructor standings are constructor standings id, race id, constructor id, points, position, position text, wins. columns in results are result id, race id, driver id, constructor id, number, grid, position, position text, position order, points, laps, time, milliseconds, fastest lap, rank, fastest lap time, fastest lap speed, status id. columns in driver standings are driver standings id, race id, driver id, points, position, position text, wins. columns in constructor results are constructor results id, race id, constructor id, points, status. columns in qualifying are qualify id, race id, driver id, constructor id, number, position, q1, q2, q3. columns in pit stops are race id, driver id, stop, lap, time, duration, milliseconds. columns in lap times are race id, driver id, lap, position, time, milliseconds.",
    "target": "SELECT DISTINCT name FROM races ORDER BY name DESC"
  },
  {
    "prompt": "How many tasks are there? database is tracking_grants_for_research. tables are document types, documents, grants, organisation types, organisations, project outcomes, project staff, projects, research outcomes, research staff, staff roles, tasks. columns in document types are document type code, document description. columns in documents are document id, document type code, grant id, sent date, response received date, other details. columns in grants are grant id, organisation id, grant amount, grant start date, grant end date, other details. columns in organisation types are organisation type, organisation type description. columns in organisations are organisation id, organisation type, organisation details. columns in project outcomes are project id, outcome code, outcome details. columns in project staff are staff id, project id, role code, date from, date to, other details. columns in projects are project id, organisation id, project details. columns in research outcomes are outcome code, outcome description. columns in research staff are staff id, employer organisation id, staff details. columns in staff roles are role code, role description. columns in tasks are task id, project id, task details, eg agree objectives.",
    "target": "SELECT count(*) FROM Tasks"
  },
  {
    "prompt": "How many scientists are there? database is scientist_1. tables are scientists, projects, assigned to. columns in scientists are ssn, name. columns in projects are code, name, hours. columns in assigned to are scientist, project.",
    "target": "SELECT count(*) FROM scientists"
  },
  {
    "prompt": "How many tasks are there in total? database is tracking_grants_for_research. tables are document types, documents, grants, organisation types, organisations, project outcomes, project staff, projects, research outcomes, research staff, staff roles, tasks. columns in document types are document type code, document description. columns in documents are document id, document type code, grant id, sent date, response received date, other details. columns in grants are grant id, organisation id, grant amount, grant start date, grant end date, other details. columns in organisation types are organisation type, organisation type description. columns in organisations are organisation id, organisation type, organisation details. columns in project outcomes are project id, outcome code, outcome details. columns in project staff are staff id, project id, role code, date from, date to, other details. columns in projects are project id, organisation id, project details. columns in research outcomes are outcome code, outcome description. columns in research staff are staff id, employer organisation id, staff details. columns in staff roles are role code, role description. columns in tasks are task id, project id, task details, eg agree objectives.",
    "target": "SELECT count(*) FROM Tasks"
  },
  {
    "prompt": "What is the average number of international passengers for an airport? database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT avg(International_Passengers) FROM airport"
  },
  {
    "prompt": "What is the number of technicians? database is machine_repair. tables are repair, machine, technician, repair assignment. columns in repair are repair id, name, launch date, notes. columns in machine are machine id, making year, class, team, machine series, value points, quality rank. columns in technician are technician id, name, team, starting year, age. columns in repair assignment are technician id, repair id, machine id.",
    "target": "SELECT count(*) FROM technician"
  },
  {
    "prompt": "In which year did the most recent crime happen? database is perpetrator. tables are perpetrator, people. columns in perpetrator are perpetrator id, people id, date, year, location, country, killed, injured. columns in people are people id, name, height, weight, home town.",
    "target": "SELECT max(YEAR) FROM perpetrator;"
  },
  {
    "prompt": "Find the last name of female (sex is F) students in the descending order of age. database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT LName FROM STUDENT WHERE Sex  =  \"F\" ORDER BY Age DESC"
  },
  {
    "prompt": "How many patients stay in room 112? database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT count(patient) FROM stay WHERE room  =  112"
  },
  {
    "prompt": "List the name of enzymes in descending lexicographical order. database is medicine_enzyme_interaction. tables are medicine, enzyme, medicine enzyme interaction. columns in medicine are id, name, trade name, fda approved. columns in enzyme are id, name, location, product, chromosome, omim, porphyria. columns in medicine enzyme interaction are enzyme id, medicine id, interaction type.",
    "target": "SELECT name FROM enzyme ORDER BY name DESC"
  },
  {
    "prompt": "Find all the policy types that are used by more than 2 customers. database is insurance_and_eClaims. tables are customers, staff, policies, claim headers, claims documents, claims processing stages, claims processing. columns in customers are customer id, customer details. columns in staff are staff id, staff details. columns in policies are policy id, customer id, policy type code, start date, end date. columns in claim headers are claim header id, claim status code, claim type code, policy id, date of claim, date of settlement, amount claimed, amount piad. columns in claims documents are claim id, document type code, created by staff id, created date. columns in claims processing stages are claim stage id, next claim stage id, claim status name, claim status description. columns in claims processing are claim processing id, claim id, claim outcome code, claim stage id, staff id.",
    "target": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2"
  },
  {
    "prompt": "what state is springfield located in database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "What is the description of role code ED? database is cre_Doc_Control_Systems. tables are reference document types, roles, addresses, reference document status, reference shipping agents, documents, employees, document drafts, draft copies, circulation history, documents mailed. columns in reference document types are document type code, document type description. columns in roles are role code, role description. columns in addresses are address id, address details. columns in reference document status are document status code, document status description. columns in reference shipping agents are shipping agent code, shipping agent name, shipping agent description. columns in documents are document id, document status code, document type code, shipping agent code, receipt date, receipt number, other details. columns in employees are employee id, role code, employee name, other details. columns in document drafts are document id, draft number, draft details. columns in draft copies are document id, draft number, copy number. columns in circulation history are document id, draft number, copy number, employee id. columns in documents mailed are document id, mailed to address id, mailing date.",
    "target": "SELECT role_description FROM ROLES WHERE role_code = \"ED\";"
  },
  {
    "prompt": "how many people live in california database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM state WHERE state_name  =  \"california\";"
  },
  {
    "prompt": "What is the average number of working horses of farms with more than 5000 total number of horses? database is farm. tables are city, farm, farm competition, competition record. columns in city are city id, official name, status, area km 2, population, census ranking. columns in farm are farm id, year, total horses, working horses, total cattle, oxen, bulls, cows, pigs, sheep and goats. columns in farm competition are competition id, year, theme, host city id, hosts. columns in competition record are competition id, farm id, rank.",
    "target": "SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000"
  },
  {
    "prompt": "What is the list of school locations sorted in ascending order of school enrollment? database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT LOCATION FROM school ORDER BY Enrollment ASC"
  },
  {
    "prompt": "Which department has the lowest budget? database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT dept_name FROM department ORDER BY budget LIMIT 1"
  },
  {
    "prompt": "Return the maximum number of points for climbers from the United Kingdom. database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\""
  },
  {
    "prompt": "Which locations have 2 or more cinemas with capacity over 300? database is cinema. tables are film, cinema, schedule. columns in film are film id, rank in series, number in season, title, directed by, original air date, production code. columns in cinema are cinema id, name, openning year, capacity, location. columns in schedule are cinema id, film id, date, show times per day, price.",
    "target": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2"
  },
  {
    "prompt": "How many schools are in the basketball match? database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT count(DISTINCT school_id) FROM basketball_match"
  },
  {
    "prompt": "What is the nationality of the journalist with the largest number of years working? database is news_report. tables are event, journalist, news report. columns in event are event id, date, venue, name, event attendance. columns in journalist are journalist id, name, nationality, age, years working. columns in news report are journalist id, event id, work type.",
    "target": "SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1"
  },
  {
    "prompt": "Count the number of products. database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT count(*) FROM products"
  },
  {
    "prompt": "How many different departments are there? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT count(DISTINCT dept_name) FROM department"
  },
  {
    "prompt": "What are the ages of all music artists? database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Age FROM artist"
  },
  {
    "prompt": "Show the ids for projects with at least 2 documents. database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2"
  },
  {
    "prompt": "how many cities are there in the us database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( city_name ) FROM city;"
  },
  {
    "prompt": "Find the name of the product that has the smallest capacity. database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1"
  },
  {
    "prompt": "Show ids of students who dont play video game. database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games"
  },
  {
    "prompt": "How many distinct students have been in detention? database is behavior_monitoring. tables are reference address types, reference detention type, reference incident type, addresses, students, teachers, assessment notes, behavior incident, detention, student addresses, students in detention. columns in reference address types are address type code, address type description. columns in reference detention type are detention type code, detention type description. columns in reference incident type are incident type code, incident type description. columns in addresses are address id, line 1, line 2, line 3, city, zip postcode, state province county, country, other address details. columns in students are student id, address id, first name, middle name, last name, cell mobile number, email address, date first rental, date left university, other student details. columns in teachers are teacher id, address id, first name, middle name, last name, gender, cell mobile number, email address, other details. columns in assessment notes are notes id, student id, teacher id, date of notes, text of notes, other details. columns in behavior incident are incident id, incident type code, student id, date incident start, date incident end, incident summary, recommendations, other details. columns in detention are detention id, detention type code, teacher id, datetime detention start, datetime detention end, detention summary, other details. columns in student addresses are student id, address id, date address from, date address to, monthly rental, other details. columns in students in detention are student id, detention id, incident id.",
    "target": "SELECT count(DISTINCT student_id) FROM Students_in_Detention"
  },
  {
    "prompt": "Show the location codes with at least 3 documents. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3"
  },
  {
    "prompt": "How many furniture components are there in total? database is manufacturer. tables are manufacturer, furniture, furniture manufacte. columns in manufacturer are manufacturer id, open year, name, num of factories, num of shops. columns in furniture are furniture id, name, num of component, market rate. columns in furniture manufacte are manufacturer id, furniture id, price in dollar.",
    "target": "SELECT sum(num_of_component) FROM furniture"
  },
  {
    "prompt": "Show ids for all students who live in CHI. database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT StuID FROM Student WHERE city_code  =  \"CHI\""
  },
  {
    "prompt": "Return the issue date of the volume that has spent the fewest weeks on top. database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1"
  },
  {
    "prompt": "How much was the budget of \" Finding Nemo \" database is imdb. tables are actor, copyright, cast, genre, classification, company, director, producer, directed by, keyword, made by, movie, tags, tv series, writer, written by. columns in actor are aid, gender, name, nationality, birth city, birth year. columns in copyright are id, msid, cid. columns in cast are id, msid, aid, role. columns in genre are gid, genre. columns in classification are id, msid, gid. columns in company are id, name, country code. columns in director are did, gender, name, nationality, birth city, birth year. columns in producer are pid, gender, name, nationality, birth city, birth year. columns in directed by are id, msid, did. columns in keyword are id, keyword. columns in made by are id, msid, pid. columns in movie are mid, title, release year, title aka, budget. columns in tags are id, msid, kid. columns in tv series are sid, title, release year, num of seasons, num of episodes, title aka, budget. columns in writer are wid, gender, name, nationality, num of episodes, birth city, birth year. columns in written by are id, msid, wid.",
    "target": "SELECT budget FROM movie WHERE title  =  \"Finding Nemo\";"
  },
  {
    "prompt": "Give the name of the student in the History department with the most credits. database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1"
  },
  {
    "prompt": "What are the id of students who registered course 301? database is student_assessment. tables are addresses, people, students, courses, people addresses, student course registrations, student course attendance, candidates, candidate assessments. columns in addresses are address id, line 1, line 2, city, zip postcode, state province county, country. columns in people are person id, first name, middle name, last name, cell mobile number, email address, login name, password. columns in students are student id, student details. columns in courses are course id, course name, course description, other details. columns in people addresses are person address id, person id, address id, date from, date to. columns in student course registrations are student id, course id, registration date. columns in student course attendance are student id, course id, date of attendance. columns in candidates are candidate id, candidate details. columns in candidate assessments are candidate id, qualification, assessment date, asessment outcome code.",
    "target": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301"
  },
  {
    "prompt": "What are the prices of wines produced before the year of 2010? database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT Price FROM WINE WHERE YEAR  <  2010"
  },
  {
    "prompt": "which state is the city springfield located in database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "List the names of all distinct wines that have scores higher than 90. database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT Name FROM WINE WHERE score  >  90"
  },
  {
    "prompt": "What is the average age for all person? database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT avg(age) FROM Person"
  },
  {
    "prompt": "What is maximum group equity shareholding of the companies? database is flight_company. tables are airport, operate company, flight. columns in airport are id, city, country, iata, icao, name. columns in operate company are id, name, type, principal activities, incorporated in, group equity shareholding. columns in flight are id, vehicle flight number, date, pilot, velocity, altitude, airport id, company id.",
    "target": "SELECT max(group_equity_shareholding) FROM operate_company"
  },
  {
    "prompt": "What is the list of school locations sorted in descending order of school foundation year? database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT LOCATION FROM school ORDER BY Founded DESC"
  },
  {
    "prompt": "Show me all the restaurants. database is restaurant_1. tables are student, restaurant, type of restaurant, restaurant type, visits restaurant. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in restaurant are restaurant id, restaurant name, address, rating. columns in type of restaurant are restaurant id, restaurant type id. columns in restaurant type are restaurant type id, restaurant type name, restaurant type description. columns in visits restaurant are student id, restaurant id, time, spent.",
    "target": "SELECT ResName FROM Restaurant;"
  },
  {
    "prompt": "What is the location of the festival with the largest number of audience? database is entertainment_awards. tables are festival detail, artwork, nomination. columns in festival detail are festival id, festival name, chair name, location, year, num of audience. columns in artwork are artwork id, type, name. columns in nomination are artwork id, festival id, result.",
    "target": "SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1"
  },
  {
    "prompt": "What are the daily hire costs for the products with substring Book in its name? database is products_for_hire. tables are discount coupons, customers, bookings, products for hire, payments, products booked, view product availability. columns in discount coupons are coupon id, date issued, coupon amount. columns in customers are customer id, coupon id, good or bad customer, first name, last name, gender, date became customer, date last hire. columns in bookings are booking id, customer id, booking status code, returned damaged yes or no, booking start date, booking end date, count hired, amount payable, amount of discount, amount outstanding, amount of refund. columns in products for hire are product id, product type code, daily hire cost, product name, product description. columns in payments are payment id, booking id, customer id, payment type code, amount paid in full yn, payment date, amount due, amount paid. columns in products booked are booking id, product id, returned yes or no, returned late yes or no, booked count, booked amount. columns in view product availability are product id, booking id, status date, available yes or no.",
    "target": "SELECT daily_hire_cost FROM Products_for_hire WHERE product_name LIKE '%Book%'"
  },
  {
    "prompt": "What is the average amount due for all the payments? database is products_for_hire. tables are discount coupons, customers, bookings, products for hire, payments, products booked, view product availability. columns in discount coupons are coupon id, date issued, coupon amount. columns in customers are customer id, coupon id, good or bad customer, first name, last name, gender, date became customer, date last hire. columns in bookings are booking id, customer id, booking status code, returned damaged yes or no, booking start date, booking end date, count hired, amount payable, amount of discount, amount outstanding, amount of refund. columns in products for hire are product id, product type code, daily hire cost, product name, product description. columns in payments are payment id, booking id, customer id, payment type code, amount paid in full yn, payment date, amount due, amount paid. columns in products booked are booking id, product id, returned yes or no, returned late yes or no, booked count, booked amount. columns in view product availability are product id, booking id, status date, available yes or no.",
    "target": "SELECT avg(amount_due) FROM payments"
  },
  {
    "prompt": "Show all distinct building descriptions. database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT DISTINCT building_description FROM Apartment_Buildings"
  },
  {
    "prompt": "Show names for all regions except for Denmark. database is storm_record. tables are storm, region, affected region. columns in storm are storm id, name, dates active, max speed, damage millions usd, number deaths. columns in region are region id, region code, region name. columns in affected region are region id, storm id, number city affected.",
    "target": "SELECT region_name FROM region WHERE region_name != 'Denmark'"
  },
  {
    "prompt": "How many distinct governors are there? database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT count(DISTINCT Governor) FROM party"
  },
  {
    "prompt": "Show the product type codes which have at least two products. database is customers_and_products_contacts. tables are addresses, products, customers, contacts, customer address history, customer orders, order items. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in products are product id, product type code, product name, product price. columns in customers are customer id, payment method code, customer number, customer name, customer address, customer phone, customer email. columns in contacts are contact id, customer id, gender, first name, last name, contact phone. columns in customer address history are customer id, address id, date from, date to. columns in customer orders are order id, customer id, order date, order status code. columns in order items are order item id, order id, product id, order quantity.",
    "target": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING count(*)  >=  2"
  },
  {
    "prompt": "How many different position for players are listed? database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT count(DISTINCT POSITION) FROM player"
  },
  {
    "prompt": "Which membership card has more than 5 members? database is coffee_shop. tables are shop, member, happy hour, happy hour member. columns in shop are shop id, address, num of staff, score, open year. columns in member are member id, name, membership card, age, time of purchase, level of membership, address. columns in happy hour are hh id, shop id, month, num of shaff in charge. columns in happy hour member are hh id, member id, total amount.",
    "target": "SELECT Membership_card FROM member GROUP BY Membership_card HAVING count(*)  >  5"
  },
  {
    "prompt": "Show the name of colleges that have at least two players in descending alphabetical order. database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC"
  },
  {
    "prompt": "List all media types. database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT name FROM media_types;"
  },
  {
    "prompt": "What is the average age for all managers? database is railway. tables are railway, train, manager, railway manage. columns in railway are railway id, railway, builder, built, wheels, location, objectnumber. columns in train are train id, train num, name, from, arrival, railway id. columns in manager are manager id, name, country, working year starts, age, level. columns in railway manage are railway id, manager id, from year.",
    "target": "SELECT avg(Age) FROM manager"
  },
  {
    "prompt": "What is the maximum point for climbers whose country is United Kingdom? database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\""
  },
  {
    "prompt": "Which locations are shared by more than two wrestlers? database is wrestler. tables are wrestler, elimination. columns in wrestler are wrestler id, name, reign, days held, location, event. columns in elimination are elimination id, wrestler id, team, eliminated by, elimination move, time.",
    "target": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2"
  },
  {
    "prompt": "Show the maximum share count of transactions where the amount is smaller than 10000 database is tracking_share_transactions. tables are investors, lots, reference transaction types, transactions, sales, purchases, transactions lots. columns in investors are investor id, investor details. columns in lots are lot id, investor id, lot details. columns in reference transaction types are transaction type code, transaction type description. columns in transactions are transaction id, investor id, transaction type code, date of transaction, amount of transaction, share count, other details. columns in sales are sales transaction id, sales details. columns in purchases are purchase transaction id, purchase details. columns in transactions lots are transaction id, lot id.",
    "target": "SELECT max(share_count) FROM TRANSACTIONS WHERE amount_of_transaction  <  10000"
  },
  {
    "prompt": "What are the unique labels for the albums? database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT count(DISTINCT label) FROM albums"
  },
  {
    "prompt": "Count the number of accounts. database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT count(*) FROM Accounts"
  },
  {
    "prompt": "Find the department name that is in Building \"Mergenthaler\". database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"Mergenthaler\""
  },
  {
    "prompt": "Which teams had more than 3 eliminations? database is wrestler. tables are wrestler, elimination. columns in wrestler are wrestler id, name, reign, days held, location, event. columns in elimination are elimination id, wrestler id, team, eliminated by, elimination move, time.",
    "target": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3"
  },
  {
    "prompt": "What was the date of the earliest payment? database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1"
  },
  {
    "prompt": "Show the distinct countries of managers. database is railway. tables are railway, train, manager, railway manage. columns in railway are railway id, railway, builder, built, wheels, location, objectnumber. columns in train are train id, train num, name, from, arrival, railway id. columns in manager are manager id, name, country, working year starts, age, level. columns in railway manage are railway id, manager id, from year.",
    "target": "SELECT DISTINCT Country FROM manager"
  },
  {
    "prompt": "What are the resident details containing the substring Miss? database is local_govt_and_lot. tables are customers, properties, residents, organizations, services, residents services, things, customer events, customer event notes, timed status of things, timed locations of things. columns in customers are customer id, customer details. columns in properties are property id, property type code, property address, other details. columns in residents are resident id, property id, date moved in, date moved out, other details. columns in organizations are organization id, parent organization id, organization details. columns in services are service id, organization id, service type code, service details. columns in residents services are resident id, service id, date moved in, property id, date requested, date provided, other details. columns in things are thing id, organization id, type of thing code, service type code, service details. columns in customer events are customer event id, customer id, date moved in, property id, resident id, thing id. columns in customer event notes are customer event note id, customer event id, service type code, resident id, property id, date moved in. columns in timed status of things are thing id, date and date, status of thing code. columns in timed locations of things are thing id, date and time, location code.",
    "target": "SELECT other_details FROM Residents WHERE other_details LIKE '%Miss%'"
  },
  {
    "prompt": "what states are next to kentucky database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "What is the location code for the country \"Canada\"? database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\""
  },
  {
    "prompt": "How many kinds of roles are there for the staff? database is tracking_grants_for_research. tables are document types, documents, grants, organisation types, organisations, project outcomes, project staff, projects, research outcomes, research staff, staff roles, tasks. columns in document types are document type code, document description. columns in documents are document id, document type code, grant id, sent date, response received date, other details. columns in grants are grant id, organisation id, grant amount, grant start date, grant end date, other details. columns in organisation types are organisation type, organisation type description. columns in organisations are organisation id, organisation type, organisation details. columns in project outcomes are project id, outcome code, outcome details. columns in project staff are staff id, project id, role code, date from, date to, other details. columns in projects are project id, organisation id, project details. columns in research outcomes are outcome code, outcome description. columns in research staff are staff id, employer organisation id, staff details. columns in staff roles are role code, role description. columns in tasks are task id, project id, task details, eg agree objectives.",
    "target": "SELECT count(DISTINCT role_code) FROM Project_Staff"
  },
  {
    "prompt": "which state has the ohio river database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
  },
  {
    "prompt": "What are the distinct years in which the competitions type is not \"Tournament\"? database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\""
  },
  {
    "prompt": "How many distinct incident type codes are there? database is behavior_monitoring. tables are reference address types, reference detention type, reference incident type, addresses, students, teachers, assessment notes, behavior incident, detention, student addresses, students in detention. columns in reference address types are address type code, address type description. columns in reference detention type are detention type code, detention type description. columns in reference incident type are incident type code, incident type description. columns in addresses are address id, line 1, line 2, line 3, city, zip postcode, state province county, country, other address details. columns in students are student id, address id, first name, middle name, last name, cell mobile number, email address, date first rental, date left university, other student details. columns in teachers are teacher id, address id, first name, middle name, last name, gender, cell mobile number, email address, other details. columns in assessment notes are notes id, student id, teacher id, date of notes, text of notes, other details. columns in behavior incident are incident id, incident type code, student id, date incident start, date incident end, incident summary, recommendations, other details. columns in detention are detention id, detention type code, teacher id, datetime detention start, datetime detention end, detention summary, other details. columns in student addresses are student id, address id, date address from, date address to, monthly rental, other details. columns in students in detention are student id, detention id, incident id.",
    "target": "SELECT count(DISTINCT incident_type_code) FROM Behavior_Incident"
  },
  {
    "prompt": "How many different advisors are listed? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT count(DISTINCT advisor) FROM Student"
  },
  {
    "prompt": "Find the origins from which more than 1 train starts. database is station_weather. tables are train, station, route, weekly weather. columns in train are id, train number, name, origin, destination, time, interval. columns in station are id, network name, services, local authority. columns in route are train id, station id. columns in weekly weather are station id, day of week, high temperature, low temperature, precipitation, wind speed mph.",
    "target": "SELECT origin FROM train GROUP BY origin HAVING count(*)  >  1"
  },
  {
    "prompt": "What are the different album labels listed? database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT DISTINCT label FROM Albums"
  },
  {
    "prompt": "Return the different classes of races. database is race_track. tables are race, track. columns in race are race id, name, class, date, track id. columns in track are track id, name, location, seating, year opened.",
    "target": "SELECT DISTINCT CLASS FROM race"
  },
  {
    "prompt": "number of people in boulder database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM city WHERE city_name  =  \"boulder\";"
  },
  {
    "prompt": "What are the ids of all students who live in CHI? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT StuID FROM Student WHERE city_code  =  \"CHI\""
  },
  {
    "prompt": "Tell me the location of the club \"Hopkins Student Enterprises\". database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT clublocation FROM club WHERE clubname  =  \"Hopkins Student Enterprises\""
  },
  {
    "prompt": "What is the age of the tallest person? database is gymnast. tables are gymnast, people. columns in gymnast are gymnast id, floor exercise points, pommel horse points, rings points, vault points, parallel bars points, horizontal bar points, total points. columns in people are people id, name, age, height, hometown.",
    "target": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1"
  },
  {
    "prompt": "What are the names of all colleges that have two or more players? database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2"
  },
  {
    "prompt": "What are the different location codes for documents? database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT DISTINCT location_code FROM Document_locations"
  },
  {
    "prompt": "Count the number of users that are logged in. database is document_management. tables are roles, users, document structures, functional areas, images, documents, document functional areas, document sections, document sections images. columns in roles are role code, role description. columns in users are user id, role code, user name, user login, password. columns in document structures are document structure code, parent document structure code, document structure description. columns in functional areas are functional area code, parent functional area code, functional area description. columns in images are image id, image alt text, image name, image url. columns in documents are document code, document structure code, document type code, access count, document name. columns in document functional areas are document code, functional area code. columns in document sections are section id, document code, section sequence, section code, section title. columns in document sections images are section id, image id.",
    "target": "SELECT count(*) FROM users WHERE user_login  =  1"
  },
  {
    "prompt": "How many different students are involved in sports? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT count(DISTINCT StuID) FROM Sportsinfo"
  },
  {
    "prompt": "How many film are there? database is film_rank. tables are film, market, film market estimation. columns in film are film id, title, studio, director, gross in dollar. columns in market are market id, country, number cities. columns in film market estimation are estimation id, low estimate, high estimate, film id, type, market id, year.",
    "target": "SELECT count(*) FROM film"
  },
  {
    "prompt": "How many lessons have been cancelled? database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Cancelled\";"
  },
  {
    "prompt": "how many citizens in boulder database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM city WHERE city_name  =  \"boulder\";"
  },
  {
    "prompt": "List the journals published in March , 2011 database is scholar. tables are venue, author, dataset, journal, key phrase, paper, cite, paper dataset, paper key phrase, writes. columns in venue are venue id, venue name. columns in author are author id, author name. columns in dataset are dataset id, dataset name. columns in journal are journal id, journal name. columns in key phrase are key phrase id, key phrase name. columns in paper are paper id, title, venue id, year, number citing, number cited by, journal id. columns in cite are citing paper id, cited paper id. columns in paper dataset are paper id, dataset id. columns in paper key phrase are paper id, key phrase id. columns in writes are paper id, author id.",
    "target": "SELECT DISTINCT journalid FROM paper WHERE YEAR  =  2011 GROUP BY journalid;"
  },
  {
    "prompt": "What are the ids of all students who are not video game players? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games"
  },
  {
    "prompt": "what states surround kentucky database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "What is the count of different game types? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT count(DISTINCT gtype) FROM Video_games"
  },
  {
    "prompt": "Find the person who has exactly one friend. database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1"
  },
  {
    "prompt": "What ranks do we have for faculty? database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT DISTINCT rank FROM Faculty"
  },
  {
    "prompt": "What is the average speed of roller coasters? database is roller_coaster. tables are roller coaster, country. columns in roller coaster are roller coaster id, name, park, country id, length, height, speed, opened, status. columns in country are country id, name, population, area, languages.",
    "target": "SELECT avg(Speed) FROM roller_coaster"
  },
  {
    "prompt": "Count the number of tracks. database is race_track. tables are race, track. columns in race are race id, name, class, date, track id. columns in track are track id, name, location, seating, year opened.",
    "target": "SELECT count(*) FROM track"
  },
  {
    "prompt": "name all the rivers in illinois database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
  },
  {
    "prompt": "Find the names of customers whose name contains \"Diana\". database is insurance_and_eClaims. tables are customers, staff, policies, claim headers, claims documents, claims processing stages, claims processing. columns in customers are customer id, customer details. columns in staff are staff id, staff details. columns in policies are policy id, customer id, policy type code, start date, end date. columns in claim headers are claim header id, claim status code, claim type code, policy id, date of claim, date of settlement, amount claimed, amount piad. columns in claims documents are claim id, document type code, created by staff id, created date. columns in claims processing stages are claim stage id, next claim stage id, claim status name, claim status description. columns in claims processing are claim processing id, claim id, claim outcome code, claim stage id, staff id.",
    "target": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\""
  },
  {
    "prompt": "Find the description of the claim status \"Open\". database is insurance_and_eClaims. tables are customers, staff, policies, claim headers, claims documents, claims processing stages, claims processing. columns in customers are customer id, customer details. columns in staff are staff id, staff details. columns in policies are policy id, customer id, policy type code, start date, end date. columns in claim headers are claim header id, claim status code, claim type code, policy id, date of claim, date of settlement, amount claimed, amount piad. columns in claims documents are claim id, document type code, created by staff id, created date. columns in claims processing stages are claim stage id, next claim stage id, claim status name, claim status description. columns in claims processing are claim processing id, claim id, claim outcome code, claim stage id, staff id.",
    "target": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\""
  },
  {
    "prompt": "Show the names of the three most recent festivals. database is entertainment_awards. tables are festival detail, artwork, nomination. columns in festival detail are festival id, festival name, chair name, location, year, num of audience. columns in artwork are artwork id, type, name. columns in nomination are artwork id, festival id, result.",
    "target": "SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3"
  },
  {
    "prompt": "What is the school code of the accounting department? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT school_code FROM department WHERE dept_name  =  \"Accounting\""
  },
  {
    "prompt": "How many different teams have had eliminated wrestlers? database is wrestler. tables are wrestler, elimination. columns in wrestler are wrestler id, name, reign, days held, location, event. columns in elimination are elimination id, wrestler id, team, eliminated by, elimination move, time.",
    "target": "SELECT COUNT (DISTINCT team) FROM elimination"
  },
  {
    "prompt": "What is the number of ships? database is ship_mission. tables are mission, ship. columns in mission are mission id, ship id, code, launched year, location, speed knots, fate. columns in ship are ship id, name, type, nationality, tonnage.",
    "target": "SELECT count(*) FROM ship"
  },
  {
    "prompt": "what states have rivers named ohio database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
  },
  {
    "prompt": "What is the headquarter of the company whose founder is James? database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT headquarter FROM manufacturers WHERE founder  =  'James'"
  },
  {
    "prompt": "Show the document type code with fewer than 3 documents. database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3"
  },
  {
    "prompt": "How many members are not living in Hartford? database is coffee_shop. tables are shop, member, happy hour, happy hour member. columns in shop are shop id, address, num of staff, score, open year. columns in member are member id, name, membership card, age, time of purchase, level of membership, address. columns in happy hour are hh id, shop id, month, num of shaff in charge. columns in happy hour member are hh id, member id, total amount.",
    "target": "SELECT count(*) FROM member WHERE address != 'Hartford'"
  },
  {
    "prompt": "what are the rivers in the state of illinois database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
  },
  {
    "prompt": "how many citizens in california database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM state WHERE state_name  =  \"california\";"
  },
  {
    "prompt": "Which district has the least area? database is store_product. tables are product, store, district, store product, store district. columns in product are product id, product, dimensions, dpi, pages per minute color, max page size, interface. columns in store are store id, store name, type, area size, number of product category, ranking. columns in district are district id, district name, headquartered city, city population, city area. columns in store product are store id, product id. columns in store district are store id, district id.",
    "target": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1"
  },
  {
    "prompt": "What are the names of all video games that are collectible cards? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT gname FROM Video_games WHERE gtype  =  \"Collectible card game\""
  },
  {
    "prompt": "Find all movies produced in 2015 database is imdb. tables are actor, copyright, cast, genre, classification, company, director, producer, directed by, keyword, made by, movie, tags, tv series, writer, written by. columns in actor are aid, gender, name, nationality, birth city, birth year. columns in copyright are id, msid, cid. columns in cast are id, msid, aid, role. columns in genre are gid, genre. columns in classification are id, msid, gid. columns in company are id, name, country code. columns in director are did, gender, name, nationality, birth city, birth year. columns in producer are pid, gender, name, nationality, birth city, birth year. columns in directed by are id, msid, did. columns in keyword are id, keyword. columns in made by are id, msid, pid. columns in movie are mid, title, release year, title aka, budget. columns in tags are id, msid, kid. columns in tv series are sid, title, release year, num of seasons, num of episodes, title aka, budget. columns in writer are wid, gender, name, nationality, num of episodes, birth city, birth year. columns in written by are id, msid, wid.",
    "target": "SELECT title FROM movie WHERE release_year  =  2015;"
  },
  {
    "prompt": "how many people reside in california database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM state WHERE state_name  =  \"california\";"
  },
  {
    "prompt": "what states does the ohio river run through database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
  },
  {
    "prompt": "How many available hotels are there in total? database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT count(*) FROM HOTELS"
  },
  {
    "prompt": "How many cinema do we have? database is cinema. tables are film, cinema, schedule. columns in film are film id, rank in series, number in season, title, directed by, original air date, production code. columns in cinema are cinema id, name, openning year, capacity, location. columns in schedule are cinema id, film id, date, show times per day, price.",
    "target": "SELECT count(*) FROM cinema"
  },
  {
    "prompt": "What campuses are located in Chico? database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\""
  },
  {
    "prompt": "What is the average weight of all players? database is soccer_1. tables are player attributes, sqlite sequence, player, league, country, team, team attributes. columns in player attributes are id, player fifa api id, player api id, date, overall rating, potential, preferred foot, attacking work rate, defensive work rate, crossing, finishing, heading accuracy, short passing, volleys, dribbling, curve, free kick accuracy, long passing, ball control, acceleration, sprint speed, agility, reactions, balance, shot power, jumping, stamina, strength, long shots, aggression, interceptions, positioning, vision, penalties, marking, standing tackle, sliding tackle, gk diving, gk handling, gk kicking, gk positioning, gk reflexes. columns in sqlite sequence are name, seq. columns in player are id, player api id, player name, player fifa api id, birthday, height, weight. columns in league are id, country id, name. columns in country are id, name. columns in team are id, team api id, team fifa api id, team long name, team short name. columns in team attributes are id, team fifa api id, team api id, date, buildup play speed, buildup play speed class, buildup play dribbling, buildup play dribbling class, buildup play passing, buildup play passing class, buildup play positioning class, chance creation passing, chance creation passing class, chance creation crossing, chance creation crossing class, chance creation shooting, chance creation shooting class, chance creation positioning class, defence pressure, defence pressure class, defence aggression, defence aggression class, defence team width, defence team width class, defence defender line class.",
    "target": "SELECT avg(weight) FROM Player"
  },
  {
    "prompt": "How many body builders are there? database is body_builder. tables are body builder, people. columns in body builder are body builder id, people id, snatch, clean jerk, total. columns in people are people id, name, height, weight, birth date, birth place.",
    "target": "SELECT count(*) FROM body_builder"
  },
  {
    "prompt": "Which customers name contains \"Alex\"? Find the full name. database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\""
  },
  {
    "prompt": "List the dates of debates with number of audience bigger than 150 database is debate. tables are people, debate, debate people. columns in people are people id, district, name, party, age. columns in debate are debate id, date, venue, num of audience. columns in debate people are debate id, affirmative, negative, if affirmative win.",
    "target": "SELECT Date FROM debate WHERE Num_of_Audience  >  150"
  },
  {
    "prompt": "How many artists are from Bangladesh? database is music_1. tables are genre, artist, files, song. columns in genre are genre name, rating, most popular in. columns in artist are artist name, country, gender, preferred genre. columns in files are song id, artist name, file size, duration, formats. columns in song are song name, artist name, country, song id, genre is, rating, languages, releasedate, resolution.",
    "target": "SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\""
  },
  {
    "prompt": "Count the number of countries. database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT count(*) FROM county_public_safety"
  },
  {
    "prompt": "Find all details for each swimmer. database is swimming. tables are swimmer, stadium, event, record. columns in swimmer are id, name, nationality, meter 100, meter 200, meter 300, meter 400, meter 500, meter 600, meter 700, time. columns in stadium are id, name, capacity, city, country, opening year. columns in event are id, name, stadium id, year. columns in record are id, result, swimmer id, event id.",
    "target": "SELECT * FROM swimmer"
  },
  {
    "prompt": "What is the average pages per minute color? database is store_product. tables are product, store, district, store product, store district. columns in product are product id, product, dimensions, dpi, pages per minute color, max page size, interface. columns in store are store id, store name, type, area size, number of product category, ranking. columns in district are district id, district name, headquartered city, city population, city area. columns in store product are store id, product id. columns in store district are store id, district id.",
    "target": "SELECT avg(pages_per_minute_color) FROM product"
  },
  {
    "prompt": "What is the address of each course author or tutor? database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT address_line_1 FROM Course_Authors_and_Tutors"
  },
  {
    "prompt": "How many papers are there ? database is scholar. tables are venue, author, dataset, journal, key phrase, paper, cite, paper dataset, paper key phrase, writes. columns in venue are venue id, venue name. columns in author are author id, author name. columns in dataset are dataset id, dataset name. columns in journal are journal id, journal name. columns in key phrase are key phrase id, key phrase name. columns in paper are paper id, title, venue id, year, number citing, number cited by, journal id. columns in cite are citing paper id, cited paper id. columns in paper dataset are paper id, dataset id. columns in paper key phrase are paper id, key phrase id. columns in writes are paper id, author id.",
    "target": "SELECT DISTINCT COUNT ( DISTINCT paperid ) FROM paper;"
  },
  {
    "prompt": "Find the name of the airport in the city of Goroka. database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT name FROM airports WHERE city  =  'Goroka'"
  },
  {
    "prompt": "Find the number of distinct stages in claim processing. database is insurance_and_eClaims. tables are customers, staff, policies, claim headers, claims documents, claims processing stages, claims processing. columns in customers are customer id, customer details. columns in staff are staff id, staff details. columns in policies are policy id, customer id, policy type code, start date, end date. columns in claim headers are claim header id, claim status code, claim type code, policy id, date of claim, date of settlement, amount claimed, amount piad. columns in claims documents are claim id, document type code, created by staff id, created date. columns in claims processing stages are claim stage id, next claim stage id, claim status name, claim status description. columns in claims processing are claim processing id, claim id, claim outcome code, claim stage id, staff id.",
    "target": "SELECT count(*) FROM claims_processing_stages"
  },
  {
    "prompt": "Show the name of colleges that have at least two players. database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2"
  },
  {
    "prompt": "Find the number of followers for each user. database is twitter_1. tables are follows, tweets, user profiles. columns in follows are user id, follower id. columns in tweets are id, user id, text, create date. columns in user profiles are uid, name, email, partition id, followers.",
    "target": "SELECT count(*) FROM follows GROUP BY f1"
  },
  {
    "prompt": "in which state is springfield database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "Find the names of all English songs. database is music_1. tables are genre, artist, files, song. columns in genre are genre name, rating, most popular in. columns in artist are artist name, country, gender, preferred genre. columns in files are song id, artist name, file size, duration, formats. columns in song are song name, artist name, country, song id, genre is, rating, languages, releasedate, resolution.",
    "target": "SELECT song_name FROM song WHERE languages  =  \"english\""
  },
  {
    "prompt": "Count the number of submissions. database is workshop_paper. tables are workshop, submission, acceptance. columns in workshop are workshop id, date, venue, name. columns in submission are submission id, scores, author, college. columns in acceptance are submission id, workshop id, result.",
    "target": "SELECT count(*) FROM submission"
  },
  {
    "prompt": "Find the ids of orders which are shipped after 2000-01-01. database is tracking_orders. tables are customers, invoices, orders, products, order items, shipments, shipment items. columns in customers are customer id, customer name, customer details. columns in invoices are invoice number, invoice date, invoice details. columns in orders are order id, customer id, order status, date order placed, order details. columns in products are product id, product name, product details. columns in order items are order item id, product id, order id, order item status, order item details. columns in shipments are shipment id, order id, invoice number, shipment tracking number, shipment date, other shipment details. columns in shipment items are shipment id, order item id.",
    "target": "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\""
  },
  {
    "prompt": "What is the reviewer id of Daniel Lewis? database is movie_1. tables are movie, reviewer, rating. columns in movie are movie id, title, year, director. columns in reviewer are reviewer id, name. columns in rating are reviewer id, movie id, rating stars, rating date.",
    "target": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\""
  },
  {
    "prompt": "can you tell me the capital of texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT capital FROM state WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "How many distinct artists do the volumes associate to? database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"
  },
  {
    "prompt": "Count the number of distinct instructors who have taught a course. database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT COUNT (DISTINCT id) FROM teaches"
  },
  {
    "prompt": "How many products are there? database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT count(*) FROM products"
  },
  {
    "prompt": "How many airlines does Russia has? database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT count(*) FROM airlines WHERE country  =  'Russia'"
  },
  {
    "prompt": "How many different colleges were represented at tryouts? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT count(DISTINCT cName) FROM tryout"
  },
  {
    "prompt": "Compute the total amount of settlement across all the settlements. database is insurance_policies. tables are customers, customer policies, claims, settlements, payments. columns in customers are customer id, customer details. columns in customer policies are policy id, customer id, policy type code, start date, end date. columns in claims are claim id, policy id, date claim made, date claim settled, amount claimed, amount settled. columns in settlements are settlement id, claim id, date claim made, date claim settled, amount claimed, amount settled, customer policy id. columns in payments are payment id, settlement id, payment method code, date payment made, amount payment.",
    "target": "SELECT sum(Amount_Settled) FROM Settlements"
  },
  {
    "prompt": "Return all players sorted by college in ascending alphabetical order. database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT player FROM match_season ORDER BY College ASC"
  },
  {
    "prompt": "How many distinct claim outcome codes are there? database is insurance_and_eClaims. tables are customers, staff, policies, claim headers, claims documents, claims processing stages, claims processing. columns in customers are customer id, customer details. columns in staff are staff id, staff details. columns in policies are policy id, customer id, policy type code, start date, end date. columns in claim headers are claim header id, claim status code, claim type code, policy id, date of claim, date of settlement, amount claimed, amount piad. columns in claims documents are claim id, document type code, created by staff id, created date. columns in claims processing stages are claim stage id, next claim stage id, claim status name, claim status description. columns in claims processing are claim processing id, claim id, claim outcome code, claim stage id, staff id.",
    "target": "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing"
  },
  {
    "prompt": "Find the first names of all the authors ordered in alphabetical order. database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT fname FROM authors ORDER BY fname"
  },
  {
    "prompt": "What are the course names, ordered by credits? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT CName FROM COURSE ORDER BY Credits"
  },
  {
    "prompt": "how many states are in the united states database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( state_name ) FROM state;"
  },
  {
    "prompt": "how many colorado rivers are there database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( river_name ) FROM river WHERE river_name  =  \"colorado\";"
  },
  {
    "prompt": "Return the apartment number with the largest number of bedrooms. database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1"
  },
  {
    "prompt": "Show all dates of transactions whose type code is \"SALE\". database is tracking_share_transactions. tables are investors, lots, reference transaction types, transactions, sales, purchases, transactions lots. columns in investors are investor id, investor details. columns in lots are lot id, investor id, lot details. columns in reference transaction types are transaction type code, transaction type description. columns in transactions are transaction id, investor id, transaction type code, date of transaction, amount of transaction, share count, other details. columns in sales are sales transaction id, sales details. columns in purchases are purchase transaction id, purchase details. columns in transactions lots are transaction id, lot id.",
    "target": "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\""
  },
  {
    "prompt": "Return the titles of any movies with an R rating. database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT title FROM film WHERE rating  =  'R'"
  },
  {
    "prompt": "Who is the founders of companies whose first letter is S? database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'"
  },
  {
    "prompt": "When is the last day any resident moved in? database is local_govt_and_lot. tables are customers, properties, residents, organizations, services, residents services, things, customer events, customer event notes, timed status of things, timed locations of things. columns in customers are customer id, customer details. columns in properties are property id, property type code, property address, other details. columns in residents are resident id, property id, date moved in, date moved out, other details. columns in organizations are organization id, parent organization id, organization details. columns in services are service id, organization id, service type code, service details. columns in residents services are resident id, service id, date moved in, property id, date requested, date provided, other details. columns in things are thing id, organization id, type of thing code, service type code, service details. columns in customer events are customer event id, customer id, date moved in, property id, resident id, thing id. columns in customer event notes are customer event note id, customer event id, service type code, resident id, property id, date moved in. columns in timed status of things are thing id, date and date, status of thing code. columns in timed locations of things are thing id, date and time, location code.",
    "target": "SELECT max(date_moved_in) FROM Residents"
  },
  {
    "prompt": "give me the states that border kentucky database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "How many tests have result \"Fail\"? database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  \"Fail\""
  },
  {
    "prompt": "What is the total amount of settlement made for all the settlements? database is insurance_policies. tables are customers, customer policies, claims, settlements, payments. columns in customers are customer id, customer details. columns in customer policies are policy id, customer id, policy type code, start date, end date. columns in claims are claim id, policy id, date claim made, date claim settled, amount claimed, amount settled. columns in settlements are settlement id, claim id, date claim made, date claim settled, amount claimed, amount settled, customer policy id. columns in payments are payment id, settlement id, payment method code, date payment made, amount payment.",
    "target": "SELECT sum(Amount_Settled) FROM Settlements"
  },
  {
    "prompt": "what are the names of the ships ordered by ascending tonnage? database is ship_mission. tables are mission, ship. columns in mission are mission id, ship id, code, launched year, location, speed knots, fate. columns in ship are ship id, name, type, nationality, tonnage.",
    "target": "SELECT Name FROM ship ORDER BY Tonnage ASC"
  },
  {
    "prompt": "Return the unit of measure for Herb products. database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\""
  },
  {
    "prompt": "What are the numbers of all flights that can cover a distance of more than 2000? database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT flno FROM Flight WHERE distance  >  2000"
  },
  {
    "prompt": "How many perpetrators are there? database is perpetrator. tables are perpetrator, people. columns in perpetrator are perpetrator id, people id, date, year, location, country, killed, injured. columns in people are people id, name, height, weight, home town.",
    "target": "SELECT count(*) FROM perpetrator"
  },
  {
    "prompt": "which countries have more than 2 airports? database is flight_company. tables are airport, operate company, flight. columns in airport are id, city, country, iata, icao, name. columns in operate company are id, name, type, principal activities, incorporated in, group equity shareholding. columns in flight are id, vehicle flight number, date, pilot, velocity, altitude, airport id, company id.",
    "target": "SELECT country FROM airport GROUP BY country HAVING count(*)  >  2"
  },
  {
    "prompt": "List the name of ships whose nationality is not \"United States\". database is ship_mission. tables are mission, ship. columns in mission are mission id, ship id, code, launched year, location, speed knots, fate. columns in ship are ship id, name, type, nationality, tonnage.",
    "target": "SELECT Name FROM ship WHERE Nationality != \"United States\""
  },
  {
    "prompt": "Tell me the distinct block codes where some rooms are available. database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0"
  },
  {
    "prompt": "What are the names of everybody sorted by age in descending order? database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT name FROM Person ORDER BY age DESC"
  },
  {
    "prompt": "What are the number of different course codes? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT count(DISTINCT crs_code) FROM CLASS"
  },
  {
    "prompt": "What is the description of the product category with the code Spices? database is products_gen_characteristics. tables are reference characteristic types, reference colors, reference product categories, characteristics, products, product characteristics. columns in reference characteristic types are characteristic type code, characteristic type description. columns in reference colors are color code, color description. columns in reference product categories are product category code, product category description, unit of measure. columns in characteristics are characteristic id, characteristic type code, characteristic data type, characteristic name, other characteristic details. columns in products are product id, color code, product category code, product name, typical buying price, typical selling price, product description, other product details. columns in product characteristics are product id, characteristic id, product characteristic value.",
    "target": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\""
  },
  {
    "prompt": "How many addresses have zip code 197? database is behavior_monitoring. tables are reference address types, reference detention type, reference incident type, addresses, students, teachers, assessment notes, behavior incident, detention, student addresses, students in detention. columns in reference address types are address type code, address type description. columns in reference detention type are detention type code, detention type description. columns in reference incident type are incident type code, incident type description. columns in addresses are address id, line 1, line 2, line 3, city, zip postcode, state province county, country, other address details. columns in students are student id, address id, first name, middle name, last name, cell mobile number, email address, date first rental, date left university, other student details. columns in teachers are teacher id, address id, first name, middle name, last name, gender, cell mobile number, email address, other details. columns in assessment notes are notes id, student id, teacher id, date of notes, text of notes, other details. columns in behavior incident are incident id, incident type code, student id, date incident start, date incident end, incident summary, recommendations, other details. columns in detention are detention id, detention type code, teacher id, datetime detention start, datetime detention end, detention summary, other details. columns in student addresses are student id, address id, date address from, date address to, monthly rental, other details. columns in students in detention are student id, detention id, incident id.",
    "target": "SELECT count(*) FROM ADDRESSES WHERE zip_postcode  =  \"197\""
  },
  {
    "prompt": "Count the number of artists. database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT count(*) FROM artist"
  },
  {
    "prompt": "what is the density of the wyoming database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT density FROM state WHERE state_name  =  \"wyoming\";"
  },
  {
    "prompt": "Count the number of different languages in these films. database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT count(DISTINCT language_id) FROM film"
  },
  {
    "prompt": "What is the mail date of the document with id 7? database is cre_Doc_Control_Systems. tables are reference document types, roles, addresses, reference document status, reference shipping agents, documents, employees, document drafts, draft copies, circulation history, documents mailed. columns in reference document types are document type code, document type description. columns in roles are role code, role description. columns in addresses are address id, address details. columns in reference document status are document status code, document status description. columns in reference shipping agents are shipping agent code, shipping agent name, shipping agent description. columns in documents are document id, document status code, document type code, shipping agent code, receipt date, receipt number, other details. columns in employees are employee id, role code, employee name, other details. columns in document drafts are document id, draft number, draft details. columns in draft copies are document id, draft number, copy number. columns in circulation history are document id, draft number, copy number, employee id. columns in documents mailed are document id, mailed to address id, mailing date.",
    "target": "SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7;"
  },
  {
    "prompt": "Show the ids of the faculty who dont participate in any activity. database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in"
  },
  {
    "prompt": "What is the number of airlines based in Russia? database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT count(*) FROM airlines WHERE country  =  'Russia'"
  },
  {
    "prompt": "List all names of courses with 1 credit? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT CName FROM COURSE WHERE Credits  =  1"
  },
  {
    "prompt": "Find the dates of the tests taken with result \"Pass\". database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\""
  },
  {
    "prompt": "Find the number of distinct gender for dorms. database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT count(DISTINCT gender) FROM dorm"
  },
  {
    "prompt": "How many students exist? database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT count(*) FROM student"
  },
  {
    "prompt": "Select the names of all the products in the store. database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT Name FROM Products"
  },
  {
    "prompt": "Which students are unaffected by allergies? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy"
  },
  {
    "prompt": "Find the number of different cities that employees live in. database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE"
  },
  {
    "prompt": "what is the area of all the states combined database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT SUM ( area ) FROM state;"
  },
  {
    "prompt": "How many video games do you have? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT count(*) FROM Video_games"
  },
  {
    "prompt": "Count the total number of apartment bookings. database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT count(*) FROM Apartment_Bookings"
  },
  {
    "prompt": "Which teachers teach in classroom 109? Give me their last names. database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT lastname FROM teachers WHERE classroom  =  109"
  },
  {
    "prompt": "Find the id of the courses that do not have any prerequisite? database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq"
  },
  {
    "prompt": "What is the song in the volume with the maximum weeks on top? database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1"
  },
  {
    "prompt": "How many customers are from California? database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT count(*) FROM customers WHERE state = \"CA\";"
  },
  {
    "prompt": "How many universities have a location that contains NY? database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\""
  },
  {
    "prompt": "Find the city with post code 255. database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT city FROM addresses WHERE zip_postcode  =  255"
  },
  {
    "prompt": "what states does the ohio river go through database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
  },
  {
    "prompt": "Find the titles of the papers that contain the word \"ML\". database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT title FROM papers WHERE title LIKE \"%ML%\""
  },
  {
    "prompt": "What is the number of flights? database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT count(*) FROM Flight"
  },
  {
    "prompt": "Count the number of artists who have had volumes. database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"
  },
  {
    "prompt": "how many rivers are called colorado database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( river_name ) FROM river WHERE river_name  =  \"colorado\";"
  },
  {
    "prompt": "What is the largest payment amount? database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1"
  },
  {
    "prompt": "Which tests have \"Pass\" results? Return the dates when the tests were taken. database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\""
  },
  {
    "prompt": "What are the price ranges of five star hotels? database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\""
  },
  {
    "prompt": "What is the average number of rooms of apartments with type code \"Studio\"? database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"Studio\""
  },
  {
    "prompt": "Count the number of accounts. database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT count(*) FROM Accounts"
  },
  {
    "prompt": "Which tourist attractions can we get to by bus? Tell me the names of the attractions. database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\""
  },
  {
    "prompt": "what states have cities named springfield database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "Find all the locations whose names contain the word \"film\". database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\""
  },
  {
    "prompt": "How many different roles are there on the project staff? database is tracking_grants_for_research. tables are document types, documents, grants, organisation types, organisations, project outcomes, project staff, projects, research outcomes, research staff, staff roles, tasks. columns in document types are document type code, document description. columns in documents are document id, document type code, grant id, sent date, response received date, other details. columns in grants are grant id, organisation id, grant amount, grant start date, grant end date, other details. columns in organisation types are organisation type, organisation type description. columns in organisations are organisation id, organisation type, organisation details. columns in project outcomes are project id, outcome code, outcome details. columns in project staff are staff id, project id, role code, date from, date to, other details. columns in projects are project id, organisation id, project details. columns in research outcomes are outcome code, outcome description. columns in research staff are staff id, employer organisation id, staff details. columns in staff roles are role code, role description. columns in tasks are task id, project id, task details, eg agree objectives.",
    "target": "SELECT count(DISTINCT role_code) FROM Project_Staff"
  },
  {
    "prompt": "What are the first names of all the students aged above 22? database is voter_2. tables are student, voting record. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in voting record are student id, registration date, election cycle, president vote, vice president vote, secretary vote, treasurer vote, class president vote, class senator vote.",
    "target": "SELECT Fname FROM STUDENT WHERE Age  >  22"
  },
  {
    "prompt": "Which customers use \"Cash\" for payment method? Return the customer names. database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT customer_name FROM customers WHERE payment_method  =  \"Cash\""
  },
  {
    "prompt": "Give me a list of all the channel names sorted by the channel rating in descending order. database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT name FROM channel ORDER BY rating_in_percent DESC"
  },
  {
    "prompt": "What are the ids of documents which dont have expense budgets? database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses"
  },
  {
    "prompt": "What are the average prominence of the mountains in country Morocco? database is mountain_photos. tables are mountain, camera lens, photos. columns in mountain are id, name, height, prominence, range, country. columns in camera lens are id, brand, name, focal length mm, max aperture. columns in photos are id, camera lens id, mountain id, color, name.",
    "target": "SELECT avg(prominence) FROM mountain WHERE country  =  'Morocco'"
  },
  {
    "prompt": "How many players are there? database is riding_club. tables are player, club, coach, player coach, match result. columns in player are player id, sponsor name, player name, gender, residence, occupation, votes, rank. columns in club are club id, club name, region, start year. columns in coach are coach id, player name, gender, club id, rank. columns in player coach are player id, coach id, starting year. columns in match result are rank, club id, gold, big silver, small silver, bronze, points.",
    "target": "SELECT count(*) FROM player"
  },
  {
    "prompt": "What are the card numbers of members from Kentucky? database is shop_membership. tables are member, branch, membership register branch, purchase. columns in member are member id, card number, name, hometown, level. columns in branch are branch id, name, open year, address road, city, membership amount. columns in membership register branch are member id, branch id, register year. columns in purchase are member id, branch id, year, total pounds.",
    "target": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\""
  },
  {
    "prompt": "How many different users wrote some reviews? database is epinions_1. tables are item, review, useracct, trust. columns in item are item id, title. columns in review are a id, user id, item id, rating, rank. columns in useracct are user id, name. columns in trust are source user id, target user id, trust.",
    "target": "SELECT count(DISTINCT u_id) FROM review"
  },
  {
    "prompt": "List the name of ships in ascending order of tonnage. database is ship_mission. tables are mission, ship. columns in mission are mission id, ship id, code, launched year, location, speed knots, fate. columns in ship are ship id, name, type, nationality, tonnage.",
    "target": "SELECT Name FROM ship ORDER BY Tonnage ASC"
  },
  {
    "prompt": "How many farms are there? database is farm. tables are city, farm, farm competition, competition record. columns in city are city id, official name, status, area km 2, population, census ranking. columns in farm are farm id, year, total horses, working horses, total cattle, oxen, bulls, cows, pigs, sheep and goats. columns in farm competition are competition id, year, theme, host city id, hosts. columns in competition record are competition id, farm id, rank.",
    "target": "SELECT count(*) FROM farm"
  },
  {
    "prompt": "Show ids for all aircrafts with more than 1000 distance. database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT aid FROM Aircraft WHERE distance  >  1000"
  },
  {
    "prompt": "conferences in 2013 database is scholar. tables are venue, author, dataset, journal, key phrase, paper, cite, paper dataset, paper key phrase, writes. columns in venue are venue id, venue name. columns in author are author id, author name. columns in dataset are dataset id, dataset name. columns in journal are journal id, journal name. columns in key phrase are key phrase id, key phrase name. columns in paper are paper id, title, venue id, year, number citing, number cited by, journal id. columns in cite are citing paper id, cited paper id. columns in paper dataset are paper id, dataset id. columns in paper key phrase are paper id, key phrase id. columns in writes are paper id, author id.",
    "target": "SELECT DISTINCT venueid FROM paper WHERE YEAR  =  2013;"
  },
  {
    "prompt": "What is the name of the product with the highest price? database is solvency_ii. tables are addresses, locations, products, parties, assets, channels, finances, events, products in events, parties in events, agreements, assets in events. columns in addresses are address id, address details. columns in locations are location id, other details. columns in products are product id, product type code, product name, product price. columns in parties are party id, party details. columns in assets are asset id, other details. columns in channels are channel id, other details. columns in finances are finance id, other details. columns in events are event id, address id, channel id, event type code, finance id, location id. columns in products in events are product in event id, event id, product id. columns in parties in events are party id, event id, role code. columns in agreements are document id, event id. columns in assets in events are asset id, event id.",
    "target": "SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1"
  },
  {
    "prompt": "What are the names of the songs whose title has the word \"the\"? database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT title FROM songs WHERE title LIKE '% the %'"
  },
  {
    "prompt": "How many technicians are there? database is machine_repair. tables are repair, machine, technician, repair assignment. columns in repair are repair id, name, launch date, notes. columns in machine are machine id, making year, class, team, machine series, value points, quality rank. columns in technician are technician id, name, team, starting year, age. columns in repair assignment are technician id, repair id, machine id.",
    "target": "SELECT count(*) FROM technician"
  },
  {
    "prompt": "Show the name of the county with the biggest population. database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1"
  },
  {
    "prompt": "What are the names of the states where at least 3 heads were born? database is department_management. tables are department, head, management. columns in department are department id, name, creation, ranking, budget in billions, num employees. columns in head are head id, name, born state, age. columns in management are department id, head id, temporary acting.",
    "target": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3"
  },
  {
    "prompt": "Count the number of services. database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT count(*) FROM services"
  },
  {
    "prompt": "How many students are enrolled in college? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT sum(enr) FROM College"
  },
  {
    "prompt": "Find the names of the companies whose headquarters are not located in \"USA\". database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT name FROM Companies WHERE Headquarters != 'USA'"
  },
  {
    "prompt": "What is the total number of rooms available in this inn? database is inn_1. tables are rooms, reservations. columns in rooms are room id, room name, beds, bed type, max occupancy, base price, decor. columns in reservations are code, room, check in, check out, rate, last name, first name, adults, kids.",
    "target": "SELECT count(*) FROM Rooms;"
  },
  {
    "prompt": "List the course name of courses sorted by credits. database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT CName FROM COURSE ORDER BY Credits"
  },
  {
    "prompt": "What is the winery at which the wine with the highest score was made? database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1"
  },
  {
    "prompt": "What is the name of the organization that was formed most recently? database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1"
  },
  {
    "prompt": "How many unique labels are there for albums? database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT count(DISTINCT label) FROM albums"
  },
  {
    "prompt": "how many rivers in idaho database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"
  },
  {
    "prompt": "How many employees do we have? database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT count(*) FROM Employee"
  },
  {
    "prompt": "return me the number of citations of \" Making database systems usable \" . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT citation_num FROM publication WHERE title  =  \"Making database systems usable\";"
  },
  {
    "prompt": "How many clubs are located at \"HHH\"? database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT count(*) FROM club WHERE clublocation  =  \"HHH\""
  },
  {
    "prompt": "how long is the rio grande river in miles database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"
  },
  {
    "prompt": "Show me the owner of the channel with the highest rating. database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1"
  },
  {
    "prompt": "What is the total number of clubs that have less than 10 medals in total? database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT count(*) FROM club_rank WHERE Total  <  10"
  },
  {
    "prompt": "states bordering kentucky database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "which rivers do not run through usa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE country_name != \"usa\";"
  },
  {
    "prompt": "When did the first payment happen? database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1"
  },
  {
    "prompt": "Find the average number of bedrooms of all the apartments. database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT avg(bedroom_count) FROM Apartments"
  },
  {
    "prompt": "What is the location of the club named \"Tennis Club\"? database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT clublocation FROM club WHERE clubname  =  \"Tennis Club\""
  },
  {
    "prompt": "List the themes of parties in ascending order of number of hosts. database is party_host. tables are party, host, party host. columns in party are party id, party theme, location, first year, last year, number of hosts. columns in host are host id, name, nationality, age. columns in party host are party id, host id, is main in charge.",
    "target": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC"
  },
  {
    "prompt": "What are the different names of the colleges involved in the tryout in alphabetical order? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT DISTINCT cName FROM tryout ORDER BY cName"
  },
  {
    "prompt": "What are all the payment methods? database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT DISTINCT payment_method FROM customers"
  },
  {
    "prompt": "How many institutions are there? database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT count(*) FROM inst"
  },
  {
    "prompt": "List all restaurant types. database is restaurant_1. tables are student, restaurant, type of restaurant, restaurant type, visits restaurant. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in restaurant are restaurant id, restaurant name, address, rating. columns in type of restaurant are restaurant id, restaurant type id. columns in restaurant type are restaurant type id, restaurant type name, restaurant type description. columns in visits restaurant are student id, restaurant id, time, spent.",
    "target": "SELECT ResTypeName FROM Restaurant_Type;"
  },
  {
    "prompt": "How many distinct students are enrolled in courses? database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment"
  },
  {
    "prompt": "What are the cities with exactly two airports? database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2"
  },
  {
    "prompt": "What are all the catalog entry names? database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT distinct(catalog_entry_name) FROM catalog_contents"
  },
  {
    "prompt": "What are the customer ids for customers who do not have an account? database is customers_and_invoices. tables are customers, orders, invoices, accounts, product categories, products, financial transactions, order items, invoice line items. columns in customers are customer id, customer first name, customer middle initial, customer last name, gender, email address, login name, login password, phone number, town city, state county province, country. columns in orders are order id, customer id, date order placed, order details. columns in invoices are invoice number, order id, invoice date. columns in accounts are account id, customer id, date account opened, account name, other account details. columns in product categories are production type code, product type description, vat rating. columns in products are product id, parent product id, production type code, unit price, product name, product color, product size. columns in financial transactions are transaction id, account id, invoice number, transaction type, transaction date, transaction amount, transaction comment, other transaction details. columns in order items are order item id, order id, product id, product quantity, other order item details. columns in invoice line items are order item id, invoice number, product id, product title, product quantity, product price, derived product cost, derived vat payable, derived total cost.",
    "target": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts"
  },
  {
    "prompt": "List the names of all distinct wines ordered by price. database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT DISTINCT Name FROM WINE ORDER BY price"
  },
  {
    "prompt": "How many clubs are there? database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT count(*) FROM club"
  },
  {
    "prompt": "What are all the distinct premise types? database is customers_campaigns_ecommerce. tables are premises, products, customers, mailshot campaigns, customer addresses, customer orders, mailshot customers, order items. columns in premises are premise id, premises type, premise details. columns in products are product id, product category, product name. columns in customers are customer id, payment method, customer name, customer phone, customer email, customer address, customer login, customer password. columns in mailshot campaigns are mailshot id, product category, mailshot name, mailshot start date, mailshot end date. columns in customer addresses are customer id, premise id, date address from, address type code, date address to. columns in customer orders are order id, customer id, order status code, shipping method code, order placed datetime, order delivered datetime, order shipping charges. columns in mailshot customers are mailshot id, customer id, outcome code, mailshot customer date. columns in order items are item id, order item status code, order id, product id, item status code, item delivered datetime, item order quantity.",
    "target": "SELECT DISTINCT premises_type FROM premises"
  },
  {
    "prompt": "Show all the Store_Name of drama workshop groups. database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT Store_Name FROM Drama_Workshop_Groups"
  },
  {
    "prompt": "Find the first name of students who is older than 20. database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT fname FROM student WHERE age  >  20"
  },
  {
    "prompt": "what are the states that the ohio run through database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
  },
  {
    "prompt": "What is the average money requested by all entrepreneurs? database is entrepreneur. tables are entrepreneur, people. columns in entrepreneur are entrepreneur id, people id, company, money requested, investor. columns in people are people id, name, height, weight, date of birth.",
    "target": "SELECT avg(Money_Requested) FROM entrepreneur"
  },
  {
    "prompt": "How many railways are there? database is railway. tables are railway, train, manager, railway manage. columns in railway are railway id, railway, builder, built, wheels, location, objectnumber. columns in train are train id, train num, name, from, arrival, railway id. columns in manager are manager id, name, country, working year starts, age, level. columns in railway manage are railway id, manager id, from year.",
    "target": "SELECT count(*) FROM railway"
  },
  {
    "prompt": "what river flows through illinois database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
  },
  {
    "prompt": "List the names of all scientists sorted in alphabetical order. database is scientist_1. tables are scientists, projects, assigned to. columns in scientists are ssn, name. columns in projects are code, name, hours. columns in assigned to are scientist, project.",
    "target": "SELECT name FROM scientists ORDER BY name"
  },
  {
    "prompt": "Count the number of courses with more than 2 credits. database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT count(*) FROM COURSE WHERE Credits  >  2"
  },
  {
    "prompt": "Return the hosts of competitions for which the theme is not Aliens? database is farm. tables are city, farm, farm competition, competition record. columns in city are city id, official name, status, area km 2, population, census ranking. columns in farm are farm id, year, total horses, working horses, total cattle, oxen, bulls, cows, pigs, sheep and goats. columns in farm competition are competition id, year, theme, host city id, hosts. columns in competition record are competition id, farm id, rank.",
    "target": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'"
  },
  {
    "prompt": "Find all the phone numbers. database is insurance_fnol. tables are customers, services, available policies, customers policies, first notification of loss, claims, settlements. columns in customers are customer id, customer name. columns in services are service id, service name. columns in available policies are policy id, policy type code, customer phone. columns in customers policies are customer id, policy id, date opened, date closed. columns in first notification of loss are fnol id, customer id, policy id, service id. columns in claims are claim id, fnol id, effective date. columns in settlements are settlement id, claim id, effective date, settlement amount.",
    "target": "SELECT customer_phone FROM available_policies"
  },
  {
    "prompt": "Find all the vocal types. database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT DISTINCT TYPE FROM vocals"
  },
  {
    "prompt": "what are the neighboring states for kentucky database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "what are the cities in texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT city_name FROM city WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "what rivers run through illinois database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
  },
  {
    "prompt": "List all club names in descending alphabetical order. database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT name FROM club ORDER BY name DESC"
  },
  {
    "prompt": "What is the description of the restaurant type Sandwich? database is restaurant_1. tables are student, restaurant, type of restaurant, restaurant type, visits restaurant. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in restaurant are restaurant id, restaurant name, address, rating. columns in type of restaurant are restaurant id, restaurant type id. columns in restaurant type are restaurant type id, restaurant type name, restaurant type description. columns in visits restaurant are student id, restaurant id, time, spent.",
    "target": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = \"Sandwich\";"
  },
  {
    "prompt": "How many customers have at least one order with status \"Cancelled\"? database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  \"Cancelled\""
  },
  {
    "prompt": "How many customers live in Prague city? database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT count(*) FROM customers WHERE city = \"Prague\";"
  },
  {
    "prompt": "Find the list of page size which have more than 3 product listed database is store_product. tables are product, store, district, store product, store district. columns in product are product id, product, dimensions, dpi, pages per minute color, max page size, interface. columns in store are store id, store name, type, area size, number of product category, ranking. columns in district are district id, district name, headquartered city, city population, city area. columns in store product are store id, product id. columns in store district are store id, district id.",
    "target": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3"
  },
  {
    "prompt": "How many allergies are there? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT count(DISTINCT allergy) FROM Allergy_type"
  },
  {
    "prompt": "Find the policy types more than 4 customers use. Show their type code. database is insurance_fnol. tables are customers, services, available policies, customers policies, first notification of loss, claims, settlements. columns in customers are customer id, customer name. columns in services are service id, service name. columns in available policies are policy id, policy type code, customer phone. columns in customers policies are customer id, policy id, date opened, date closed. columns in first notification of loss are fnol id, customer id, policy id, service id. columns in claims are claim id, fnol id, effective date. columns in settlements are settlement id, claim id, effective date, settlement amount.",
    "target": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4"
  },
  {
    "prompt": "How many movie directors are there? database is culture_company. tables are book club, movie, culture company. columns in book club are book club id, year, author or editor, book title, publisher, category, result. columns in movie are movie id, title, year, director, budget million, gross worldwide. columns in culture company are company name, type, incorporated in, group equity shareholding, book club id, movie id.",
    "target": "SELECT COUNT (DISTINCT director) FROM movie"
  },
  {
    "prompt": "What are the birth places that are shared by at least two people? database is body_builder. tables are body builder, people. columns in body builder are body builder id, people id, snatch, clean jerk, total. columns in people are people id, name, height, weight, birth date, birth place.",
    "target": "SELECT Birth_Place FROM people GROUP BY Birth_Place HAVING COUNT(*)  >=  2"
  },
  {
    "prompt": "give me all the states of usa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM state;"
  },
  {
    "prompt": "Who is the person whose age is below 30? database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT name FROM Person WHERE age  <  30"
  },
  {
    "prompt": "Count the number of different payment method codes used by parties. database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT count(DISTINCT payment_method_code) FROM parties"
  },
  {
    "prompt": "what is the total area of the usa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT SUM ( area ) FROM state;"
  },
  {
    "prompt": "List the first names of all the students in room 107. database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT DISTINCT firstname FROM list WHERE classroom  =  107"
  },
  {
    "prompt": "Find the branch name of the bank that has the most number of customers. database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1"
  },
  {
    "prompt": "Which problem log was created most recently? Give me the log id. database is tracking_software_problems. tables are problem category codes, problem log, problem status codes, product, staff, problems. columns in problem category codes are problem category code, problem category description. columns in problem log are problem log id, assigned to staff id, problem id, problem category code, problem status code, log entry date, log entry description, log entry fix, other log details. columns in problem status codes are problem status code, problem status description. columns in product are product id, product name, product details. columns in staff are staff id, staff first name, staff last name, other staff details. columns in problems are problem id, product id, closure authorised by staff id, reported by staff id, date problem reported, date problem closed, problem description, other problem details.",
    "target": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1"
  },
  {
    "prompt": "how many people stay in california database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM state WHERE state_name  =  \"california\";"
  },
  {
    "prompt": "When was the document named \"Marry CV\" stored? Give me the date. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\""
  },
  {
    "prompt": "How many members are there? database is decoration_competition. tables are college, member, round. columns in college are college id, name, leader name, college location. columns in member are member id, name, country, college id. columns in round are round id, member id, decoration theme, rank in round.",
    "target": "SELECT count(*) FROM member"
  },
  {
    "prompt": "Find the birth dates corresponding to employees who live in the city of Edmonton. database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\""
  },
  {
    "prompt": "What are the distinct visit dates? database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT DISTINCT Visit_Date FROM VISITS"
  },
  {
    "prompt": "What is the last date that a staff member left a project? database is tracking_grants_for_research. tables are document types, documents, grants, organisation types, organisations, project outcomes, project staff, projects, research outcomes, research staff, staff roles, tasks. columns in document types are document type code, document description. columns in documents are document id, document type code, grant id, sent date, response received date, other details. columns in grants are grant id, organisation id, grant amount, grant start date, grant end date, other details. columns in organisation types are organisation type, organisation type description. columns in organisations are organisation id, organisation type, organisation details. columns in project outcomes are project id, outcome code, outcome details. columns in project staff are staff id, project id, role code, date from, date to, other details. columns in projects are project id, organisation id, project details. columns in research outcomes are outcome code, outcome description. columns in research staff are staff id, employer organisation id, staff details. columns in staff roles are role code, role description. columns in tasks are task id, project id, task details, eg agree objectives.",
    "target": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1"
  },
  {
    "prompt": "Find the number of voting records in total. database is voter_2. tables are student, voting record. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in voting record are student id, registration date, election cycle, president vote, vice president vote, secretary vote, treasurer vote, class president vote, class senator vote.",
    "target": "SELECT count(*) FROM VOTING_RECORD"
  },
  {
    "prompt": "What are the total number of domestic passengers at all London airports? database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\""
  },
  {
    "prompt": "List the name of all rooms sorted by their prices. database is inn_1. tables are rooms, reservations. columns in rooms are room id, room name, beds, bed type, max occupancy, base price, decor. columns in reservations are code, room, check in, check out, rate, last name, first name, adults, kids.",
    "target": "SELECT roomName FROM Rooms ORDER BY basePrice;"
  },
  {
    "prompt": "List the distinct positions of pilots older than 30. database is pilot_record. tables are aircraft, pilot, pilot record. columns in aircraft are aircraft id, order year, manufacturer, model, fleet series, powertrain, fuel propulsion. columns in pilot are pilot id, pilot name, rank, age, nationality, position, join year, team. columns in pilot record are record id, pilot id, aircraft id, date.",
    "target": "SELECT DISTINCT POSITION FROM pilot WHERE Age  >  30"
  },
  {
    "prompt": "List all info about all people. database is candidate_poll. tables are candidate, people. columns in candidate are candidate id, people id, poll source, date, support rate, consider rate, oppose rate, unsure rate. columns in people are people id, sex, name, date of birth, height, weight.",
    "target": "SELECT * FROM people"
  },
  {
    "prompt": "What is the average price for products? database is solvency_ii. tables are addresses, locations, products, parties, assets, channels, finances, events, products in events, parties in events, agreements, assets in events. columns in addresses are address id, address details. columns in locations are location id, other details. columns in products are product id, product type code, product name, product price. columns in parties are party id, party details. columns in assets are asset id, other details. columns in channels are channel id, other details. columns in finances are finance id, other details. columns in events are event id, address id, channel id, event type code, finance id, location id. columns in products in events are product in event id, event id, product id. columns in parties in events are party id, event id, role code. columns in agreements are document id, event id. columns in assets in events are asset id, event id.",
    "target": "SELECT avg(Product_Price) FROM Products"
  },
  {
    "prompt": "What are the ids of the problems which are reported after 1978-06-26? database is tracking_software_problems. tables are problem category codes, problem log, problem status codes, product, staff, problems. columns in problem category codes are problem category code, problem category description. columns in problem log are problem log id, assigned to staff id, problem id, problem category code, problem status code, log entry date, log entry description, log entry fix, other log details. columns in problem status codes are problem status code, problem status description. columns in product are product id, product name, product details. columns in staff are staff id, staff first name, staff last name, other staff details. columns in problems are problem id, product id, closure authorised by staff id, reported by staff id, date problem reported, date problem closed, problem description, other problem details.",
    "target": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\""
  },
  {
    "prompt": "What are the different regions of clubs in ascending alphabetical order? database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT DISTINCT Region FROM club ORDER BY Region ASC"
  },
  {
    "prompt": "What are the different police forces of counties that are not located in the East? database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"East\""
  },
  {
    "prompt": "Find the average number of customers in all banks of Utah state. database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'"
  },
  {
    "prompt": "Of all the claims, what was the earliest date when any claim was made? database is insurance_policies. tables are customers, customer policies, claims, settlements, payments. columns in customers are customer id, customer details. columns in customer policies are policy id, customer id, policy type code, start date, end date. columns in claims are claim id, policy id, date claim made, date claim settled, amount claimed, amount settled. columns in settlements are settlement id, claim id, date claim made, date claim settled, amount claimed, amount settled, customer policy id. columns in payments are payment id, settlement id, payment method code, date payment made, amount payment.",
    "target": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1"
  },
  {
    "prompt": "Find the ids of the problems reported after 1978-06-26. database is tracking_software_problems. tables are problem category codes, problem log, problem status codes, product, staff, problems. columns in problem category codes are problem category code, problem category description. columns in problem log are problem log id, assigned to staff id, problem id, problem category code, problem status code, log entry date, log entry description, log entry fix, other log details. columns in problem status codes are problem status code, problem status description. columns in product are product id, product name, product details. columns in staff are staff id, staff first name, staff last name, other staff details. columns in problems are problem id, product id, closure authorised by staff id, reported by staff id, date problem reported, date problem closed, problem description, other problem details.",
    "target": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\""
  },
  {
    "prompt": "Return the average money requested across all entrepreneurs. database is entrepreneur. tables are entrepreneur, people. columns in entrepreneur are entrepreneur id, people id, company, money requested, investor. columns in people are people id, name, height, weight, date of birth.",
    "target": "SELECT avg(Money_Requested) FROM entrepreneur"
  },
  {
    "prompt": "What is the ship with the largest amount of tonnage called? database is ship_mission. tables are mission, ship. columns in mission are mission id, ship id, code, launched year, location, speed knots, fate. columns in ship are ship id, name, type, nationality, tonnage.",
    "target": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1"
  },
  {
    "prompt": "Compute the average price of all the products. database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT avg(price) FROM products"
  },
  {
    "prompt": "How many customers are there? database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT count(*) FROM customers"
  },
  {
    "prompt": "What are the name of the players who received a card in descending order of the hours of training? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC"
  },
  {
    "prompt": "What is the type of allergy Cat? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\""
  },
  {
    "prompt": "How many courses have more than 2 credits? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT count(*) FROM COURSE WHERE Credits  >  2"
  },
  {
    "prompt": "How many players have more than 1000 hours of training? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT count(*) FROM Player WHERE HS  >  1000"
  },
  {
    "prompt": "How many departments are in the division AS? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"AS\""
  },
  {
    "prompt": "how many states have a city named springfield database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "Please give me a list of cities whose regional population is over 10000000. database is city_record. tables are city, match, temperature, hosting city. columns in city are city id, city, hanzi, hanyu pinyin, regional population, gdp. columns in match are match id, date, venue, score, result, competition. columns in temperature are city id, jan, feb, mar, apr, jun, jul, aug, sep, oct, nov, dec. columns in hosting city are year, match id, host city.",
    "target": "SELECT city FROM city WHERE regional_population  >  10000000"
  },
  {
    "prompt": "What are the total points of gymnasts, ordered by their floor exercise points descending? database is gymnast. tables are gymnast, people. columns in gymnast are gymnast id, floor exercise points, pommel horse points, rings points, vault points, parallel bars points, horizontal bar points, total points. columns in people are people id, name, age, height, hometown.",
    "target": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC"
  },
  {
    "prompt": "Return the minister who left office at the latest time. database is party_people. tables are region, party, member, party events. columns in region are region id, region name, date, label, format, catalogue. columns in party are party id, minister, took office, left office, region id, party name. columns in member are member id, member name, party id, in office. columns in party events are event id, event name, party id, member in charge id.",
    "target": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1"
  },
  {
    "prompt": "how many states have major rivers database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( traverse ) FROM river WHERE LENGTH  >  750;"
  },
  {
    "prompt": "What are all the instruments used? database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT DISTINCT instrument FROM Instruments"
  },
  {
    "prompt": "what state has the capital salem database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM state WHERE capital  =  \"salem\";"
  },
  {
    "prompt": "Find the entry name of the catalog with the highest price (in USD). database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1"
  },
  {
    "prompt": "How many weddings are there in year 2016? database is wedding. tables are people, church, wedding. columns in people are people id, name, country, is male, age. columns in church are church id, name, organized by, open date, continuation of. columns in wedding are church id, male id, female id, year.",
    "target": "SELECT count(*) FROM wedding WHERE YEAR  =  2016"
  },
  {
    "prompt": "What is the complete description of the researcher role. database is tracking_grants_for_research. tables are document types, documents, grants, organisation types, organisations, project outcomes, project staff, projects, research outcomes, research staff, staff roles, tasks. columns in document types are document type code, document description. columns in documents are document id, document type code, grant id, sent date, response received date, other details. columns in grants are grant id, organisation id, grant amount, grant start date, grant end date, other details. columns in organisation types are organisation type, organisation type description. columns in organisations are organisation id, organisation type, organisation details. columns in project outcomes are project id, outcome code, outcome details. columns in project staff are staff id, project id, role code, date from, date to, other details. columns in projects are project id, organisation id, project details. columns in research outcomes are outcome code, outcome description. columns in research staff are staff id, employer organisation id, staff details. columns in staff roles are role code, role description. columns in tasks are task id, project id, task details, eg agree objectives.",
    "target": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'"
  },
  {
    "prompt": "return me the references of \" Making database systems usable \" . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT reference_num FROM publication WHERE title  =  \"Making database systems usable\";"
  },
  {
    "prompt": "Count the number of actors. database is musical. tables are musical, actor. columns in musical are musical id, name, year, award, category, nominee, result. columns in actor are actor id, name, musical id, character, duration, age.",
    "target": "SELECT count(*) FROM actor"
  },
  {
    "prompt": "How many cities are there in state \"Colorado\"? database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\""
  },
  {
    "prompt": "Count the number of entrepreneurs. database is entrepreneur. tables are entrepreneur, people. columns in entrepreneur are entrepreneur id, people id, company, money requested, investor. columns in people are people id, name, height, weight, date of birth.",
    "target": "SELECT count(*) FROM entrepreneur"
  },
  {
    "prompt": "what is the river that cross over illinois database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
  },
  {
    "prompt": "What is the average capacity of the stadiums that were opened in year 2005? database is swimming. tables are swimmer, stadium, event, record. columns in swimmer are id, name, nationality, meter 100, meter 200, meter 300, meter 400, meter 500, meter 600, meter 700, time. columns in stadium are id, name, capacity, city, country, opening year. columns in event are id, name, stadium id, year. columns in record are id, result, swimmer id, event id.",
    "target": "SELECT avg(capacity) FROM stadium WHERE opening_year  =  2005"
  },
  {
    "prompt": "Find the names of the buildings in \"on-hold\" status, and sort them in ascending order of building stories. database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC"
  },
  {
    "prompt": "How many customers in total? database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT count(*) FROM Customers;"
  },
  {
    "prompt": "List the companies of entrepreneurs in descending order of money requested. database is entrepreneur. tables are entrepreneur, people. columns in entrepreneur are entrepreneur id, people id, company, money requested, investor. columns in people are people id, name, height, weight, date of birth.",
    "target": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC"
  },
  {
    "prompt": "Count the number of budget codes. database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT count(*) FROM Ref_budget_codes"
  },
  {
    "prompt": "Which grade is studying in room 105? database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT DISTINCT grade FROM list WHERE classroom  =  105"
  },
  {
    "prompt": "what is the high point of texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "Show the park of the roller coaster with the highest speed. database is roller_coaster. tables are roller coaster, country. columns in roller coaster are roller coaster id, name, park, country id, length, height, speed, opened, status. columns in country are country id, name, population, area, languages.",
    "target": "SELECT Park FROM roller_coaster ORDER BY Speed DESC LIMIT 1"
  },
  {
    "prompt": "which states have cities named springfield database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "What is the id for the employee called Ebba? database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\""
  },
  {
    "prompt": "How many courses are offered? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT count(DISTINCT crs_code) FROM CLASS"
  },
  {
    "prompt": "How many tracks do we have? database is race_track. tables are race, track. columns in race are race id, name, class, date, track id. columns in track are track id, name, location, seating, year opened.",
    "target": "SELECT count(*) FROM track"
  },
  {
    "prompt": "Which papers have the substring \"Database\" in their titles? Show the titles of the papers. database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT title FROM papers WHERE title LIKE \"%Database%\""
  },
  {
    "prompt": "find the total percentage share of all channels owned by CCTV. database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV'"
  },
  {
    "prompt": "How many departments offer courses? database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT count(DISTINCT dept_name) FROM course"
  },
  {
    "prompt": "Find the number of distinct projects. database is scientist_1. tables are scientists, projects, assigned to. columns in scientists are ssn, name. columns in projects are code, name, hours. columns in assigned to are scientist, project.",
    "target": "SELECT count(DISTINCT name) FROM projects"
  },
  {
    "prompt": "Return the name of the wrestler who had the lowest number of days held. database is wrestler. tables are wrestler, elimination. columns in wrestler are wrestler id, name, reign, days held, location, event. columns in elimination are elimination id, wrestler id, team, eliminated by, elimination move, time.",
    "target": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1"
  },
  {
    "prompt": "how many rivers are there in idaho database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"
  },
  {
    "prompt": "Tell me the number of orders with \"Second time\" as order detail. database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"Second time\""
  },
  {
    "prompt": "What campuses are located in the county of Los Angeles? database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""
  },
  {
    "prompt": "How many different types of transactions are there? database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT count(DISTINCT transaction_type) FROM Financial_Transactions"
  },
  {
    "prompt": "What are the course names for courses taught on MTW? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\""
  },
  {
    "prompt": "What is the average number of bedrooms of all apartments? database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT avg(bedroom_count) FROM Apartments"
  },
  {
    "prompt": "What are the names of enzymes in descending order? database is medicine_enzyme_interaction. tables are medicine, enzyme, medicine enzyme interaction. columns in medicine are id, name, trade name, fda approved. columns in enzyme are id, name, location, product, chromosome, omim, porphyria. columns in medicine enzyme interaction are enzyme id, medicine id, interaction type.",
    "target": "SELECT name FROM enzyme ORDER BY name DESC"
  },
  {
    "prompt": "Who are the nominees who have been nominated more than two times? database is musical. tables are musical, actor. columns in musical are musical id, name, year, award, category, nominee, result. columns in actor are actor id, name, musical id, character, duration, age.",
    "target": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2"
  },
  {
    "prompt": "How many students have advisors? database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT count(DISTINCT s_id) FROM advisor"
  },
  {
    "prompt": "what is the highest mountain in texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "What are all the distinct details of the customers? database is insurance_policies. tables are customers, customer policies, claims, settlements, payments. columns in customers are customer id, customer details. columns in customer policies are policy id, customer id, policy type code, start date, end date. columns in claims are claim id, policy id, date claim made, date claim settled, amount claimed, amount settled. columns in settlements are settlement id, claim id, date claim made, date claim settled, amount claimed, amount settled, customer policy id. columns in payments are payment id, settlement id, payment method code, date payment made, amount payment.",
    "target": "SELECT DISTINCT customer_details FROM Customers"
  },
  {
    "prompt": "how large is new mexico database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT area FROM state WHERE state_name  =  \"new mexico\";"
  },
  {
    "prompt": "What are the songs in volumes with more than 1 week on top? database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1"
  },
  {
    "prompt": "Find the name of the room with the maximum occupancy. database is inn_1. tables are rooms, reservations. columns in rooms are room id, room name, beds, bed type, max occupancy, base price, decor. columns in reservations are code, room, check in, check out, rate, last name, first name, adults, kids.",
    "target": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;"
  },
  {
    "prompt": "What is the receipt date of the document with id 3? database is cre_Doc_Control_Systems. tables are reference document types, roles, addresses, reference document status, reference shipping agents, documents, employees, document drafts, draft copies, circulation history, documents mailed. columns in reference document types are document type code, document type description. columns in roles are role code, role description. columns in addresses are address id, address details. columns in reference document status are document status code, document status description. columns in reference shipping agents are shipping agent code, shipping agent name, shipping agent description. columns in documents are document id, document status code, document type code, shipping agent code, receipt date, receipt number, other details. columns in employees are employee id, role code, employee name, other details. columns in document drafts are document id, draft number, draft details. columns in draft copies are document id, draft number, copy number. columns in circulation history are document id, draft number, copy number, employee id. columns in documents mailed are document id, mailed to address id, mailing date.",
    "target": "SELECT receipt_date FROM Documents WHERE document_id = 3;"
  },
  {
    "prompt": "Find all the songs whose name contains the word \"the\". database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT title FROM songs WHERE title LIKE '% the %'"
  },
  {
    "prompt": "What is the name of the youngest captain? database is ship_1. tables are captain, ship. columns in captain are captain id, name, ship id, age, class, rank. columns in ship are ship id, name, type, built year, class, flag.",
    "target": "SELECT name FROM captain ORDER BY age LIMIT 1"
  },
  {
    "prompt": "How many appelations are in Napa Country? database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\""
  },
  {
    "prompt": "How many pilots are there? database is pilot_record. tables are aircraft, pilot, pilot record. columns in aircraft are aircraft id, order year, manufacturer, model, fleet series, powertrain, fuel propulsion. columns in pilot are pilot id, pilot name, rank, age, nationality, position, join year, team. columns in pilot record are record id, pilot id, aircraft id, date.",
    "target": "SELECT count(*) FROM pilot"
  },
  {
    "prompt": "what is the lowest elevation in pennsylvania database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT lowest_elevation FROM highlow WHERE state_name  =  \"pennsylvania\";"
  },
  {
    "prompt": "Show all the buildings that have at least 10 professors. database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT building FROM Faculty WHERE rank  =  \"Professor\" GROUP BY building HAVING count(*)  >=  10"
  },
  {
    "prompt": "What are the names of enzymes who does not produce Heme? database is medicine_enzyme_interaction. tables are medicine, enzyme, medicine enzyme interaction. columns in medicine are id, name, trade name, fda approved. columns in enzyme are id, name, location, product, chromosome, omim, porphyria. columns in medicine enzyme interaction are enzyme id, medicine id, interaction type.",
    "target": "SELECT name FROM enzyme WHERE product != 'Heme'"
  },
  {
    "prompt": "what states have rivers running through them database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river;"
  },
  {
    "prompt": "Show the maximum amount of transaction. database is tracking_share_transactions. tables are investors, lots, reference transaction types, transactions, sales, purchases, transactions lots. columns in investors are investor id, investor details. columns in lots are lot id, investor id, lot details. columns in reference transaction types are transaction type code, transaction type description. columns in transactions are transaction id, investor id, transaction type code, date of transaction, amount of transaction, share count, other details. columns in sales are sales transaction id, sales details. columns in purchases are purchase transaction id, purchase details. columns in transactions lots are transaction id, lot id.",
    "target": "SELECT max(amount_of_transaction) FROM TRANSACTIONS"
  },
  {
    "prompt": "Show student ids who dont have any sports. database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo"
  },
  {
    "prompt": "Find the types of documents with more than 4 documents. database is document_management. tables are roles, users, document structures, functional areas, images, documents, document functional areas, document sections, document sections images. columns in roles are role code, role description. columns in users are user id, role code, user name, user login, password. columns in document structures are document structure code, parent document structure code, document structure description. columns in functional areas are functional area code, parent functional area code, functional area description. columns in images are image id, image alt text, image name, image url. columns in documents are document code, document structure code, document type code, access count, document name. columns in document functional areas are document code, functional area code. columns in document sections are section id, document code, section sequence, section code, section title. columns in document sections images are section id, image id.",
    "target": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4"
  },
  {
    "prompt": "What are the different membership levels? database is shop_membership. tables are member, branch, membership register branch, purchase. columns in member are member id, card number, name, hometown, level. columns in branch are branch id, name, open year, address road, city, membership amount. columns in membership register branch are member id, branch id, register year. columns in purchase are member id, branch id, year, total pounds.",
    "target": "SELECT count(DISTINCT LEVEL) FROM member"
  },
  {
    "prompt": "which states have a river database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river;"
  },
  {
    "prompt": "How many different software platforms are there for devices? database is device. tables are device, shop, stock. columns in device are device id, device, carrier, package version, applications, software platform. columns in shop are shop id, shop name, location, open date, open year. columns in stock are shop id, device id, quantity.",
    "target": "SELECT count(DISTINCT Software_Platform) FROM device"
  },
  {
    "prompt": "What are the codes corresponding to document types for which there are less than 3 documents? database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3"
  },
  {
    "prompt": "What are the names of all the customers in alphabetical order? database is small_bank_1. tables are accounts, savings, checking. columns in accounts are customer id, name. columns in savings are customer id, balance. columns in checking are customer id, balance.",
    "target": "SELECT name FROM accounts ORDER BY name"
  },
  {
    "prompt": "List the names of journalists in ascending order of years working. database is news_report. tables are event, journalist, news report. columns in event are event id, date, venue, name, event attendance. columns in journalist are journalist id, name, nationality, age, years working. columns in news report are journalist id, event id, work type.",
    "target": "SELECT Name FROM journalist ORDER BY Years_working ASC"
  },
  {
    "prompt": "Show customer ids who dont have an account. database is customers_and_invoices. tables are customers, orders, invoices, accounts, product categories, products, financial transactions, order items, invoice line items. columns in customers are customer id, customer first name, customer middle initial, customer last name, gender, email address, login name, login password, phone number, town city, state county province, country. columns in orders are order id, customer id, date order placed, order details. columns in invoices are invoice number, order id, invoice date. columns in accounts are account id, customer id, date account opened, account name, other account details. columns in product categories are production type code, product type description, vat rating. columns in products are product id, parent product id, production type code, unit price, product name, product color, product size. columns in financial transactions are transaction id, account id, invoice number, transaction type, transaction date, transaction amount, transaction comment, other transaction details. columns in order items are order item id, order id, product id, product quantity, other order item details. columns in invoice line items are order item id, invoice number, product id, product title, product quantity, product price, derived product cost, derived vat payable, derived total cost.",
    "target": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts"
  },
  {
    "prompt": "List the names of roller coasters by ascending order of length. database is roller_coaster. tables are roller coaster, country. columns in roller coaster are roller coaster id, name, park, country id, length, height, speed, opened, status. columns in country are country id, name, population, area, languages.",
    "target": "SELECT Name FROM roller_coaster ORDER BY LENGTH ASC"
  },
  {
    "prompt": "Find the distinct unit prices for tracks. database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT distinct(UnitPrice) FROM TRACK"
  },
  {
    "prompt": "What is the maximum level of managers in countries that are not \"Australia\"? database is railway. tables are railway, train, manager, railway manage. columns in railway are railway id, railway, builder, built, wheels, location, objectnumber. columns in train are train id, train num, name, from, arrival, railway id. columns in manager are manager id, name, country, working year starts, age, level. columns in railway manage are railway id, manager id, from year.",
    "target": "SELECT max(LEVEL) FROM manager WHERE Country != \"Australia\t\""
  },
  {
    "prompt": "Show all product sizes. database is customers_and_invoices. tables are customers, orders, invoices, accounts, product categories, products, financial transactions, order items, invoice line items. columns in customers are customer id, customer first name, customer middle initial, customer last name, gender, email address, login name, login password, phone number, town city, state county province, country. columns in orders are order id, customer id, date order placed, order details. columns in invoices are invoice number, order id, invoice date. columns in accounts are account id, customer id, date account opened, account name, other account details. columns in product categories are production type code, product type description, vat rating. columns in products are product id, parent product id, production type code, unit price, product name, product color, product size. columns in financial transactions are transaction id, account id, invoice number, transaction type, transaction date, transaction amount, transaction comment, other transaction details. columns in order items are order item id, order id, product id, product quantity, other order item details. columns in invoice line items are order item id, invoice number, product id, product title, product quantity, product price, derived product cost, derived vat payable, derived total cost.",
    "target": "SELECT DISTINCT product_size FROM Products"
  },
  {
    "prompt": "Return all the apartment numbers sorted by the room count in ascending order. database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT apt_number FROM Apartments ORDER BY room_count ASC"
  },
  {
    "prompt": "What is the average enrollment of schools? database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT avg(Enrollment) FROM school"
  },
  {
    "prompt": "When did the first staff member start working? database is tracking_grants_for_research. tables are document types, documents, grants, organisation types, organisations, project outcomes, project staff, projects, research outcomes, research staff, staff roles, tasks. columns in document types are document type code, document description. columns in documents are document id, document type code, grant id, sent date, response received date, other details. columns in grants are grant id, organisation id, grant amount, grant start date, grant end date, other details. columns in organisation types are organisation type, organisation type description. columns in organisations are organisation id, organisation type, organisation details. columns in project outcomes are project id, outcome code, outcome details. columns in project staff are staff id, project id, role code, date from, date to, other details. columns in projects are project id, organisation id, project details. columns in research outcomes are outcome code, outcome description. columns in research staff are staff id, employer organisation id, staff details. columns in staff roles are role code, role description. columns in tasks are task id, project id, task details, eg agree objectives.",
    "target": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1"
  },
  {
    "prompt": "What is the stories of highest building? database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1"
  },
  {
    "prompt": "Return the poll source corresponding to the candidate who has the oppose rate. database is candidate_poll. tables are candidate, people. columns in candidate are candidate id, people id, poll source, date, support rate, consider rate, oppose rate, unsure rate. columns in people are people id, sex, name, date of birth, height, weight.",
    "target": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1"
  },
  {
    "prompt": "Find the policy type used by more than 4 customers. database is insurance_fnol. tables are customers, services, available policies, customers policies, first notification of loss, claims, settlements. columns in customers are customer id, customer name. columns in services are service id, service name. columns in available policies are policy id, policy type code, customer phone. columns in customers policies are customer id, policy id, date opened, date closed. columns in first notification of loss are fnol id, customer id, policy id, service id. columns in claims are claim id, fnol id, effective date. columns in settlements are settlement id, claim id, effective date, settlement amount.",
    "target": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4"
  },
  {
    "prompt": "Return the founder of Sony. database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT founder FROM manufacturers WHERE name  =  'Sony'"
  },
  {
    "prompt": "what are all the rivers in illinois database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
  },
  {
    "prompt": "What are the different cities listed? database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT DISTINCT headquarter FROM manufacturers"
  },
  {
    "prompt": "What are the hosts of competitions whose theme is not \"Aliens\"? database is farm. tables are city, farm, farm competition, competition record. columns in city are city id, official name, status, area km 2, population, census ranking. columns in farm are farm id, year, total horses, working horses, total cattle, oxen, bulls, cows, pigs, sheep and goats. columns in farm competition are competition id, year, theme, host city id, hosts. columns in competition record are competition id, farm id, rank.",
    "target": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'"
  },
  {
    "prompt": "What are the codes of types of documents of which there are for or more? database is document_management. tables are roles, users, document structures, functional areas, images, documents, document functional areas, document sections, document sections images. columns in roles are role code, role description. columns in users are user id, role code, user name, user login, password. columns in document structures are document structure code, parent document structure code, document structure description. columns in functional areas are functional area code, parent functional area code, functional area description. columns in images are image id, image alt text, image name, image url. columns in documents are document code, document structure code, document type code, access count, document name. columns in document functional areas are document code, functional area code. columns in document sections are section id, document code, section sequence, section code, section title. columns in document sections images are section id, image id.",
    "target": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4"
  },
  {
    "prompt": "What is the code of the school where the accounting department belongs to? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT school_code FROM department WHERE dept_name  =  \"Accounting\""
  },
  {
    "prompt": "Find the list of distinct ranks for faculty. database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT DISTINCT rank FROM Faculty"
  },
  {
    "prompt": "Show the product type codes that have at least two products. database is solvency_ii. tables are addresses, locations, products, parties, assets, channels, finances, events, products in events, parties in events, agreements, assets in events. columns in addresses are address id, address details. columns in locations are location id, other details. columns in products are product id, product type code, product name, product price. columns in parties are party id, party details. columns in assets are asset id, other details. columns in channels are channel id, other details. columns in finances are finance id, other details. columns in events are event id, address id, channel id, event type code, finance id, location id. columns in products in events are product in event id, event id, product id. columns in parties in events are party id, event id, role code. columns in agreements are document id, event id. columns in assets in events are asset id, event id.",
    "target": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*)  >=  2"
  },
  {
    "prompt": "List the names of technicians in ascending order of age. database is machine_repair. tables are repair, machine, technician, repair assignment. columns in repair are repair id, name, launch date, notes. columns in machine are machine id, making year, class, team, machine series, value points, quality rank. columns in technician are technician id, name, team, starting year, age. columns in repair assignment are technician id, repair id, machine id.",
    "target": "SELECT Name FROM technician ORDER BY Age ASC"
  },
  {
    "prompt": "List all the information about course authors and tutors in alphabetical order of the personal name. database is e_learning. tables are course authors and tutors, students, subjects, courses, student course enrolment, student tests taken. columns in course authors and tutors are author id, author tutor atb, login name, password, personal name, middle name, family name, gender mf, address line 1. columns in students are student id, date of registration, date of latest logon, login name, password, personal name, middle name, family name. columns in subjects are subject id, subject name. columns in courses are course id, author id, subject id, course name, course description. columns in student course enrolment are registration id, student id, course id, date of enrolment, date of completion. columns in student tests taken are registration id, date test taken, test result.",
    "target": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name"
  },
  {
    "prompt": "How many different locations does the school with code BUS has? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'"
  },
  {
    "prompt": "how many states have cities named springfield database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "Find the cities of businesses rated below 1.5 database is yelp. tables are business, category, user, checkin, neighbourhood, review, tip. columns in business are bid, business id, name, full address, city, latitude, longitude, review count, is open, rating, state. columns in category are id, business id, category name. columns in user are uid, user id, name. columns in checkin are cid, business id, count, day. columns in neighbourhood are id, business id, neighbourhood name. columns in review are rid, business id, user id, rating, text, year, month. columns in tip are tip id, business id, text, user id, likes, year, month.",
    "target": "SELECT city FROM business WHERE rating  <  1.5;"
  },
  {
    "prompt": "How many different levels do members have? database is shop_membership. tables are member, branch, membership register branch, purchase. columns in member are member id, card number, name, hometown, level. columns in branch are branch id, name, open year, address road, city, membership amount. columns in membership register branch are member id, branch id, register year. columns in purchase are member id, branch id, year, total pounds.",
    "target": "SELECT count(DISTINCT LEVEL) FROM member"
  },
  {
    "prompt": "How many medicines have the FDA approval status No ? database is medicine_enzyme_interaction. tables are medicine, enzyme, medicine enzyme interaction. columns in medicine are id, name, trade name, fda approved. columns in enzyme are id, name, location, product, chromosome, omim, porphyria. columns in medicine enzyme interaction are enzyme id, medicine id, interaction type.",
    "target": "SELECT count(*) FROM medicine WHERE FDA_approved  =  'No'"
  },
  {
    "prompt": "How many documents have the status code done? database is cre_Doc_Control_Systems. tables are reference document types, roles, addresses, reference document status, reference shipping agents, documents, employees, document drafts, draft copies, circulation history, documents mailed. columns in reference document types are document type code, document type description. columns in roles are role code, role description. columns in addresses are address id, address details. columns in reference document status are document status code, document status description. columns in reference shipping agents are shipping agent code, shipping agent name, shipping agent description. columns in documents are document id, document status code, document type code, shipping agent code, receipt date, receipt number, other details. columns in employees are employee id, role code, employee name, other details. columns in document drafts are document id, draft number, draft details. columns in draft copies are document id, draft number, copy number. columns in circulation history are document id, draft number, copy number, employee id. columns in documents mailed are document id, mailed to address id, mailing date.",
    "target": "SELECT count(*) FROM Documents WHERE document_status_code = \"done\";"
  },
  {
    "prompt": "what are the highest points of all the states database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT highest_point FROM highlow;"
  },
  {
    "prompt": "Find all cities which has a \" Taj Mahal \" . database is yelp. tables are business, category, user, checkin, neighbourhood, review, tip. columns in business are bid, business id, name, full address, city, latitude, longitude, review count, is open, rating, state. columns in category are id, business id, category name. columns in user are uid, user id, name. columns in checkin are cid, business id, count, day. columns in neighbourhood are id, business id, neighbourhood name. columns in review are rid, business id, user id, rating, text, year, month. columns in tip are tip id, business id, text, user id, likes, year, month.",
    "target": "SELECT city FROM business WHERE name  =  \"Taj Mahal\";"
  },
  {
    "prompt": "What is the average score of submissions? database is workshop_paper. tables are workshop, submission, acceptance. columns in workshop are workshop id, date, venue, name. columns in submission are submission id, scores, author, college. columns in acceptance are submission id, workshop id, result.",
    "target": "SELECT avg(Scores) FROM submission"
  },
  {
    "prompt": "Show total points of all players. database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT sum(Points) FROM player"
  },
  {
    "prompt": "How many distinct parties are there for representatives? database is election_representative. tables are election, representative. columns in election are election id, representative id, date, votes, vote percent, seats, place. columns in representative are representative id, name, state, party, lifespan.",
    "target": "SELECT count(DISTINCT Party) FROM representative"
  },
  {
    "prompt": "What is the average training hours of all players? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT avg(HS) FROM Player"
  },
  {
    "prompt": "Show all team names. database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT Name FROM Team"
  },
  {
    "prompt": "What are the names of all the teams in the basketball competition, sorted by all home scores in descending order? database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC"
  },
  {
    "prompt": "What is total amount claimed summed across all the claims? database is insurance_policies. tables are customers, customer policies, claims, settlements, payments. columns in customers are customer id, customer details. columns in customer policies are policy id, customer id, policy type code, start date, end date. columns in claims are claim id, policy id, date claim made, date claim settled, amount claimed, amount settled. columns in settlements are settlement id, claim id, date claim made, date claim settled, amount claimed, amount settled, customer policy id. columns in payments are payment id, settlement id, payment method code, date payment made, amount payment.",
    "target": "SELECT sum(Amount_Claimed) FROM Claims"
  },
  {
    "prompt": "Count the number of patients who stayed in room 112. database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT count(patient) FROM stay WHERE room  =  112"
  },
  {
    "prompt": "How many distinct president votes are recorded? database is voter_2. tables are student, voting record. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in voting record are student id, registration date, election cycle, president vote, vice president vote, secretary vote, treasurer vote, class president vote, class senator vote.",
    "target": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD"
  },
  {
    "prompt": "List the nations that have more than two ships. database is ship_mission. tables are mission, ship. columns in mission are mission id, ship id, code, launched year, location, speed knots, fate. columns in ship are ship id, name, type, nationality, tonnage.",
    "target": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2"
  },
  {
    "prompt": "Count the number of artists. database is theme_gallery. tables are artist, exhibition, exhibition record. columns in artist are artist id, name, country, year join, age. columns in exhibition are exhibition id, year, theme, artist id, ticket price. columns in exhibition record are exhibition id, date, attendance.",
    "target": "SELECT count(*) FROM artist"
  },
  {
    "prompt": "Give the distinct famous release dates for all artists. database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT distinct(Famous_Release_date) FROM artist"
  },
  {
    "prompt": "Return the average horizontal bar points across all gymnasts. database is gymnast. tables are gymnast, people. columns in gymnast are gymnast id, floor exercise points, pommel horse points, rings points, vault points, parallel bars points, horizontal bar points, total points. columns in people are people id, name, age, height, hometown.",
    "target": "SELECT avg(Horizontal_Bar_Points) FROM gymnast"
  },
  {
    "prompt": "Which country has at most 3 stadiums listed? database is swimming. tables are swimmer, stadium, event, record. columns in swimmer are id, name, nationality, meter 100, meter 200, meter 300, meter 400, meter 500, meter 600, meter 700, time. columns in stadium are id, name, capacity, city, country, opening year. columns in event are id, name, stadium id, year. columns in record are id, result, swimmer id, event id.",
    "target": "SELECT country FROM stadium GROUP BY country HAVING count(*)  <=  3"
  },
  {
    "prompt": "What is the address of the location \"UK Gallery\"? database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\""
  },
  {
    "prompt": "How many different kinds of lens brands are there? database is mountain_photos. tables are mountain, camera lens, photos. columns in mountain are id, name, height, prominence, range, country. columns in camera lens are id, brand, name, focal length mm, max aperture. columns in photos are id, camera lens id, mountain id, color, name.",
    "target": "SELECT count(DISTINCT brand) FROM camera_lens"
  },
  {
    "prompt": "how big is the city of boulder database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM city WHERE city_name  =  \"boulder\";"
  },
  {
    "prompt": "How many different players trained for more than 1000 hours? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT count(*) FROM Player WHERE HS  >  1000"
  },
  {
    "prompt": "What are the names of the five cities with the greatest proportion of white people? database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT Name FROM city ORDER BY White DESC LIMIT 5"
  },
  {
    "prompt": "Show all transaction types. database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT DISTINCT transaction_type FROM Financial_Transactions"
  },
  {
    "prompt": "Find the number of distinct currency codes used in drama workshop groups. database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups"
  },
  {
    "prompt": "How many customers do we have? database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT count(*) FROM CUSTOMERS"
  },
  {
    "prompt": "Find the number of different product types. database is department_store. tables are addresses, staff, suppliers, department store chain, customers, products, supplier addresses, customer addresses, customer orders, department stores, departments, order items, product suppliers, staff department assignments. columns in addresses are address id, address details. columns in staff are staff id, staff gender, staff name. columns in suppliers are supplier id, supplier name, supplier phone. columns in department store chain are department store chain id, department store chain name. columns in customers are customer id, payment method code, customer code, customer name, customer address, customer phone, customer email. columns in products are product id, product type code, product name, product price. columns in supplier addresses are supplier id, address id, date from, date to. columns in customer addresses are customer id, address id, date from, date to. columns in customer orders are order id, customer id, order status code, order date. columns in department stores are department store id, department store chain id, store name, store address, store phone, store email. columns in departments are department id, department store id, department name. columns in order items are order item id, order id, product id. columns in product suppliers are product id, supplier id, date supplied from, date supplied to, total amount purchased, total value purchased. columns in staff department assignments are staff id, department id, date assigned from, job title code, date assigned to.",
    "target": "SELECT count(DISTINCT product_type_code) FROM products"
  },
  {
    "prompt": "Show the detail of vehicle with id 1. database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;"
  },
  {
    "prompt": "What is the average quantity of stocks? database is device. tables are device, shop, stock. columns in device are device id, device, carrier, package version, applications, software platform. columns in shop are shop id, shop name, location, open date, open year. columns in stock are shop id, device id, quantity.",
    "target": "SELECT avg(Quantity) FROM stock"
  },
  {
    "prompt": "List the names of all music genres. database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT Name FROM GENRE"
  },
  {
    "prompt": "How many documents have expenses? database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT count(*) FROM Documents_with_expenses"
  },
  {
    "prompt": "how many rivers are in idaho database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"
  },
  {
    "prompt": "Compute the average profits companies make. database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT avg(Profits_billion) FROM Companies"
  },
  {
    "prompt": "How many transactions do we have? database is customers_and_invoices. tables are customers, orders, invoices, accounts, product categories, products, financial transactions, order items, invoice line items. columns in customers are customer id, customer first name, customer middle initial, customer last name, gender, email address, login name, login password, phone number, town city, state county province, country. columns in orders are order id, customer id, date order placed, order details. columns in invoices are invoice number, order id, invoice date. columns in accounts are account id, customer id, date account opened, account name, other account details. columns in product categories are production type code, product type description, vat rating. columns in products are product id, parent product id, production type code, unit price, product name, product color, product size. columns in financial transactions are transaction id, account id, invoice number, transaction type, transaction date, transaction amount, transaction comment, other transaction details. columns in order items are order item id, order id, product id, product quantity, other order item details. columns in invoice line items are order item id, invoice number, product id, product title, product quantity, product price, derived product cost, derived vat payable, derived total cost.",
    "target": "SELECT count(*) FROM Financial_transactions"
  },
  {
    "prompt": "kentucky borders how many states database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "Which employees do not destroy any document? Find their employee ids. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "prompt": "how many rivers does idaho have database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"
  },
  {
    "prompt": "Find the team of each player and sort them in ascending alphabetical order. database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT Team FROM player ORDER BY Team ASC"
  },
  {
    "prompt": "Which employees have the role with code \"HR\"? Find their names. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT employee_name FROM Employees WHERE role_code  =  \"HR\""
  },
  {
    "prompt": "name the rivers in illinois database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
  },
  {
    "prompt": "What are the different card type codes? database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT DISTINCT card_type_code FROM Customers_Cards"
  },
  {
    "prompt": "List the hosts of performances in ascending order of attendance. database is performance_attendance. tables are member, performance, member attendance. columns in member are member id, name, nationality, role. columns in performance are performance id, date, host, location, attendance. columns in member attendance are member id, performance id, num of pieces.",
    "target": "SELECT HOST FROM performance ORDER BY Attendance ASC"
  },
  {
    "prompt": "What are the last names of female students, ordered by age descending? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT LName FROM STUDENT WHERE Sex  =  \"F\" ORDER BY Age DESC"
  },
  {
    "prompt": "Which teachers teach in classroom 110? Give me their first names. database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT firstname FROM teachers WHERE classroom  =  110"
  },
  {
    "prompt": "How many main stream browsers whose market share is at least 5 exist? database is browser_web. tables are web client accelerator, browser, accelerator compatible browser. columns in web client accelerator are id, name, operating system, client, connection. columns in browser are id, name, market share. columns in accelerator compatible browser are accelerator id, browser id, compatible since year.",
    "target": "SELECT count(*) FROM browser WHERE market_share  >=  5"
  },
  {
    "prompt": "Count the number of different film ratings. database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT count(DISTINCT rating) FROM film"
  },
  {
    "prompt": "Show ids for all employees who dont have a certificate. database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate"
  },
  {
    "prompt": "Show the number of projects. database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT count(*) FROM Projects"
  },
  {
    "prompt": "How many clubs are there? database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT count(*) FROM club"
  },
  {
    "prompt": "What are the names of all the dorms that can accomdate more than 300 students? database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300"
  },
  {
    "prompt": "Find the city that hosted some events in the most recent year. What is the id of this city? database is city_record. tables are city, match, temperature, hosting city. columns in city are city id, city, hanzi, hanyu pinyin, regional population, gdp. columns in match are match id, date, venue, score, result, competition. columns in temperature are city id, jan, feb, mar, apr, jun, jul, aug, sep, oct, nov, dec. columns in hosting city are year, match id, host city.",
    "target": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1"
  },
  {
    "prompt": "Show the location code of the country \"Canada\". database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\""
  },
  {
    "prompt": "Find the maximum age of all the students. database is voter_2. tables are student, voting record. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in voting record are student id, registration date, election cycle, president vote, vice president vote, secretary vote, treasurer vote, class president vote, class senator vote.",
    "target": "SELECT max(Age) FROM STUDENT"
  },
  {
    "prompt": "How much salary did the top 3 well-paid players get in 2001? database is baseball_1. tables are all star, appearances, manager award, player award, manager award vote, player award vote, batting, batting postseason, player college, fielding, fielding outfield, fielding postseason, hall of fame, home game, manager, manager half, player, park, pitching, pitching postseason, salary, college, postseason, team, team franchise, team half. columns in all star are player id, year, game num, game id, team id, league id, gp, starting pos. columns in appearances are year, team id, league id, player id, g all, gs, g batting, g defense, g p, g c, g 1b, g 2b, g 3b, g ss, g lf, g cf, g rf, g of, g dh, g ph, g pr. columns in manager award are player id, award id, year, league id, tie, notes. columns in player award are player id, award id, year, league id, tie, notes. columns in manager award vote are award id, year, league id, player id, points won, points max, votes first. columns in player award vote are award id, year, league id, player id, points won, points max, votes first. columns in batting are player id, year, stint, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in batting postseason are year, round, player id, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in player college are player id, college id, year. columns in fielding are player id, year, stint, team id, league id, pos, g, gs, inn outs, po, a, e, dp, pb, wp, sb, cs, zr. columns in fielding outfield are player id, year, stint, glf, gcf, grf. columns in fielding postseason are player id, year, team id, league id, round, pos, g, gs, inn outs, po, a, e, dp, tp, pb, sb, cs. columns in hall of fame are player id, yearid, votedby, ballots, needed, votes, inducted, category, needed note. columns in home game are year, league id, team id, park id, span first, span last, games, openings, attendance. columns in manager are player id, year, team id, league id, inseason, g, w, l, rank, plyr mgr. columns in manager half are player id, year, team id, league id, inseason, half, g, w, l, rank. columns in player are player id, birth year, birth month, birth day, birth country, birth state, birth city, death year, death month, death day, death country, death state, death city, name first, name last, name given, weight, height, bats, throws, debut, final game, retro id, bbref id. columns in park are park id, park name, park alias, city, state, country. columns in pitching are player id, year, stint, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in pitching postseason are player id, year, round, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in salary are year, team id, league id, player id, salary. columns in college are college id, name full, city, state, country. columns in postseason are year, round, team id winner, league id winner, team id loser, league id loser, wins, losses, ties. columns in team are year, league id, team id, franchise id, div id, rank, g, ghome, w, l, div win, wc win, lg win, ws win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team id br, team id lahman45, team id retro. columns in team franchise are franchise id, franchise name, active, na assoc. columns in team half are year, league id, team id, half, div id, div win, rank, g, w, l.",
    "target": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;"
  },
  {
    "prompt": "Show the locations that have at least two performances. database is performance_attendance. tables are member, performance, member attendance. columns in member are member id, name, nationality, role. columns in performance are performance id, date, host, location, attendance. columns in member attendance are member id, performance id, num of pieces.",
    "target": "SELECT LOCATION FROM performance GROUP BY LOCATION HAVING COUNT(*)  >=  2"
  },
  {
    "prompt": "how many cities does the usa have database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( city_name ) FROM city;"
  },
  {
    "prompt": "Show all cities where students live. database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT DISTINCT city_code FROM Student"
  },
  {
    "prompt": "Find the number of customers in total. database is customer_deliveries. tables are products, addresses, customers, regular orders, regular order products, actual orders, actual order products, customer addresses, delivery routes, delivery route locations, trucks, employees, order deliveries. columns in products are product id, product name, product price, product description. columns in addresses are address id, address details, city, zip postcode, state province county, country. columns in customers are customer id, payment method, customer name, customer phone, customer email, date became customer. columns in regular orders are regular order id, distributer id. columns in regular order products are regular order id, product id. columns in actual orders are actual order id, order status code, regular order id, actual order date. columns in actual order products are actual order id, product id. columns in customer addresses are customer id, address id, date from, address type, date to. columns in delivery routes are route id, route name, other route details. columns in delivery route locations are location code, route id, location address id, location name. columns in trucks are truck id, truck licence number, truck details. columns in employees are employee id, employee address id, employee name, employee phone. columns in order deliveries are location code, actual order id, delivery status code, driver employee id, truck id, delivery date.",
    "target": "SELECT count(*) FROM customers"
  },
  {
    "prompt": "How many sports do we have? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT count(DISTINCT sportname) FROM Sportsinfo"
  },
  {
    "prompt": "What are all the locations with a cinema? database is cinema. tables are film, cinema, schedule. columns in film are film id, rank in series, number in season, title, directed by, original air date, production code. columns in cinema are cinema id, name, openning year, capacity, location. columns in schedule are cinema id, film id, date, show times per day, price.",
    "target": "SELECT DISTINCT LOCATION FROM cinema"
  },
  {
    "prompt": "how big is new mexico database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT area FROM state WHERE state_name  =  \"new mexico\";"
  },
  {
    "prompt": "Show the case burden of counties in descending order of population. database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC"
  },
  {
    "prompt": "Find the name of all the clubs at \"AKW\". database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT clubname FROM club WHERE clublocation  =  \"AKW\""
  },
  {
    "prompt": "How many parks are there in the state of NY? database is baseball_1. tables are all star, appearances, manager award, player award, manager award vote, player award vote, batting, batting postseason, player college, fielding, fielding outfield, fielding postseason, hall of fame, home game, manager, manager half, player, park, pitching, pitching postseason, salary, college, postseason, team, team franchise, team half. columns in all star are player id, year, game num, game id, team id, league id, gp, starting pos. columns in appearances are year, team id, league id, player id, g all, gs, g batting, g defense, g p, g c, g 1b, g 2b, g 3b, g ss, g lf, g cf, g rf, g of, g dh, g ph, g pr. columns in manager award are player id, award id, year, league id, tie, notes. columns in player award are player id, award id, year, league id, tie, notes. columns in manager award vote are award id, year, league id, player id, points won, points max, votes first. columns in player award vote are award id, year, league id, player id, points won, points max, votes first. columns in batting are player id, year, stint, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in batting postseason are year, round, player id, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in player college are player id, college id, year. columns in fielding are player id, year, stint, team id, league id, pos, g, gs, inn outs, po, a, e, dp, pb, wp, sb, cs, zr. columns in fielding outfield are player id, year, stint, glf, gcf, grf. columns in fielding postseason are player id, year, team id, league id, round, pos, g, gs, inn outs, po, a, e, dp, tp, pb, sb, cs. columns in hall of fame are player id, yearid, votedby, ballots, needed, votes, inducted, category, needed note. columns in home game are year, league id, team id, park id, span first, span last, games, openings, attendance. columns in manager are player id, year, team id, league id, inseason, g, w, l, rank, plyr mgr. columns in manager half are player id, year, team id, league id, inseason, half, g, w, l, rank. columns in player are player id, birth year, birth month, birth day, birth country, birth state, birth city, death year, death month, death day, death country, death state, death city, name first, name last, name given, weight, height, bats, throws, debut, final game, retro id, bbref id. columns in park are park id, park name, park alias, city, state, country. columns in pitching are player id, year, stint, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in pitching postseason are player id, year, round, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in salary are year, team id, league id, player id, salary. columns in college are college id, name full, city, state, country. columns in postseason are year, round, team id winner, league id winner, team id loser, league id loser, wins, losses, ties. columns in team are year, league id, team id, franchise id, div id, rank, g, ghome, w, l, div win, wc win, lg win, ws win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team id br, team id lahman45, team id retro. columns in team franchise are franchise id, franchise name, active, na assoc. columns in team half are year, league id, team id, half, div id, div win, rank, g, w, l.",
    "target": "SELECT count(*) FROM park WHERE state  =  'NY';"
  },
  {
    "prompt": "What are the distinct secretary votes in the fall election cycle? database is voter_2. tables are student, voting record. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in voting record are student id, registration date, election cycle, president vote, vice president vote, secretary vote, treasurer vote, class president vote, class senator vote.",
    "target": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\""
  },
  {
    "prompt": "Find the number of users who posted some tweets. database is twitter_1. tables are follows, tweets, user profiles. columns in follows are user id, follower id. columns in tweets are id, user id, text, create date. columns in user profiles are uid, name, email, partition id, followers.",
    "target": "SELECT count(DISTINCT UID) FROM tweets"
  },
  {
    "prompt": "Count the total number of roles listed. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT count(*) FROM ROLES"
  },
  {
    "prompt": "Show the name of drivers in descending order of age. database is school_bus. tables are driver, school, school bus. columns in driver are driver id, name, party, home city, age. columns in school are school id, grade, school, location, type. columns in school bus are school id, driver id, years working, if full time.",
    "target": "SELECT name FROM driver ORDER BY age DESC"
  },
  {
    "prompt": "How many different genders are there in the dorms? database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT count(DISTINCT gender) FROM dorm"
  },
  {
    "prompt": "Name all the products with next entry ID greater than 8. database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8"
  },
  {
    "prompt": "what is the lowest point in the state of iowa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"
  },
  {
    "prompt": "What is the description for the budget type with code ORG? database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\""
  },
  {
    "prompt": "What is the number of employees? database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT count(*) FROM Employee"
  },
  {
    "prompt": "Who is the person that has no friend? database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend"
  },
  {
    "prompt": "What is the name of the event that happened in the most recent year? database is swimming. tables are swimmer, stadium, event, record. columns in swimmer are id, name, nationality, meter 100, meter 200, meter 300, meter 400, meter 500, meter 600, meter 700, time. columns in stadium are id, name, capacity, city, country, opening year. columns in event are id, name, stadium id, year. columns in record are id, result, swimmer id, event id.",
    "target": "SELECT name FROM event ORDER BY YEAR DESC LIMIT 1"
  },
  {
    "prompt": "How many parks does Atlanta city have? database is baseball_1. tables are all star, appearances, manager award, player award, manager award vote, player award vote, batting, batting postseason, player college, fielding, fielding outfield, fielding postseason, hall of fame, home game, manager, manager half, player, park, pitching, pitching postseason, salary, college, postseason, team, team franchise, team half. columns in all star are player id, year, game num, game id, team id, league id, gp, starting pos. columns in appearances are year, team id, league id, player id, g all, gs, g batting, g defense, g p, g c, g 1b, g 2b, g 3b, g ss, g lf, g cf, g rf, g of, g dh, g ph, g pr. columns in manager award are player id, award id, year, league id, tie, notes. columns in player award are player id, award id, year, league id, tie, notes. columns in manager award vote are award id, year, league id, player id, points won, points max, votes first. columns in player award vote are award id, year, league id, player id, points won, points max, votes first. columns in batting are player id, year, stint, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in batting postseason are year, round, player id, team id, league id, g, ab, r, h, double, triple, hr, rbi, sb, cs, bb, so, ibb, hbp, sh, sf, g idp. columns in player college are player id, college id, year. columns in fielding are player id, year, stint, team id, league id, pos, g, gs, inn outs, po, a, e, dp, pb, wp, sb, cs, zr. columns in fielding outfield are player id, year, stint, glf, gcf, grf. columns in fielding postseason are player id, year, team id, league id, round, pos, g, gs, inn outs, po, a, e, dp, tp, pb, sb, cs. columns in hall of fame are player id, yearid, votedby, ballots, needed, votes, inducted, category, needed note. columns in home game are year, league id, team id, park id, span first, span last, games, openings, attendance. columns in manager are player id, year, team id, league id, inseason, g, w, l, rank, plyr mgr. columns in manager half are player id, year, team id, league id, inseason, half, g, w, l, rank. columns in player are player id, birth year, birth month, birth day, birth country, birth state, birth city, death year, death month, death day, death country, death state, death city, name first, name last, name given, weight, height, bats, throws, debut, final game, retro id, bbref id. columns in park are park id, park name, park alias, city, state, country. columns in pitching are player id, year, stint, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in pitching postseason are player id, year, round, team id, league id, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, baopp, era, ibb, wp, hbp, bk, bfp, gf, r, sh, sf, g idp. columns in salary are year, team id, league id, player id, salary. columns in college are college id, name full, city, state, country. columns in postseason are year, round, team id winner, league id winner, team id loser, league id loser, wins, losses, ties. columns in team are year, league id, team id, franchise id, div id, rank, g, ghome, w, l, div win, wc win, lg win, ws win, r, ab, h, double, triple, hr, bb, so, sb, cs, hbp, sf, ra, er, era, cg, sho, sv, ipouts, ha, hra, bba, soa, e, dp, fp, name, park, attendance, bpf, ppf, team id br, team id lahman45, team id retro. columns in team franchise are franchise id, franchise name, active, na assoc. columns in team half are year, league id, team id, half, div id, div win, rank, g, w, l.",
    "target": "SELECT count(*) FROM park WHERE city = 'Atlanta';"
  },
  {
    "prompt": "How many students are age 18? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT count(*) FROM Student WHERE age  =  18"
  },
  {
    "prompt": "How many products are there? database is solvency_ii. tables are addresses, locations, products, parties, assets, channels, finances, events, products in events, parties in events, agreements, assets in events. columns in addresses are address id, address details. columns in locations are location id, other details. columns in products are product id, product type code, product name, product price. columns in parties are party id, party details. columns in assets are asset id, other details. columns in channels are channel id, other details. columns in finances are finance id, other details. columns in events are event id, address id, channel id, event type code, finance id, location id. columns in products in events are product in event id, event id, product id. columns in parties in events are party id, event id, role code. columns in agreements are document id, event id. columns in assets in events are asset id, event id.",
    "target": "SELECT count(*) FROM Products"
  },
  {
    "prompt": "List the names of counties in descending order of population. database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT Name FROM county_public_safety ORDER BY Population DESC"
  },
  {
    "prompt": "What is the date when the document \"Marry CV\" was stored? database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\""
  },
  {
    "prompt": "How many roles are there? database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT count(*) FROM ROLES"
  },
  {
    "prompt": "Give the name of the department with the lowest budget. database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT dept_name FROM department ORDER BY budget LIMIT 1"
  },
  {
    "prompt": "How many different last names do the actors and actresses have? database is sakila_1. tables are actor, address, category, city, country, customer, film, film actor, film category, film text, inventory, language, payment, rental, staff, store. columns in actor are actor id, first name, last name, last update. columns in address are address id, address, address2, district, city id, postal code, phone, last update. columns in category are category id, name, last update. columns in city are city id, city, country id, last update. columns in country are country id, country, last update. columns in customer are customer id, store id, first name, last name, email, address id, active, create date, last update. columns in film are film id, title, description, release year, language id, original language id, rental duration, rental rate, length, replacement cost, rating, special features, last update. columns in film actor are actor id, film id, last update. columns in film category are film id, category id, last update. columns in film text are film id, title, description. columns in inventory are inventory id, film id, store id, last update. columns in language are language id, name, last update. columns in payment are payment id, customer id, staff id, rental id, amount, payment date, last update. columns in rental are rental id, rental date, inventory id, customer id, return date, staff id, last update. columns in staff are staff id, first name, last name, address id, picture, email, store id, active, username, password, last update. columns in store are store id, manager staff id, address id, last update.",
    "target": "SELECT count(DISTINCT last_name) FROM actor"
  },
  {
    "prompt": "How many voting records do we have? database is voter_2. tables are student, voting record. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in voting record are student id, registration date, election cycle, president vote, vice president vote, secretary vote, treasurer vote, class president vote, class senator vote.",
    "target": "SELECT count(*) FROM VOTING_RECORD"
  },
  {
    "prompt": "return me the homepage of the VLDB conference . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT homepage FROM conference WHERE name  =  \"VLDB\";"
  },
  {
    "prompt": "Show all flight number from Los Angeles. database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\""
  },
  {
    "prompt": "What is the id of the most recent order? database is tracking_orders. tables are customers, invoices, orders, products, order items, shipments, shipment items. columns in customers are customer id, customer name, customer details. columns in invoices are invoice number, invoice date, invoice details. columns in orders are order id, customer id, order status, date order placed, order details. columns in products are product id, product name, product details. columns in order items are order item id, product id, order id, order item status, order item details. columns in shipments are shipment id, order id, invoice number, shipment tracking number, shipment date, other shipment details. columns in shipment items are shipment id, order item id.",
    "target": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1"
  },
  {
    "prompt": "What are the names of the heads who are born outside the California state? database is department_management. tables are department, head, management. columns in department are department id, name, creation, ranking, budget in billions, num employees. columns in head are head id, name, born state, age. columns in management are department id, head id, temporary acting.",
    "target": "SELECT name FROM head WHERE born_state != 'California'"
  },
  {
    "prompt": "What are the ids of all students who dont play sports? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo"
  },
  {
    "prompt": "Return all detention summaries. database is behavior_monitoring. tables are reference address types, reference detention type, reference incident type, addresses, students, teachers, assessment notes, behavior incident, detention, student addresses, students in detention. columns in reference address types are address type code, address type description. columns in reference detention type are detention type code, detention type description. columns in reference incident type are incident type code, incident type description. columns in addresses are address id, line 1, line 2, line 3, city, zip postcode, state province county, country, other address details. columns in students are student id, address id, first name, middle name, last name, cell mobile number, email address, date first rental, date left university, other student details. columns in teachers are teacher id, address id, first name, middle name, last name, gender, cell mobile number, email address, other details. columns in assessment notes are notes id, student id, teacher id, date of notes, text of notes, other details. columns in behavior incident are incident id, incident type code, student id, date incident start, date incident end, incident summary, recommendations, other details. columns in detention are detention id, detention type code, teacher id, datetime detention start, datetime detention end, detention summary, other details. columns in student addresses are student id, address id, date address from, date address to, monthly rental, other details. columns in students in detention are student id, detention id, incident id.",
    "target": "SELECT detention_summary FROM Detention"
  },
  {
    "prompt": "What is all the information on the airport with the largest number of international passengers? database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1"
  },
  {
    "prompt": "How many students are 18 years old? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT count(*) FROM Student WHERE age  =  18"
  },
  {
    "prompt": "salem is the capital of which state database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM state WHERE capital  =  \"salem\";"
  },
  {
    "prompt": "Which catalog content has the highest height? Give me the catalog entry name. database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1"
  },
  {
    "prompt": "How many faculty members participate in an activity? database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in"
  },
  {
    "prompt": "display the job title of jobs which minimum salary is greater than 9000. database is hr_1. tables are regions, countries, departments, jobs, employees, job history, locations. columns in regions are region id, region name. columns in countries are country id, country name, region id. columns in departments are department id, department name, manager id, location id. columns in jobs are job id, job title, min salary, max salary. columns in employees are employee id, first name, last name, email, phone number, hire date, job id, salary, commission pct, manager id, department id. columns in job history are employee id, start date, end date, job id, department id. columns in locations are location id, street address, postal code, city, state province, country id.",
    "target": "SELECT job_title FROM jobs WHERE min_salary  >  9000"
  },
  {
    "prompt": "What are the different cities that have more than 100 memberships? database is shop_membership. tables are member, branch, membership register branch, purchase. columns in member are member id, card number, name, hometown, level. columns in branch are branch id, name, open year, address road, city, membership amount. columns in membership register branch are member id, branch id, register year. columns in purchase are member id, branch id, year, total pounds.",
    "target": "SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100"
  },
  {
    "prompt": "What is the location of the party with the most hosts? database is party_host. tables are party, host, party host. columns in party are party id, party theme, location, first year, last year, number of hosts. columns in host are host id, name, nationality, age. columns in party host are party id, host id, is main in charge.",
    "target": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1"
  },
  {
    "prompt": "What are the distinct address type codes for all customer addresses? database is customers_campaigns_ecommerce. tables are premises, products, customers, mailshot campaigns, customer addresses, customer orders, mailshot customers, order items. columns in premises are premise id, premises type, premise details. columns in products are product id, product category, product name. columns in customers are customer id, payment method, customer name, customer phone, customer email, customer address, customer login, customer password. columns in mailshot campaigns are mailshot id, product category, mailshot name, mailshot start date, mailshot end date. columns in customer addresses are customer id, premise id, date address from, address type code, date address to. columns in customer orders are order id, customer id, order status code, shipping method code, order placed datetime, order delivered datetime, order shipping charges. columns in mailshot customers are mailshot id, customer id, outcome code, mailshot customer date. columns in order items are item id, order item status code, order id, product id, item status code, item delivered datetime, item order quantity.",
    "target": "SELECT DISTINCT address_type_code FROM customer_addresses"
  },
  {
    "prompt": "Which city is post code 255 located in? database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT city FROM addresses WHERE zip_postcode  =  255"
  },
  {
    "prompt": "what are the rivers in illinois database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";"
  },
  {
    "prompt": "Count the number of different parties. database is party_people. tables are region, party, member, party events. columns in region are region id, region name, date, label, format, catalogue. columns in party are party id, minister, took office, left office, region id, party name. columns in member are member id, member name, party id, in office. columns in party events are event id, event name, party id, member in charge id.",
    "target": "SELECT count(DISTINCT party_name) FROM party"
  },
  {
    "prompt": "How many artists do we have? database is theme_gallery. tables are artist, exhibition, exhibition record. columns in artist are artist id, name, country, year join, age. columns in exhibition are exhibition id, year, theme, artist id, ticket price. columns in exhibition record are exhibition id, date, attendance.",
    "target": "SELECT count(*) FROM artist"
  },
  {
    "prompt": "List the names of players in ascending order of votes. database is riding_club. tables are player, club, coach, player coach, match result. columns in player are player id, sponsor name, player name, gender, residence, occupation, votes, rank. columns in club are club id, club name, region, start year. columns in coach are coach id, player name, gender, club id, rank. columns in player coach are player id, coach id, starting year. columns in match result are rank, club id, gold, big silver, small silver, bronze, points.",
    "target": "SELECT Player_name FROM player ORDER BY Votes ASC"
  },
  {
    "prompt": "Compute the average score of submissions. database is workshop_paper. tables are workshop, submission, acceptance. columns in workshop are workshop id, date, venue, name. columns in submission are submission id, scores, author, college. columns in acceptance are submission id, workshop id, result.",
    "target": "SELECT avg(Scores) FROM submission"
  },
  {
    "prompt": "What are the names of mountains in ascending alphabetical order? database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT Name FROM mountain ORDER BY Name ASC"
  },
  {
    "prompt": "How many allergies have type animal? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"animal\""
  },
  {
    "prompt": "Find all the customer information in state NY. database is chinook_1. tables are album, artist, customer, employee, genre, invoice, invoice line, media type, playlist, playlist track, track. columns in album are album id, title, artist id. columns in artist are artist id, name. columns in customer are customer id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support representative id. columns in employee are employee id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in genre are genre id, name. columns in invoice are invoice id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in invoice line are invoice line id, invoice id, track id, unit price, quantity. columns in media type are media type id, name. columns in playlist are play list id, name. columns in playlist track are play list id, track id. columns in track are track id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price.",
    "target": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\""
  },
  {
    "prompt": "how many states have a city called springfield database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "What parties have at least three representatives? database is election_representative. tables are election, representative. columns in election are election id, representative id, date, votes, vote percent, seats, place. columns in representative are representative id, name, state, party, lifespan.",
    "target": "SELECT Party FROM representative GROUP BY Party HAVING COUNT(*)  >=  3"
  },
  {
    "prompt": "Find the distinct locations that has a cinema. database is cinema. tables are film, cinema, schedule. columns in film are film id, rank in series, number in season, title, directed by, original air date, production code. columns in cinema are cinema id, name, openning year, capacity, location. columns in schedule are cinema id, film id, date, show times per day, price.",
    "target": "SELECT DISTINCT LOCATION FROM cinema"
  },
  {
    "prompt": "When was the school with the largest enrollment founded? database is university_basketball. tables are basketball match, university. columns in basketball match are team id, school id, team name, acc regular season, acc percent, acc home, acc road, all games, all games percent, all home, all road, all neutral. columns in university are school id, school, location, founded, affiliation, enrollment, nickname, primary conference.",
    "target": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1"
  },
  {
    "prompt": "What are the first names for all faculty professors, ordered by first name? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT Fname FROM FACULTY WHERE Rank  =  \"Professor\" ORDER BY Fname"
  },
  {
    "prompt": "Show card type codes with at least 5 cards. database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5"
  },
  {
    "prompt": "What is the id of the product that is booked for 3 times? database is products_for_hire. tables are discount coupons, customers, bookings, products for hire, payments, products booked, view product availability. columns in discount coupons are coupon id, date issued, coupon amount. columns in customers are customer id, coupon id, good or bad customer, first name, last name, gender, date became customer, date last hire. columns in bookings are booking id, customer id, booking status code, returned damaged yes or no, booking start date, booking end date, count hired, amount payable, amount of discount, amount outstanding, amount of refund. columns in products for hire are product id, product type code, daily hire cost, product name, product description. columns in payments are payment id, booking id, customer id, payment type code, amount paid in full yn, payment date, amount due, amount paid. columns in products booked are booking id, product id, returned yes or no, returned late yes or no, booked count, booked amount. columns in view product availability are product id, booking id, status date, available yes or no.",
    "target": "SELECT product_id FROM products_booked GROUP BY product_id HAVING count(*)  =  3"
  },
  {
    "prompt": "What are the first names of students in room 108? database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT firstname FROM list WHERE classroom  =  108"
  },
  {
    "prompt": "List all people names in the order of their date of birth from old to young. database is candidate_poll. tables are candidate, people. columns in candidate are candidate id, people id, poll source, date, support rate, consider rate, oppose rate, unsure rate. columns in people are people id, sex, name, date of birth, height, weight.",
    "target": "SELECT name FROM people ORDER BY date_of_birth"
  },
  {
    "prompt": "How many students have had at least one \"B\" grade? database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\""
  },
  {
    "prompt": "Count the number of races. database is race_track. tables are race, track. columns in race are race id, name, class, date, track id. columns in track are track id, name, location, seating, year opened.",
    "target": "SELECT count(*) FROM race"
  },
  {
    "prompt": "How many addresses are there in country USA? database is customers_and_products_contacts. tables are addresses, products, customers, contacts, customer address history, customer orders, order items. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in products are product id, product type code, product name, product price. columns in customers are customer id, payment method code, customer number, customer name, customer address, customer phone, customer email. columns in contacts are contact id, customer id, gender, first name, last name, contact phone. columns in customer address history are customer id, address id, date from, date to. columns in customer orders are order id, customer id, order date, order status code. columns in order items are order item id, order id, product id, order quantity.",
    "target": "SELECT count(*) FROM addresses WHERE country  =  'USA'"
  },
  {
    "prompt": "which state borders kentucky database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "Which papers title contains the word \"Database\"? database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT title FROM papers WHERE title LIKE \"%Database%\""
  },
  {
    "prompt": "How many airports names have the word Interanation in them? database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT count(*) FROM airports WHERE name LIKE '%International%'"
  },
  {
    "prompt": "What are the names of all the scientists in alphabetical order? database is scientist_1. tables are scientists, projects, assigned to. columns in scientists are ssn, name. columns in projects are code, name, hours. columns in assigned to are scientist, project.",
    "target": "SELECT name FROM scientists ORDER BY name"
  },
  {
    "prompt": "How many entrepreneurs are there? database is entrepreneur. tables are entrepreneur, people. columns in entrepreneur are entrepreneur id, people id, company, money requested, investor. columns in people are people id, name, height, weight, date of birth.",
    "target": "SELECT count(*) FROM entrepreneur"
  },
  {
    "prompt": "How many staff live in state Georgia? database is driving_school. tables are addresses, staff, vehicles, customers, customer payments, lessons. columns in addresses are address id, line 1 number building, city, zip postcode, state province county, country. columns in staff are staff id, staff address id, nickname, first name, middle name, last name, date of birth, date joined staff, date left staff. columns in vehicles are vehicle id, vehicle details. columns in customers are customer id, customer address id, customer status code, date became customer, date of birth, first name, last name, amount outstanding, email address, phone number, cell mobile phone number. columns in customer payments are customer id, datetime payment, payment method code, amount payment. columns in lessons are lesson id, customer id, lesson status code, staff id, vehicle id, lesson date, lesson time, price.",
    "target": "SELECT count(*) FROM Addresses WHERE state_province_county = \"Georgia\";"
  },
  {
    "prompt": "Find id of candidates whose assessment code is \"Pass\"? database is student_assessment. tables are addresses, people, students, courses, people addresses, student course registrations, student course attendance, candidates, candidate assessments. columns in addresses are address id, line 1, line 2, city, zip postcode, state province county, country. columns in people are person id, first name, middle name, last name, cell mobile number, email address, login name, password. columns in students are student id, student details. columns in courses are course id, course name, course description, other details. columns in people addresses are person address id, person id, address id, date from, date to. columns in student course registrations are student id, course id, registration date. columns in student course attendance are student id, course id, date of attendance. columns in candidates are candidate id, candidate details. columns in candidate assessments are candidate id, qualification, assessment date, asessment outcome code.",
    "target": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"Pass\""
  },
  {
    "prompt": "How many customers are there? database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT sum(no_of_customers) FROM bank"
  },
  {
    "prompt": "What are ids of the all distinct orders, sorted by placement date? database is tracking_orders. tables are customers, invoices, orders, products, order items, shipments, shipment items. columns in customers are customer id, customer name, customer details. columns in invoices are invoice number, invoice date, invoice details. columns in orders are order id, customer id, order status, date order placed, order details. columns in products are product id, product name, product details. columns in order items are order item id, product id, order id, order item status, order item details. columns in shipments are shipment id, order id, invoice number, shipment tracking number, shipment date, other shipment details. columns in shipment items are shipment id, order item id.",
    "target": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed"
  },
  {
    "prompt": "What are the origins of all flights that are headed to Honolulu? database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\""
  },
  {
    "prompt": "What are the distinct classes that races can have? database is race_track. tables are race, track. columns in race are race id, name, class, date, track id. columns in track are track id, name, location, seating, year opened.",
    "target": "SELECT DISTINCT CLASS FROM race"
  },
  {
    "prompt": "what is the address of history department? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT dept_address FROM department WHERE dept_name  =  'History'"
  },
  {
    "prompt": "List all cities of addresses in alphabetical order. database is behavior_monitoring. tables are reference address types, reference detention type, reference incident type, addresses, students, teachers, assessment notes, behavior incident, detention, student addresses, students in detention. columns in reference address types are address type code, address type description. columns in reference detention type are detention type code, detention type description. columns in reference incident type are incident type code, incident type description. columns in addresses are address id, line 1, line 2, line 3, city, zip postcode, state province county, country, other address details. columns in students are student id, address id, first name, middle name, last name, cell mobile number, email address, date first rental, date left university, other student details. columns in teachers are teacher id, address id, first name, middle name, last name, gender, cell mobile number, email address, other details. columns in assessment notes are notes id, student id, teacher id, date of notes, text of notes, other details. columns in behavior incident are incident id, incident type code, student id, date incident start, date incident end, incident summary, recommendations, other details. columns in detention are detention id, detention type code, teacher id, datetime detention start, datetime detention end, detention summary, other details. columns in student addresses are student id, address id, date address from, date address to, monthly rental, other details. columns in students in detention are student id, detention id, incident id.",
    "target": "SELECT city FROM Addresses ORDER BY city"
  },
  {
    "prompt": "How many accounts do we have? database is cre_Docs_and_Epenses. tables are reference document types, reference budget codes, projects, documents, statements, documents with expenses, accounts. columns in reference document types are document type code, document type name, document type description. columns in reference budget codes are budget type code, budget type description. columns in projects are project id, project details. columns in documents are document id, document type code, project id, document date, document name, document description, other details. columns in statements are statement id, statement details. columns in documents with expenses are document id, budget type code, document details. columns in accounts are account id, statement id, account details.",
    "target": "SELECT count(*) FROM Accounts"
  },
  {
    "prompt": "display all the information about the department Marketing. database is hr_1. tables are regions, countries, departments, jobs, employees, job history, locations. columns in regions are region id, region name. columns in countries are country id, country name, region id. columns in departments are department id, department name, manager id, location id. columns in jobs are job id, job title, min salary, max salary. columns in employees are employee id, first name, last name, email, phone number, hire date, job id, salary, commission pct, manager id, department id. columns in job history are employee id, start date, end date, job id, department id. columns in locations are location id, street address, postal code, city, state province, country id.",
    "target": "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
  },
  {
    "prompt": "What are the names of schools with the top 3 largest size? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3"
  },
  {
    "prompt": "list names of all departments ordered by their names. database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT dept_name FROM department ORDER BY dept_name"
  },
  {
    "prompt": "What are the names of all pilots 30 years old or young in descending alphabetical order? database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC"
  },
  {
    "prompt": "What is the alphabetically ordered list of all the distinct names of nurses? database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT DISTINCT name FROM nurse ORDER BY name"
  },
  {
    "prompt": "Return the names of all regions other than Denmark. database is storm_record. tables are storm, region, affected region. columns in storm are storm id, name, dates active, max speed, damage millions usd, number deaths. columns in region are region id, region code, region name. columns in affected region are region id, storm id, number city affected.",
    "target": "SELECT region_name FROM region WHERE region_name != 'Denmark'"
  },
  {
    "prompt": "What are the student ids for all male students? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT StuID FROM Student WHERE Sex  =  'M'"
  },
  {
    "prompt": "What are the teams that have the 5 oldest players? database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5"
  },
  {
    "prompt": "Show all ministers who do not belong to Progress Party. database is party_people. tables are region, party, member, party events. columns in region are region id, region name, date, label, format, catalogue. columns in party are party id, minister, took office, left office, region id, party name. columns in member are member id, member name, party id, in office. columns in party events are event id, event name, party id, member in charge id.",
    "target": "SELECT minister FROM party WHERE party_name != 'Progress Party'"
  },
  {
    "prompt": "Count the number of institutions. database is icfp_1. tables are institution, authors, papers, authorship count. columns in institution are institution id, name, country. columns in authors are author id, last name, first name. columns in papers are paper id, title. columns in authorship count are author id, institution id, paper id, author count.",
    "target": "SELECT count(*) FROM inst"
  },
  {
    "prompt": "Which event names were used more than twice for party events? database is party_people. tables are region, party, member, party events. columns in region are region id, region name, date, label, format, catalogue. columns in party are party id, minister, took office, left office, region id, party name. columns in member are member id, member name, party id, in office. columns in party events are event id, event name, party id, member in charge id.",
    "target": "SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2"
  },
  {
    "prompt": "people in boulder database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM city WHERE city_name  =  \"boulder\";"
  },
  {
    "prompt": "what is the adjacent state of kentucky database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "What document types have more than 2 corresponding documents? database is document_management. tables are roles, users, document structures, functional areas, images, documents, document functional areas, document sections, document sections images. columns in roles are role code, role description. columns in users are user id, role code, user name, user login, password. columns in document structures are document structure code, parent document structure code, document structure description. columns in functional areas are functional area code, parent functional area code, functional area description. columns in images are image id, image alt text, image name, image url. columns in documents are document code, document structure code, document type code, access count, document name. columns in document functional areas are document code, functional area code. columns in document sections are section id, document code, section sequence, section code, section title. columns in document sections images are section id, image id.",
    "target": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2"
  },
  {
    "prompt": "Return the average age across all artists. database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT avg(Age) FROM artist"
  },
  {
    "prompt": "What are the names of all teams? database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT Name FROM Team"
  },
  {
    "prompt": "Find the first names of faculties of rank Professor in alphabetic order. database is college_3. tables are student, faculty, department, member of, course, minor in, enrolled in, grade conversion. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building. columns in department are department number, division, department name, room, building, department phone. columns in member of are faculty id, department number, appt type. columns in course are course id, course name, credits, instructor, days, hours, department number. columns in minor in are student id, department number. columns in enrolled in are student id, course id, grade. columns in grade conversion are letter grade, grade point.",
    "target": "SELECT Fname FROM FACULTY WHERE Rank  =  \"Professor\" ORDER BY Fname"
  },
  {
    "prompt": "Show the price ranges of hotels with 5 star ratings. database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\""
  },
  {
    "prompt": "how many states are in the usa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( state_name ) FROM state;"
  },
  {
    "prompt": "Return the names of wrestlers with fewer than 100 days held. database is wrestler. tables are wrestler, elimination. columns in wrestler are wrestler id, name, reign, days held, location, event. columns in elimination are elimination id, wrestler id, team, eliminated by, elimination move, time.",
    "target": "SELECT Name FROM wrestler WHERE Days_held  <  100"
  },
  {
    "prompt": "Return the prices of wines produced before 2010. database is wine_1. tables are grapes, appellations, wine. columns in grapes are id, grape, color. columns in appellations are no, appelation, county, state, area, isava. columns in wine are no, grape, winery, appelation, state, name, year, price, score, cases, drink.",
    "target": "SELECT Price FROM WINE WHERE YEAR  <  2010"
  },
  {
    "prompt": "How many products have prices of at least 180? database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT count(*) FROM products WHERE price >= 180"
  },
  {
    "prompt": "How many songs are there? database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT count(*) FROM Songs"
  },
  {
    "prompt": "What is the description of the product named \"Chocolate\"? database is customer_complaints. tables are staff, customers, products, complaints. columns in staff are staff id, gender, first name, last name, email address, phone number. columns in customers are customer id, customer type code, address line 1, address line 2, town city, state, email address, phone number. columns in products are product id, parent product id, product category code, date product first available, date product discontinued, product name, product description, product price. columns in complaints are complaint id, product id, customer id, complaint outcome code, complaint status code, complaint type code, date complaint raised, date complaint closed, staff id.",
    "target": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\""
  },
  {
    "prompt": "Count the total number of available services. database is insurance_fnol. tables are customers, services, available policies, customers policies, first notification of loss, claims, settlements. columns in customers are customer id, customer name. columns in services are service id, service name. columns in available policies are policy id, policy type code, customer phone. columns in customers policies are customer id, policy id, date opened, date closed. columns in first notification of loss are fnol id, customer id, policy id, service id. columns in claims are claim id, fnol id, effective date. columns in settlements are settlement id, claim id, effective date, settlement amount.",
    "target": "SELECT count(*) FROM services"
  },
  {
    "prompt": "where is the lowest spot in iowa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"
  },
  {
    "prompt": "List the names of climbers whose country is not Switzerland. database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT Name FROM climber WHERE Country != \"Switzerland\""
  },
  {
    "prompt": "How many followers does each user have? database is twitter_1. tables are follows, tweets, user profiles. columns in follows are user id, follower id. columns in tweets are id, user id, text, create date. columns in user profiles are uid, name, email, partition id, followers.",
    "target": "SELECT count(*) FROM follows"
  },
  {
    "prompt": "What are all the different food allergies? database is allergy_1. tables are allergy type, has allergy, student. columns in allergy type are allergy name, allergy type. columns in has allergy are stuid, allergy. columns in student are stuid, last name, first name, age, sex, major, advisor, city code.",
    "target": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"food\""
  },
  {
    "prompt": "Find the name of players whose card is yes in the descending order of training hours. database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC"
  },
  {
    "prompt": "how many cities does texas have database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( city_name ) FROM city WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "What are the names of the tourist attractions that can be accessed by bus? database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\""
  },
  {
    "prompt": "Find the total number of king beds available. database is inn_1. tables are rooms, reservations. columns in rooms are room id, room name, beds, bed type, max occupancy, base price, decor. columns in reservations are code, room, check in, check out, rate, last name, first name, adults, kids.",
    "target": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';"
  },
  {
    "prompt": "How many songs have 4 minute duration? database is music_1. tables are genre, artist, files, song. columns in genre are genre name, rating, most popular in. columns in artist are artist name, country, gender, preferred genre. columns in files are song id, artist name, file size, duration, formats. columns in song are song name, artist name, country, song id, genre is, rating, languages, releasedate, resolution.",
    "target": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\""
  },
  {
    "prompt": "What is the highest elevation of an airport in the country of Iceland? database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'"
  },
  {
    "prompt": "What is the number of distinct cities the stations are located at? database is bike_1. tables are station, status, trip, weather. columns in station are id, name, latitude, longitude, dock count, city, installation date. columns in status are station id, bikes available, docks available, time. columns in trip are id, duration, start date, start station name, start station id, end date, end station name, end station id, bike id, subscription type, zip code. columns in weather are date, max temperature f, mean temperature f, min temperature f, max dew point f, mean dew point f, min dew point f, max humidity, mean humidity, min humidity, max sea level pressure inches, mean sea level pressure inches, min sea level pressure inches, max visibility miles, mean visibility miles, min visibility miles, max wind speed mph, mean wind speed mph, max gust speed mph, precipitation inches, cloud cover, events, wind dir degrees, zip code.",
    "target": "SELECT count(DISTINCT city) FROM station"
  },
  {
    "prompt": "What are the names of all clubs? database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT clubname FROM club"
  },
  {
    "prompt": "What are the first names of all employees that are professors ordered by date of birth? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob"
  },
  {
    "prompt": "List names of all pilot aged 30 or younger in descending alphabetical order. database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC"
  },
  {
    "prompt": "How many Bangladeshi artists are listed? database is music_1. tables are genre, artist, files, song. columns in genre are genre name, rating, most popular in. columns in artist are artist name, country, gender, preferred genre. columns in files are song id, artist name, file size, duration, formats. columns in song are song name, artist name, country, song id, genre is, rating, languages, releasedate, resolution.",
    "target": "SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\""
  },
  {
    "prompt": "What are the names of the climbers, ordered by points descending? database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT Name FROM climber ORDER BY Points DESC"
  },
  {
    "prompt": "What is the average number of years spent working as a journalist? database is news_report. tables are event, journalist, news report. columns in event are event id, date, venue, name, event attendance. columns in journalist are journalist id, name, nationality, age, years working. columns in news report are journalist id, event id, work type.",
    "target": "SELECT avg(Years_working) FROM journalist"
  },
  {
    "prompt": "Please show the names of the buildings whose status is \"on-hold\", in ascending order of stories. database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC"
  },
  {
    "prompt": "what is the highest point in texas database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";"
  },
  {
    "prompt": "Return the text of tweets about the topic intern. database is twitter_1. tables are follows, tweets, user profiles. columns in follows are user id, follower id. columns in tweets are id, user id, text, create date. columns in user profiles are uid, name, email, partition id, followers.",
    "target": "SELECT text FROM tweets WHERE text LIKE '%intern%'"
  },
  {
    "prompt": "how many female dependents are there? database is company_1. tables are works on, employee, department, project, dependent, department locations. columns in works on are employee ssn, project number, hours. columns in employee are first name, minit, last name, ssn, birth date, address, sex, salary, super ssn, department no. columns in department are department name, department number, manager ssn, manager start date. columns in project are dependent name, dependent number, dependent location, department number. columns in dependent are employee ssn, dependent name, sex, birth date, relationship. columns in department locations are department number, department location.",
    "target": "SELECT count(*) FROM dependent WHERE sex  =  'F'"
  },
  {
    "prompt": "Which classes have more than two captains? database is ship_1. tables are captain, ship. columns in captain are captain id, name, ship id, age, class, rank. columns in ship are ship id, name, type, built year, class, flag.",
    "target": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2"
  },
  {
    "prompt": "Tell me the name of the most pricy product. database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1"
  },
  {
    "prompt": "What are the names of all songs in English? database is music_1. tables are genre, artist, files, song. columns in genre are genre name, rating, most popular in. columns in artist are artist name, country, gender, preferred genre. columns in files are song id, artist name, file size, duration, formats. columns in song are song name, artist name, country, song id, genre is, rating, languages, releasedate, resolution.",
    "target": "SELECT song_name FROM song WHERE languages  =  \"english\""
  },
  {
    "prompt": "Show the players from college UCLA. database is match_season. tables are country, team, match season, player. columns in country are country id, country name, capital, official native language. columns in team are team id, name. columns in match season are season, player, position, country, team, draft pick number, draft class, college. columns in player are player id, player, years played, total wl, singles wl, doubles wl, team.",
    "target": "SELECT Player FROM match_season WHERE College  =  \"UCLA\""
  },
  {
    "prompt": "Count the number of customers recorded. database is cre_Drama_Workshop_Groups. tables are reference payment methods, reference service types, addresses, products, marketing regions, clients, drama workshop groups, performers, customers, stores, bookings, performers in bookings, customer orders, order items, invoices, services, bookings services, invoice items. columns in reference payment methods are payment method code, payment method description. columns in reference service types are service type code, parent service type code, service type description. columns in addresses are address id, line 1, line 2, city town, state county, other details. columns in products are product id, product name, product price, product description, other product service details. columns in marketing regions are marketing region code, marketing region name, marketing region descriptrion, other details. columns in clients are client id, address id, customer email address, customer name, customer phone, other details. columns in drama workshop groups are workshop group id, address id, currency code, marketing region code, store name, store phone, store email address, other details. columns in performers are performer id, address id, customer name, customer phone, customer email address, other details. columns in customers are customer id, address id, customer name, customer phone, customer email address, other details. columns in stores are store id, address id, marketing region code, store name, store phone, store email address, other details. columns in bookings are booking id, customer id, workshop group id, status code, store id, order date, planned delivery date, actual delivery date, other order details. columns in performers in bookings are order id, performer id. columns in customer orders are order id, customer id, store id, order date, planned delivery date, actual delivery date, other order details. columns in order items are order item id, order id, product id, order quantity, other item details. columns in invoices are invoice id, order id, payment method code, product id, order quantity, other item details, order item id. columns in services are service id, service type code, workshop group id, product description, product name, product price, other product service details. columns in bookings services are order id, product id. columns in invoice items are invoice item id, invoice id, order id, order item id, product id, order quantity, other item details.",
    "target": "SELECT count(*) FROM CUSTOMERS"
  },
  {
    "prompt": "What is the description of the club named \"Tennis Club\"? database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\""
  },
  {
    "prompt": "What is the maximum Online Mendelian Inheritance in Man (OMIM) value of the enzymes? database is medicine_enzyme_interaction. tables are medicine, enzyme, medicine enzyme interaction. columns in medicine are id, name, trade name, fda approved. columns in enzyme are id, name, location, product, chromosome, omim, porphyria. columns in medicine enzyme interaction are enzyme id, medicine id, interaction type.",
    "target": "SELECT max(OMIM) FROM enzyme"
  },
  {
    "prompt": "Show the number of document types. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT count(*) FROM Ref_document_types"
  },
  {
    "prompt": "How many customers live in the city of Prague? database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT count(*) FROM customers WHERE city = \"Prague\";"
  },
  {
    "prompt": "Return the famous release date for the oldest artist. database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1"
  },
  {
    "prompt": "Count the number of wrestlers. database is wrestler. tables are wrestler, elimination. columns in wrestler are wrestler id, name, reign, days held, location, event. columns in elimination are elimination id, wrestler id, team, eliminated by, elimination move, time.",
    "target": "SELECT count(*) FROM wrestler"
  },
  {
    "prompt": "Return all the information for all employees without any department number. database is hr_1. tables are regions, countries, departments, jobs, employees, job history, locations. columns in regions are region id, region name. columns in countries are country id, country name, region id. columns in departments are department id, department name, manager id, location id. columns in jobs are job id, job title, min salary, max salary. columns in employees are employee id, first name, last name, email, phone number, hire date, job id, salary, commission pct, manager id, department id. columns in job history are employee id, start date, end date, job id, department id. columns in locations are location id, street address, postal code, city, state province, country id.",
    "target": "SELECT * FROM employees WHERE department_id  =  \"null\""
  },
  {
    "prompt": "Find the number of users called Michelle database is yelp. tables are business, category, user, checkin, neighbourhood, review, tip. columns in business are bid, business id, name, full address, city, latitude, longitude, review count, is open, rating, state. columns in category are id, business id, category name. columns in user are uid, user id, name. columns in checkin are cid, business id, count, day. columns in neighbourhood are id, business id, neighbourhood name. columns in review are rid, business id, user id, rating, text, year, month. columns in tip are tip id, business id, text, user id, likes, year, month.",
    "target": "SELECT COUNT ( DISTINCT name ) FROM USER WHERE name  =  \"Michelle\";"
  },
  {
    "prompt": "display the ID for those employees who did two or more jobs in the past. database is hr_1. tables are regions, countries, departments, jobs, employees, job history, locations. columns in regions are region id, region name. columns in countries are country id, country name, region id. columns in departments are department id, department name, manager id, location id. columns in jobs are job id, job title, min salary, max salary. columns in employees are employee id, first name, last name, email, phone number, hire date, job id, salary, commission pct, manager id, department id. columns in job history are employee id, start date, end date, job id, department id. columns in locations are location id, street address, postal code, city, state province, country id.",
    "target": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
  },
  {
    "prompt": "Count the number of different scientists assigned to any project. database is scientist_1. tables are scientists, projects, assigned to. columns in scientists are ssn, name. columns in projects are code, name, hours. columns in assigned to are scientist, project.",
    "target": "SELECT count(DISTINCT scientist) FROM assignedto"
  },
  {
    "prompt": "How many stadiums are not in country \"Russia\"? database is swimming. tables are swimmer, stadium, event, record. columns in swimmer are id, name, nationality, meter 100, meter 200, meter 300, meter 400, meter 500, meter 600, meter 700, time. columns in stadium are id, name, capacity, city, country, opening year. columns in event are id, name, stadium id, year. columns in record are id, result, swimmer id, event id.",
    "target": "SELECT count(*) FROM stadium WHERE country != 'Russia'"
  },
  {
    "prompt": "List all the reviews which rated a business less than 1 database is yelp. tables are business, category, user, checkin, neighbourhood, review, tip. columns in business are bid, business id, name, full address, city, latitude, longitude, review count, is open, rating, state. columns in category are id, business id, category name. columns in user are uid, user id, name. columns in checkin are cid, business id, count, day. columns in neighbourhood are id, business id, neighbourhood name. columns in review are rid, business id, user id, rating, text, year, month. columns in tip are tip id, business id, text, user id, likes, year, month.",
    "target": "SELECT text FROM review WHERE rating  <  1;"
  },
  {
    "prompt": "Who are all the directors? database is cinema. tables are film, cinema, schedule. columns in film are film id, rank in series, number in season, title, directed by, original air date, production code. columns in cinema are cinema id, name, openning year, capacity, location. columns in schedule are cinema id, film id, date, show times per day, price.",
    "target": "SELECT DISTINCT directed_by FROM film"
  },
  {
    "prompt": "What is the description of document type Paper? database is cre_Doc_Control_Systems. tables are reference document types, roles, addresses, reference document status, reference shipping agents, documents, employees, document drafts, draft copies, circulation history, documents mailed. columns in reference document types are document type code, document type description. columns in roles are role code, role description. columns in addresses are address id, address details. columns in reference document status are document status code, document status description. columns in reference shipping agents are shipping agent code, shipping agent name, shipping agent description. columns in documents are document id, document status code, document type code, shipping agent code, receipt date, receipt number, other details. columns in employees are employee id, role code, employee name, other details. columns in document drafts are document id, draft number, draft details. columns in draft copies are document id, draft number, copy number. columns in circulation history are document id, draft number, copy number, employee id. columns in documents mailed are document id, mailed to address id, mailing date.",
    "target": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = \"Paper\";"
  },
  {
    "prompt": "What are the different types of transactions? database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT DISTINCT transaction_type FROM Financial_Transactions"
  },
  {
    "prompt": "List today s journals database is scholar. tables are venue, author, dataset, journal, key phrase, paper, cite, paper dataset, paper key phrase, writes. columns in venue are venue id, venue name. columns in author are author id, author name. columns in dataset are dataset id, dataset name. columns in journal are journal id, journal name. columns in key phrase are key phrase id, key phrase name. columns in paper are paper id, title, venue id, year, number citing, number cited by, journal id. columns in cite are citing paper id, cited paper id. columns in paper dataset are paper id, dataset id. columns in paper key phrase are paper id, key phrase id. columns in writes are paper id, author id.",
    "target": "SELECT DISTINCT journalid FROM paper WHERE YEAR  =  2011 GROUP BY journalid;"
  },
  {
    "prompt": "how many major cities are there database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000;"
  },
  {
    "prompt": "Find the founder of the company whose name begins with the letter S. database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'"
  },
  {
    "prompt": "What is the type of the document whose description starts with the word Initial? database is tracking_grants_for_research. tables are document types, documents, grants, organisation types, organisations, project outcomes, project staff, projects, research outcomes, research staff, staff roles, tasks. columns in document types are document type code, document description. columns in documents are document id, document type code, grant id, sent date, response received date, other details. columns in grants are grant id, organisation id, grant amount, grant start date, grant end date, other details. columns in organisation types are organisation type, organisation type description. columns in organisations are organisation id, organisation type, organisation details. columns in project outcomes are project id, outcome code, outcome details. columns in project staff are staff id, project id, role code, date from, date to, other details. columns in projects are project id, organisation id, project details. columns in research outcomes are outcome code, outcome description. columns in research staff are staff id, employer organisation id, staff details. columns in staff roles are role code, role description. columns in tasks are task id, project id, task details, eg agree objectives.",
    "target": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'"
  },
  {
    "prompt": "Sort all the distinct products in alphabetical order. database is tracking_orders. tables are customers, invoices, orders, products, order items, shipments, shipment items. columns in customers are customer id, customer name, customer details. columns in invoices are invoice number, invoice date, invoice details. columns in orders are order id, customer id, order status, date order placed, order details. columns in products are product id, product name, product details. columns in order items are order item id, product id, order id, order item status, order item details. columns in shipments are shipment id, order id, invoice number, shipment tracking number, shipment date, other shipment details. columns in shipment items are shipment id, order item id.",
    "target": "SELECT DISTINCT product_name FROM products ORDER BY product_name"
  },
  {
    "prompt": "How many distinct artists have volumes? database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"
  },
  {
    "prompt": "List the locations of schools in ascending order of enrollment. database is school_player. tables are school, school details, school performance, player. columns in school are school id, school, location, enrollment, founded, denomination, boys or girls, day or boarding, year entered competition, school colors. columns in school details are school id, nickname, colors, league, class, division. columns in school performance are school id, school year, class a, class aa. columns in player are player id, player, team, age, position, school id.",
    "target": "SELECT LOCATION FROM school ORDER BY Enrollment ASC"
  },
  {
    "prompt": "How many counties are there? database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT count(*) FROM county_public_safety"
  },
  {
    "prompt": "What are all the distinct payment types? database is products_for_hire. tables are discount coupons, customers, bookings, products for hire, payments, products booked, view product availability. columns in discount coupons are coupon id, date issued, coupon amount. columns in customers are customer id, coupon id, good or bad customer, first name, last name, gender, date became customer, date last hire. columns in bookings are booking id, customer id, booking status code, returned damaged yes or no, booking start date, booking end date, count hired, amount payable, amount of discount, amount outstanding, amount of refund. columns in products for hire are product id, product type code, daily hire cost, product name, product description. columns in payments are payment id, booking id, customer id, payment type code, amount paid in full yn, payment date, amount due, amount paid. columns in products booked are booking id, product id, returned yes or no, returned late yes or no, booked count, booked amount. columns in view product availability are product id, booking id, status date, available yes or no.",
    "target": "SELECT DISTINCT payment_type_code FROM payments"
  },
  {
    "prompt": "How many students play video games? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT count(DISTINCT StuID) FROM Plays_games"
  },
  {
    "prompt": "List all pilot names in ascending alphabetical order. database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT Name FROM pilot ORDER BY Name ASC"
  },
  {
    "prompt": "What are the countries for each market, ordered alphabetically? database is film_rank. tables are film, market, film market estimation. columns in film are film id, title, studio, director, gross in dollar. columns in market are market id, country, number cities. columns in film market estimation are estimation id, low estimate, high estimate, film id, type, market id, year.",
    "target": "SELECT Country FROM market ORDER BY Country ASC"
  },
  {
    "prompt": "Find the ids of all the order items whose product id is 11. database is tracking_orders. tables are customers, invoices, orders, products, order items, shipments, shipment items. columns in customers are customer id, customer name, customer details. columns in invoices are invoice number, invoice date, invoice details. columns in orders are order id, customer id, order status, date order placed, order details. columns in products are product id, product name, product details. columns in order items are order item id, product id, order id, order item status, order item details. columns in shipments are shipment id, order id, invoice number, shipment tracking number, shipment date, other shipment details. columns in shipment items are shipment id, order item id.",
    "target": "SELECT order_item_id FROM order_items WHERE product_id = 11"
  },
  {
    "prompt": "What is the detail of each visitor? database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT Tourist_Details FROM VISITORS"
  },
  {
    "prompt": "Return the the details of all products. database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT DISTINCT product_details FROM products"
  },
  {
    "prompt": "List the distinct carriers of phones with memories bigger than 32. database is phone_market. tables are phone, market, phone market. columns in phone are name, phone id, memory in g, carrier, price. columns in market are market id, district, num of employees, num of shops, ranking. columns in phone market are market id, phone id, num of stock.",
    "target": "SELECT DISTINCT Carrier FROM phone WHERE Memory_in_G  >  32"
  },
  {
    "prompt": "Find the cities which have exactly two airports. database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2"
  },
  {
    "prompt": "What are the names of companies whose headquarters are not \"USA\"? database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT name FROM Companies WHERE Headquarters != 'USA'"
  },
  {
    "prompt": "What is the name of the highest mountain? database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1"
  },
  {
    "prompt": "Find the average age of female students. database is voter_2. tables are student, voting record. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in voting record are student id, registration date, election cycle, president vote, vice president vote, secretary vote, treasurer vote, class president vote, class senator vote.",
    "target": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\""
  },
  {
    "prompt": "How many distinct locations of perpetrators are there? database is perpetrator. tables are perpetrator, people. columns in perpetrator are perpetrator id, people id, date, year, location, country, killed, injured. columns in people are people id, name, height, weight, home town.",
    "target": "SELECT count(DISTINCT LOCATION) FROM perpetrator"
  },
  {
    "prompt": "List the name of all playlist. database is store_1. tables are sqlite sequence, artists, albums, employees, customers, genres, invoices, media types, tracks, invoice lines, playlists, playlist tracks. columns in sqlite sequence are name, seq. columns in artists are id, name. columns in albums are id, title, artist id. columns in employees are id, last name, first name, title, reports to, birth date, hire date, address, city, state, country, postal code, phone, fax, email. columns in customers are id, first name, last name, company, address, city, state, country, postal code, phone, fax, email, support rep id. columns in genres are id, name. columns in invoices are id, customer id, invoice date, billing address, billing city, billing state, billing country, billing postal code, total. columns in media types are id, name. columns in tracks are id, name, album id, media type id, genre id, composer, milliseconds, bytes, unit price. columns in invoice lines are id, invoice id, track id, unit price, quantity. columns in playlists are id, name. columns in playlist tracks are playlist id, track id.",
    "target": "SELECT name FROM playlists;"
  },
  {
    "prompt": "Show all distinct publishers for books. database is culture_company. tables are book club, movie, culture company. columns in book club are book club id, year, author or editor, book title, publisher, category, result. columns in movie are movie id, title, year, director, budget million, gross worldwide. columns in culture company are company name, type, incorporated in, group equity shareholding, book club id, movie id.",
    "target": "SELECT DISTINCT publisher FROM book_club"
  },
  {
    "prompt": "return me the homepage of \" University of Michigan \" . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT homepage FROM organization WHERE name  =  \"University of Michigan\";"
  },
  {
    "prompt": "Which minister left office the latest? database is party_people. tables are region, party, member, party events. columns in region are region id, region name, date, label, format, catalogue. columns in party are party id, minister, took office, left office, region id, party name. columns in member are member id, member name, party id, in office. columns in party events are event id, event name, party id, member in charge id.",
    "target": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1"
  },
  {
    "prompt": "What is the total amount of payment? database is insurance_policies. tables are customers, customer policies, claims, settlements, payments. columns in customers are customer id, customer details. columns in customer policies are policy id, customer id, policy type code, start date, end date. columns in claims are claim id, policy id, date claim made, date claim settled, amount claimed, amount settled. columns in settlements are settlement id, claim id, date claim made, date claim settled, amount claimed, amount settled, customer policy id. columns in payments are payment id, settlement id, payment method code, date payment made, amount payment.",
    "target": "SELECT sum(Amount_Payment) FROM Payments"
  },
  {
    "prompt": "Find all the catalog publishers whose name contains \"Murray\" database is product_catalog. tables are attribute definitions, catalogs, catalog structure, catalog contents, catalog contents additional attributes. columns in attribute definitions are attribute id, attribute name, attribute data type. columns in catalogs are catalog id, catalog name, catalog publisher, date of publication, date of latest revision. columns in catalog structure are catalog level number, catalog id, catalog level name. columns in catalog contents are catalog entry id, catalog level number, parent entry id, previous entry id, next entry id, catalog entry name, product stock number, price in dollars, price in euros, price in pounds, capacity, length, height, width. columns in catalog contents additional attributes are catalog entry id, catalog level number, attribute id, attribute value.",
    "target": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\""
  },
  {
    "prompt": "List the titles of the books in ascending order of issues. database is book_2. tables are publication, book. columns in publication are publication id, book id, publisher, publication date, price. columns in book are book id, title, issues, writer.",
    "target": "SELECT Title FROM book ORDER BY Issues ASC"
  },
  {
    "prompt": "Return all the distinct payment methods used by customers. database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT DISTINCT payment_method FROM customers"
  },
  {
    "prompt": "What is the id of the longest song? database is music_1. tables are genre, artist, files, song. columns in genre are genre name, rating, most popular in. columns in artist are artist name, country, gender, preferred genre. columns in files are song id, artist name, file size, duration, formats. columns in song are song name, artist name, country, song id, genre is, rating, languages, releasedate, resolution.",
    "target": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1"
  },
  {
    "prompt": "What are the different years for all competitions that are not of type equal to tournament? database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\""
  },
  {
    "prompt": "Show all information on the airport that has the largest number of international passengers. database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1"
  },
  {
    "prompt": "What is the average amount of items ordered in each order? database is customers_and_addresses. tables are addresses, products, customers, customer addresses, customer contact channels, customer orders, order items. columns in addresses are address id, address content, city, zip postcode, state province county, country, other address details. columns in products are product id, product details. columns in customers are customer id, payment method, customer name, date became customer, other customer details. columns in customer addresses are customer id, address id, date address from, address type, date address to. columns in customer contact channels are customer id, channel code, active from date, active to date, contact number. columns in customer orders are order id, customer id, order status, order date, order details. columns in order items are order id, product id, order quantity.",
    "target": "SELECT avg(order_quantity) FROM order_items"
  },
  {
    "prompt": "List the names of members in ascending alphabetical order. database is decoration_competition. tables are college, member, round. columns in college are college id, name, leader name, college location. columns in member are member id, name, country, college id. columns in round are round id, member id, decoration theme, rank in round.",
    "target": "SELECT Name FROM member ORDER BY Name ASC"
  },
  {
    "prompt": "How many trains have Express in their names? database is station_weather. tables are train, station, route, weekly weather. columns in train are id, train number, name, origin, destination, time, interval. columns in station are id, network name, services, local authority. columns in route are train id, station id. columns in weekly weather are station id, day of week, high temperature, low temperature, precipitation, wind speed mph.",
    "target": "SELECT count(*) FROM train WHERE name LIKE \"%Express%\""
  },
  {
    "prompt": "What is all the information about the Marketing department? database is hr_1. tables are regions, countries, departments, jobs, employees, job history, locations. columns in regions are region id, region name. columns in countries are country id, country name, region id. columns in departments are department id, department name, manager id, location id. columns in jobs are job id, job title, min salary, max salary. columns in employees are employee id, first name, last name, email, phone number, hire date, job id, salary, commission pct, manager id, department id. columns in job history are employee id, start date, end date, job id, department id. columns in locations are location id, street address, postal code, city, state province, country id.",
    "target": "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
  },
  {
    "prompt": "Count how many appointments have been made in total. database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT count(*) FROM appointment"
  },
  {
    "prompt": "What is the average number of gold medals for clubs? database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT avg(Gold) FROM club_rank"
  },
  {
    "prompt": "return me all the organizations . database is academic. tables are author, conference, domain, domain author, domain conference, journal, domain journal, keyword, domain keyword, publication, domain publication, organization, publication keyword, writes, cite. columns in author are aid, homepage, name, oid. columns in conference are cid, homepage, name. columns in domain are did, name. columns in domain author are aid, did. columns in domain conference are cid, did. columns in journal are homepage, jid, name. columns in domain journal are did, jid. columns in keyword are keyword, kid. columns in domain keyword are did, kid. columns in publication are abstract, cid, citation num, jid, pid, reference num, title, year. columns in domain publication are did, pid. columns in organization are continent, homepage, name, oid. columns in publication keyword are pid, kid. columns in writes are aid, pid. columns in cite are cited, citing.",
    "target": "SELECT name FROM organization;"
  },
  {
    "prompt": "Show the number of transaction types. database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT count(DISTINCT transaction_type) FROM Financial_Transactions"
  },
  {
    "prompt": "what is the population of boulder city database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM city WHERE city_name  =  \"boulder\";"
  },
  {
    "prompt": "What is the id of the reviewer whose name includes the word \"Mike\"? database is movie_1. tables are movie, reviewer, rating. columns in movie are movie id, title, year, director. columns in reviewer are reviewer id, name. columns in rating are reviewer id, movie id, rating stars, rating date.",
    "target": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\""
  },
  {
    "prompt": "which state border kentucky database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "What are the names for the 3 branches that have the most memberships? database is shop_membership. tables are member, branch, membership register branch, purchase. columns in member are member id, card number, name, hometown, level. columns in branch are branch id, name, open year, address road, city, membership amount. columns in membership register branch are member id, branch id, register year. columns in purchase are member id, branch id, year, total pounds.",
    "target": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3"
  },
  {
    "prompt": "what are the states database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM state;"
  },
  {
    "prompt": "how many different positions are there? database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT count(DISTINCT POSITION) FROM player"
  },
  {
    "prompt": "Return the names of cities, ordered alphabetically. database is county_public_safety. tables are county public safety, city. columns in county public safety are county id, name, population, police officers, residents per officer, case burden, crime rate, police force, location. columns in city are city id, county id, name, white, black, amerindian, asian, multiracial, hispanic.",
    "target": "SELECT Name FROM city ORDER BY Name ASC"
  },
  {
    "prompt": "What are the numbers of all flights coming from Los Angeles? database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\""
  },
  {
    "prompt": "Show the average population of all counties. database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT avg(Population) FROM county"
  },
  {
    "prompt": "What is the average number of attendees for performances? database is performance_attendance. tables are member, performance, member attendance. columns in member are member id, name, nationality, role. columns in performance are performance id, date, host, location, attendance. columns in member attendance are member id, performance id, num of pieces.",
    "target": "SELECT avg(Attendance) FROM performance"
  },
  {
    "prompt": "How many activities do we have? database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT count(*) FROM Activity"
  },
  {
    "prompt": "Show the name of the party that has at least two records. database is election. tables are county, party, election. columns in county are county id, county name, population, zip code. columns in party are party id, year, party, governor, lieutenant governor, comptroller, attorney general, us senate. columns in election are election id, counties represented, district, delegate, party, first elected, committee.",
    "target": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2"
  },
  {
    "prompt": "What is the description of the claim status \"Open\"? database is insurance_and_eClaims. tables are customers, staff, policies, claim headers, claims documents, claims processing stages, claims processing. columns in customers are customer id, customer details. columns in staff are staff id, staff details. columns in policies are policy id, customer id, policy type code, start date, end date. columns in claim headers are claim header id, claim status code, claim type code, policy id, date of claim, date of settlement, amount claimed, amount piad. columns in claims documents are claim id, document type code, created by staff id, created date. columns in claims processing stages are claim stage id, next claim stage id, claim status name, claim status description. columns in claims processing are claim processing id, claim id, claim outcome code, claim stage id, staff id.",
    "target": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\""
  },
  {
    "prompt": "How many distinct complaint type codes are there in the database? database is customer_complaints. tables are staff, customers, products, complaints. columns in staff are staff id, gender, first name, last name, email address, phone number. columns in customers are customer id, customer type code, address line 1, address line 2, town city, state, email address, phone number. columns in products are product id, parent product id, product category code, date product first available, date product discontinued, product name, product description, product price. columns in complaints are complaint id, product id, customer id, complaint outcome code, complaint status code, complaint type code, date complaint raised, date complaint closed, staff id.",
    "target": "SELECT count(DISTINCT complaint_type_code) FROM complaints"
  },
  {
    "prompt": "what is the lowest point in iowa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"
  },
  {
    "prompt": "How many customer cards are there? database is customers_card_transactions. tables are accounts, customers, customers cards, financial transactions. columns in accounts are account id, customer id, account name, other account details. columns in customers are customer id, customer first name, customer last name, customer address, customer phone, customer email, other customer details. columns in customers cards are card id, customer id, card type code, card number, date valid from, date valid to, other card details. columns in financial transactions are transaction id, previous transaction id, account id, card id, transaction type, transaction date, transaction amount, transaction comment, other transaction details.",
    "target": "SELECT count(*) FROM Customers_cards"
  },
  {
    "prompt": "List the total scores of body builders in ascending order. database is body_builder. tables are body builder, people. columns in body builder are body builder id, people id, snatch, clean jerk, total. columns in people are people id, name, height, weight, birth date, birth place.",
    "target": "SELECT Total FROM body_builder ORDER BY Total ASC"
  },
  {
    "prompt": "What is the total number of points for all players? database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT sum(Points) FROM player"
  },
  {
    "prompt": "Compute the number of products with a price larger than or equal to $180. database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT count(*) FROM products WHERE price >= 180"
  },
  {
    "prompt": "Report the name of all campuses in Los Angeles county. database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""
  },
  {
    "prompt": "which state is springfield in database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "What is the number of different class sections offered in the course ACCT-211? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'"
  },
  {
    "prompt": "Count the number of regions. database is party_people. tables are region, party, member, party events. columns in region are region id, region name, date, label, format, catalogue. columns in party are party id, minister, took office, left office, region id, party name. columns in member are member id, member name, party id, in office. columns in party events are event id, event name, party id, member in charge id.",
    "target": "SELECT count(*) FROM region"
  },
  {
    "prompt": "what is the population of boulder database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM city WHERE city_name  =  \"boulder\";"
  },
  {
    "prompt": "What information is there on albums from 2010? database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT * FROM Albums WHERE YEAR  =  2010"
  },
  {
    "prompt": "What type of game is Call of Destiny? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\""
  },
  {
    "prompt": "How many different statuses do cities have? database is farm. tables are city, farm, farm competition, competition record. columns in city are city id, official name, status, area km 2, population, census ranking. columns in farm are farm id, year, total horses, working horses, total cattle, oxen, bulls, cows, pigs, sheep and goats. columns in farm competition are competition id, year, theme, host city id, hosts. columns in competition record are competition id, farm id, rank.",
    "target": "SELECT count(DISTINCT Status) FROM city"
  },
  {
    "prompt": "what is the density of wyoming database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT density FROM state WHERE state_name  =  \"wyoming\";"
  },
  {
    "prompt": "How many editors are there? database is journal_committee. tables are journal, editor, journal committee. columns in journal are journal id, date, theme, sales. columns in editor are editor id, name, age. columns in journal committee are editor id, journal id, work type.",
    "target": "SELECT count(*) FROM editor"
  },
  {
    "prompt": "what is the name of every pilot who is at least 25 years old? database is aircraft. tables are pilot, aircraft, match, airport, airport aircraft. columns in pilot are pilot id, name, age. columns in aircraft are aircraft id, aircraft, description, max gross weight, total disk area, max disk loading. columns in match are round, location, country, date, fastest qualifying, winning pilot, winning aircraft. columns in airport are airport id, airport name, total passengers, % change 2007, international passengers, domestic passengers, transit passengers, aircraft movements, freight metric tonnes. columns in airport aircraft are id, airport id, aircraft id.",
    "target": "SELECT Name FROM pilot WHERE Age  >=  25"
  },
  {
    "prompt": "What is the id of the candidate who most recently accessed the course? database is student_assessment. tables are addresses, people, students, courses, people addresses, student course registrations, student course attendance, candidates, candidate assessments. columns in addresses are address id, line 1, line 2, city, zip postcode, state province county, country. columns in people are person id, first name, middle name, last name, cell mobile number, email address, login name, password. columns in students are student id, student details. columns in courses are course id, course name, course description, other details. columns in people addresses are person address id, person id, address id, date from, date to. columns in student course registrations are student id, course id, registration date. columns in student course attendance are student id, course id, date of attendance. columns in candidates are candidate id, candidate details. columns in candidate assessments are candidate id, qualification, assessment date, asessment outcome code.",
    "target": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1"
  },
  {
    "prompt": "List ids for all student who are on scholarship. database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'"
  },
  {
    "prompt": "What is the total share of transactions? database is tracking_share_transactions. tables are investors, lots, reference transaction types, transactions, sales, purchases, transactions lots. columns in investors are investor id, investor details. columns in lots are lot id, investor id, lot details. columns in reference transaction types are transaction type code, transaction type description. columns in transactions are transaction id, investor id, transaction type code, date of transaction, amount of transaction, share count, other details. columns in sales are sales transaction id, sales details. columns in purchases are purchase transaction id, purchase details. columns in transactions lots are transaction id, lot id.",
    "target": "SELECT sum(share_count) FROM TRANSACTIONS"
  },
  {
    "prompt": "How many services are there? database is insurance_fnol. tables are customers, services, available policies, customers policies, first notification of loss, claims, settlements. columns in customers are customer id, customer name. columns in services are service id, service name. columns in available policies are policy id, policy type code, customer phone. columns in customers policies are customer id, policy id, date opened, date closed. columns in first notification of loss are fnol id, customer id, policy id, service id. columns in claims are claim id, fnol id, effective date. columns in settlements are settlement id, claim id, effective date, settlement amount.",
    "target": "SELECT count(*) FROM services"
  },
  {
    "prompt": "What are the names of the five oldest people? database is gymnast. tables are gymnast, people. columns in gymnast are gymnast id, floor exercise points, pommel horse points, rings points, vault points, parallel bars points, horizontal bar points, total points. columns in people are people id, name, age, height, hometown.",
    "target": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5"
  },
  {
    "prompt": "Show headquarters with at least two companies in the banking industry. database is gas_company. tables are company, gas station, station company. columns in company are company id, rank, company, headquarters, main industry, sales billion, profits billion, assets billion, market value. columns in gas station are station id, open year, location, manager name, vice manager name, representative name. columns in station company are station id, company id, rank of the year.",
    "target": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2"
  },
  {
    "prompt": "Find each students first name. database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT DISTINCT fname FROM student"
  },
  {
    "prompt": "What is the total number of companies? database is gas_company. tables are company, gas station, station company. columns in company are company id, rank, company, headquarters, main industry, sales billion, profits billion, assets billion, market value. columns in gas station are station id, open year, location, manager name, vice manager name, representative name. columns in station company are station id, company id, rank of the year.",
    "target": "SELECT count(*) FROM company"
  },
  {
    "prompt": "Which faculty do not participate in any activity? Find their faculty ids. database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in"
  },
  {
    "prompt": "what is the lowest point in iowa in meters database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"
  },
  {
    "prompt": "What is the average fee for a CSU campus in the year of 1996? database is csu_1. tables are campuses, csu fees, degrees, discipline enrollments, enrollments, faculty. columns in campuses are id, campus, location, county, year. columns in csu fees are campus, year, campus fee. columns in degrees are year, campus, degrees. columns in discipline enrollments are campus, discipline, year, undergraduate, graduate. columns in enrollments are campus, year, totalenrollment ay, fte ay. columns in faculty are campus, year, faculty.",
    "target": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996"
  },
  {
    "prompt": "Show the ids of the students who dont participate in any activity. database is activity_1. tables are activity, participates in, faculty participates in, student, faculty. columns in activity are activity id, activity name. columns in participates in are student id, activity id. columns in faculty participates in are faculty id, activity id. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in faculty are faculty id, last name, first name, rank, sex, phone, room, building.",
    "target": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in"
  },
  {
    "prompt": "How many churches have a wedding in year 2016? database is wedding. tables are people, church, wedding. columns in people are people id, name, country, is male, age. columns in church are church id, name, organized by, open date, continuation of. columns in wedding are church id, male id, female id, year.",
    "target": "SELECT COUNT (DISTINCT church_id) FROM wedding WHERE YEAR  =  2016"
  },
  {
    "prompt": "what state has the city springfield database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "Compute the total amount of payment processed. database is insurance_policies. tables are customers, customer policies, claims, settlements, payments. columns in customers are customer id, customer details. columns in customer policies are policy id, customer id, policy type code, start date, end date. columns in claims are claim id, policy id, date claim made, date claim settled, amount claimed, amount settled. columns in settlements are settlement id, claim id, date claim made, date claim settled, amount claimed, amount settled, customer policy id. columns in payments are payment id, settlement id, payment method code, date payment made, amount payment.",
    "target": "SELECT sum(Amount_Payment) FROM Payments"
  },
  {
    "prompt": "What is the id of the patient who stayed in room 111 most recently? database is hospital_1. tables are physician, department, affiliated with, procedures, trained in, patient, nurse, appointment, medication, prescribes, block, room, on call, stay, undergoes. columns in physician are employee id, name, position, ssn. columns in department are departmentid, name, head. columns in affiliated with are physician, department, primary affiliation. columns in procedures are code, name, cost. columns in trained in are physician, treatment, certification date, certification expires. columns in patient are ssn, name, address, phone, insurance id, pcp. columns in nurse are employee id, name, position, registered, ssn. columns in appointment are appointment id, patient, prep nurse, physician, start, end, examination room. columns in medication are code, name, brand, description. columns in prescribes are physician, patient, medication, date, appointment, dose. columns in block are block floor, block code. columns in room are roomnumber, room type, block floor, block code, unavailable. columns in on call are nurse, block floor, block code, oncall start, oncall end. columns in stay are stay id, patient, room, stay start, stay end. columns in undergoes are patient, procedures, stay, date undergoes, physician, assisting nurse.",
    "target": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1"
  },
  {
    "prompt": "Give the distinct headquarters of manufacturers. database is manufactory_1. tables are manufacturers, products. columns in manufacturers are code, name, headquarter, founder, revenue. columns in products are code, name, price, manufacturer.",
    "target": "SELECT DISTINCT headquarter FROM manufacturers"
  },
  {
    "prompt": "where is the ohio river database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";"
  },
  {
    "prompt": "Count the number of songs. database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT count(*) FROM Songs"
  },
  {
    "prompt": "What are the names of all the clubs starting with the oldest? database is sports_competition. tables are club, club rank, player, competition, competition result. columns in club are club id, name, region, start year. columns in club rank are rank, club id, gold, silver, bronze, total. columns in player are player id, name, position, club id, apps, tries, goals, points. columns in competition are competition id, year, competition type, country. columns in competition result are competition id, club id 1, club id 2, score.",
    "target": "SELECT name FROM club ORDER BY Start_year ASC"
  },
  {
    "prompt": "Find the accreditation level that more than 3 phones use. database is phone_1. tables are chip model, screen mode, phone. columns in chip model are model name, launch year, ram mib, rom mib, slots, wifi, bluetooth. columns in screen mode are graphics mode, char cells, pixels, hardware colours, used kb, map, type. columns in phone are company name, hardware model name, accreditation type, accreditation level, date, chip model, screen mode.",
    "target": "SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count(*)  >  3"
  },
  {
    "prompt": "List the writers of the books in ascending alphabetical order. database is book_2. tables are publication, book. columns in publication are publication id, book id, publisher, publication date, price. columns in book are book id, title, issues, writer.",
    "target": "SELECT Writer FROM book ORDER BY Writer ASC"
  },
  {
    "prompt": "What is the rating of the restaurant Subway? database is restaurant_1. tables are student, restaurant, type of restaurant, restaurant type, visits restaurant. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in restaurant are restaurant id, restaurant name, address, rating. columns in type of restaurant are restaurant id, restaurant type id. columns in restaurant type are restaurant type id, restaurant type name, restaurant type description. columns in visits restaurant are student id, restaurant id, time, spent.",
    "target": "SELECT Rating FROM Restaurant WHERE ResName = \"Subway\";"
  },
  {
    "prompt": "Return the song in the volume that has spent the most weeks on top? database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1"
  },
  {
    "prompt": "Find the address of the location named \"UK Gallery\". database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\""
  },
  {
    "prompt": "What is the total number of residents for the districts with the 3 largest areas? database is store_product. tables are product, store, district, store product, store district. columns in product are product id, product, dimensions, dpi, pages per minute color, max page size, interface. columns in store are store id, store name, type, area size, number of product category, ranking. columns in district are district id, district name, headquartered city, city population, city area. columns in store product are store id, product id. columns in store district are store id, district id.",
    "target": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3"
  },
  {
    "prompt": "Count the number of companies. database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT count(*) FROM Companies"
  },
  {
    "prompt": "What are the names of the dorm with the largest capacity? database is dorm_1. tables are student, dorm, dorm amenity, has amenity, lives in. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in dorm are dorm id, dorm name, student capacity, gender. columns in dorm amenity are amenity id, amenity name. columns in has amenity are dorm id, amenity id. columns in lives in are student id, dorm id, room number.",
    "target": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1"
  },
  {
    "prompt": "Find the code of the document type \"Paper\". database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\""
  },
  {
    "prompt": "give me the cities in usa database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT city_name FROM city;"
  },
  {
    "prompt": "What are the classes of races that have two or more corresponding races? database is race_track. tables are race, track. columns in race are race id, name, class, date, track id. columns in track are track id, name, location, seating, year opened.",
    "target": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2"
  },
  {
    "prompt": "What are the names of all customers, ordered by account balance? database is loan_1. tables are bank, customer, loan. columns in bank are branch id, bname, no of customers, city, state. columns in customer are customer id, customer name, account type, account balance, number of loans, credit score, branch id, state. columns in loan are loan id, loan type, customer id, branch id, amount.",
    "target": "SELECT cust_name FROM customer ORDER BY acc_bal"
  },
  {
    "prompt": "What are the names of the technicians by ascending order of age? database is machine_repair. tables are repair, machine, technician, repair assignment. columns in repair are repair id, name, launch date, notes. columns in machine are machine id, making year, class, team, machine series, value points, quality rank. columns in technician are technician id, name, team, starting year, age. columns in repair assignment are technician id, repair id, machine id.",
    "target": "SELECT Name FROM technician ORDER BY Age ASC"
  },
  {
    "prompt": "how many people are in the state of california database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM state WHERE state_name  =  \"california\";"
  },
  {
    "prompt": "Which classrooms are used by grade 5? database is student_1. tables are list, teachers. columns in list are last name, first name, grade, class room. columns in teachers are last name, first name, class room.",
    "target": "SELECT DISTINCT classroom FROM list WHERE grade  =  5"
  },
  {
    "prompt": "How many distinct programs are broadcast at \"Night\" time? database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night'"
  },
  {
    "prompt": "What are the different types of vocals? database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT DISTINCT TYPE FROM vocals"
  },
  {
    "prompt": "How many acting statuses are there? database is department_management. tables are department, head, management. columns in department are department id, name, creation, ranking, budget in billions, num employees. columns in head are head id, name, born state, age. columns in management are department id, head id, temporary acting.",
    "target": "SELECT count(DISTINCT temporary_acting) FROM management"
  },
  {
    "prompt": "Show the headquarters shared by more than two companies. database is company_office. tables are buildings, companies, office locations. columns in buildings are id, name, city, height, stories, status. columns in companies are id, name, headquarters, industry, sales billion, profits billion, assets billion, market value billion. columns in office locations are building id, company id, move in year.",
    "target": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2"
  },
  {
    "prompt": "What is the count of the songs that last approximately 4 minutes? database is music_1. tables are genre, artist, files, song. columns in genre are genre name, rating, most popular in. columns in artist are artist name, country, gender, preferred genre. columns in files are song id, artist name, file size, duration, formats. columns in song are song name, artist name, country, song id, genre is, rating, languages, releasedate, resolution.",
    "target": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\""
  },
  {
    "prompt": "Display all the information about the department Marketing. database is hr_1. tables are regions, countries, departments, jobs, employees, job history, locations. columns in regions are region id, region name. columns in countries are country id, country name, region id. columns in departments are department id, department name, manager id, location id. columns in jobs are job id, job title, min salary, max salary. columns in employees are employee id, first name, last name, email, phone number, hire date, job id, salary, commission pct, manager id, department id. columns in job history are employee id, start date, end date, job id, department id. columns in locations are location id, street address, postal code, city, state province, country id.",
    "target": "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
  },
  {
    "prompt": "How many journalists are there? database is news_report. tables are event, journalist, news report. columns in event are event id, date, venue, name, event attendance. columns in journalist are journalist id, name, nationality, age, years working. columns in news report are journalist id, event id, work type.",
    "target": "SELECT count(*) FROM journalist"
  },
  {
    "prompt": "Show the types of schools that have two schools. database is school_bus. tables are driver, school, school bus. columns in driver are driver id, name, party, home city, age. columns in school are school id, grade, school, location, type. columns in school bus are school id, driver id, years working, if full time.",
    "target": "SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2"
  },
  {
    "prompt": "list the states database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM state;"
  },
  {
    "prompt": "Show details of all visitors. database is cre_Theme_park. tables are ref hotel star ratings, locations, ref attraction types, visitors, features, hotels, tourist attractions, street markets, shops, museums, royal family, theme parks, visits, photos, staff, tourist attraction features. columns in ref hotel star ratings are star rating code, star rating description. columns in locations are location id, location name, address, other details. columns in ref attraction types are attraction type code, attraction type description. columns in visitors are tourist id, tourist details. columns in features are feature id, feature details. columns in hotels are hotel id, star rating code, pets allowed yn, price range, other hotel details. columns in tourist attractions are tourist attraction id, attraction type code, location id, how to get there, name, description, opening hours, other details. columns in street markets are market id, market details. columns in shops are shop id, shop details. columns in museums are museum id, museum details. columns in royal family are royal family id, royal family details. columns in theme parks are theme park id, theme park details. columns in visits are visit id, tourist attraction id, tourist id, visit date, visit details. columns in photos are photo id, tourist attraction id, name, description, filename, other details. columns in staff are staff id, tourist attraction id, name, other details. columns in tourist attraction features are tourist attraction id, feature id.",
    "target": "SELECT Tourist_Details FROM VISITORS"
  },
  {
    "prompt": "What are the ids of the students who registered for course 301 most recently? database is student_assessment. tables are addresses, people, students, courses, people addresses, student course registrations, student course attendance, candidates, candidate assessments. columns in addresses are address id, line 1, line 2, city, zip postcode, state province county, country. columns in people are person id, first name, middle name, last name, cell mobile number, email address, login name, password. columns in students are student id, student details. columns in courses are course id, course name, course description, other details. columns in people addresses are person address id, person id, address id, date from, date to. columns in student course registrations are student id, course id, registration date. columns in student course attendance are student id, course id, date of attendance. columns in candidates are candidate id, candidate details. columns in candidate assessments are candidate id, qualification, assessment date, asessment outcome code.",
    "target": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1"
  },
  {
    "prompt": "Return the names of people, ordered alphabetically. database is gymnast. tables are gymnast, people. columns in gymnast are gymnast id, floor exercise points, pommel horse points, rings points, vault points, parallel bars points, horizontal bar points, total points. columns in people are people id, name, age, height, hometown.",
    "target": "SELECT Name FROM People ORDER BY Name ASC"
  },
  {
    "prompt": "Find the names of all person sorted in the descending order using age. database is network_2. tables are person, person friend. columns in person are name, age, city, gender, job. columns in person friend are name, friend, year.",
    "target": "SELECT name FROM Person ORDER BY age DESC"
  },
  {
    "prompt": "Sort the apartment numbers in ascending order of room count. database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT apt_number FROM Apartments ORDER BY room_count ASC"
  },
  {
    "prompt": "How many classrooms are not in Lamberton? database is college_2. tables are classroom, department, course, instructor, section, teaches, student, takes classes, advisor, time slot, prerequisite. columns in classroom are building, room number, capacity. columns in department are department name, building, budget. columns in course are course id, title, department name, credits. columns in instructor are id, name, department name, salary. columns in section are course id, section id, semester, year, building, room number, time slot id. columns in teaches are id, course id, section id, semester, year. columns in student are id, name, department name, total credits. columns in takes classes are id, course id, section id, semester, year, grade. columns in advisor are student id, instructor id. columns in time slot are time slot id, day, start hour, start minute, end hour, end minute. columns in prerequisite are course id, prerequisite id.",
    "target": "SELECT count(*) FROM classroom WHERE building != 'Lamberton'"
  },
  {
    "prompt": "How many phone hardware models are produced by the company named \"Nokia Corporation\"? database is phone_1. tables are chip model, screen mode, phone. columns in chip model are model name, launch year, ram mib, rom mib, slots, wifi, bluetooth. columns in screen mode are graphics mode, char cells, pixels, hardware colours, used kb, map, type. columns in phone are company name, hardware model name, accreditation type, accreditation level, date, chip model, screen mode.",
    "target": "SELECT count(*) FROM phone WHERE Company_name = \"Nokia Corporation\";"
  },
  {
    "prompt": "Which orders shipment tracking number is \"3452\"? Give me the id of the order. database is tracking_orders. tables are customers, invoices, orders, products, order items, shipments, shipment items. columns in customers are customer id, customer name, customer details. columns in invoices are invoice number, invoice date, invoice details. columns in orders are order id, customer id, order status, date order placed, order details. columns in products are product id, product name, product details. columns in order items are order item id, product id, order id, order item status, order item details. columns in shipments are shipment id, order id, invoice number, shipment tracking number, shipment date, other shipment details. columns in shipment items are shipment id, order item id.",
    "target": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\""
  },
  {
    "prompt": "how many states border kentucky database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";"
  },
  {
    "prompt": "Which apartments have type code \"Flat\"? Give me their apartment numbers. database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\""
  },
  {
    "prompt": "what states in the united states have a city of springfield database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
  },
  {
    "prompt": "Show the ids of the employees who dont authorize destruction for any document. database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "prompt": "What are the ids of all the employees who authorize document destruction? database is cre_Doc_Tracking_DB. tables are reference document types, reference calendar, reference locations, roles, all documents, employees, document locations, documents to be destroyed. columns in reference document types are document type code, document type name, document type description. columns in reference calendar are calendar date, day number. columns in reference locations are location code, location name, location description. columns in roles are role code, role name, role description. columns in all documents are document id, date stored, document type code, document name, document description, other details. columns in employees are employee id, role code, employee name, gender mfu, date of birth, other details. columns in document locations are document id, location code, date in location from, date in locaton to. columns in documents to be destroyed are document id, destruction authorised by employee id, destroyed by employee id, planned destruction date, actual destruction date, other details.",
    "target": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "prompt": "Give me a list of the names of all songs ordered by their resolution. database is music_1. tables are genre, artist, files, song. columns in genre are genre name, rating, most popular in. columns in artist are artist name, country, gender, preferred genre. columns in files are song id, artist name, file size, duration, formats. columns in song are song name, artist name, country, song id, genre is, rating, languages, releasedate, resolution.",
    "target": "SELECT song_name FROM song ORDER BY resolution"
  },
  {
    "prompt": "What are the different instruments listed in the database? database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT DISTINCT instrument FROM Instruments"
  },
  {
    "prompt": "List the name of the shop with the latest open year. database is device. tables are device, shop, stock. columns in device are device id, device, carrier, package version, applications, software platform. columns in shop are shop id, shop name, location, open date, open year. columns in stock are shop id, device id, quantity.",
    "target": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1"
  },
  {
    "prompt": "What are all the distinct participant ids who attended any events? database is local_govt_in_alabama. tables are services, participants, events, participants in events. columns in services are service id, service type code. columns in participants are participant id, participant type code, participant details. columns in events are event id, service id, event details. columns in participants in events are event id, participant id.",
    "target": "SELECT count(DISTINCT participant_id) FROM participants_in_Events"
  },
  {
    "prompt": "List the distinct ranges of the mountains with the top 3 prominence. database is climbing. tables are mountain, climber. columns in mountain are mountain id, name, height, prominence, range, country. columns in climber are climber id, name, country, time, points, mountain id.",
    "target": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3"
  },
  {
    "prompt": "How many songs have used the instrument \"drums\"? database is music_2. tables are songs, albums, band, instruments, performance, track lists, vocals. columns in songs are song id, title. columns in albums are aid, title, year, label, type. columns in band are id, first name, last name. columns in instruments are song id, bandmate id, instrument. columns in performance are song id, bandmate, stage position. columns in track lists are album id, position, song id. columns in vocals are song id, bandmate, type.",
    "target": "SELECT count(*) FROM instruments WHERE instrument  =  \"drums\""
  },
  {
    "prompt": "How many rooms are there? database is inn_1. tables are rooms, reservations. columns in rooms are room id, room name, beds, bed type, max occupancy, base price, decor. columns in reservations are code, room, check in, check out, rate, last name, first name, adults, kids.",
    "target": "SELECT count(*) FROM Rooms;"
  },
  {
    "prompt": "Count the number of films whose title contains the word Dummy. database is cinema. tables are film, cinema, schedule. columns in film are film id, rank in series, number in season, title, directed by, original air date, production code. columns in cinema are cinema id, name, openning year, capacity, location. columns in schedule are cinema id, film id, date, show times per day, price.",
    "target": "SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\""
  },
  {
    "prompt": "Count the total number of students. database is club_1. tables are student, club, member of club. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in club are club id, club name, club description, club location. columns in member of club are student id, club id, position.",
    "target": "SELECT count(*) FROM student"
  },
  {
    "prompt": "What is the name of every college in alphabetical order that has more than 18000 students enrolled? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName"
  },
  {
    "prompt": "What is the name of the project with the most hours? database is scientist_1. tables are scientists, projects, assigned to. columns in scientists are ssn, name. columns in projects are code, name, hours. columns in assigned to are scientist, project.",
    "target": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1"
  },
  {
    "prompt": "How many accounts are there? database is customers_and_invoices. tables are customers, orders, invoices, accounts, product categories, products, financial transactions, order items, invoice line items. columns in customers are customer id, customer first name, customer middle initial, customer last name, gender, email address, login name, login password, phone number, town city, state county province, country. columns in orders are order id, customer id, date order placed, order details. columns in invoices are invoice number, order id, invoice date. columns in accounts are account id, customer id, date account opened, account name, other account details. columns in product categories are production type code, product type description, vat rating. columns in products are product id, parent product id, production type code, unit price, product name, product color, product size. columns in financial transactions are transaction id, account id, invoice number, transaction type, transaction date, transaction amount, transaction comment, other transaction details. columns in order items are order item id, order id, product id, product quantity, other order item details. columns in invoice line items are order item id, invoice number, product id, product title, product quantity, product price, derived product cost, derived vat payable, derived total cost.",
    "target": "SELECT count(*) FROM Accounts"
  },
  {
    "prompt": "Find the GDP of the city with the largest regional population. database is city_record. tables are city, match, temperature, hosting city. columns in city are city id, city, hanzi, hanyu pinyin, regional population, gdp. columns in match are match id, date, venue, score, result, competition. columns in temperature are city id, jan, feb, mar, apr, jun, jul, aug, sep, oct, nov, dec. columns in hosting city are year, match id, host city.",
    "target": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1"
  },
  {
    "prompt": "What venues are for Neuroscience ? database is scholar. tables are venue, author, dataset, journal, key phrase, paper, cite, paper dataset, paper key phrase, writes. columns in venue are venue id, venue name. columns in author are author id, author name. columns in dataset are dataset id, dataset name. columns in journal are journal id, journal name. columns in key phrase are key phrase id, key phrase name. columns in paper are paper id, title, venue id, year, number citing, number cited by, journal id. columns in cite are citing paper id, cited paper id. columns in paper dataset are paper id, dataset id. columns in paper key phrase are paper id, key phrase id. columns in writes are paper id, author id.",
    "target": "SELECT DISTINCT venueid FROM venue WHERE venuename  =  \"Neuroscience\";"
  },
  {
    "prompt": "List the age of all music artists. database is music_4. tables are artist, volume, music festival. columns in artist are artist id, artist, age, famous title, famous release date. columns in volume are volume id, volume issue, issue date, weeks on top, song, artist id. columns in music festival are id, music festival, date of ceremony, category, volume, result.",
    "target": "SELECT Age FROM artist"
  },
  {
    "prompt": "how high are the highest points of all the states database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT highest_elevation FROM highlow;"
  },
  {
    "prompt": "Find the total balance across checking accounts. database is small_bank_1. tables are accounts, savings, checking. columns in accounts are customer id, name. columns in savings are customer id, balance. columns in checking are customer id, balance.",
    "target": "SELECT sum(balance) FROM checking"
  },
  {
    "prompt": "what can you tell me about the population of california database is geo. tables are state, city, border info, highlow, lake, mountain, river. columns in state are state name, population, area, country name, capital, density. columns in city are city name, population, country name, state name. columns in border info are state name, border. columns in highlow are state name, highest elevation, lowest point, highest point, lowest elevation. columns in lake are lake name, area, country name, state name. columns in mountain are mountain name, mountain altitude, country name, state name. columns in river are river name, length, country name, traverse.",
    "target": "SELECT population FROM state WHERE state_name  =  \"california\";"
  },
  {
    "prompt": "What is the weight of the shortest person? database is entrepreneur. tables are entrepreneur, people. columns in entrepreneur are entrepreneur id, people id, company, money requested, investor. columns in people are people id, name, height, weight, date of birth.",
    "target": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1"
  },
  {
    "prompt": "Find the details for all chip models. database is phone_1. tables are chip model, screen mode, phone. columns in chip model are model name, launch year, ram mib, rom mib, slots, wifi, bluetooth. columns in screen mode are graphics mode, char cells, pixels, hardware colours, used kb, map, type. columns in phone are company name, hardware model name, accreditation type, accreditation level, date, chip model, screen mode.",
    "target": "SELECT * FROM chip_model"
  },
  {
    "prompt": "What is the country of the airport with the highest elevation? database is flight_4. tables are routes, airports, airlines. columns in routes are route id, destination airport id, destination airport, source airport id, source airport, airline id, airline, code share. columns in airports are airport id, name, city, country, x, y, elevation, iata, icao. columns in airlines are airline id, name, iata, icao, call sign, country, active.",
    "target": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1"
  },
  {
    "prompt": "How many schools are there in the department? database is college_1. tables are class, course, department, employee, enroll, professor, student. columns in class are class code, course code, class section, class time, class room, professor employee number. columns in course are course code, department code, course description, course credit. columns in department are department code, department name, school code, employee number, department address, department extension. columns in employee are employee number, employee last name, employee first name, employee initial, employee job code, employee hire date, employee date of birth. columns in enroll are class code, student number, enroll grade. columns in professor are employee number, department code, professor office, professor extension, professor high degree. columns in student are student num, student last name, student first name, student init, student date of birth, student class hours took, student class, student gpa, student transfer, department code, student phone, professor number.",
    "target": "SELECT count(DISTINCT school_code) FROM department"
  },
  {
    "prompt": "Return the different countries for artists. database is theme_gallery. tables are artist, exhibition, exhibition record. columns in artist are artist id, name, country, year join, age. columns in exhibition are exhibition id, year, theme, artist id, ticket price. columns in exhibition record are exhibition id, date, attendance.",
    "target": "SELECT DISTINCT country FROM artist"
  },
  {
    "prompt": "What are the ids of all aircrafts that can cover a distance of more than 1000? database is flight_1. tables are flight, aircraft, employee, certificate. columns in flight are flight number, origin, destination, distance, departure date, arrival date, price, airline id. columns in aircraft are airline id, name, distance. columns in employee are employee id, name, salary. columns in certificate are employee id, airline id.",
    "target": "SELECT aid FROM Aircraft WHERE distance  >  1000"
  },
  {
    "prompt": "Who are the players that have names containing the letter a? database is soccer_2. tables are college, player, tryout. columns in college are college name, state, enrollment. columns in player are player id, player name, yes card, training hours. columns in tryout are player id, college name, player position, decision.",
    "target": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'"
  },
  {
    "prompt": "list the card number of all members whose hometown address includes word \"Kentucky\". database is shop_membership. tables are member, branch, membership register branch, purchase. columns in member are member id, card number, name, hometown, level. columns in branch are branch id, name, open year, address road, city, membership amount. columns in membership register branch are member id, branch id, register year. columns in purchase are member id, branch id, year, total pounds.",
    "target": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\""
  },
  {
    "prompt": "What are the payment method codes that have been used by more than 3 parties? database is e_government. tables are addresses, services, forms, individuals, organizations, parties, organization contact individuals, party addresses, party forms, party services. columns in addresses are address id, line 1 number building, town city, zip postcode, state province county, country. columns in services are service id, service type code, service name, service descriptio. columns in forms are form id, form type code, service id, form number, form name, form description. columns in individuals are individual id, individual first name, individual middle name, inidividual phone, individual email, individual address, individual last name. columns in organizations are organization id, date formed, organization name, uk vat number. columns in parties are party id, payment method code, party phone, party email. columns in organization contact individuals are individual id, organization id, date contact from, date contact to. columns in party addresses are party id, address id, date address from, address type code, date address to. columns in party forms are party id, form id, date completion started, form status code, date fully completed. columns in party services are booking id, customer id, service id, service datetime, booking made date.",
    "target": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3"
  },
  {
    "prompt": "What is the headquarter of the company with the largest sales? database is company_employee. tables are people, company, employment. columns in people are people id, age, name, nationality, graduation college. columns in company are company id, name, headquarters, industry, sales in billion, profits in billion, assets in billion, market value in billion. columns in employment are company id, people id, year working.",
    "target": "SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1"
  },
  {
    "prompt": "How many apartment bookings are there in total? database is apartment_rentals. tables are apartment buildings, apartments, apartment facilities, guests, apartment bookings, view unit status. columns in apartment buildings are building id, building short name, building full name, building description, building address, building manager, building phone. columns in apartments are apartment id, building id, apartment type code, apartment number, bathroom count, bedroom count, room count. columns in apartment facilities are apartment id, facility code. columns in guests are guest id, gender code, guest first name, guest last name, date of birth. columns in apartment bookings are apartment booking id, apartment id, guest id, booking status code, booking start date, booking end date. columns in view unit status are apartment id, apartment booking id, status date, available yes or no.",
    "target": "SELECT count(*) FROM Apartment_Bookings"
  },
  {
    "prompt": "What is the total number of games played? database is game_1. tables are student, video games, plays games, sports info. columns in student are student id, last name, first name, age, sex, major, advisor, city code. columns in video games are game id, game name, game type. columns in plays games are student id, game id, hours played. columns in sports info are student id, sport name, hours per week, games played, on scholarship.",
    "target": "SELECT sum(gamesplayed) FROM Sportsinfo"
  },
  {
    "prompt": "Which programs origins are not \"Beijing\"? Give me the program names. database is program_share. tables are program, channel, broadcast, broadcast share. columns in program are program id, name, origin, launch, owner. columns in channel are channel id, name, owner, share in percent, rating in percent. columns in broadcast are channel id, program id, time of day. columns in broadcast share are channel id, program id, date, share in percent.",
    "target": "SELECT name FROM program WHERE origin != 'Beijing'"
  }
]