[
  {
    "db_id": "concert_singer",
    "query": "SELECT count(*) FROM singer",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "singer"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "singer"
    ],
    "question": "How many singers do we have?",
    "question_toks": [
      "How",
      "many",
      "singers",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT count(*) FROM singer",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "singer"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "singer"
    ],
    "question": "What is the total number of singers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "singers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "country",
      "FROM",
      "singer",
      "WHERE",
      "age",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "country",
      "from",
      "singer",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "What are all distinct countries where singers above age 20 are from?",
    "question_toks": [
      "What",
      "are",
      "all",
      "distinct",
      "countries",
      "where",
      "singers",
      "above",
      "age",
      "20",
      "are",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "concert_singer",
    "query": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "country",
      "FROM",
      "singer",
      "WHERE",
      "age",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "country",
      "from",
      "singer",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "What are  the different countries with singers above age 20?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "countries",
      "with",
      "singers",
      "above",
      "age",
      "20",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) FROM pets WHERE weight  >  10",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "pets",
      "WHERE",
      "weight",
      ">",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "pets",
      "where",
      "weight",
      ">",
      "value"
    ],
    "question": "Find the number of pets whose weight is heavier than 10.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "pets",
      "whose",
      "weight",
      "is",
      "heavier",
      "than",
      "10",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(*) FROM pets WHERE weight  >  10",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "pets",
      "WHERE",
      "weight",
      ">",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "pets",
      "where",
      "weight",
      ">",
      "value"
    ],
    "question": "How many pets have a greater weight than 10?",
    "question_toks": [
      "How",
      "many",
      "pets",
      "have",
      "a",
      "greater",
      "weight",
      "than",
      "10",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "query_toks": [
      "SELECT",
      "weight",
      "FROM",
      "pets",
      "ORDER",
      "BY",
      "pet_age",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "weight",
      "from",
      "pets",
      "order",
      "by",
      "pet_age",
      "limit",
      "value"
    ],
    "question": "Find the weight of the youngest dog.",
    "question_toks": [
      "Find",
      "the",
      "weight",
      "of",
      "the",
      "youngest",
      "dog",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "query_toks": [
      "SELECT",
      "weight",
      "FROM",
      "pets",
      "ORDER",
      "BY",
      "pet_age",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "weight",
      "from",
      "pets",
      "order",
      "by",
      "pet_age",
      "limit",
      "value"
    ],
    "question": "How much does the youngest dog weigh?",
    "question_toks": [
      "How",
      "much",
      "does",
      "the",
      "youngest",
      "dog",
      "weigh",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(DISTINCT pettype) FROM pets",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "pettype",
      ")",
      "FROM",
      "pets"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "pettype",
      ")",
      "from",
      "pets"
    ],
    "question": "Find the number of distinct type of pets.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "type",
      "of",
      "pets",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pets_1",
    "query": "SELECT count(DISTINCT pettype) FROM pets",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "pettype",
      ")",
      "FROM",
      "pets"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "pettype",
      ")",
      "from",
      "pets"
    ],
    "question": "How many different types of pet are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "types",
      "of",
      "pet",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CONTINENTS;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CONTINENTS",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "continents"
    ],
    "question": "How many continents are there?",
    "question_toks": [
      "How",
      "many",
      "continents",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CONTINENTS;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CONTINENTS",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "continents"
    ],
    "question": "What is the number of continents?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "continents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM COUNTRIES;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "COUNTRIES",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "countries"
    ],
    "question": "How many countries are listed?",
    "question_toks": [
      "How",
      "many",
      "countries",
      "are",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM COUNTRIES;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "COUNTRIES",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "countries"
    ],
    "question": "How many countries exist?",
    "question_toks": [
      "How",
      "many",
      "countries",
      "exist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "mpg",
      ")",
      "FROM",
      "CARS_DATA",
      "WHERE",
      "Cylinders",
      "=",
      "4",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "mpg",
      ")",
      "from",
      "cars_data",
      "where",
      "cylinders",
      "=",
      "value"
    ],
    "question": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "miles",
      "per",
      "gallon",
      "(",
      "mpg",
      ")",
      "of",
      "the",
      "cars",
      "with",
      "4",
      "cylinders",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "mpg",
      ")",
      "FROM",
      "CARS_DATA",
      "WHERE",
      "Cylinders",
      "=",
      "4",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "mpg",
      ")",
      "from",
      "cars_data",
      "where",
      "cylinders",
      "=",
      "value"
    ],
    "question": "What is the average miles per gallon of all the cards with 4 cylinders?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "miles",
      "per",
      "gallon",
      "of",
      "all",
      "the",
      "cards",
      "with",
      "4",
      "cylinders",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CARS_DATA",
      "WHERE",
      "horsepower",
      ">",
      "150",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "cars_data",
      "where",
      "horsepower",
      ">",
      "value"
    ],
    "question": "What is the number of the cars with horsepower more than 150?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "the",
      "cars",
      "with",
      "horsepower",
      "more",
      "than",
      "150",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          150.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CARS_DATA",
      "WHERE",
      "horsepower",
      ">",
      "150",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "cars_data",
      "where",
      "horsepower",
      ">",
      "value"
    ],
    "question": "What is the number of cars with a horsepower greater than 150?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "cars",
      "with",
      "a",
      "horsepower",
      "greater",
      "than",
      "150",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          150.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "horsepower",
      ")",
      "FROM",
      "CARS_DATA",
      "WHERE",
      "YEAR",
      "<",
      "1980",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "horsepower",
      ")",
      "from",
      "cars_data",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "What is the average horsepower of the cars before 1980?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "horsepower",
      "of",
      "the",
      "cars",
      "before",
      "1980",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          1980.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "select avg(horsepower) from cars_data where year  <  1980;",
    "query_toks": [
      "select",
      "avg",
      "(",
      "horsepower",
      ")",
      "from",
      "cars_data",
      "where",
      "year",
      "<",
      "1980",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "horsepower",
      ")",
      "from",
      "cars_data",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "What is the average horsepower for all cars produced before 1980 ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "horsepower",
      "for",
      "all",
      "cars",
      "produced",
      "before",
      "1980",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          1980.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CARS_DATA",
      "WHERE",
      "Cylinders",
      ">",
      "4",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "cars_data",
      "where",
      "cylinders",
      ">",
      "value"
    ],
    "question": "How many cars have more than 4 cylinders?",
    "question_toks": [
      "How",
      "many",
      "cars",
      "have",
      "more",
      "than",
      "4",
      "cylinders",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CARS_DATA",
      "WHERE",
      "Cylinders",
      ">",
      "4",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "cars_data",
      "where",
      "cylinders",
      ">",
      "value"
    ],
    "question": "What is the number of cars with more than 4 cylinders?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "cars",
      "with",
      "more",
      "than",
      "4",
      "cylinders",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CARS_DATA",
      "WHERE",
      "YEAR",
      "=",
      "1980",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "cars_data",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "how many cars were produced in 1980?",
    "question_toks": [
      "how",
      "many",
      "cars",
      "were",
      "produced",
      "in",
      "1980",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          1980.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CARS_DATA",
      "WHERE",
      "YEAR",
      "=",
      "1980",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "cars_data",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "In 1980, how many cars were made?",
    "question_toks": [
      "In",
      "1980",
      ",",
      "how",
      "many",
      "cars",
      "were",
      "made",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          1980.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "CARS_DATA",
      "WHERE",
      "Cylinders",
      ">",
      "6",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "cars_data",
      "where",
      "cylinders",
      ">",
      "value"
    ],
    "question": "How many cars has over 6 cylinders?",
    "question_toks": [
      "How",
      "many",
      "cars",
      "has",
      "over",
      "6",
      "cylinders",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          6.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "car_1",
    "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "CARS_DATA",
      "WHERE",
      "Cylinders",
      ">",
      "6",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "cars_data",
      "where",
      "cylinders",
      ">",
      "value"
    ],
    "question": "What is the number of carsw ith over 6 cylinders?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "carsw",
      "ith",
      "over",
      "6",
      "cylinders",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          6.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "query_toks": [
      "SELECT",
      "Country",
      "FROM",
      "AIRLINES",
      "WHERE",
      "Airline",
      "=",
      "``",
      "JetBlue",
      "Airways",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airlines",
      "where",
      "airline",
      "=",
      "value"
    ],
    "question": "Which country does Airline \"JetBlue Airways\" belong to?",
    "question_toks": [
      "Which",
      "country",
      "does",
      "Airline",
      "``",
      "JetBlue",
      "Airways",
      "''",
      "belong",
      "to",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"JetBlue Airways\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "query_toks": [
      "SELECT",
      "Country",
      "FROM",
      "AIRLINES",
      "WHERE",
      "Airline",
      "=",
      "``",
      "JetBlue",
      "Airways",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airlines",
      "where",
      "airline",
      "=",
      "value"
    ],
    "question": "What country is Jetblue Airways affiliated with?",
    "question_toks": [
      "What",
      "country",
      "is",
      "Jetblue",
      "Airways",
      "affiliated",
      "with",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"JetBlue Airways\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "query_toks": [
      "SELECT",
      "Abbreviation",
      "FROM",
      "AIRLINES",
      "WHERE",
      "Airline",
      "=",
      "``",
      "JetBlue",
      "Airways",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "abbreviation",
      "from",
      "airlines",
      "where",
      "airline",
      "=",
      "value"
    ],
    "question": "What is the abbreviation of Airline \"JetBlue Airways\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "abbreviation",
      "of",
      "Airline",
      "``",
      "JetBlue",
      "Airways",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"JetBlue Airways\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "query_toks": [
      "SELECT",
      "Abbreviation",
      "FROM",
      "AIRLINES",
      "WHERE",
      "Airline",
      "=",
      "``",
      "JetBlue",
      "Airways",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "abbreviation",
      "from",
      "airlines",
      "where",
      "airline",
      "=",
      "value"
    ],
    "question": "Which abbreviation corresponds to Jetblue Airways?",
    "question_toks": [
      "Which",
      "abbreviation",
      "corresponds",
      "to",
      "Jetblue",
      "Airways",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"JetBlue Airways\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRLINES",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "AIRLINES"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines"
    ],
    "question": "How many airlines do we have?",
    "question_toks": [
      "How",
      "many",
      "airlines",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRLINES",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "AIRLINES"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines"
    ],
    "question": "What is the total number of airlines?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "airlines",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRPORTS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "AIRPORTS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airports"
    ],
    "question": "How many airports do we have?",
    "question_toks": [
      "How",
      "many",
      "airports",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRPORTS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "AIRPORTS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airports"
    ],
    "question": "Return the number of  airports.",
    "question_toks": [
      "Return",
      "the",
      "number",
      "of",
      "airports",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "FLIGHTS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flights"
    ],
    "question": "How many flights do we have?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "FLIGHTS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flights"
    ],
    "question": "Return the number of flights.",
    "question_toks": [
      "Return",
      "the",
      "number",
      "of",
      "flights",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "query_toks": [
      "SELECT",
      "Airline",
      "FROM",
      "AIRLINES",
      "WHERE",
      "Abbreviation",
      "=",
      "``",
      "UAL",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "airline",
      "from",
      "airlines",
      "where",
      "abbreviation",
      "=",
      "value"
    ],
    "question": "Which airline has abbreviation 'UAL'?",
    "question_toks": [
      "Which",
      "airline",
      "has",
      "abbreviation",
      "'UAL",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"UAL\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "query_toks": [
      "SELECT",
      "Airline",
      "FROM",
      "AIRLINES",
      "WHERE",
      "Abbreviation",
      "=",
      "``",
      "UAL",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "airline",
      "from",
      "airlines",
      "where",
      "abbreviation",
      "=",
      "value"
    ],
    "question": "Give the airline with abbreviation 'UAL'.",
    "question_toks": [
      "Give",
      "the",
      "airline",
      "with",
      "abbreviation",
      "'UAL",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"UAL\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "AIRLINES",
      "WHERE",
      "Country",
      "=",
      "``",
      "USA",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many airlines are from USA?",
    "question_toks": [
      "How",
      "many",
      "airlines",
      "are",
      "from",
      "USA",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"USA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "AIRLINES",
      "WHERE",
      "Country",
      "=",
      "``",
      "USA",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "Return the number of airlines in the USA.",
    "question_toks": [
      "Return",
      "the",
      "number",
      "of",
      "airlines",
      "in",
      "the",
      "USA",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"USA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "query_toks": [
      "SELECT",
      "AirportName",
      "FROM",
      "AIRPORTS",
      "WHERE",
      "AirportCode",
      "=",
      "``",
      "AKO",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "airportname",
      "from",
      "airports",
      "where",
      "airportcode",
      "=",
      "value"
    ],
    "question": "What is the airport name for airport 'AKO'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "airport",
      "name",
      "for",
      "airport",
      "'AKO",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"AKO\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "query_toks": [
      "SELECT",
      "AirportName",
      "FROM",
      "AIRPORTS",
      "WHERE",
      "AirportCode",
      "=",
      "``",
      "AKO",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "airportname",
      "from",
      "airports",
      "where",
      "airportcode",
      "=",
      "value"
    ],
    "question": "Return the name of the airport with code 'AKO'.",
    "question_toks": [
      "Return",
      "the",
      "name",
      "of",
      "the",
      "airport",
      "with",
      "code",
      "'AKO",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"AKO\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "query_toks": [
      "SELECT",
      "AirportName",
      "FROM",
      "AIRPORTS",
      "WHERE",
      "City",
      "=",
      "``",
      "Aberdeen",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "airportname",
      "from",
      "airports",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "What are airport names at City 'Aberdeen'?",
    "question_toks": [
      "What",
      "are",
      "airport",
      "names",
      "at",
      "City",
      "'Aberdeen",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Aberdeen\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "query_toks": [
      "SELECT",
      "AirportName",
      "FROM",
      "AIRPORTS",
      "WHERE",
      "City",
      "=",
      "``",
      "Aberdeen",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "airportname",
      "from",
      "airports",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "What are the names of airports in Aberdeen?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "airports",
      "in",
      "Aberdeen",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Aberdeen\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "FLIGHTS",
      "WHERE",
      "SourceAirport",
      "=",
      "``",
      "APG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flights",
      "where",
      "sourceairport",
      "=",
      "value"
    ],
    "question": "How many flights depart from 'APG'?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "depart",
      "from",
      "'APG",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"APG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "FLIGHTS",
      "WHERE",
      "SourceAirport",
      "=",
      "``",
      "APG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flights",
      "where",
      "sourceairport",
      "=",
      "value"
    ],
    "question": "Count the number of flights departing from 'APG'.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "flights",
      "departing",
      "from",
      "'APG",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"APG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "FLIGHTS",
      "WHERE",
      "DestAirport",
      "=",
      "``",
      "ATO",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flights",
      "where",
      "destairport",
      "=",
      "value"
    ],
    "question": "How many flights have destination ATO?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "have",
      "destination",
      "ATO",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"ATO\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "FLIGHTS",
      "WHERE",
      "DestAirport",
      "=",
      "``",
      "ATO",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flights",
      "where",
      "destairport",
      "=",
      "value"
    ],
    "question": "Count the number of flights into ATO.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "flights",
      "into",
      "ATO",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"ATO\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "query_toks": [
      "SELECT",
      "FlightNo",
      "FROM",
      "FLIGHTS",
      "WHERE",
      "SourceAirport",
      "=",
      "``",
      "APG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "flightno",
      "from",
      "flights",
      "where",
      "sourceairport",
      "=",
      "value"
    ],
    "question": "What are flight numbers of flights departing from Airport \"APG\"?",
    "question_toks": [
      "What",
      "are",
      "flight",
      "numbers",
      "of",
      "flights",
      "departing",
      "from",
      "Airport",
      "``",
      "APG",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"APG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "query_toks": [
      "SELECT",
      "FlightNo",
      "FROM",
      "FLIGHTS",
      "WHERE",
      "SourceAirport",
      "=",
      "``",
      "APG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "flightno",
      "from",
      "flights",
      "where",
      "sourceairport",
      "=",
      "value"
    ],
    "question": "Give the flight numbers of flights leaving from APG.",
    "question_toks": [
      "Give",
      "the",
      "flight",
      "numbers",
      "of",
      "flights",
      "leaving",
      "from",
      "APG",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"APG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "query_toks": [
      "SELECT",
      "FlightNo",
      "FROM",
      "FLIGHTS",
      "WHERE",
      "DestAirport",
      "=",
      "``",
      "APG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "flightno",
      "from",
      "flights",
      "where",
      "destairport",
      "=",
      "value"
    ],
    "question": "What are flight numbers of flights arriving at Airport \"APG\"?",
    "question_toks": [
      "What",
      "are",
      "flight",
      "numbers",
      "of",
      "flights",
      "arriving",
      "at",
      "Airport",
      "``",
      "APG",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"APG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_2",
    "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "query_toks": [
      "SELECT",
      "FlightNo",
      "FROM",
      "FLIGHTS",
      "WHERE",
      "DestAirport",
      "=",
      "``",
      "APG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "flightno",
      "from",
      "flights",
      "where",
      "destairport",
      "=",
      "value"
    ],
    "question": "Give the flight numbers of flights landing at APG.",
    "question_toks": [
      "Give",
      "the",
      "flight",
      "numbers",
      "of",
      "flights",
      "landing",
      "at",
      "APG",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"APG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(*) FROM employee",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employee"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employee"
    ],
    "question": "How many employees are there?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(*) FROM employee",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employee"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employee"
    ],
    "question": "Count the number of employees",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "employees"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT name FROM employee ORDER BY age",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "age"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "order",
      "by",
      "age"
    ],
    "question": "Sort employee names by their age in ascending order.",
    "question_toks": [
      "Sort",
      "employee",
      "names",
      "by",
      "their",
      "age",
      "in",
      "ascending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT name FROM employee ORDER BY age",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "employee",
      "ORDER",
      "BY",
      "age"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "order",
      "by",
      "age"
    ],
    "question": "List the names of employees and sort in ascending order of age.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "employees",
      "and",
      "sort",
      "in",
      "ascending",
      "order",
      "of",
      "age",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "employee",
      "WHERE",
      "age",
      "<",
      "30",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "employee",
      "where",
      "age",
      "<",
      "value",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which cities do more than one employee under age 30 come from?",
    "question_toks": [
      "Which",
      "cities",
      "do",
      "more",
      "than",
      "one",
      "employee",
      "under",
      "age",
      "30",
      "come",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          30.0,
          null
        ]
      ],
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "employee",
      "WHERE",
      "age",
      "<",
      "30",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "employee",
      "where",
      "age",
      "<",
      "value",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the cities that have more than one employee under age 30.",
    "question_toks": [
      "Find",
      "the",
      "cities",
      "that",
      "have",
      "more",
      "than",
      "one",
      "employee",
      "under",
      "age",
      "30",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          30.0,
          null
        ]
      ],
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT sum(bonus) FROM evaluation",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "bonus",
      ")",
      "FROM",
      "evaluation"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "bonus",
      ")",
      "from",
      "evaluation"
    ],
    "question": "What is total bonus given in all evaluations?",
    "question_toks": [
      "What",
      "is",
      "total",
      "bonus",
      "given",
      "in",
      "all",
      "evaluations",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT sum(bonus) FROM evaluation",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "bonus",
      ")",
      "FROM",
      "evaluation"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "bonus",
      ")",
      "from",
      "evaluation"
    ],
    "question": "Find the total amount of bonus given in all the evaluations.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "amount",
      "of",
      "bonus",
      "given",
      "in",
      "all",
      "the",
      "evaluations",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT * FROM hiring",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "hiring"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "hiring"
    ],
    "question": "Give me all the information about hiring.",
    "question_toks": [
      "Give",
      "me",
      "all",
      "the",
      "information",
      "about",
      "hiring",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT * FROM hiring",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "hiring"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "hiring"
    ],
    "question": "What is all the information about hiring?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "information",
      "about",
      "hiring",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(DISTINCT LOCATION) FROM shop",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "LOCATION",
      ")",
      "FROM",
      "shop"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "location",
      ")",
      "from",
      "shop"
    ],
    "question": "How many different store locations are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "store",
      "locations",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "employee_hire_evaluation",
    "query": "SELECT count(DISTINCT LOCATION) FROM shop",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "LOCATION",
      ")",
      "FROM",
      "shop"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "location",
      ")",
      "from",
      "shop"
    ],
    "question": "Count the number of distinct store locations.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "store",
      "locations",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Documents",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents"
    ],
    "question": "How many documents do we have?",
    "question_toks": [
      "How",
      "many",
      "documents",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Documents",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents"
    ],
    "question": "Count the number of documents.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "documents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(DISTINCT template_id) FROM Documents",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "template_id",
      ")",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "template_id",
      ")",
      "from",
      "documents"
    ],
    "question": "How many different templates do all document use?",
    "question_toks": [
      "How",
      "many",
      "different",
      "templates",
      "do",
      "all",
      "document",
      "use",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(DISTINCT template_id) FROM Documents",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "template_id",
      ")",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "template_id",
      ")",
      "from",
      "documents"
    ],
    "question": "Count the number of different templates used for documents.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "templates",
      "used",
      "for",
      "documents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "template_id",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "template_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "template_id",
      "from",
      "documents",
      "group",
      "by",
      "template_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Show ids for all templates that are used by more than one document.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "all",
      "templates",
      "that",
      "are",
      "used",
      "by",
      "more",
      "than",
      "one",
      "document",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "template_id",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "template_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "template_id",
      "from",
      "documents",
      "group",
      "by",
      "template_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the template ids of any templates used in more than a single document?",
    "question_toks": [
      "What",
      "are",
      "the",
      "template",
      "ids",
      "of",
      "any",
      "templates",
      "used",
      "in",
      "more",
      "than",
      "a",
      "single",
      "document",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "query_toks": [
      "SELECT",
      "template_id",
      "FROM",
      "Templates",
      "EXCEPT",
      "SELECT",
      "template_id",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "template_id",
      "from",
      "templates",
      "except",
      "select",
      "template_id",
      "from",
      "documents"
    ],
    "question": "Show ids for all templates not used by any document.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "all",
      "templates",
      "not",
      "used",
      "by",
      "any",
      "document",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  10,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "query_toks": [
      "SELECT",
      "template_id",
      "FROM",
      "Templates",
      "EXCEPT",
      "SELECT",
      "template_id",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "template_id",
      "from",
      "templates",
      "except",
      "select",
      "template_id",
      "from",
      "documents"
    ],
    "question": "What are the ids for templates that are not used in any documents?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "for",
      "templates",
      "that",
      "are",
      "not",
      "used",
      "in",
      "any",
      "documents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  10,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Templates",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Templates"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "templates"
    ],
    "question": "How many templates do we have?",
    "question_toks": [
      "How",
      "many",
      "templates",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Templates",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Templates"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "templates"
    ],
    "question": "Count the number of templates.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "templates",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT DISTINCT template_type_code FROM Templates",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "template_type_code",
      "FROM",
      "Templates"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "template_type_code",
      "from",
      "templates"
    ],
    "question": "Show all distinct template type codes for all templates.",
    "question_toks": [
      "Show",
      "all",
      "distinct",
      "template",
      "type",
      "codes",
      "for",
      "all",
      "templates",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT DISTINCT template_type_code FROM Templates",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "template_type_code",
      "FROM",
      "Templates"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "template_type_code",
      "from",
      "templates"
    ],
    "question": "What are the different template type codes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "template",
      "type",
      "codes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Templates",
      "WHERE",
      "template_type_code",
      "=",
      "``",
      "CV",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "templates",
      "where",
      "template_type_code",
      "=",
      "value"
    ],
    "question": "How many templates have template type code CV?",
    "question_toks": [
      "How",
      "many",
      "templates",
      "have",
      "template",
      "type",
      "code",
      "CV",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"CV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Templates",
      "WHERE",
      "template_type_code",
      "=",
      "``",
      "CV",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "templates",
      "where",
      "template_type_code",
      "=",
      "value"
    ],
    "question": "Count the number of templates of the type CV.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "templates",
      "of",
      "the",
      "type",
      "CV",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"CV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "query_toks": [
      "SELECT",
      "template_type_code",
      "FROM",
      "Templates",
      "GROUP",
      "BY",
      "template_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "<",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "template_type_code",
      "from",
      "templates",
      "group",
      "by",
      "template_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      "<",
      "value"
    ],
    "question": "Show all template type codes with less than three templates.",
    "question_toks": [
      "Show",
      "all",
      "template",
      "type",
      "codes",
      "with",
      "less",
      "than",
      "three",
      "templates",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [
        [
          false,
          4,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "query_toks": [
      "SELECT",
      "template_type_code",
      "FROM",
      "Templates",
      "GROUP",
      "BY",
      "template_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "<",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "template_type_code",
      "from",
      "templates",
      "group",
      "by",
      "template_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      "<",
      "value"
    ],
    "question": "What are the codes of template types that have fewer than 3 templates?",
    "question_toks": [
      "What",
      "are",
      "the",
      "codes",
      "of",
      "template",
      "types",
      "that",
      "have",
      "fewer",
      "than",
      "3",
      "templates",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [
        [
          false,
          4,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "query_toks": [
      "SELECT",
      "template_type_description",
      "FROM",
      "Ref_template_types",
      "WHERE",
      "template_type_code",
      "=",
      "``",
      "AD",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "template_type_description",
      "from",
      "ref_template_types",
      "where",
      "template_type_code",
      "=",
      "value"
    ],
    "question": "What is the template type descriptions for template type code \"AD\".",
    "question_toks": [
      "What",
      "is",
      "the",
      "template",
      "type",
      "descriptions",
      "for",
      "template",
      "type",
      "code",
      "``",
      "AD",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"AD\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "query_toks": [
      "SELECT",
      "template_type_description",
      "FROM",
      "Ref_template_types",
      "WHERE",
      "template_type_code",
      "=",
      "``",
      "AD",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "template_type_description",
      "from",
      "ref_template_types",
      "where",
      "template_type_code",
      "=",
      "value"
    ],
    "question": "Return the template type description of the template type with the code AD.",
    "question_toks": [
      "Return",
      "the",
      "template",
      "type",
      "description",
      "of",
      "the",
      "template",
      "type",
      "with",
      "the",
      "code",
      "AD",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"AD\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "query_toks": [
      "SELECT",
      "template_type_code",
      "FROM",
      "Ref_template_types",
      "WHERE",
      "template_type_description",
      "=",
      "``",
      "Book",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "template_type_code",
      "from",
      "ref_template_types",
      "where",
      "template_type_description",
      "=",
      "value"
    ],
    "question": "What is the template type code for template type description \"Book\".",
    "question_toks": [
      "What",
      "is",
      "the",
      "template",
      "type",
      "code",
      "for",
      "template",
      "type",
      "description",
      "``",
      "Book",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Book\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "query_toks": [
      "SELECT",
      "template_type_code",
      "FROM",
      "Ref_template_types",
      "WHERE",
      "template_type_description",
      "=",
      "``",
      "Book",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "template_type_code",
      "from",
      "ref_template_types",
      "where",
      "template_type_description",
      "=",
      "value"
    ],
    "question": "Return the type code of the template type with the description \"Book\".",
    "question_toks": [
      "Return",
      "the",
      "type",
      "code",
      "of",
      "the",
      "template",
      "type",
      "with",
      "the",
      "description",
      "``",
      "Book",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Book\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Paragraphs",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Paragraphs"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "paragraphs"
    ],
    "question": "How many paragraphs in total?",
    "question_toks": [
      "How",
      "many",
      "paragraphs",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT count(*) FROM Paragraphs",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Paragraphs"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "paragraphs"
    ],
    "question": "Count the number of paragraphs.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "paragraphs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "select other_details from paragraphs where paragraph_text like 'korea'",
    "query_toks": [
      "select",
      "other_details",
      "from",
      "paragraphs",
      "where",
      "paragraph_text",
      "like",
      "\"korea\""
    ],
    "query_toks_no_value": [
      "select",
      "other_details",
      "from",
      "paragraphs",
      "where",
      "paragraph_text",
      "like",
      "value"
    ],
    "question": "Show paragraph details for paragraph with text 'Korea ' .",
    "question_toks": [
      "Show",
      "paragraph",
      "details",
      "for",
      "paragraph",
      "with",
      "text",
      "'Korea",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"korea\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "select other_details from paragraphs where paragraph_text like 'korea'",
    "query_toks": [
      "select",
      "other_details",
      "from",
      "paragraphs",
      "where",
      "paragraph_text",
      "like",
      "\"korea\""
    ],
    "query_toks_no_value": [
      "select",
      "other_details",
      "from",
      "paragraphs",
      "where",
      "paragraph_text",
      "like",
      "value"
    ],
    "question": "What are the details for the paragraph that includes the text 'Korea ' ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "details",
      "for",
      "the",
      "paragraph",
      "that",
      "includes",
      "the",
      "text",
      "'Korea",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"korea\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Paragraphs",
      "GROUP",
      "BY",
      "document_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "paragraphs",
      "group",
      "by",
      "document_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "List all document ids with at least two paragraphs.",
    "question_toks": [
      "List",
      "all",
      "document",
      "ids",
      "with",
      "at",
      "least",
      "two",
      "paragraphs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Template_Mgt",
    "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Paragraphs",
      "GROUP",
      "BY",
      "document_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "paragraphs",
      "group",
      "by",
      "document_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the ids of documents that have 2 or more paragraphs?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "documents",
      "that",
      "have",
      "2",
      "or",
      "more",
      "paragraphs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT count(*) FROM teacher",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "teacher"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "teacher"
    ],
    "question": "How many teachers are there?",
    "question_toks": [
      "How",
      "many",
      "teachers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT count(*) FROM teacher",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "teacher"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "teacher"
    ],
    "question": "What is the total count of teachers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "count",
      "of",
      "teachers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Name FROM teacher ORDER BY Age ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "teacher",
      "ORDER",
      "BY",
      "Age",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "teacher",
      "order",
      "by",
      "age",
      "asc"
    ],
    "question": "List the names of teachers in ascending order of age.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "teachers",
      "in",
      "ascending",
      "order",
      "of",
      "age",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Name FROM teacher ORDER BY Age ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "teacher",
      "ORDER",
      "BY",
      "Age",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "teacher",
      "order",
      "by",
      "age",
      "asc"
    ],
    "question": "What are the names of the teachers ordered by ascending age?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "teachers",
      "ordered",
      "by",
      "ascending",
      "age",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "select name from teacher where hometown != \"little lever urban district\"",
    "query_toks": [
      "select",
      "name",
      "from",
      "teacher",
      "where",
      "hometown",
      "!=",
      "\"little lever urban district\""
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "teacher",
      "where",
      "hometown",
      "!",
      "=",
      "value"
    ],
    "question": "List the name of teachers whose hometown is not `` Little Lever Urban District '' .",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "teachers",
      "whose",
      "hometown",
      "is",
      "not",
      "``",
      "Little",
      "Lever",
      "Urban",
      "District",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"little lever urban district\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "select name from teacher where hometown != \"little lever urban district\"",
    "query_toks": [
      "select",
      "name",
      "from",
      "teacher",
      "where",
      "hometown",
      "!=",
      "\"little lever urban district\""
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "teacher",
      "where",
      "hometown",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "teachers",
      "whose",
      "hometown",
      "is",
      "not",
      "``",
      "Little",
      "Lever",
      "Urban",
      "District",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"little lever urban district\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Hometown",
      "FROM",
      "teacher",
      "ORDER",
      "BY",
      "Age",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "hometown",
      "from",
      "teacher",
      "order",
      "by",
      "age",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the hometown of the youngest teacher?",
    "question_toks": [
      "What",
      "is",
      "the",
      "hometown",
      "of",
      "the",
      "youngest",
      "teacher",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Hometown",
      "FROM",
      "teacher",
      "ORDER",
      "BY",
      "Age",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "hometown",
      "from",
      "teacher",
      "order",
      "by",
      "age",
      "asc",
      "limit",
      "value"
    ],
    "question": "Where is the youngest teacher from?",
    "question_toks": [
      "Where",
      "is",
      "the",
      "youngest",
      "teacher",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "Hometown",
      "FROM",
      "teacher",
      "GROUP",
      "BY",
      "Hometown",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "hometown",
      "from",
      "teacher",
      "group",
      "by",
      "hometown",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show the hometowns shared by at least two teachers.",
    "question_toks": [
      "Show",
      "the",
      "hometowns",
      "shared",
      "by",
      "at",
      "least",
      "two",
      "teachers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "course_teach",
    "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "Hometown",
      "FROM",
      "teacher",
      "GROUP",
      "BY",
      "Hometown",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "hometown",
      "from",
      "teacher",
      "group",
      "by",
      "hometown",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the towns from which at least two teachers come from?",
    "question_toks": [
      "What",
      "are",
      "the",
      "towns",
      "from",
      "which",
      "at",
      "least",
      "two",
      "teachers",
      "come",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "museum_visit",
    "query": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "num_of_staff",
      ")",
      "FROM",
      "museum",
      "WHERE",
      "open_year",
      "<",
      "2009"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "num_of_staff",
      ")",
      "from",
      "museum",
      "where",
      "open_year",
      "<",
      "value"
    ],
    "question": "Find the average number of staff working for the museums that were open before 2009.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "number",
      "of",
      "staff",
      "working",
      "for",
      "the",
      "museums",
      "that",
      "were",
      "open",
      "before",
      "2009",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          2009.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) FROM players",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "players"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "players"
    ],
    "question": "Find the total number of players.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "players",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) FROM players",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "players"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "players"
    ],
    "question": "How many players are there?",
    "question_toks": [
      "How",
      "many",
      "players",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) FROM matches",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "matches"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "matches"
    ],
    "question": "Find the total number of matches.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "matches",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(*) FROM matches",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "matches"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "matches"
    ],
    "question": "Count the number of matches.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "matches",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT avg(winner_rank) FROM matches",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "winner_rank",
      ")",
      "FROM",
      "matches"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "winner_rank",
      ")",
      "from",
      "matches"
    ],
    "question": "Find the average rank of winners in all matches.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "rank",
      "of",
      "winners",
      "in",
      "all",
      "matches",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT avg(winner_rank) FROM matches",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "winner_rank",
      ")",
      "FROM",
      "matches"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "winner_rank",
      ")",
      "from",
      "matches"
    ],
    "question": "What is the average rank for winners in all matches?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "rank",
      "for",
      "winners",
      "in",
      "all",
      "matches",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT min(loser_rank) FROM matches",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "loser_rank",
      ")",
      "FROM",
      "matches"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "loser_rank",
      ")",
      "from",
      "matches"
    ],
    "question": "Find the highest rank of losers in all matches.",
    "question_toks": [
      "Find",
      "the",
      "highest",
      "rank",
      "of",
      "losers",
      "in",
      "all",
      "matches",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT min(loser_rank) FROM matches",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "loser_rank",
      ")",
      "FROM",
      "matches"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "loser_rank",
      ")",
      "from",
      "matches"
    ],
    "question": "What is the best rank of losers across all matches?",
    "question_toks": [
      "What",
      "is",
      "the",
      "best",
      "rank",
      "of",
      "losers",
      "across",
      "all",
      "matches",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(DISTINCT country_code) FROM players",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "country_code",
      ")",
      "FROM",
      "players"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "country_code",
      ")",
      "from",
      "players"
    ],
    "question": "find the number of distinct country codes of all players.",
    "question_toks": [
      "find",
      "the",
      "number",
      "of",
      "distinct",
      "country",
      "codes",
      "of",
      "all",
      "players",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(DISTINCT country_code) FROM players",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "country_code",
      ")",
      "FROM",
      "players"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "country_code",
      ")",
      "from",
      "players"
    ],
    "question": "How many distinct countries do players come from?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "countries",
      "do",
      "players",
      "come",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(DISTINCT loser_name) FROM matches",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "loser_name",
      ")",
      "FROM",
      "matches"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "loser_name",
      ")",
      "from",
      "matches"
    ],
    "question": "Find the number of distinct name of losers.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "name",
      "of",
      "losers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT count(DISTINCT loser_name) FROM matches",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "loser_name",
      ")",
      "FROM",
      "matches"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "loser_name",
      ")",
      "from",
      "matches"
    ],
    "question": "How many different loser names are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "loser",
      "names",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "query_toks": [
      "SELECT",
      "tourney_name",
      "FROM",
      "matches",
      "GROUP",
      "BY",
      "tourney_name",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "tourney_name",
      "from",
      "matches",
      "group",
      "by",
      "tourney_name",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the name of tourney that has more than 10 matches.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "tourney",
      "that",
      "has",
      "more",
      "than",
      "10",
      "matches",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          27,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "query_toks": [
      "SELECT",
      "tourney_name",
      "FROM",
      "matches",
      "GROUP",
      "BY",
      "tourney_name",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "tourney_name",
      "from",
      "matches",
      "group",
      "by",
      "tourney_name",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the names of tournaments that have more than 10 matches?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "tournaments",
      "that",
      "have",
      "more",
      "than",
      "10",
      "matches",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          27,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "winner_name",
      "FROM",
      "matches",
      "WHERE",
      "tourney_name",
      "=",
      "'Australian",
      "Open",
      "'",
      "ORDER",
      "BY",
      "winner_rank_points",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "winner_name",
      "from",
      "matches",
      "where",
      "tourney_name",
      "=",
      "value",
      "order",
      "by",
      "winner_rank_points",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "winner",
      "who",
      "has",
      "the",
      "highest",
      "rank",
      "points",
      "and",
      "participated",
      "in",
      "the",
      "Australian",
      "Open",
      "tourney",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Australian Open\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              36,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "winner_name",
      "FROM",
      "matches",
      "WHERE",
      "tourney_name",
      "=",
      "'Australian",
      "Open",
      "'",
      "ORDER",
      "BY",
      "winner_rank_points",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "winner_name",
      "from",
      "matches",
      "where",
      "tourney_name",
      "=",
      "value",
      "order",
      "by",
      "winner_rank_points",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "winner",
      "with",
      "the",
      "most",
      "rank",
      "points",
      "who",
      "participated",
      "in",
      "the",
      "Australian",
      "Open",
      "tournament",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Australian Open\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              36,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "query_toks": [
      "SELECT",
      "country_code",
      "FROM",
      "players",
      "GROUP",
      "BY",
      "country_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "country_code",
      "from",
      "players",
      "group",
      "by",
      "country_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the codes of countries that have more than 50 players.",
    "question_toks": [
      "Find",
      "the",
      "codes",
      "of",
      "countries",
      "that",
      "have",
      "more",
      "than",
      "50",
      "players",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          50.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wta_1",
    "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "query_toks": [
      "SELECT",
      "country_code",
      "FROM",
      "players",
      "GROUP",
      "BY",
      "country_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "country_code",
      "from",
      "players",
      "group",
      "by",
      "country_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the codes of countries with more than 50 players?",
    "question_toks": [
      "What",
      "are",
      "the",
      "codes",
      "of",
      "countries",
      "with",
      "more",
      "than",
      "50",
      "players",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          50.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "battle_death",
    "query": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ship",
      "WHERE",
      "disposition_of_ship",
      "=",
      "'Captured",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ship",
      "where",
      "disposition_of_ship",
      "=",
      "value"
    ],
    "question": "How many ships ended up being 'Captured'?",
    "question_toks": [
      "How",
      "many",
      "ships",
      "ended",
      "up",
      "being",
      "'Captured",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Captured\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "battle_death",
    "query": "SELECT avg(injured) FROM death",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "injured",
      ")",
      "FROM",
      "death"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "injured",
      ")",
      "from",
      "death"
    ],
    "question": "What is the average number of injuries caused each time?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "injuries",
      "caused",
      "each",
      "time",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "battle_death",
    "query": "SELECT count(DISTINCT RESULT) FROM battle",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "RESULT",
      ")",
      "FROM",
      "battle"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "result",
      ")",
      "from",
      "battle"
    ],
    "question": "How many different results are there for the battles?",
    "question_toks": [
      "How",
      "many",
      "different",
      "results",
      "are",
      "there",
      "for",
      "the",
      "battles",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "battle_death",
    "query": "SELECT note FROM death WHERE note LIKE '%East%'",
    "query_toks": [
      "SELECT",
      "note",
      "FROM",
      "death",
      "WHERE",
      "note",
      "LIKE",
      "'",
      "%",
      "East",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "note",
      "from",
      "death",
      "where",
      "note",
      "like",
      "value"
    ],
    "question": "What are the notes of the death events which has substring 'East'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "notes",
      "of",
      "the",
      "death",
      "events",
      "which",
      "has",
      "substring",
      "'East",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"%East%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(*) FROM Courses",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Courses"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "courses"
    ],
    "question": "How many courses in total are listed?",
    "question_toks": [
      "How",
      "many",
      "courses",
      "in",
      "total",
      "are",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(*) FROM Courses",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Courses"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "courses"
    ],
    "question": "How many courses are there?",
    "question_toks": [
      "How",
      "many",
      "courses",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "query_toks": [
      "SELECT",
      "course_description",
      "FROM",
      "Courses",
      "WHERE",
      "course_name",
      "=",
      "'math",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "course_description",
      "from",
      "courses",
      "where",
      "course_name",
      "=",
      "value"
    ],
    "question": "How is the math course described?",
    "question_toks": [
      "How",
      "is",
      "the",
      "math",
      "course",
      "described",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"math\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "query_toks": [
      "SELECT",
      "course_description",
      "FROM",
      "Courses",
      "WHERE",
      "course_name",
      "=",
      "'math",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "course_description",
      "from",
      "courses",
      "where",
      "course_name",
      "=",
      "value"
    ],
    "question": "What are the descriptions for all the math courses?",
    "question_toks": [
      "What",
      "are",
      "the",
      "descriptions",
      "for",
      "all",
      "the",
      "math",
      "courses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"math\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "query_toks": [
      "SELECT",
      "zip_postcode",
      "FROM",
      "Addresses",
      "WHERE",
      "city",
      "=",
      "'Port",
      "Chelsea",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "zip_postcode",
      "from",
      "addresses",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "What is the zip code of the address in the city Port Chelsea?",
    "question_toks": [
      "What",
      "is",
      "the",
      "zip",
      "code",
      "of",
      "the",
      "address",
      "in",
      "the",
      "city",
      "Port",
      "Chelsea",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Port Chelsea\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "query_toks": [
      "SELECT",
      "zip_postcode",
      "FROM",
      "Addresses",
      "WHERE",
      "city",
      "=",
      "'Port",
      "Chelsea",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "zip_postcode",
      "from",
      "addresses",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "What is the zip code for Port Chelsea?",
    "question_toks": [
      "What",
      "is",
      "the",
      "zip",
      "code",
      "for",
      "Port",
      "Chelsea",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Port Chelsea\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "department_id",
      ")",
      "FROM",
      "Degree_Programs"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "department_id",
      ")",
      "from",
      "degree_programs"
    ],
    "question": "How many departments offer any degree?",
    "question_toks": [
      "How",
      "many",
      "departments",
      "offer",
      "any",
      "degree",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "department_id",
      ")",
      "FROM",
      "Degree_Programs"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "department_id",
      ")",
      "from",
      "degree_programs"
    ],
    "question": "How many different departments offer degrees?",
    "question_toks": [
      "How",
      "many",
      "different",
      "departments",
      "offer",
      "degrees",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "degree_summary_name",
      ")",
      "FROM",
      "Degree_Programs"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "degree_summary_name",
      ")",
      "from",
      "degree_programs"
    ],
    "question": "How many different degree names are offered?",
    "question_toks": [
      "How",
      "many",
      "different",
      "degree",
      "names",
      "are",
      "offered",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                20,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "degree_summary_name",
      ")",
      "FROM",
      "Degree_Programs"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "degree_summary_name",
      ")",
      "from",
      "degree_programs"
    ],
    "question": "How many different degrees are offered?",
    "question_toks": [
      "How",
      "many",
      "different",
      "degrees",
      "are",
      "offered",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                20,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "query_toks": [
      "SELECT",
      "section_name",
      "FROM",
      "Sections",
      "ORDER",
      "BY",
      "section_name",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "section_name",
      "from",
      "sections",
      "order",
      "by",
      "section_name",
      "desc"
    ],
    "question": "List the section_name in reversed lexicographical order.",
    "question_toks": [
      "List",
      "the",
      "section_name",
      "in",
      "reversed",
      "lexicographical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "query_toks": [
      "SELECT",
      "section_name",
      "FROM",
      "Sections",
      "ORDER",
      "BY",
      "section_name",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "section_name",
      "from",
      "sections",
      "order",
      "by",
      "section_name",
      "desc"
    ],
    "question": "What are the names of the sections in reverse alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "sections",
      "in",
      "reverse",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "query_toks": [
      "SELECT",
      "department_description",
      "FROM",
      "Departments",
      "WHERE",
      "department_name",
      "LIKE",
      "'",
      "%",
      "computer",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "department_description",
      "from",
      "departments",
      "where",
      "department_name",
      "like",
      "value"
    ],
    "question": "What is the description of the department whose name has the substring the computer?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "department",
      "whose",
      "name",
      "has",
      "the",
      "substring",
      "the",
      "computer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%computer%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "query_toks": [
      "SELECT",
      "department_description",
      "FROM",
      "Departments",
      "WHERE",
      "department_name",
      "LIKE",
      "'",
      "%",
      "computer",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "department_description",
      "from",
      "departments",
      "where",
      "department_name",
      "like",
      "value"
    ],
    "question": "What is the department description for the one whose name has the word computer?",
    "question_toks": [
      "What",
      "is",
      "the",
      "department",
      "description",
      "for",
      "the",
      "one",
      "whose",
      "name",
      "has",
      "the",
      "word",
      "computer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%computer%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT avg(transcript_date) FROM Transcripts",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "transcript_date",
      ")",
      "FROM",
      "Transcripts"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "transcript_date",
      ")",
      "from",
      "transcripts"
    ],
    "question": "On average, when were the transcripts printed?",
    "question_toks": [
      "On",
      "average",
      ",",
      "when",
      "were",
      "the",
      "transcripts",
      "printed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                53,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT avg(transcript_date) FROM Transcripts",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "transcript_date",
      ")",
      "FROM",
      "Transcripts"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "transcript_date",
      ")",
      "from",
      "transcripts"
    ],
    "question": "What is the average transcript date?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "transcript",
      "date",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                53,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(*) FROM Transcripts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Transcripts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "transcripts"
    ],
    "question": "How many transcripts are released?",
    "question_toks": [
      "How",
      "many",
      "transcripts",
      "are",
      "released",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(*) FROM Transcripts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Transcripts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "transcripts"
    ],
    "question": "How many transcripts are listed?",
    "question_toks": [
      "How",
      "many",
      "transcripts",
      "are",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "transcript_date",
      "FROM",
      "Transcripts",
      "ORDER",
      "BY",
      "transcript_date",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "transcript_date",
      "from",
      "transcripts",
      "order",
      "by",
      "transcript_date",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the last transcript release date?",
    "question_toks": [
      "What",
      "is",
      "the",
      "last",
      "transcript",
      "release",
      "date",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                53,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              53,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "transcript_date",
      "FROM",
      "Transcripts",
      "ORDER",
      "BY",
      "transcript_date",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "transcript_date",
      "from",
      "transcripts",
      "order",
      "by",
      "transcript_date",
      "desc",
      "limit",
      "value"
    ],
    "question": "When was the last transcript released?",
    "question_toks": [
      "When",
      "was",
      "the",
      "last",
      "transcript",
      "released",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                53,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              53,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(DISTINCT current_address_id) FROM Students",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "current_address_id",
      ")",
      "FROM",
      "Students"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "current_address_id",
      ")",
      "from",
      "students"
    ],
    "question": "How many different addresses do the students currently live?",
    "question_toks": [
      "How",
      "many",
      "different",
      "addresses",
      "do",
      "the",
      "students",
      "currently",
      "live",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                33,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT count(DISTINCT current_address_id) FROM Students",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "current_address_id",
      ")",
      "FROM",
      "Students"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "current_address_id",
      ")",
      "from",
      "students"
    ],
    "question": "What are the different addresses that have students living there?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "addresses",
      "that",
      "have",
      "students",
      "living",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                33,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "query_toks": [
      "SELECT",
      "other_student_details",
      "FROM",
      "Students",
      "ORDER",
      "BY",
      "other_student_details",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "other_student_details",
      "from",
      "students",
      "order",
      "by",
      "other_student_details",
      "desc"
    ],
    "question": "List all the student details in reversed lexicographical order.",
    "question_toks": [
      "List",
      "all",
      "the",
      "student",
      "details",
      "in",
      "reversed",
      "lexicographical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "query_toks": [
      "SELECT",
      "other_student_details",
      "FROM",
      "Students",
      "ORDER",
      "BY",
      "other_student_details",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "other_student_details",
      "from",
      "students",
      "order",
      "by",
      "other_student_details",
      "desc"
    ],
    "question": "What other details can you tell me about students in reverse alphabetical order?",
    "question_toks": [
      "What",
      "other",
      "details",
      "can",
      "you",
      "tell",
      "me",
      "about",
      "students",
      "in",
      "reverse",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "query_toks": [
      "SELECT",
      "section_description",
      "FROM",
      "Sections",
      "WHERE",
      "section_name",
      "=",
      "'h",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "section_description",
      "from",
      "sections",
      "where",
      "section_name",
      "=",
      "value"
    ],
    "question": "Describe the section h.",
    "question_toks": [
      "Describe",
      "the",
      "section",
      "h",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"h\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_transcripts_tracking",
    "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "query_toks": [
      "SELECT",
      "section_description",
      "FROM",
      "Sections",
      "WHERE",
      "section_name",
      "=",
      "'h",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "section_description",
      "from",
      "sections",
      "where",
      "section_name",
      "=",
      "value"
    ],
    "question": "What is the description for the section named h?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "for",
      "the",
      "section",
      "named",
      "h",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"h\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Title FROM Cartoon ORDER BY title",
    "query_toks": [
      "SELECT",
      "Title",
      "FROM",
      "Cartoon",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "cartoon",
      "order",
      "by",
      "title"
    ],
    "question": "List the title of all cartoons in alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "title",
      "of",
      "all",
      "cartoons",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Title FROM Cartoon ORDER BY title",
    "query_toks": [
      "SELECT",
      "Title",
      "FROM",
      "Cartoon",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "cartoon",
      "order",
      "by",
      "title"
    ],
    "question": "What are the titles of the cartoons sorted alphabetically?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "the",
      "cartoons",
      "sorted",
      "alphabetically",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "query_toks": [
      "SELECT",
      "Title",
      "FROM",
      "Cartoon",
      "WHERE",
      "Directed_by",
      "=",
      "``",
      "Ben",
      "Jones",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "cartoon",
      "where",
      "directed_by",
      "=",
      "value"
    ],
    "question": "List all cartoon directed by \"Ben Jones\".",
    "question_toks": [
      "List",
      "all",
      "cartoon",
      "directed",
      "by",
      "``",
      "Ben",
      "Jones",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Ben Jones\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "query_toks": [
      "SELECT",
      "Title",
      "FROM",
      "Cartoon",
      "WHERE",
      "Directed_by",
      "=",
      "``",
      "Ben",
      "Jones",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "cartoon",
      "where",
      "directed_by",
      "=",
      "value"
    ],
    "question": "What are the names of all cartoons directed by Ben Jones?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "cartoons",
      "directed",
      "by",
      "Ben",
      "Jones",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Ben Jones\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Cartoon",
      "WHERE",
      "Written_by",
      "=",
      "``",
      "Joseph",
      "Kuhr",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "cartoon",
      "where",
      "written_by",
      "=",
      "value"
    ],
    "question": "How many cartoons were written by \"Joseph Kuhr\"?",
    "question_toks": [
      "How",
      "many",
      "cartoons",
      "were",
      "written",
      "by",
      "``",
      "Joseph",
      "Kuhr",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"Joseph Kuhr\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Cartoon",
      "WHERE",
      "Written_by",
      "=",
      "``",
      "Joseph",
      "Kuhr",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "cartoon",
      "where",
      "written_by",
      "=",
      "value"
    ],
    "question": "What is the number of cartoones written by Joseph Kuhr?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "cartoones",
      "written",
      "by",
      "Joseph",
      "Kuhr",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"Joseph Kuhr\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "query_toks": [
      "SELECT",
      "Content",
      "FROM",
      "TV_Channel",
      "WHERE",
      "series_name",
      "=",
      "``",
      "Sky",
      "Radio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "content",
      "from",
      "tv_channel",
      "where",
      "series_name",
      "=",
      "value"
    ],
    "question": "What is the content of TV Channel with serial name \"Sky Radio\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "content",
      "of",
      "TV",
      "Channel",
      "with",
      "serial",
      "name",
      "``",
      "Sky",
      "Radio",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Sky Radio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "query_toks": [
      "SELECT",
      "Content",
      "FROM",
      "TV_Channel",
      "WHERE",
      "series_name",
      "=",
      "``",
      "Sky",
      "Radio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "content",
      "from",
      "tv_channel",
      "where",
      "series_name",
      "=",
      "value"
    ],
    "question": "What is the content of the series Sky Radio?",
    "question_toks": [
      "What",
      "is",
      "the",
      "content",
      "of",
      "the",
      "series",
      "Sky",
      "Radio",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Sky Radio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "query_toks": [
      "SELECT",
      "Package_Option",
      "FROM",
      "TV_Channel",
      "WHERE",
      "series_name",
      "=",
      "``",
      "Sky",
      "Radio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "package_option",
      "from",
      "tv_channel",
      "where",
      "series_name",
      "=",
      "value"
    ],
    "question": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "Package",
      "Option",
      "of",
      "TV",
      "Channel",
      "with",
      "serial",
      "name",
      "``",
      "Sky",
      "Radio",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Sky Radio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "query_toks": [
      "SELECT",
      "Package_Option",
      "FROM",
      "TV_Channel",
      "WHERE",
      "series_name",
      "=",
      "``",
      "Sky",
      "Radio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "package_option",
      "from",
      "tv_channel",
      "where",
      "series_name",
      "=",
      "value"
    ],
    "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
    "question_toks": [
      "What",
      "are",
      "the",
      "Package",
      "Options",
      "of",
      "the",
      "TV",
      "Channels",
      "whose",
      "series",
      "names",
      "are",
      "Sky",
      "Radio",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Sky Radio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "TV_Channel",
      "WHERE",
      "LANGUAGE",
      "=",
      "``",
      "English",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tv_channel",
      "where",
      "language",
      "=",
      "value"
    ],
    "question": "How many TV Channel using language English?",
    "question_toks": [
      "How",
      "many",
      "TV",
      "Channel",
      "using",
      "language",
      "English",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"English\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "TV_Channel",
      "WHERE",
      "LANGUAGE",
      "=",
      "``",
      "English",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tv_channel",
      "where",
      "language",
      "=",
      "value"
    ],
    "question": "How many TV Channels use the English language?",
    "question_toks": [
      "How",
      "many",
      "TV",
      "Channels",
      "use",
      "the",
      "English",
      "language",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"English\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Episode FROM TV_series ORDER BY rating",
    "query_toks": [
      "SELECT",
      "Episode",
      "FROM",
      "TV_series",
      "ORDER",
      "BY",
      "rating"
    ],
    "query_toks_no_value": [
      "select",
      "episode",
      "from",
      "tv_series",
      "order",
      "by",
      "rating"
    ],
    "question": "List the Episode of all TV series sorted by rating.",
    "question_toks": [
      "List",
      "the",
      "Episode",
      "of",
      "all",
      "TV",
      "series",
      "sorted",
      "by",
      "rating",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Episode FROM TV_series ORDER BY rating",
    "query_toks": [
      "SELECT",
      "Episode",
      "FROM",
      "TV_series",
      "ORDER",
      "BY",
      "rating"
    ],
    "query_toks_no_value": [
      "select",
      "episode",
      "from",
      "tv_series",
      "order",
      "by",
      "rating"
    ],
    "question": "What are all of the episodes ordered by ratings?",
    "question_toks": [
      "What",
      "are",
      "all",
      "of",
      "the",
      "episodes",
      "ordered",
      "by",
      "ratings",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "query_toks": [
      "SELECT",
      "Air_Date",
      "FROM",
      "TV_series",
      "WHERE",
      "Episode",
      "=",
      "``",
      "A",
      "Love",
      "of",
      "a",
      "Lifetime",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "air_date",
      "from",
      "tv_series",
      "where",
      "episode",
      "=",
      "value"
    ],
    "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "air",
      "date",
      "of",
      "TV",
      "series",
      "with",
      "Episode",
      "``",
      "A",
      "Love",
      "of",
      "a",
      "Lifetime",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"A Love of a Lifetime\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "query_toks": [
      "SELECT",
      "Air_Date",
      "FROM",
      "TV_series",
      "WHERE",
      "Episode",
      "=",
      "``",
      "A",
      "Love",
      "of",
      "a",
      "Lifetime",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "air_date",
      "from",
      "tv_series",
      "where",
      "episode",
      "=",
      "value"
    ],
    "question": "When did the episode \"A Love of a Lifetime\" air?",
    "question_toks": [
      "When",
      "did",
      "the",
      "episode",
      "``",
      "A",
      "Love",
      "of",
      "a",
      "Lifetime",
      "''",
      "air",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"A Love of a Lifetime\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "query_toks": [
      "SELECT",
      "Weekly_Rank",
      "FROM",
      "TV_series",
      "WHERE",
      "Episode",
      "=",
      "``",
      "A",
      "Love",
      "of",
      "a",
      "Lifetime",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "weekly_rank",
      "from",
      "tv_series",
      "where",
      "episode",
      "=",
      "value"
    ],
    "question": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
    "question_toks": [
      "What",
      "is",
      "Weekly",
      "Rank",
      "of",
      "TV",
      "series",
      "with",
      "Episode",
      "``",
      "A",
      "Love",
      "of",
      "a",
      "Lifetime",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"A Love of a Lifetime\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "query_toks": [
      "SELECT",
      "Weekly_Rank",
      "FROM",
      "TV_series",
      "WHERE",
      "Episode",
      "=",
      "``",
      "A",
      "Love",
      "of",
      "a",
      "Lifetime",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "weekly_rank",
      "from",
      "tv_series",
      "where",
      "episode",
      "=",
      "value"
    ],
    "question": "What is the weekly rank for the episode \"A Love of a Lifetime\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "weekly",
      "rank",
      "for",
      "the",
      "episode",
      "``",
      "A",
      "Love",
      "of",
      "a",
      "Lifetime",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"A Love of a Lifetime\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "id",
      "FROM",
      "tv_channel",
      "GROUP",
      "BY",
      "country",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      "from",
      "tv_channel",
      "group",
      "by",
      "country",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "find id of the tv channels that from the countries where have more than two tv channels.",
    "question_toks": [
      "find",
      "id",
      "of",
      "the",
      "tv",
      "channels",
      "that",
      "from",
      "the",
      "countries",
      "where",
      "have",
      "more",
      "than",
      "two",
      "tv",
      "channels",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tvshow",
    "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "id",
      "FROM",
      "tv_channel",
      "GROUP",
      "BY",
      "country",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      "from",
      "tv_channel",
      "group",
      "by",
      "country",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the ids of all tv channels that have more than 2 TV channels?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "tv",
      "channels",
      "that",
      "have",
      "more",
      "than",
      "2",
      "TV",
      "channels",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT count(*) FROM poker_player",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "poker_player"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "poker_player"
    ],
    "question": "How many poker players are there?",
    "question_toks": [
      "How",
      "many",
      "poker",
      "players",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT count(*) FROM poker_player",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "poker_player"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "poker_player"
    ],
    "question": "Count the number of poker players.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "poker",
      "players",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "query_toks": [
      "SELECT",
      "Earnings",
      "FROM",
      "poker_player",
      "ORDER",
      "BY",
      "Earnings",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "earnings",
      "from",
      "poker_player",
      "order",
      "by",
      "earnings",
      "desc"
    ],
    "question": "List the earnings of poker players in descending order.",
    "question_toks": [
      "List",
      "the",
      "earnings",
      "of",
      "poker",
      "players",
      "in",
      "descending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "query_toks": [
      "SELECT",
      "Earnings",
      "FROM",
      "poker_player",
      "ORDER",
      "BY",
      "Earnings",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "earnings",
      "from",
      "poker_player",
      "order",
      "by",
      "earnings",
      "desc"
    ],
    "question": "What are the earnings of poker players, ordered descending by value?",
    "question_toks": [
      "What",
      "are",
      "the",
      "earnings",
      "of",
      "poker",
      "players",
      ",",
      "ordered",
      "descending",
      "by",
      "value",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT avg(Earnings) FROM poker_player",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Earnings",
      ")",
      "FROM",
      "poker_player"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "earnings",
      ")",
      "from",
      "poker_player"
    ],
    "question": "What is the average earnings of poker players?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "earnings",
      "of",
      "poker",
      "players",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT avg(Earnings) FROM poker_player",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Earnings",
      ")",
      "FROM",
      "poker_player"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "earnings",
      ")",
      "from",
      "poker_player"
    ],
    "question": "Return the average earnings across all poker players.",
    "question_toks": [
      "Return",
      "the",
      "average",
      "earnings",
      "across",
      "all",
      "poker",
      "players",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Money_Rank",
      "FROM",
      "poker_player",
      "ORDER",
      "BY",
      "Earnings",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "money_rank",
      "from",
      "poker_player",
      "order",
      "by",
      "earnings",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the money rank of the poker player with the highest earnings?",
    "question_toks": [
      "What",
      "is",
      "the",
      "money",
      "rank",
      "of",
      "the",
      "poker",
      "player",
      "with",
      "the",
      "highest",
      "earnings",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Money_Rank",
      "FROM",
      "poker_player",
      "ORDER",
      "BY",
      "Earnings",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "money_rank",
      "from",
      "poker_player",
      "order",
      "by",
      "earnings",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the money rank of the player with the greatest earnings.",
    "question_toks": [
      "Return",
      "the",
      "money",
      "rank",
      "of",
      "the",
      "player",
      "with",
      "the",
      "greatest",
      "earnings",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Final_Table_Made",
      ")",
      "FROM",
      "poker_player",
      "WHERE",
      "Earnings",
      "<",
      "200000"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "final_table_made",
      ")",
      "from",
      "poker_player",
      "where",
      "earnings",
      "<",
      "value"
    ],
    "question": "What is the maximum number of final tables made among poker players with earnings less than 200000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "number",
      "of",
      "final",
      "tables",
      "made",
      "among",
      "poker",
      "players",
      "with",
      "earnings",
      "less",
      "than",
      "200000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          200000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Final_Table_Made",
      ")",
      "FROM",
      "poker_player",
      "WHERE",
      "Earnings",
      "<",
      "200000"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "final_table_made",
      ")",
      "from",
      "poker_player",
      "where",
      "earnings",
      "<",
      "value"
    ],
    "question": "Return the maximum final tables made across all poker players who have earnings below 200000.",
    "question_toks": [
      "Return",
      "the",
      "maximum",
      "final",
      "tables",
      "made",
      "across",
      "all",
      "poker",
      "players",
      "who",
      "have",
      "earnings",
      "below",
      "200000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          200000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "Nationality",
      "FROM",
      "people",
      "GROUP",
      "BY",
      "Nationality",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "nationality",
      "from",
      "people",
      "group",
      "by",
      "nationality",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the nationalities that are shared by at least two people?",
    "question_toks": [
      "What",
      "are",
      "the",
      "nationalities",
      "that",
      "are",
      "shared",
      "by",
      "at",
      "least",
      "two",
      "people",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "Nationality",
      "FROM",
      "people",
      "GROUP",
      "BY",
      "Nationality",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "nationality",
      "from",
      "people",
      "group",
      "by",
      "nationality",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Return the nationalities for which there are two or more people.",
    "question_toks": [
      "Return",
      "the",
      "nationalities",
      "for",
      "which",
      "there",
      "are",
      "two",
      "or",
      "more",
      "people",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "people",
      "WHERE",
      "Nationality",
      "!",
      "=",
      "``",
      "Russia",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "where",
      "nationality",
      "!",
      "=",
      "value"
    ],
    "question": "Show names of people whose nationality is not \"Russia\".",
    "question_toks": [
      "Show",
      "names",
      "of",
      "people",
      "whose",
      "nationality",
      "is",
      "not",
      "``",
      "Russia",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Russia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "people",
      "WHERE",
      "Nationality",
      "!",
      "=",
      "``",
      "Russia",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "where",
      "nationality",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of people who are not from Russia?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "people",
      "who",
      "are",
      "not",
      "from",
      "Russia",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Russia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT count(DISTINCT Nationality) FROM people",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Nationality",
      ")",
      "FROM",
      "people"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "nationality",
      ")",
      "from",
      "people"
    ],
    "question": "How many distinct nationalities are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "nationalities",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "poker_player",
    "query": "SELECT count(DISTINCT Nationality) FROM people",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Nationality",
      ")",
      "FROM",
      "people"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "nationality",
      ")",
      "from",
      "people"
    ],
    "question": "Count the number of different nationalities.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "nationalities",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_1",
    "query": "SELECT count(*) FROM area_code_state",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "area_code_state"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "area_code_state"
    ],
    "question": "How many states are there?",
    "question_toks": [
      "How",
      "many",
      "states",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_1",
    "query": "SELECT max(created) FROM votes WHERE state  =  'CA'",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "created",
      ")",
      "FROM",
      "votes",
      "WHERE",
      "state",
      "=",
      "'CA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "created",
      ")",
      "from",
      "votes",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "What is last date created of votes from the state 'CA'?",
    "question_toks": [
      "What",
      "is",
      "last",
      "date",
      "created",
      "of",
      "votes",
      "from",
      "the",
      "state",
      "'CA",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"CA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_1",
    "query": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",
    "query_toks": [
      "SELECT",
      "contestant_name",
      "FROM",
      "contestants",
      "WHERE",
      "contestant_name",
      "!",
      "=",
      "'Jessie",
      "Alloway",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "contestant_name",
      "from",
      "contestants",
      "where",
      "contestant_name",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of the contestants whose names are not 'Jessie Alloway'",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "contestants",
      "whose",
      "names",
      "are",
      "not",
      "'Jessie",
      "Alloway",
      "'"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Jessie Alloway\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_1",
    "query": "select contestant_name from contestants where contestant_name like \"%al%\"",
    "query_toks": [
      "select",
      "contestant_name",
      "from",
      "contestants",
      "where",
      "contestant_name",
      "like",
      "\"%al%\""
    ],
    "query_toks_no_value": [
      "select",
      "contestant_name",
      "from",
      "contestants",
      "where",
      "contestant_name",
      "like",
      "value"
    ],
    "question": "Return the names of the contestants whose names contain the substring 'Al' .",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "the",
      "contestants",
      "whose",
      "names",
      "contain",
      "the",
      "substring",
      "'Al'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%al%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "WHERE",
      "IndepYear",
      ">",
      "1950"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "where",
      "indepyear",
      ">",
      "value"
    ],
    "question": "What are the names of all the countries that became independent after 1950?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "countries",
      "that",
      "became",
      "independent",
      "after",
      "1950",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          1950.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "WHERE",
      "IndepYear",
      ">",
      "1950"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "where",
      "indepyear",
      ">",
      "value"
    ],
    "question": "Give the names of the nations that were founded after 1950.",
    "question_toks": [
      "Give",
      "the",
      "names",
      "of",
      "the",
      "nations",
      "that",
      "were",
      "founded",
      "after",
      "1950",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          1950.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "country",
      "WHERE",
      "GovernmentForm",
      "=",
      "``",
      "Republic",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "country",
      "where",
      "governmentform",
      "=",
      "value"
    ],
    "question": "How many countries have a republic as their form of government?",
    "question_toks": [
      "How",
      "many",
      "countries",
      "have",
      "a",
      "republic",
      "as",
      "their",
      "form",
      "of",
      "government",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Republic\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "country",
      "WHERE",
      "GovernmentForm",
      "=",
      "``",
      "Republic",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "country",
      "where",
      "governmentform",
      "=",
      "value"
    ],
    "question": "How many countries have governments that are republics?",
    "question_toks": [
      "How",
      "many",
      "countries",
      "have",
      "governments",
      "that",
      "are",
      "republics",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Republic\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "SurfaceArea",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Region",
      "=",
      "``",
      "Caribbean",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "surfacearea",
      ")",
      "from",
      "country",
      "where",
      "region",
      "=",
      "value"
    ],
    "question": "What is the total surface area of the countries in the Caribbean region?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "surface",
      "area",
      "of",
      "the",
      "countries",
      "in",
      "the",
      "Caribbean",
      "region",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Caribbean\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "SurfaceArea",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Region",
      "=",
      "``",
      "Caribbean",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "surfacearea",
      ")",
      "from",
      "country",
      "where",
      "region",
      "=",
      "value"
    ],
    "question": "How much surface area do the countires in the Carribean cover together?",
    "question_toks": [
      "How",
      "much",
      "surface",
      "area",
      "do",
      "the",
      "countires",
      "in",
      "the",
      "Carribean",
      "cover",
      "together",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Caribbean\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "query_toks": [
      "SELECT",
      "Continent",
      "FROM",
      "country",
      "WHERE",
      "Name",
      "=",
      "``",
      "Anguilla",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "continent",
      "from",
      "country",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Which continent is Anguilla in?",
    "question_toks": [
      "Which",
      "continent",
      "is",
      "Anguilla",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Anguilla\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "query_toks": [
      "SELECT",
      "Continent",
      "FROM",
      "country",
      "WHERE",
      "Name",
      "=",
      "``",
      "Anguilla",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "continent",
      "from",
      "country",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What is the continent name which Anguilla belongs to?",
    "question_toks": [
      "What",
      "is",
      "the",
      "continent",
      "name",
      "which",
      "Anguilla",
      "belongs",
      "to",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Anguilla\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "LifeExpectancy",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Region",
      "=",
      "``",
      "Central",
      "Africa",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "lifeexpectancy",
      ")",
      "from",
      "country",
      "where",
      "region",
      "=",
      "value"
    ],
    "question": "What is the average expected life expectancy for countries in the region of Central Africa?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "expected",
      "life",
      "expectancy",
      "for",
      "countries",
      "in",
      "the",
      "region",
      "of",
      "Central",
      "Africa",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Central Africa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "LifeExpectancy",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Region",
      "=",
      "``",
      "Central",
      "Africa",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "lifeexpectancy",
      ")",
      "from",
      "country",
      "where",
      "region",
      "=",
      "value"
    ],
    "question": "How long is the people\u2019s average life expectancy in Central Africa?",
    "question_toks": [
      "How",
      "long",
      "is",
      "the",
      "people\u2019s",
      "average",
      "life",
      "expectancy",
      "in",
      "Central",
      "Africa",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Central Africa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "WHERE",
      "Continent",
      "=",
      "``",
      "Asia",
      "''",
      "ORDER",
      "BY",
      "LifeExpectancy",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value",
      "order",
      "by",
      "lifeexpectancy",
      "limit",
      "value"
    ],
    "question": "What is the name of country that has the shortest life expectancy in Asia?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "country",
      "that",
      "has",
      "the",
      "shortest",
      "life",
      "expectancy",
      "in",
      "Asia",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Asia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "WHERE",
      "Continent",
      "=",
      "``",
      "Asia",
      "''",
      "ORDER",
      "BY",
      "LifeExpectancy",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value",
      "order",
      "by",
      "lifeexpectancy",
      "limit",
      "value"
    ],
    "question": "Give the name of the country in Asia with the lowest life expectancy.",
    "question_toks": [
      "Give",
      "the",
      "name",
      "of",
      "the",
      "country",
      "in",
      "Asia",
      "with",
      "the",
      "lowest",
      "life",
      "expectancy",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Asia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Population",
      ")",
      "FROM",
      "city",
      "WHERE",
      "District",
      "=",
      "``",
      "Gelderland",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "population",
      ")",
      "from",
      "city",
      "where",
      "district",
      "=",
      "value"
    ],
    "question": "How many people live in Gelderland district?",
    "question_toks": [
      "How",
      "many",
      "people",
      "live",
      "in",
      "Gelderland",
      "district",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Gelderland\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Population",
      ")",
      "FROM",
      "city",
      "WHERE",
      "District",
      "=",
      "``",
      "Gelderland",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "population",
      ")",
      "from",
      "city",
      "where",
      "district",
      "=",
      "value"
    ],
    "question": "What is the total population of Gelderland district?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "population",
      "of",
      "Gelderland",
      "district",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Gelderland\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "LANGUAGE",
      ")",
      "FROM",
      "countrylanguage"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "language",
      ")",
      "from",
      "countrylanguage"
    ],
    "question": "How many unique languages are spoken in the world?",
    "question_toks": [
      "How",
      "many",
      "unique",
      "languages",
      "are",
      "spoken",
      "in",
      "the",
      "world",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                24,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "LANGUAGE",
      ")",
      "FROM",
      "countrylanguage"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "language",
      ")",
      "from",
      "countrylanguage"
    ],
    "question": "What is the number of distinct languages used around the world?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "distinct",
      "languages",
      "used",
      "around",
      "the",
      "world",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                24,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "GovernmentForm",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Continent",
      "=",
      "``",
      "Africa",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "governmentform",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value"
    ],
    "question": "How many type of governments are in Africa?",
    "question_toks": [
      "How",
      "many",
      "type",
      "of",
      "governments",
      "are",
      "in",
      "Africa",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Africa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "GovernmentForm",
      ")",
      "FROM",
      "country",
      "WHERE",
      "Continent",
      "=",
      "``",
      "Africa",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "governmentform",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value"
    ],
    "question": "How many different forms of governments are there in Africa?",
    "question_toks": [
      "How",
      "many",
      "different",
      "forms",
      "of",
      "governments",
      "are",
      "there",
      "in",
      "Africa",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Africa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "CountryCode",
      "FROM",
      "countrylanguage",
      "WHERE",
      "LANGUAGE",
      "!",
      "=",
      "``",
      "English",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "countrycode",
      "from",
      "countrylanguage",
      "where",
      "language",
      "!",
      "=",
      "value"
    ],
    "question": "What are the country codes of countries where people use languages other than English?",
    "question_toks": [
      "What",
      "are",
      "the",
      "country",
      "codes",
      "of",
      "countries",
      "where",
      "people",
      "use",
      "languages",
      "other",
      "than",
      "English",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"English\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "CountryCode",
      "FROM",
      "countrylanguage",
      "WHERE",
      "LANGUAGE",
      "!",
      "=",
      "``",
      "English",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "countrycode",
      "from",
      "countrylanguage",
      "where",
      "language",
      "!",
      "=",
      "value"
    ],
    "question": "Give the country codes for countries in which people speak langauges that are not English.",
    "question_toks": [
      "Give",
      "the",
      "country",
      "codes",
      "for",
      "countries",
      "in",
      "which",
      "people",
      "speak",
      "langauges",
      "that",
      "are",
      "not",
      "English",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"English\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "ORDER",
      "BY",
      "Population",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "order",
      "by",
      "population",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are names of countries with the top 3 largest population?",
    "question_toks": [
      "What",
      "are",
      "names",
      "of",
      "countries",
      "with",
      "the",
      "top",
      "3",
      "largest",
      "population",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "ORDER",
      "BY",
      "Population",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "order",
      "by",
      "population",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the names of the 3 most populated countries.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "the",
      "3",
      "most",
      "populated",
      "countries",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "ORDER",
      "BY",
      "Population",
      "ASC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "order",
      "by",
      "population",
      "asc",
      "limit",
      "value"
    ],
    "question": "What are the names of the nations with the 3 lowest populations?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "nations",
      "with",
      "the",
      "3",
      "lowest",
      "populations",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "ORDER",
      "BY",
      "Population",
      "ASC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "order",
      "by",
      "population",
      "asc",
      "limit",
      "value"
    ],
    "question": "Return the names of the 3 countries with the fewest people.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "the",
      "3",
      "countries",
      "with",
      "the",
      "fewest",
      "people",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "country",
      "WHERE",
      "continent",
      "=",
      "``",
      "Asia",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value"
    ],
    "question": "how many countries are in Asia?",
    "question_toks": [
      "how",
      "many",
      "countries",
      "are",
      "in",
      "Asia",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Asia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "world_1",
    "query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "country",
      "WHERE",
      "continent",
      "=",
      "``",
      "Asia",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "country",
      "where",
      "continent",
      "=",
      "value"
    ],
    "question": "Count the number of countries in Asia.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "countries",
      "in",
      "Asia",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Asia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT count(*) FROM conductor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "conductor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "conductor"
    ],
    "question": "How many conductors are there?",
    "question_toks": [
      "How",
      "many",
      "conductors",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT count(*) FROM conductor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "conductor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "conductor"
    ],
    "question": "Count the number of conductors.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "conductors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "query_toks": [
      "SELECT",
      "Record_Company",
      "FROM",
      "orchestra",
      "ORDER",
      "BY",
      "Year_of_Founded",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "record_company",
      "from",
      "orchestra",
      "order",
      "by",
      "year_of_founded",
      "desc"
    ],
    "question": "What are the record companies of orchestras in descending order of years in which they were founded?",
    "question_toks": [
      "What",
      "are",
      "the",
      "record",
      "companies",
      "of",
      "orchestras",
      "in",
      "descending",
      "order",
      "of",
      "years",
      "in",
      "which",
      "they",
      "were",
      "founded",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "query_toks": [
      "SELECT",
      "Record_Company",
      "FROM",
      "orchestra",
      "ORDER",
      "BY",
      "Year_of_Founded",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "record_company",
      "from",
      "orchestra",
      "order",
      "by",
      "year_of_founded",
      "desc"
    ],
    "question": "Return the record companies of orchestras, sorted descending by the years in which they were founded.",
    "question_toks": [
      "Return",
      "the",
      "record",
      "companies",
      "of",
      "orchestras",
      ",",
      "sorted",
      "descending",
      "by",
      "the",
      "years",
      "in",
      "which",
      "they",
      "were",
      "founded",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT avg(Attendance) FROM SHOW",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Attendance",
      ")",
      "FROM",
      "SHOW"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "attendance",
      ")",
      "from",
      "show"
    ],
    "question": "What is the average attendance of shows?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "attendance",
      "of",
      "shows",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT avg(Attendance) FROM SHOW",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Attendance",
      ")",
      "FROM",
      "SHOW"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "attendance",
      ")",
      "from",
      "show"
    ],
    "question": "Return the average attendance across all shows.",
    "question_toks": [
      "Return",
      "the",
      "average",
      "attendance",
      "across",
      "all",
      "shows",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT count(DISTINCT Nationality) FROM conductor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Nationality",
      ")",
      "FROM",
      "conductor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "nationality",
      ")",
      "from",
      "conductor"
    ],
    "question": "How many different nationalities do conductors have?",
    "question_toks": [
      "How",
      "many",
      "different",
      "nationalities",
      "do",
      "conductors",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "orchestra",
    "query": "SELECT count(DISTINCT Nationality) FROM conductor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Nationality",
      ")",
      "FROM",
      "conductor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "nationality",
      ")",
      "from",
      "conductor"
    ],
    "question": "Count the number of different nationalities of conductors.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "nationalities",
      "of",
      "conductors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT count(*) FROM Highschooler",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Highschooler"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "highschooler"
    ],
    "question": "How many high schoolers are there?",
    "question_toks": [
      "How",
      "many",
      "high",
      "schoolers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT count(*) FROM Highschooler",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Highschooler"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "highschooler"
    ],
    "question": "Count the number of high schoolers.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "high",
      "schoolers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade FROM Highschooler",
    "query_toks": [
      "SELECT",
      "grade",
      "FROM",
      "Highschooler"
    ],
    "query_toks_no_value": [
      "select",
      "grade",
      "from",
      "highschooler"
    ],
    "question": "Show all the grades of the high schoolers.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "grades",
      "of",
      "the",
      "high",
      "schoolers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade FROM Highschooler",
    "query_toks": [
      "SELECT",
      "grade",
      "FROM",
      "Highschooler"
    ],
    "query_toks_no_value": [
      "select",
      "grade",
      "from",
      "highschooler"
    ],
    "question": "What is the grade of each high schooler?",
    "question_toks": [
      "What",
      "is",
      "the",
      "grade",
      "of",
      "each",
      "high",
      "schooler",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "query_toks": [
      "SELECT",
      "grade",
      "FROM",
      "Highschooler",
      "WHERE",
      "name",
      "=",
      "``",
      "Kyle",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "grade",
      "from",
      "highschooler",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What grade is Kyle in?",
    "question_toks": [
      "What",
      "grade",
      "is",
      "Kyle",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Kyle\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "query_toks": [
      "SELECT",
      "grade",
      "FROM",
      "Highschooler",
      "WHERE",
      "name",
      "=",
      "``",
      "Kyle",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "grade",
      "from",
      "highschooler",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Return the grade for the high schooler named Kyle.",
    "question_toks": [
      "Return",
      "the",
      "grade",
      "for",
      "the",
      "high",
      "schooler",
      "named",
      "Kyle",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Kyle\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT name FROM Highschooler WHERE grade  =  10",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Highschooler",
      "WHERE",
      "grade",
      "=",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "highschooler",
      "where",
      "grade",
      "=",
      "value"
    ],
    "question": "Show the names of all high schoolers in grade 10.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "all",
      "high",
      "schoolers",
      "in",
      "grade",
      "10",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT name FROM Highschooler WHERE grade  =  10",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Highschooler",
      "WHERE",
      "grade",
      "=",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "highschooler",
      "where",
      "grade",
      "=",
      "value"
    ],
    "question": "What are the names of all high schoolers in grade 10?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "high",
      "schoolers",
      "in",
      "grade",
      "10",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "query_toks": [
      "SELECT",
      "ID",
      "FROM",
      "Highschooler",
      "WHERE",
      "name",
      "=",
      "``",
      "Kyle",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      "from",
      "highschooler",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Show the ID of the high schooler named Kyle.",
    "question_toks": [
      "Show",
      "the",
      "ID",
      "of",
      "the",
      "high",
      "schooler",
      "named",
      "Kyle",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Kyle\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "query_toks": [
      "SELECT",
      "ID",
      "FROM",
      "Highschooler",
      "WHERE",
      "name",
      "=",
      "``",
      "Kyle",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      "from",
      "highschooler",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What is Kyle's id?",
    "question_toks": [
      "What",
      "is",
      "Kyle",
      "'s",
      "id",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Kyle\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "query_toks": [
      "SELECT",
      "grade",
      "FROM",
      "Highschooler",
      "GROUP",
      "BY",
      "grade",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "4"
    ],
    "query_toks_no_value": [
      "select",
      "grade",
      "from",
      "highschooler",
      "group",
      "by",
      "grade",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show me all grades that have at least 4 students.",
    "question_toks": [
      "Show",
      "me",
      "all",
      "grades",
      "that",
      "have",
      "at",
      "least",
      "4",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "query_toks": [
      "SELECT",
      "grade",
      "FROM",
      "Highschooler",
      "GROUP",
      "BY",
      "grade",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "4"
    ],
    "query_toks_no_value": [
      "select",
      "grade",
      "from",
      "highschooler",
      "group",
      "by",
      "grade",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Which grades have 4 or more high schoolers?",
    "question_toks": [
      "Which",
      "grades",
      "have",
      "4",
      "or",
      "more",
      "high",
      "schoolers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "query_toks": [
      "SELECT",
      "id",
      "FROM",
      "Highschooler",
      "EXCEPT",
      "SELECT",
      "student_id",
      "FROM",
      "Friend"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      "from",
      "highschooler",
      "except",
      "select",
      "student_id",
      "from",
      "friend"
    ],
    "question": "Show ids of all students who do not have any friends.",
    "question_toks": [
      "Show",
      "ids",
      "of",
      "all",
      "students",
      "who",
      "do",
      "not",
      "have",
      "any",
      "friends",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  4,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "network_1",
    "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "query_toks": [
      "SELECT",
      "id",
      "FROM",
      "Highschooler",
      "EXCEPT",
      "SELECT",
      "student_id",
      "FROM",
      "Friend"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      "from",
      "highschooler",
      "except",
      "select",
      "student_id",
      "from",
      "friend"
    ],
    "question": "What are the ids of high school students who do not have friends?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "high",
      "school",
      "students",
      "who",
      "do",
      "not",
      "have",
      "friends",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  4,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dog_id",
      ")",
      "FROM",
      "Treatments"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dog_id",
      ")",
      "from",
      "treatments"
    ],
    "question": "How many dogs went through any treatments?",
    "question_toks": [
      "How",
      "many",
      "dogs",
      "went",
      "through",
      "any",
      "treatments",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                45,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dog_id",
      ")",
      "FROM",
      "Treatments"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dog_id",
      ")",
      "from",
      "treatments"
    ],
    "question": "Count the number of dogs that went through a treatment.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "dogs",
      "that",
      "went",
      "through",
      "a",
      "treatment",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                45,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "professional_id",
      ")",
      "FROM",
      "Treatments"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "professional_id",
      ")",
      "from",
      "treatments"
    ],
    "question": "How many professionals have performed any treatment to dogs?",
    "question_toks": [
      "How",
      "many",
      "professionals",
      "have",
      "performed",
      "any",
      "treatment",
      "to",
      "dogs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                46,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "professional_id",
      ")",
      "FROM",
      "Treatments"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "professional_id",
      ")",
      "from",
      "treatments"
    ],
    "question": "Find the number of professionals who have ever treated dogs.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "professionals",
      "who",
      "have",
      "ever",
      "treated",
      "dogs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                46,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "cost_of_treatment",
      "FROM",
      "Treatments",
      "ORDER",
      "BY",
      "date_of_treatment",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "cost_of_treatment",
      "from",
      "treatments",
      "order",
      "by",
      "date_of_treatment",
      "desc",
      "limit",
      "value"
    ],
    "question": "How much does the most recent treatment cost?",
    "question_toks": [
      "How",
      "much",
      "does",
      "the",
      "most",
      "recent",
      "treatment",
      "cost",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                49,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              48,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "cost_of_treatment",
      "FROM",
      "Treatments",
      "ORDER",
      "BY",
      "date_of_treatment",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "cost_of_treatment",
      "from",
      "treatments",
      "order",
      "by",
      "date_of_treatment",
      "desc",
      "limit",
      "value"
    ],
    "question": "Show me the cost of the most recently performed treatment.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "cost",
      "of",
      "the",
      "most",
      "recently",
      "performed",
      "treatment",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                49,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              48,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT avg(age) FROM Dogs",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      "FROM",
      "Dogs"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "dogs"
    ],
    "question": "What is the average age of all the dogs?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "age",
      "of",
      "all",
      "the",
      "dogs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT avg(age) FROM Dogs",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      "FROM",
      "Dogs"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "dogs"
    ],
    "question": "Compute the average age of all the dogs.",
    "question_toks": [
      "Compute",
      "the",
      "average",
      "age",
      "of",
      "all",
      "the",
      "dogs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT max(age) FROM Dogs",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "Dogs"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "dogs"
    ],
    "question": "What is the age of the oldest dog?",
    "question_toks": [
      "What",
      "is",
      "the",
      "age",
      "of",
      "the",
      "oldest",
      "dog",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT max(age) FROM Dogs",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "age",
      ")",
      "FROM",
      "Dogs"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "dogs"
    ],
    "question": "Tell me the age of the oldest dog.",
    "question_toks": [
      "Tell",
      "me",
      "the",
      "age",
      "of",
      "the",
      "oldest",
      "dog",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT max(charge_amount) FROM Charges",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "charge_amount",
      ")",
      "FROM",
      "Charges"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "charge_amount",
      ")",
      "from",
      "charges"
    ],
    "question": "How much does the most expensive charge type costs?",
    "question_toks": [
      "How",
      "much",
      "does",
      "the",
      "most",
      "expensive",
      "charge",
      "type",
      "costs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dog_kennels",
    "query": "SELECT max(charge_amount) FROM Charges",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "charge_amount",
      ")",
      "FROM",
      "Charges"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "charge_amount",
      ")",
      "from",
      "charges"
    ],
    "question": "What is the charge amount of the most expensive charge type?",
    "question_toks": [
      "What",
      "is",
      "the",
      "charge",
      "amount",
      "of",
      "the",
      "most",
      "expensive",
      "charge",
      "type",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "singer",
    "query": "SELECT count(*) FROM singer",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "singer"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "singer"
    ],
    "question": "How many singers are there?",
    "question_toks": [
      "How",
      "many",
      "singers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "singer",
    "query": "SELECT count(*) FROM singer",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "singer"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "singer"
    ],
    "question": "What is the count of singers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "singers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "singer",
      "ORDER",
      "BY",
      "Net_Worth_Millions",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "singer",
      "order",
      "by",
      "net_worth_millions",
      "asc"
    ],
    "question": "List the name of singers in ascending order of net worth.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "singers",
      "in",
      "ascending",
      "order",
      "of",
      "net",
      "worth",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "singer",
      "ORDER",
      "BY",
      "Net_Worth_Millions",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "singer",
      "order",
      "by",
      "net_worth_millions",
      "asc"
    ],
    "question": "What are the names of singers ordered by ascending net worth?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "singers",
      "ordered",
      "by",
      "ascending",
      "net",
      "worth",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "singer",
      "WHERE",
      "Citizenship",
      "!",
      "=",
      "``",
      "France",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "singer",
      "where",
      "citizenship",
      "!",
      "=",
      "value"
    ],
    "question": "List the name of singers whose citizenship is not \"France\".",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "singers",
      "whose",
      "citizenship",
      "is",
      "not",
      "``",
      "France",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"France\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "singer",
      "WHERE",
      "Citizenship",
      "!",
      "=",
      "``",
      "France",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "singer",
      "where",
      "citizenship",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of the singers who are not French citizens?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "singers",
      "who",
      "are",
      "not",
      "French",
      "citizens",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"France\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "singer",
      "ORDER",
      "BY",
      "Net_Worth_Millions",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "singer",
      "order",
      "by",
      "net_worth_millions",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the singer with the largest net worth?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "singer",
      "with",
      "the",
      "largest",
      "net",
      "worth",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "singer",
    "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "singer",
      "ORDER",
      "BY",
      "Net_Worth_Millions",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "singer",
      "order",
      "by",
      "net_worth_millions",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the singer who is worth the most?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "singer",
      "who",
      "is",
      "worth",
      "the",
      "most",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "real_estate_properties",
    "query": "SELECT count(*) FROM Other_Available_Features",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Other_Available_Features"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "other_available_features"
    ],
    "question": "How many available features are there in total?",
    "question_toks": [
      "How",
      "many",
      "available",
      "features",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  }
]