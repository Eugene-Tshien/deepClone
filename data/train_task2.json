[
  {
    "db_id": "formula_1",
    "query": "SELECT DISTINCT name FROM races ORDER BY name DESC",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "name",
      "FROM",
      "races",
      "ORDER",
      "BY",
      "name",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "races",
      "order",
      "by",
      "name",
      "desc"
    ],
    "question": "What are the different names of all the races in reverse alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "names",
      "of",
      "all",
      "the",
      "races",
      "in",
      "reverse",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "beds",
      ")",
      "FROM",
      "Rooms",
      "WHERE",
      "bedtype",
      "=",
      "'King",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "beds",
      ")",
      "from",
      "rooms",
      "where",
      "bedtype",
      "=",
      "value"
    ],
    "question": "How many king beds are there?",
    "question_toks": [
      "How",
      "many",
      "king",
      "beds",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"King\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\"",
    "query_toks": [
      "SELECT",
      "address_line_1",
      "FROM",
      "Course_Authors_and_Tutors",
      "WHERE",
      "personal_name",
      "=",
      "``",
      "Cathrine",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "address_line_1",
      "from",
      "course_authors_and_tutors",
      "where",
      "personal_name",
      "=",
      "value"
    ],
    "question": "What are the addresses of the course authors or tutors with personal name \"Cathrine\"",
    "question_toks": [
      "What",
      "are",
      "the",
      "addresses",
      "of",
      "the",
      "course",
      "authors",
      "or",
      "tutors",
      "with",
      "personal",
      "name",
      "``",
      "Cathrine",
      "''"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Cathrine\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Fname",
      "FROM",
      "STUDENT",
      "WHERE",
      "Fname",
      "LIKE",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "fname",
      "from",
      "student",
      "where",
      "fname",
      "like",
      "value"
    ],
    "question": "What are the first names for students who have an \"a\" in their first name?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "for",
      "students",
      "who",
      "have",
      "an",
      "``",
      "a",
      "''",
      "in",
      "their",
      "first",
      "name",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"%a%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "organization_name",
      "FROM",
      "organizations",
      "ORDER",
      "BY",
      "date_formed",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "organization_name",
      "from",
      "organizations",
      "order",
      "by",
      "date_formed",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name of the youngest organization.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "youngest",
      "organization",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC",
    "query_toks": [
      "SELECT",
      "staff_details",
      "FROM",
      "Research_Staff",
      "ORDER",
      "BY",
      "staff_details",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "staff_details",
      "from",
      "research_staff",
      "order",
      "by",
      "staff_details",
      "asc"
    ],
    "question": "What details are there on the research staff? List the result in ascending alphabetical order.",
    "question_toks": [
      "What",
      "details",
      "are",
      "there",
      "on",
      "the",
      "research",
      "staff",
      "?",
      "List",
      "the",
      "result",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              36,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "party",
      "ORDER",
      "BY",
      "Number_of_hosts",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "party",
      "order",
      "by",
      "number_of_hosts",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which party had the most hosts? Give me the party location.",
    "question_toks": [
      "Which",
      "party",
      "had",
      "the",
      "most",
      "hosts",
      "?",
      "Give",
      "me",
      "the",
      "party",
      "location",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "patient",
      "FROM",
      "stay",
      "WHERE",
      "room",
      "=",
      "111",
      "ORDER",
      "BY",
      "staystart",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "patient",
      "from",
      "stay",
      "where",
      "room",
      "=",
      "value",
      "order",
      "by",
      "staystart",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the patient who most recently stayed in room 111.",
    "question_toks": [
      "Find",
      "the",
      "patient",
      "who",
      "most",
      "recently",
      "stayed",
      "in",
      "room",
      "111",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            13
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          111.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              61,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT count(*) FROM services",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "services"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "services"
    ],
    "question": "How many services are there?",
    "question_toks": [
      "How",
      "many",
      "services",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"",
    "query_toks": [
      "SELECT",
      "Other_Details",
      "FROM",
      "LOCATIONS",
      "WHERE",
      "Location_Name",
      "=",
      "``",
      "UK",
      "Gallery",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "other_details",
      "from",
      "locations",
      "where",
      "location_name",
      "=",
      "value"
    ],
    "question": "What is the detail of the location UK Gallery?",
    "question_toks": [
      "What",
      "is",
      "the",
      "detail",
      "of",
      "the",
      "location",
      "UK",
      "Gallery",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"UK Gallery\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "Students",
      "WHERE",
      "personal_name",
      "LIKE",
      "``",
      "%",
      "son",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "students",
      "where",
      "personal_name",
      "like",
      "value"
    ],
    "question": "Find the number of students who have the word \"son\" in their personal names.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "students",
      "who",
      "have",
      "the",
      "word",
      "``",
      "son",
      "''",
      "in",
      "their",
      "personal",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%son%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT count(*) FROM appointment",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "appointment"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "appointment"
    ],
    "question": "How many appointments are there?",
    "question_toks": [
      "How",
      "many",
      "appointments",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\"",
    "query_toks": [
      "SELECT",
      "Enrollment",
      "FROM",
      "school",
      "WHERE",
      "Denomination",
      "!",
      "=",
      "``",
      "Catholic",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "enrollment",
      "from",
      "school",
      "where",
      "denomination",
      "!",
      "=",
      "value"
    ],
    "question": "List the enrollment for each school that does not have \"Catholic\" as denomination.",
    "question_toks": [
      "List",
      "the",
      "enrollment",
      "for",
      "each",
      "school",
      "that",
      "does",
      "not",
      "have",
      "``",
      "Catholic",
      "''",
      "as",
      "denomination",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Catholic\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT avg(Population) FROM county",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Population",
      ")",
      "FROM",
      "county"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "population",
      ")",
      "from",
      "county"
    ],
    "question": "On average how large is the population of the counties?",
    "question_toks": [
      "On",
      "average",
      "how",
      "large",
      "is",
      "the",
      "population",
      "of",
      "the",
      "counties",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT count(*) FROM useracct",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "useracct"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "useracct"
    ],
    "question": "How many users are there?",
    "question_toks": [
      "How",
      "many",
      "users",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";",
    "query_toks": [
      "SELECT",
      "highest_elevation",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "delaware",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "highest_elevation",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the highest point in delaware in meters",
    "question_toks": [
      "what",
      "is",
      "the",
      "highest",
      "point",
      "in",
      "delaware",
      "in",
      "meters"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"delaware\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Projects",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Projects"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "projects"
    ],
    "question": "How many projects are there?",
    "question_toks": [
      "How",
      "many",
      "projects",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "what state is springfield in",
    "question_toks": [
      "what",
      "state",
      "is",
      "springfield",
      "in"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";",
    "query_toks": [
      "SELECT",
      "highest_elevation",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "delaware",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "highest_elevation",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the highest elevation in delaware",
    "question_toks": [
      "what",
      "is",
      "the",
      "highest",
      "elevation",
      "in",
      "delaware"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"delaware\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT capital FROM state WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "capital",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "capital",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the capital of the texas state",
    "question_toks": [
      "what",
      "is",
      "the",
      "capital",
      "of",
      "the",
      "texas",
      "state"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT count(*) FROM club WHERE clublocation  =  \"HHH\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "club",
      "WHERE",
      "clublocation",
      "=",
      "``",
      "HHH",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "club",
      "where",
      "clublocation",
      "=",
      "value"
    ],
    "question": "Count the number of clubs located at \"HHH\".",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "clubs",
      "located",
      "at",
      "``",
      "HHH",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"HHH\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "host_city",
      "FROM",
      "hosting_city",
      "ORDER",
      "BY",
      "YEAR",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "host_city",
      "from",
      "hosting_city",
      "order",
      "by",
      "year",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is id of the city that hosted events in the most recent year?",
    "question_toks": [
      "What",
      "is",
      "id",
      "of",
      "the",
      "city",
      "that",
      "hosted",
      "events",
      "in",
      "the",
      "most",
      "recent",
      "year",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT name FROM mill WHERE LOCATION != 'Donceel'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "mill",
      "WHERE",
      "LOCATION",
      "!",
      "=",
      "'Donceel",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "mill",
      "where",
      "location",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of the mills which are not located in 'Donceel'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "mills",
      "which",
      "are",
      "not",
      "located",
      "in",
      "'Donceel",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Donceel\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "=",
      "``",
      "2008",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Find the names of all wines produced in 2008.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "wines",
      "produced",
      "in",
      "2008",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"2008\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT count(*) FROM aircraft",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft"
    ],
    "question": "How many aircrafts are there?",
    "question_toks": [
      "How",
      "many",
      "aircrafts",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"Second time\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customer_orders",
      "WHERE",
      "order_details",
      "=",
      "``",
      "Second",
      "time",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customer_orders",
      "where",
      "order_details",
      "=",
      "value"
    ],
    "question": "How many orders have detail \"Second time\"?",
    "question_toks": [
      "How",
      "many",
      "orders",
      "have",
      "detail",
      "``",
      "Second",
      "time",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Second time\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT document_type_code FROM Ref_Document_Types;",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Ref_Document_Types",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "ref_document_types"
    ],
    "question": "What document type codes do we have?",
    "question_toks": [
      "What",
      "document",
      "type",
      "codes",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT MAX ( area ) FROM state;",
    "query_toks": [
      "SELECT",
      "MAX",
      "(",
      "area",
      ")",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "area",
      ")",
      "from",
      "state"
    ],
    "question": "what is the size of the largest state in the usa",
    "question_toks": [
      "what",
      "is",
      "the",
      "size",
      "of",
      "the",
      "largest",
      "state",
      "in",
      "the",
      "usa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT DISTINCT payment_method_code FROM INVOICES",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "payment_method_code",
      "FROM",
      "INVOICES"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "payment_method_code",
      "from",
      "invoices"
    ],
    "question": "What are the distinct payment method codes in all the invoices?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "payment",
      "method",
      "codes",
      "in",
      "all",
      "the",
      "invoices",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            14
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                79,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\"",
    "query_toks": [
      "SELECT",
      "address_line_1",
      "FROM",
      "Course_Authors_and_Tutors",
      "WHERE",
      "personal_name",
      "=",
      "``",
      "Cathrine",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "address_line_1",
      "from",
      "course_authors_and_tutors",
      "where",
      "personal_name",
      "=",
      "value"
    ],
    "question": "Return the addresses of the course authors or tutors whose personal name is \"Cathrine\".",
    "question_toks": [
      "Return",
      "the",
      "addresses",
      "of",
      "the",
      "course",
      "authors",
      "or",
      "tutors",
      "whose",
      "personal",
      "name",
      "is",
      "``",
      "Cathrine",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Cathrine\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT count(*) FROM Rating WHERE stars  >  3",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Rating",
      "WHERE",
      "stars",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "rating",
      "where",
      "stars",
      ">",
      "value"
    ],
    "question": "How many movie ratings have more than 3 stars?",
    "question_toks": [
      "How",
      "many",
      "movie",
      "ratings",
      "have",
      "more",
      "than",
      "3",
      "stars",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "student",
      "WHERE",
      "dept_name",
      "=",
      "'History",
      "'",
      "ORDER",
      "BY",
      "tot_cred",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "student",
      "where",
      "dept_name",
      "=",
      "value",
      "order",
      "by",
      "tot_cred",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the student who has the highest total credits in the History department.",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "student",
      "who",
      "has",
      "the",
      "highest",
      "total",
      "credits",
      "in",
      "the",
      "History",
      "department",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"History\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "revenue",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "headquarter",
      "=",
      "'Austin",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "revenue",
      ")",
      "from",
      "manufacturers",
      "where",
      "headquarter",
      "=",
      "value"
    ],
    "question": "What is the sum of revenue from companies with headquarters in Austin?",
    "question_toks": [
      "What",
      "is",
      "the",
      "sum",
      "of",
      "revenue",
      "from",
      "companies",
      "with",
      "headquarters",
      "in",
      "Austin",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Austin\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT name FROM captain ORDER BY age DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "captain",
      "ORDER",
      "BY",
      "age",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "captain",
      "order",
      "by",
      "age",
      "desc"
    ],
    "question": "Sort all captain names by their ages from old to young.",
    "question_toks": [
      "Sort",
      "all",
      "captain",
      "names",
      "by",
      "their",
      "ages",
      "from",
      "old",
      "to",
      "young",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT count(*) FROM candidate",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "candidate"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "candidate"
    ],
    "question": "Count the number of candidates.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "candidates",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "mountain_photos",
    "query": "SELECT name FROM camera_lens WHERE name LIKE \"%Digital%\"",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "camera_lens",
      "WHERE",
      "name",
      "LIKE",
      "``",
      "%",
      "Digital",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "camera_lens",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "List the camera lens names containing substring \"Digital\".",
    "question_toks": [
      "List",
      "the",
      "camera",
      "lens",
      "names",
      "containing",
      "substring",
      "``",
      "Digital",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"%Digital%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT count(*) FROM market WHERE Number_cities  <  300",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "market",
      "WHERE",
      "Number_cities",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "market",
      "where",
      "number_cities",
      "<",
      "value"
    ],
    "question": "How many markets have number of cities smaller than 300?",
    "question_toks": [
      "How",
      "many",
      "markets",
      "have",
      "number",
      "of",
      "cities",
      "smaller",
      "than",
      "300",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          300.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\"",
    "query_toks": [
      "SELECT",
      "rID",
      "FROM",
      "Reviewer",
      "WHERE",
      "name",
      "LIKE",
      "``",
      "%",
      "Mike",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "rid",
      "from",
      "reviewer",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "What is the id of the reviewer whose name has substring \u201cMike\u201d?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "reviewer",
      "whose",
      "name",
      "has",
      "substring",
      "\u201cMike\u201d",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"%Mike%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "faculty",
      ")",
      "FROM",
      "faculty",
      "WHERE",
      "YEAR",
      "=",
      "2002"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "faculty",
      ")",
      "from",
      "faculty",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "How many faculty is there in total in the year of 2002?",
    "question_toks": [
      "How",
      "many",
      "faculty",
      "is",
      "there",
      "in",
      "total",
      "in",
      "the",
      "year",
      "of",
      "2002",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          2002.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "station",
      "WHERE",
      "city",
      "=",
      "``",
      "Mountain",
      "View",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "station",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "How many stations does Mountain View city has?",
    "question_toks": [
      "How",
      "many",
      "stations",
      "does",
      "Mountain",
      "View",
      "city",
      "has",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Mountain View\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "Winery",
      "=",
      "``",
      "Robert",
      "Biale",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "wine",
      "where",
      "winery",
      "=",
      "value"
    ],
    "question": "How many wines are produced at Robert Biale winery?",
    "question_toks": [
      "How",
      "many",
      "wines",
      "are",
      "produced",
      "at",
      "Robert",
      "Biale",
      "winery",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Robert Biale\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT city_name FROM city WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "city_name",
      "FROM",
      "city",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "city_name",
      "from",
      "city",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "give me the cities in texas",
    "question_toks": [
      "give",
      "me",
      "the",
      "cities",
      "in",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT count(*) FROM Movie WHERE YEAR  <  2000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Movie",
      "WHERE",
      "YEAR",
      "<",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "movie",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "How many movies were made before 2000?",
    "question_toks": [
      "How",
      "many",
      "movies",
      "were",
      "made",
      "before",
      "2000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT count(*) FROM actor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "actor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "actor"
    ],
    "question": "How many actors are there?",
    "question_toks": [
      "How",
      "many",
      "actors",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT state FROM park GROUP BY state HAVING count(*)  >  2;",
    "query_toks": [
      "SELECT",
      "state",
      "FROM",
      "park",
      "GROUP",
      "BY",
      "state",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state",
      "from",
      "park",
      "group",
      "by",
      "state",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which states have more than 2 parks?",
    "question_toks": [
      "Which",
      "states",
      "have",
      "more",
      "than",
      "2",
      "parks",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            17
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                210,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          210,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM Person WHERE gender  =  'male' ORDER BY age",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Person",
      "WHERE",
      "gender",
      "=",
      "'male",
      "'",
      "ORDER",
      "BY",
      "age"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "person",
      "where",
      "gender",
      "=",
      "value",
      "order",
      "by",
      "age"
    ],
    "question": "Find the name and age of all males in order of their age.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "age",
      "of",
      "all",
      "males",
      "in",
      "order",
      "of",
      "their",
      "age",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"male\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT document_type_code FROM Documents WHERE document_id = 2;",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Documents",
      "WHERE",
      "document_id",
      "=",
      "2",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "documents",
      "where",
      "document_id",
      "=",
      "value"
    ],
    "question": "List the document type code for the document with the id 2.",
    "question_toks": [
      "List",
      "the",
      "document",
      "type",
      "code",
      "for",
      "the",
      "document",
      "with",
      "the",
      "id",
      "2",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT lastname FROM list WHERE classroom  =  111",
    "query_toks": [
      "SELECT",
      "lastname",
      "FROM",
      "list",
      "WHERE",
      "classroom",
      "=",
      "111"
    ],
    "query_toks_no_value": [
      "select",
      "lastname",
      "from",
      "list",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "Find the last names of students studying in room 111.",
    "question_toks": [
      "Find",
      "the",
      "last",
      "names",
      "of",
      "students",
      "studying",
      "in",
      "room",
      "111",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          111.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE YEAR  <  1800",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "YEAR",
      "<",
      "1800"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "Find the name of the campuses opened before 1800.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "campuses",
      "opened",
      "before",
      "1800",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1800.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Seeds",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "How many products are there under the category \"Seeds\"?",
    "question_toks": [
      "How",
      "many",
      "products",
      "are",
      "there",
      "under",
      "the",
      "category",
      "``",
      "Seeds",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Seeds\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT LOCATION FROM school ORDER BY Founded DESC",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "school",
      "ORDER",
      "BY",
      "Founded",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "school",
      "order",
      "by",
      "founded",
      "desc"
    ],
    "question": "List the locations of schools in descending order of founded year.",
    "question_toks": [
      "List",
      "the",
      "locations",
      "of",
      "schools",
      "in",
      "descending",
      "order",
      "of",
      "founded",
      "year",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT count(*) FROM campuses",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "campuses"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "campuses"
    ],
    "question": "How many CSU campuses are there?",
    "question_toks": [
      "How",
      "many",
      "CSU",
      "campuses",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"Team Orton\"",
    "query_toks": [
      "SELECT",
      "Elimination_Move",
      "FROM",
      "Elimination",
      "WHERE",
      "Team",
      "=",
      "``",
      "Team",
      "Orton",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "elimination_move",
      "from",
      "elimination",
      "where",
      "team",
      "=",
      "value"
    ],
    "question": "What are the elimination moves of wrestlers whose team is \"Team Orton\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "elimination",
      "moves",
      "of",
      "wrestlers",
      "whose",
      "team",
      "is",
      "``",
      "Team",
      "Orton",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Team Orton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "TRACK",
      "WHERE",
      "Name",
      "LIKE",
      "'",
      "%",
      "you",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "track",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Find the names of all the tracks that contain the word \"you\".",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "the",
      "tracks",
      "that",
      "contain",
      "the",
      "word",
      "``",
      "you",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                57,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              57,
              false
            ],
            null
          ],
          "\"%you%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT capital FROM state WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "capital",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "capital",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the capital of the state texas",
    "question_toks": [
      "what",
      "is",
      "the",
      "capital",
      "of",
      "the",
      "state",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT DISTINCT name FROM medication ORDER BY name",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "name",
      "FROM",
      "medication",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "medication",
      "order",
      "by",
      "name"
    ],
    "question": "What is the alphabetically ordered list of all distinct medications?",
    "question_toks": [
      "What",
      "is",
      "the",
      "alphabetically",
      "ordered",
      "list",
      "of",
      "all",
      "distinct",
      "medications",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT DISTINCT city_code FROM Student",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "city_code",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "city_code",
      "from",
      "student"
    ],
    "question": "What cities do students live in?",
    "question_toks": [
      "What",
      "cities",
      "do",
      "students",
      "live",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT firstname FROM list WHERE classroom  =  108",
    "query_toks": [
      "SELECT",
      "firstname",
      "FROM",
      "list",
      "WHERE",
      "classroom",
      "=",
      "108"
    ],
    "query_toks_no_value": [
      "select",
      "firstname",
      "from",
      "list",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "Find the first names of students studying in room 108.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "names",
      "of",
      "students",
      "studying",
      "in",
      "room",
      "108",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          108.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT count(*) FROM Rating WHERE stars  >  3",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Rating",
      "WHERE",
      "stars",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "rating",
      "where",
      "stars",
      ">",
      "value"
    ],
    "question": "What is the total number of ratings that has more than 3 stars?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "ratings",
      "that",
      "has",
      "more",
      "than",
      "3",
      "stars",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      "FROM",
      "catalog_contents",
      "WHERE",
      "next_entry_id",
      ">",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      "from",
      "catalog_contents",
      "where",
      "next_entry_id",
      ">",
      "value"
    ],
    "question": "What are the catalog entry names of the products with next entry ID above 8?",
    "question_toks": [
      "What",
      "are",
      "the",
      "catalog",
      "entry",
      "names",
      "of",
      "the",
      "products",
      "with",
      "next",
      "entry",
      "ID",
      "above",
      "8",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          8.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\"",
    "query_toks": [
      "SELECT",
      "Marketing_Region_Descriptrion",
      "FROM",
      "Marketing_Regions",
      "WHERE",
      "Marketing_Region_Name",
      "=",
      "``",
      "China",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "marketing_region_descriptrion",
      "from",
      "marketing_regions",
      "where",
      "marketing_region_name",
      "=",
      "value"
    ],
    "question": "Find the marketing region description of China?",
    "question_toks": [
      "Find",
      "the",
      "marketing",
      "region",
      "description",
      "of",
      "China",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"China\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "class_section",
      ")",
      "FROM",
      "CLASS",
      "WHERE",
      "crs_code",
      "=",
      "'ACCT-211",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "class_section",
      ")",
      "from",
      "class",
      "where",
      "crs_code",
      "=",
      "value"
    ],
    "question": "How many sections does course ACCT-211 has?",
    "question_toks": [
      "How",
      "many",
      "sections",
      "does",
      "course",
      "ACCT-211",
      "has",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACCT-211\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Companies",
      "ORDER",
      "BY",
      "Market_Value_billion",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "companies",
      "order",
      "by",
      "market_value_billion",
      "desc"
    ],
    "question": "List the names of companies in descending order of market value.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "companies",
      "in",
      "descending",
      "order",
      "of",
      "market",
      "value",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT distinct(Famous_Release_date) FROM artist",
    "query_toks": [
      "SELECT",
      "distinct",
      "(",
      "Famous_Release_date",
      ")",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "(",
      "famous_release_date",
      ")",
      "from",
      "artist"
    ],
    "question": "What are the distinct Famous release dates?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "Famous",
      "release",
      "dates",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT * FROM Assessment_Notes ORDER BY date_of_notes ASC",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "Assessment_Notes",
      "ORDER",
      "BY",
      "date_of_notes",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "assessment_notes",
      "order",
      "by",
      "date_of_notes",
      "asc"
    ],
    "question": "List all information about the assessment notes sorted by date in ascending order.",
    "question_toks": [
      "List",
      "all",
      "information",
      "about",
      "the",
      "assessment",
      "notes",
      "sorted",
      "by",
      "date",
      "in",
      "ascending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT count(DISTINCT city) FROM station",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "station"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "station"
    ],
    "question": "How many different cities have these stations?",
    "question_toks": [
      "How",
      "many",
      "different",
      "cities",
      "have",
      "these",
      "stations",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "user_profiles",
      "ORDER",
      "BY",
      "followers",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "user_profiles",
      "order",
      "by",
      "followers",
      "desc",
      "limit",
      "value"
    ],
    "question": "List the names of 5 users followed by the largest number of other users.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "5",
      "users",
      "followed",
      "by",
      "the",
      "largest",
      "number",
      "of",
      "other",
      "users",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 5,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM tryout WHERE pPos  =  'goalie'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "tryout",
      "WHERE",
      "pPos",
      "=",
      "'goalie",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tryout",
      "where",
      "ppos",
      "=",
      "value"
    ],
    "question": "How many students whose are playing the role of goalie?",
    "question_toks": [
      "How",
      "many",
      "students",
      "whose",
      "are",
      "playing",
      "the",
      "role",
      "of",
      "goalie",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"goalie\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT name FROM business WHERE rating  >  4.5;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "business",
      "WHERE",
      "rating",
      ">",
      "4.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "business",
      "where",
      "rating",
      ">",
      "value"
    ],
    "question": "List all the businesses with more than 4.5 stars",
    "question_toks": [
      "List",
      "all",
      "the",
      "businesses",
      "with",
      "more",
      "than",
      "4.5",
      "stars"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          4.5,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT count(*) FROM region",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "region"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "region"
    ],
    "question": "How many regions do we have?",
    "question_toks": [
      "How",
      "many",
      "regions",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT count(DISTINCT Industry) FROM Companies",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Industry",
      ")",
      "FROM",
      "Companies"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "industry",
      ")",
      "from",
      "companies"
    ],
    "question": "Count the number of distinct company industries.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "company",
      "industries",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "founder",
      "=",
      "'Andy",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "manufacturers",
      "where",
      "founder",
      "=",
      "value"
    ],
    "question": "Return the number of companies created by Andy.",
    "question_toks": [
      "Return",
      "the",
      "number",
      "of",
      "companies",
      "created",
      "by",
      "Andy",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Andy\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT venue FROM MATCH ORDER BY date DESC",
    "query_toks": [
      "SELECT",
      "venue",
      "FROM",
      "MATCH",
      "ORDER",
      "BY",
      "date",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "venue",
      "from",
      "match",
      "order",
      "by",
      "date",
      "desc"
    ],
    "question": "What are the venues of all the matches? Sort them in the descending order of match date.",
    "question_toks": [
      "What",
      "are",
      "the",
      "venues",
      "of",
      "all",
      "the",
      "matches",
      "?",
      "Sort",
      "them",
      "in",
      "the",
      "descending",
      "order",
      "of",
      "match",
      "date",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\"",
    "query_toks": [
      "SELECT",
      "attribute_data_type",
      "FROM",
      "Attribute_Definitions",
      "WHERE",
      "attribute_name",
      "=",
      "``",
      "Green",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "attribute_data_type",
      "from",
      "attribute_definitions",
      "where",
      "attribute_name",
      "=",
      "value"
    ],
    "question": "Find the attribute data type for the attribute named \"Green\".",
    "question_toks": [
      "Find",
      "the",
      "attribute",
      "data",
      "type",
      "for",
      "the",
      "attribute",
      "named",
      "``",
      "Green",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Green\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT city_code FROM Student WHERE LName  =  \"Kim\"",
    "query_toks": [
      "SELECT",
      "city_code",
      "FROM",
      "Student",
      "WHERE",
      "LName",
      "=",
      "``",
      "Kim",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "city_code",
      "from",
      "student",
      "where",
      "lname",
      "=",
      "value"
    ],
    "question": "Give the city that the student whose family name is Kim lives in.",
    "question_toks": [
      "Give",
      "the",
      "city",
      "that",
      "the",
      "student",
      "whose",
      "family",
      "name",
      "is",
      "Kim",
      "lives",
      "in",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Kim\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT count(DISTINCT Software_Platform) FROM device",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Software_Platform",
      ")",
      "FROM",
      "device"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "software_platform",
      ")",
      "from",
      "device"
    ],
    "question": "Count the number of different software platforms.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "software",
      "platforms",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "roller_coaster",
    "query": "SELECT Name FROM country WHERE Languages != \"German\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "country",
      "WHERE",
      "Languages",
      "!",
      "=",
      "``",
      "German",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "country",
      "where",
      "languages",
      "!",
      "=",
      "value"
    ],
    "question": "List the names of countries whose language is not \"German\".",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "countries",
      "whose",
      "language",
      "is",
      "not",
      "``",
      "German",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"German\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT count(DISTINCT product_type_code) FROM products",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "product_type_code",
      ")",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "product_type_code",
      ")",
      "from",
      "products"
    ],
    "question": "Count the number of distinct product types.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "product",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election_representative",
    "query": "SELECT Votes FROM election ORDER BY Votes DESC",
    "query_toks": [
      "SELECT",
      "Votes",
      "FROM",
      "election",
      "ORDER",
      "BY",
      "Votes",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "votes",
      "from",
      "election",
      "order",
      "by",
      "votes",
      "desc"
    ],
    "question": "List the votes of elections in descending order.",
    "question_toks": [
      "List",
      "the",
      "votes",
      "of",
      "elections",
      "in",
      "descending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "founded",
      "FROM",
      "university",
      "WHERE",
      "affiliation",
      "!",
      "=",
      "'Public",
      "'",
      "ORDER",
      "BY",
      "founded",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "founded",
      "from",
      "university",
      "where",
      "affiliation",
      "!",
      "=",
      "value",
      "order",
      "by",
      "founded",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the founded year of the non public school that was founded most recently?",
    "question_toks": [
      "What",
      "is",
      "the",
      "founded",
      "year",
      "of",
      "the",
      "non",
      "public",
      "school",
      "that",
      "was",
      "founded",
      "most",
      "recently",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Public\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "StuID",
      ")",
      "FROM",
      "ENROLLED_IN",
      "WHERE",
      "Grade",
      "=",
      "``",
      "B",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "stuid",
      ")",
      "from",
      "enrolled_in",
      "where",
      "grade",
      "=",
      "value"
    ],
    "question": "Find the number of students that have at least one grade \"B\".",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "students",
      "that",
      "have",
      "at",
      "least",
      "one",
      "grade",
      "``",
      "B",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                35,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          "\"B\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;",
    "query_toks": [
      "SELECT",
      "salary",
      "FROM",
      "salary",
      "WHERE",
      "YEAR",
      "=",
      "2001",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "3",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "salary",
      "from",
      "salary",
      "where",
      "year",
      "=",
      "value",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "List the 3 highest salaries of the players in 2001?",
    "question_toks": [
      "List",
      "the",
      "3",
      "highest",
      "salaries",
      "of",
      "the",
      "players",
      "in",
      "2001",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            20
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                276,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              272,
              false
            ],
            null
          ],
          2001.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              276,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT count(*) FROM book_club",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "book_club"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "book_club"
    ],
    "question": "Count the number of book clubs.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "book",
      "clubs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT count(*) FROM country",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "country"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "country"
    ],
    "question": "Count the number of countries.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "countries",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2",
    "query_toks": [
      "SELECT",
      "employee_id",
      "FROM",
      "job_history",
      "GROUP",
      "BY",
      "employee_id",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      "from",
      "job_history",
      "group",
      "by",
      "employee_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the employee ids for employees who have held two or more jobs?",
    "question_toks": [
      "What",
      "are",
      "the",
      "employee",
      "ids",
      "for",
      "employees",
      "who",
      "have",
      "held",
      "two",
      "or",
      "more",
      "jobs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "ohio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "what states border the ohio river",
    "question_toks": [
      "what",
      "states",
      "border",
      "the",
      "ohio",
      "river"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"ohio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC",
    "query_toks": [
      "SELECT",
      "Product_Name",
      "FROM",
      "Products",
      "ORDER",
      "BY",
      "Product_Price",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      "from",
      "products",
      "order",
      "by",
      "product_price",
      "asc"
    ],
    "question": "List all product names in ascending order of price.",
    "question_toks": [
      "List",
      "all",
      "product",
      "names",
      "in",
      "ascending",
      "order",
      "of",
      "price",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "what states have towns named springfield",
    "question_toks": [
      "what",
      "states",
      "have",
      "towns",
      "named",
      "springfield"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT price_range FROM HOTELS",
    "query_toks": [
      "SELECT",
      "price_range",
      "FROM",
      "HOTELS"
    ],
    "query_toks_no_value": [
      "select",
      "price_range",
      "from",
      "hotels"
    ],
    "question": "What are the price ranges of hotels?",
    "question_toks": [
      "What",
      "are",
      "the",
      "price",
      "ranges",
      "of",
      "hotels",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1",
    "query_toks": [
      "SELECT",
      "Category",
      "FROM",
      "music_festival",
      "GROUP",
      "BY",
      "Category",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "category",
      "from",
      "music_festival",
      "group",
      "by",
      "category",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Please show the categories of the music festivals with count more than 1.",
    "question_toks": [
      "Please",
      "show",
      "the",
      "categories",
      "of",
      "the",
      "music",
      "festivals",
      "with",
      "count",
      "more",
      "than",
      "1",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "highest_point",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "highest_point",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "could you tell me what is the highest point in the state of texas",
    "question_toks": [
      "could",
      "you",
      "tell",
      "me",
      "what",
      "is",
      "the",
      "highest",
      "point",
      "in",
      "the",
      "state",
      "of",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT StuID FROM Student WHERE Sex  =  'M'",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "Sex",
      "=",
      "'M",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "Show student ids for all male students.",
    "question_toks": [
      "Show",
      "student",
      "ids",
      "for",
      "all",
      "male",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"guadalupe peak\";",
    "query_toks": [
      "SELECT",
      "highest_elevation",
      "FROM",
      "highlow",
      "WHERE",
      "highest_point",
      "=",
      "``",
      "guadalupe",
      "peak",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "highest_elevation",
      "from",
      "highlow",
      "where",
      "highest_point",
      "=",
      "value"
    ],
    "question": "how tall is guadalupe peak",
    "question_toks": [
      "how",
      "tall",
      "is",
      "guadalupe",
      "peak"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"guadalupe peak\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT count(*) FROM HOTELS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "HOTELS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "hotels"
    ],
    "question": "Find the total number of available hotels.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "available",
      "hotels",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT * FROM Albums WHERE YEAR  =  2010",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "Albums",
      "WHERE",
      "YEAR",
      "=",
      "2010"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "albums",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What are the albums produced in year 2010?",
    "question_toks": [
      "What",
      "are",
      "the",
      "albums",
      "produced",
      "in",
      "year",
      "2010",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Name FROM wrestler ORDER BY Days_held DESC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "wrestler",
      "ORDER",
      "BY",
      "Days_held",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wrestler",
      "order",
      "by",
      "days_held",
      "desc"
    ],
    "question": "List the names of wrestlers in descending order of days held.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "wrestlers",
      "in",
      "descending",
      "order",
      "of",
      "days",
      "held",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election_representative",
    "query": "SELECT Name FROM Representative WHERE Party != \"Republican\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "Representative",
      "WHERE",
      "Party",
      "!",
      "=",
      "``",
      "Republican",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "representative",
      "where",
      "party",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of representatives whose party is not \"Republican\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "representatives",
      "whose",
      "party",
      "is",
      "not",
      "``",
      "Republican",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Republican\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT product FROM product WHERE product LIKE \"%Scanner%\"",
    "query_toks": [
      "SELECT",
      "product",
      "FROM",
      "product",
      "WHERE",
      "product",
      "LIKE",
      "``",
      "%",
      "Scanner",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product",
      "from",
      "product",
      "where",
      "product",
      "like",
      "value"
    ],
    "question": "What are all of the products whose name includes the substring \"Scanner\"?",
    "question_toks": [
      "What",
      "are",
      "all",
      "of",
      "the",
      "products",
      "whose",
      "name",
      "includes",
      "the",
      "substring",
      "``",
      "Scanner",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Scanner%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT name FROM products WHERE price  <=  200",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "products",
      "WHERE",
      "price",
      "<",
      "=",
      "200"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "products",
      "where",
      "price",
      "<",
      "=",
      "value"
    ],
    "question": "Select the name of the products with a price less than or equal to $200.",
    "question_toks": [
      "Select",
      "the",
      "name",
      "of",
      "the",
      "products",
      "with",
      "a",
      "price",
      "less",
      "than",
      "or",
      "equal",
      "to",
      "$",
      "200",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          6,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT count(DISTINCT Company) FROM entrepreneur",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Company",
      ")",
      "FROM",
      "entrepreneur"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "company",
      ")",
      "from",
      "entrepreneur"
    ],
    "question": "Count the number of different companies.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "companies",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT * FROM election",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "election"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "election"
    ],
    "question": "Return all the information for each election record.",
    "question_toks": [
      "Return",
      "all",
      "the",
      "information",
      "for",
      "each",
      "election",
      "record",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT AVG ( population ) FROM state;",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "population",
      ")",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "population",
      ")",
      "from",
      "state"
    ],
    "question": "what is the average population of the us by state",
    "question_toks": [
      "what",
      "is",
      "the",
      "average",
      "population",
      "of",
      "the",
      "us",
      "by",
      "state"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_employee",
    "query": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "Headquarters",
      "FROM",
      "company",
      "GROUP",
      "BY",
      "Headquarters",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "headquarters",
      "from",
      "company",
      "group",
      "by",
      "headquarters",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show the headquarters that have at least two companies.",
    "question_toks": [
      "Show",
      "the",
      "headquarters",
      "that",
      "have",
      "at",
      "least",
      "two",
      "companies",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "product_name",
      "FROM",
      "products",
      "WHERE",
      "product_type_code",
      "=",
      "'Hardware",
      "'",
      "ORDER",
      "BY",
      "product_price",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      "from",
      "products",
      "where",
      "product_type_code",
      "=",
      "value",
      "order",
      "by",
      "product_price",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name of the most expensive hardware product.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "most",
      "expensive",
      "hardware",
      "product",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Hardware\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Rooms",
      "WHERE",
      "bedType",
      "=",
      "``",
      "King",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "rooms",
      "where",
      "bedtype",
      "=",
      "value"
    ],
    "question": "Find the number of rooms with a king bed.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "rooms",
      "with",
      "a",
      "king",
      "bed",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"King\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT title FROM publication WHERE YEAR  >  2000 ORDER BY citation_num DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "publication",
      "WHERE",
      "YEAR",
      ">",
      "2000",
      "ORDER",
      "BY",
      "citation_num",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "publication",
      "where",
      "year",
      ">",
      "value",
      "order",
      "by",
      "citation_num",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the paper after 2000 with the most citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "after",
      "2000",
      "with",
      "the",
      "most",
      "citations",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\"",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Domestic_Passengers",
      ")",
      "FROM",
      "airport",
      "WHERE",
      "Airport_Name",
      "LIKE",
      "``",
      "%",
      "London",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "domestic_passengers",
      ")",
      "from",
      "airport",
      "where",
      "airport_name",
      "like",
      "value"
    ],
    "question": "What are the total number of Domestic Passengers of airports that contain the word \"London\".",
    "question_toks": [
      "What",
      "are",
      "the",
      "total",
      "number",
      "of",
      "Domestic",
      "Passengers",
      "of",
      "airports",
      "that",
      "contain",
      "the",
      "word",
      "``",
      "London",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"%London%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(*) FROM scientists",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "scientists"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "scientists"
    ],
    "question": "Find the total number of scientists.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "scientists",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "blockcode",
      "FROM",
      "room",
      "WHERE",
      "unavailable",
      "=",
      "0"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "blockcode",
      "from",
      "room",
      "where",
      "unavailable",
      "=",
      "value"
    ],
    "question": "What are the unique block codes that have available rooms?",
    "question_toks": [
      "What",
      "are",
      "the",
      "unique",
      "block",
      "codes",
      "that",
      "have",
      "available",
      "rooms",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              52,
              false
            ],
            null
          ],
          0.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT LOCATION FROM gas_station ORDER BY open_year",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "gas_station",
      "ORDER",
      "BY",
      "open_year"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "gas_station",
      "order",
      "by",
      "open_year"
    ],
    "question": "order all gas station locations by the opening year.",
    "question_toks": [
      "order",
      "all",
      "gas",
      "station",
      "locations",
      "by",
      "the",
      "opening",
      "year",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT sum(gamesplayed) FROM Sportsinfo",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "gamesplayed",
      ")",
      "FROM",
      "Sportsinfo"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "gamesplayed",
      ")",
      "from",
      "sportsinfo"
    ],
    "question": "How many games are played for all students?",
    "question_toks": [
      "How",
      "many",
      "games",
      "are",
      "played",
      "for",
      "all",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT avg(Horizontal_Bar_Points) FROM gymnast",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Horizontal_Bar_Points",
      ")",
      "FROM",
      "gymnast"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "horizontal_bar_points",
      ")",
      "from",
      "gymnast"
    ],
    "question": "What is the average horizontal bar points for all gymnasts?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "horizontal",
      "bar",
      "points",
      "for",
      "all",
      "gymnasts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Starting_Year",
      "FROM",
      "technician",
      "ORDER",
      "BY",
      "Age",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "starting_year",
      "from",
      "technician",
      "order",
      "by",
      "age",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the starting year of the oldest technicians?",
    "question_toks": [
      "What",
      "is",
      "the",
      "starting",
      "year",
      "of",
      "the",
      "oldest",
      "technicians",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT lastname FROM list WHERE classroom  =  111",
    "query_toks": [
      "SELECT",
      "lastname",
      "FROM",
      "list",
      "WHERE",
      "classroom",
      "=",
      "111"
    ],
    "query_toks_no_value": [
      "select",
      "lastname",
      "from",
      "list",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "What are the last names of students in room 111?",
    "question_toks": [
      "What",
      "are",
      "the",
      "last",
      "names",
      "of",
      "students",
      "in",
      "room",
      "111",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          111.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC",
    "query_toks": [
      "SELECT",
      "Chair_Name",
      "FROM",
      "festival_detail",
      "ORDER",
      "BY",
      "YEAR",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "chair_name",
      "from",
      "festival_detail",
      "order",
      "by",
      "year",
      "asc"
    ],
    "question": "What are the names of the chairs of festivals, sorted in ascending order of the year held?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "chairs",
      "of",
      "festivals",
      ",",
      "sorted",
      "in",
      "ascending",
      "order",
      "of",
      "the",
      "year",
      "held",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
    "query_toks": [
      "SELECT",
      "Carrier",
      "FROM",
      "device",
      "WHERE",
      "Software_Platform",
      "!",
      "=",
      "'Android",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "carrier",
      "from",
      "device",
      "where",
      "software_platform",
      "!",
      "=",
      "value"
    ],
    "question": "Return the device carriers that do not have Android as their software platform.",
    "question_toks": [
      "Return",
      "the",
      "device",
      "carriers",
      "that",
      "do",
      "not",
      "have",
      "Android",
      "as",
      "their",
      "software",
      "platform",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Android\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT area FROM state WHERE state_name  =  \"new mexico\";",
    "query_toks": [
      "SELECT",
      "area",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "new",
      "mexico",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "area",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the size of new mexico",
    "question_toks": [
      "what",
      "is",
      "the",
      "size",
      "of",
      "new",
      "mexico"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"new mexico\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(DISTINCT name) FROM projects",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "projects"
    ],
    "question": "How many different projects are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "projects",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT count(DISTINCT Team) FROM match_season",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Team",
      ")",
      "FROM",
      "match_season"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "team",
      ")",
      "from",
      "match_season"
    ],
    "question": "Count the number of different teams involved in match season.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "teams",
      "involved",
      "in",
      "match",
      "season",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT name FROM media_types;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "media_types",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "media_types"
    ],
    "question": "What are the names of all the media types?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "media",
      "types",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                48,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "founded",
      "FROM",
      "university",
      "ORDER",
      "BY",
      "enrollment",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "founded",
      "from",
      "university",
      "order",
      "by",
      "enrollment",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the founded year for the school with the largest enrollment.",
    "question_toks": [
      "Return",
      "the",
      "founded",
      "year",
      "for",
      "the",
      "school",
      "with",
      "the",
      "largest",
      "enrollment",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT product FROM product WHERE product LIKE \"%Scanner%\"",
    "query_toks": [
      "SELECT",
      "product",
      "FROM",
      "product",
      "WHERE",
      "product",
      "LIKE",
      "``",
      "%",
      "Scanner",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product",
      "from",
      "product",
      "where",
      "product",
      "like",
      "value"
    ],
    "question": "Find all the product whose name contains the word \"Scanner\".",
    "question_toks": [
      "Find",
      "all",
      "the",
      "product",
      "whose",
      "name",
      "contains",
      "the",
      "word",
      "``",
      "Scanner",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Scanner%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT player FROM match_season ORDER BY College ASC",
    "query_toks": [
      "SELECT",
      "player",
      "FROM",
      "match_season",
      "ORDER",
      "BY",
      "College",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "player",
      "from",
      "match_season",
      "order",
      "by",
      "college",
      "asc"
    ],
    "question": "What are all the players who played in match season, sorted by college in ascending alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "players",
      "who",
      "played",
      "in",
      "match",
      "season",
      ",",
      "sorted",
      "by",
      "college",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\"",
    "query_toks": [
      "SELECT",
      "clubdesc",
      "FROM",
      "club",
      "WHERE",
      "clubname",
      "=",
      "``",
      "Tennis",
      "Club",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clubdesc",
      "from",
      "club",
      "where",
      "clubname",
      "=",
      "value"
    ],
    "question": "Find the description of the club called \"Tennis Club\".",
    "question_toks": [
      "Find",
      "the",
      "description",
      "of",
      "the",
      "club",
      "called",
      "``",
      "Tennis",
      "Club",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Tennis Club\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums ORDER BY title;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "ORDER",
      "BY",
      "title",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "order",
      "by",
      "title"
    ],
    "question": "What are the titles of all the albums alphabetically ascending?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "all",
      "the",
      "albums",
      "alphabetically",
      "ascending",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( DISTINCT state_name ) FROM border_info;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "state_name",
      ")",
      "FROM",
      "border_info",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "state_name",
      ")",
      "from",
      "border_info"
    ],
    "question": "how many states border at least one other state",
    "question_toks": [
      "how",
      "many",
      "states",
      "border",
      "at",
      "least",
      "one",
      "other",
      "state"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "date_from",
      "FROM",
      "Project_Staff",
      "ORDER",
      "BY",
      "date_from",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "date_from",
      "from",
      "project_staff",
      "order",
      "by",
      "date_from",
      "asc",
      "limit",
      "value"
    ],
    "question": "When did the first staff for the projects started working?",
    "question_toks": [
      "When",
      "did",
      "the",
      "first",
      "staff",
      "for",
      "the",
      "projects",
      "started",
      "working",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "physician",
      "WHERE",
      "POSITION",
      "LIKE",
      "'",
      "%",
      "senior",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "physician",
      "where",
      "position",
      "like",
      "value"
    ],
    "question": "Find the name of physicians whose position title contains the word 'senior'.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "physicians",
      "whose",
      "position",
      "title",
      "contains",
      "the",
      "word",
      "'senior",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"%senior%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "=",
      "``",
      "2008",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What are the names of all wines produced in 2008?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "wines",
      "produced",
      "in",
      "2008",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"2008\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT firstname FROM teachers WHERE classroom  =  110",
    "query_toks": [
      "SELECT",
      "firstname",
      "FROM",
      "teachers",
      "WHERE",
      "classroom",
      "=",
      "110"
    ],
    "query_toks_no_value": [
      "select",
      "firstname",
      "from",
      "teachers",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "Find the first names of all the teachers that teach in classroom 110.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "names",
      "of",
      "all",
      "the",
      "teachers",
      "that",
      "teach",
      "in",
      "classroom",
      "110",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          110.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT SUM ( area ) FROM state;",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "area",
      ")",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "area",
      ")",
      "from",
      "state"
    ],
    "question": "what is the combined area of all 50 states",
    "question_toks": [
      "what",
      "is",
      "the",
      "combined",
      "area",
      "of",
      "all",
      "50",
      "states"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "claim_outcome_code",
      ")",
      "FROM",
      "claims_processing"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "claim_outcome_code",
      ")",
      "from",
      "claims_processing"
    ],
    "question": "Count the number of distinct claim outcome codes.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "claim",
      "outcome",
      "codes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                28,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "ORDER",
      "BY",
      "distance",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "limit",
      "value"
    ],
    "question": "Show the name of aircrafts with top three lowest distances.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "of",
      "aircrafts",
      "with",
      "top",
      "three",
      "lowest",
      "distances",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT count(DISTINCT roomtype) FROM room",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "roomtype",
      ")",
      "FROM",
      "room"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "roomtype",
      ")",
      "from",
      "room"
    ],
    "question": "How many different types of rooms are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "types",
      "of",
      "rooms",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                49,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT * FROM election",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "election"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "election"
    ],
    "question": "Show all the information about election.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "information",
      "about",
      "election",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT DISTINCT name FROM genres;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "name",
      "FROM",
      "genres",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "genres"
    ],
    "question": "List all different genre types.",
    "question_toks": [
      "List",
      "all",
      "different",
      "genre",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";",
    "query_toks": [
      "SELECT",
      "lowest_point",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "iowa",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "lowest_point",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "where is the lowest point in iowa",
    "question_toks": [
      "where",
      "is",
      "the",
      "lowest",
      "point",
      "in",
      "iowa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"iowa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT StuID FROM Student WHERE age  >  20",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "age",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "What are the student ids for students over 20 years old?",
    "question_toks": [
      "What",
      "are",
      "the",
      "student",
      "ids",
      "for",
      "students",
      "over",
      "20",
      "years",
      "old",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT count(*) FROM club",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "club"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "club"
    ],
    "question": "Count the total number of clubs.",
    "question_toks": [
      "Count",
      "the",
      "total",
      "number",
      "of",
      "clubs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
    "query_toks": [
      "SELECT",
      "employee_id",
      "FROM",
      "Employees",
      "EXCEPT",
      "SELECT",
      "Destruction_Authorised_by_Employee_ID",
      "FROM",
      "Documents_to_be_destroyed"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      "from",
      "employees",
      "except",
      "select",
      "destruction_authorised_by_employee_id",
      "from",
      "documents_to_be_destroyed"
    ],
    "question": "Which employees do not authorize destruction for any document? Give me their employee ids.",
    "question_toks": [
      "Which",
      "employees",
      "do",
      "not",
      "authorize",
      "destruction",
      "for",
      "any",
      "document",
      "?",
      "Give",
      "me",
      "their",
      "employee",
      "ids",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              7
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  29,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT count(DISTINCT bedType) FROM Rooms;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "bedType",
      ")",
      "FROM",
      "Rooms",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "bedtype",
      ")",
      "from",
      "rooms"
    ],
    "question": "Find the number of distinct bed types available in this inn.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "bed",
      "types",
      "available",
      "in",
      "this",
      "inn",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "highest_point",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "highest_point",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "where is the highest point in texas",
    "question_toks": [
      "where",
      "is",
      "the",
      "highest",
      "point",
      "in",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "EMPLOYEE"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "employee"
    ],
    "question": "How many distinct cities does the employees live in?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "cities",
      "does",
      "the",
      "employees",
      "live",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                27,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT name FROM swimmer ORDER BY meter_100",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "swimmer",
      "ORDER",
      "BY",
      "meter_100"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "swimmer",
      "order",
      "by",
      "meter_100"
    ],
    "question": "Find the names of all swimmers, sorted by their 100 meter scores in ascending order.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "swimmers",
      ",",
      "sorted",
      "by",
      "their",
      "100",
      "meter",
      "scores",
      "in",
      "ascending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Staff;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Staff",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "staff"
    ],
    "question": "How many staff in total?",
    "question_toks": [
      "How",
      "many",
      "staff",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "protein_institute",
    "query": "SELECT count(*) FROM building",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "building"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "building"
    ],
    "question": "How many buildings are there?",
    "question_toks": [
      "How",
      "many",
      "buildings",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "boulder",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "how many people in boulder",
    "question_toks": [
      "how",
      "many",
      "people",
      "in",
      "boulder"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"boulder\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2",
    "query_toks": [
      "SELECT",
      "Nationality",
      "FROM",
      "ship",
      "GROUP",
      "BY",
      "Nationality",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "nationality",
      "from",
      "ship",
      "group",
      "by",
      "nationality",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the nations that have more than two ships?",
    "question_toks": [
      "What",
      "are",
      "the",
      "nations",
      "that",
      "have",
      "more",
      "than",
      "two",
      "ships",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "campuses",
      "WHERE",
      "county",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "campuses",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "How many campuses are there in Los Angeles county?",
    "question_toks": [
      "How",
      "many",
      "campuses",
      "are",
      "there",
      "in",
      "Los",
      "Angeles",
      "county",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT count(*) FROM station",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "station"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "station"
    ],
    "question": "How many train stations are there?",
    "question_toks": [
      "How",
      "many",
      "train",
      "stations",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT count(*) FROM wrestler",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "wrestler"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "wrestler"
    ],
    "question": "How many wrestlers are there?",
    "question_toks": [
      "How",
      "many",
      "wrestlers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_item_id FROM order_items WHERE product_id = 11",
    "query_toks": [
      "SELECT",
      "order_item_id",
      "FROM",
      "order_items",
      "WHERE",
      "product_id",
      "=",
      "11"
    ],
    "query_toks_no_value": [
      "select",
      "order_item_id",
      "from",
      "order_items",
      "where",
      "product_id",
      "=",
      "value"
    ],
    "question": "Find all the order items whose product id is 11. What are the order item ids?",
    "question_toks": [
      "Find",
      "all",
      "the",
      "order",
      "items",
      "whose",
      "product",
      "id",
      "is",
      "11",
      ".",
      "What",
      "are",
      "the",
      "order",
      "item",
      "ids",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          11.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT DISTINCT location_code FROM Document_locations",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "location_code",
      "FROM",
      "Document_locations"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "location_code",
      "from",
      "document_locations"
    ],
    "question": "Give me all the distinct location codes for documents.",
    "question_toks": [
      "Give",
      "me",
      "all",
      "the",
      "distinct",
      "location",
      "codes",
      "for",
      "documents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC",
    "query_toks": [
      "SELECT",
      "Product_Name",
      "FROM",
      "Products",
      "ORDER",
      "BY",
      "Product_Price",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      "from",
      "products",
      "order",
      "by",
      "product_price",
      "asc"
    ],
    "question": "Sort the names of products in ascending order of their price.",
    "question_toks": [
      "Sort",
      "the",
      "names",
      "of",
      "products",
      "in",
      "ascending",
      "order",
      "of",
      "their",
      "price",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT release_year FROM movie WHERE title  =  \"The Imitation Game\";",
    "query_toks": [
      "SELECT",
      "release_year",
      "FROM",
      "movie",
      "WHERE",
      "title",
      "=",
      "``",
      "The",
      "Imitation",
      "Game",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "release_year",
      "from",
      "movie",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "What year was the movie \" The Imitation Game \" produced",
    "question_toks": [
      "What",
      "year",
      "was",
      "the",
      "movie",
      "``",
      "The",
      "Imitation",
      "Game",
      "``",
      "produced"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                44,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"The Imitation Game\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT count(*) FROM event",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "event"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "event"
    ],
    "question": "How many events are there?",
    "question_toks": [
      "How",
      "many",
      "events",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "small_bank_1",
    "query": "SELECT avg(balance) FROM checking",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "balance",
      ")",
      "FROM",
      "checking"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "balance",
      ")",
      "from",
      "checking"
    ],
    "question": "Find the average checking balance.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "checking",
      "balance",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\"",
    "query_toks": [
      "SELECT",
      "customer_details",
      "FROM",
      "customers",
      "WHERE",
      "customer_details",
      "LIKE",
      "``",
      "%",
      "Diana",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_details",
      "from",
      "customers",
      "where",
      "customer_details",
      "like",
      "value"
    ],
    "question": "Which customers have the substring \"Diana\" in their names? Return the customer details.",
    "question_toks": [
      "Which",
      "customers",
      "have",
      "the",
      "substring",
      "``",
      "Diana",
      "''",
      "in",
      "their",
      "names",
      "?",
      "Return",
      "the",
      "customer",
      "details",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Diana%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "solvency_ii",
    "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC",
    "query_toks": [
      "SELECT",
      "Product_Name",
      "FROM",
      "Products",
      "ORDER",
      "BY",
      "Product_Price",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      "from",
      "products",
      "order",
      "by",
      "product_price",
      "asc"
    ],
    "question": "List the name of products in ascending order of price.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "products",
      "in",
      "ascending",
      "order",
      "of",
      "price",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE department_id  =  \"null\"",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "department_id",
      "=",
      "``",
      "null",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "department_id",
      "=",
      "value"
    ],
    "question": "What are all the employees without a department number?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "employees",
      "without",
      "a",
      "department",
      "number",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"null\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT avg(Age) FROM artist",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Age",
      ")",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "artist"
    ],
    "question": "What is the average age of all artists?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "age",
      "of",
      "all",
      "artists",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT YEAR FROM publication WHERE title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "YEAR",
      "FROM",
      "publication",
      "WHERE",
      "title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "year",
      "from",
      "publication",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "return me the year of \" Making database systems usable \"",
    "question_toks": [
      "return",
      "me",
      "the",
      "year",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_injury",
    "query": "SELECT count(*) FROM game WHERE season  >  2007",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "game",
      "WHERE",
      "season",
      ">",
      "2007"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "game",
      "where",
      "season",
      ">",
      "value"
    ],
    "question": "How many games are held after season 2007?",
    "question_toks": [
      "How",
      "many",
      "games",
      "are",
      "held",
      "after",
      "season",
      "2007",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          2007.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT Name FROM pilot ORDER BY Age DESC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "pilot",
      "ORDER",
      "BY",
      "Age",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "pilot",
      "order",
      "by",
      "age",
      "desc"
    ],
    "question": "List names of all pilot in descending order of age.",
    "question_toks": [
      "List",
      "names",
      "of",
      "all",
      "pilot",
      "in",
      "descending",
      "order",
      "of",
      "age",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
    "query_toks": [
      "SELECT",
      "organization_name",
      "FROM",
      "organizations",
      "ORDER",
      "BY",
      "date_formed",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "organization_name",
      "from",
      "organizations",
      "order",
      "by",
      "date_formed",
      "asc"
    ],
    "question": "What are the names of organizations, ordered by the date they were formed, ascending?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "organizations",
      ",",
      "ordered",
      "by",
      "the",
      "date",
      "they",
      "were",
      "formed",
      ",",
      "ascending",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "hire_date",
      "<",
      "'2002-06-21",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "hire_date",
      "<",
      "value"
    ],
    "question": "display all the details from Employees table for those employees who was hired before 2002-06-21.",
    "question_toks": [
      "display",
      "all",
      "the",
      "details",
      "from",
      "Employees",
      "table",
      "for",
      "those",
      "employees",
      "who",
      "was",
      "hired",
      "before",
      "2002-06-21",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"2002-06-21\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT avg(hours) FROM projects",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "hours",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "hours",
      ")",
      "from",
      "projects"
    ],
    "question": "Find the average hours of all projects.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "hours",
      "of",
      "all",
      "projects",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT count(*) FROM country",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "country"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "country"
    ],
    "question": "How many countries are there in total?",
    "question_toks": [
      "How",
      "many",
      "countries",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(DISTINCT pPos) FROM tryout",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "pPos",
      ")",
      "FROM",
      "tryout"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "ppos",
      ")",
      "from",
      "tryout"
    ],
    "question": "What are the different types of player positions?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "types",
      "of",
      "player",
      "positions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate",
    "query_toks": [
      "SELECT",
      "eid",
      "FROM",
      "Employee",
      "EXCEPT",
      "SELECT",
      "eid",
      "FROM",
      "Certificate"
    ],
    "query_toks_no_value": [
      "select",
      "eid",
      "from",
      "employee",
      "except",
      "select",
      "eid",
      "from",
      "certificate"
    ],
    "question": "What are the ids of all employees that don't have certificates?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "employees",
      "that",
      "do",
      "n't",
      "have",
      "certificates",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              3
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  15,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "headquarters",
      "FROM",
      "company",
      "WHERE",
      "main_industry",
      "=",
      "'Banking",
      "'",
      "GROUP",
      "BY",
      "headquarters",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "headquarters",
      "from",
      "company",
      "where",
      "main_industry",
      "=",
      "value",
      "group",
      "by",
      "headquarters",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the headquarters with at least two companies in the banking industry?",
    "question_toks": [
      "What",
      "are",
      "the",
      "headquarters",
      "with",
      "at",
      "least",
      "two",
      "companies",
      "in",
      "the",
      "banking",
      "industry",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Banking\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT keyword ) FROM keyword;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "keyword",
      ")",
      "FROM",
      "keyword",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "keyword",
      ")",
      "from",
      "keyword"
    ],
    "question": "return me the number of keywords .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "keywords",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT count(DISTINCT rank) FROM captain",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "rank",
      ")",
      "FROM",
      "captain"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "rank",
      ")",
      "from",
      "captain"
    ],
    "question": "Count the number of different ranks of captain.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "ranks",
      "of",
      "captain",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_management",
    "query": "SELECT count(*) FROM head WHERE age  >  56",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "head",
      "WHERE",
      "age",
      ">",
      "56"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "head",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "How many heads of the departments are older than 56 ?",
    "question_toks": [
      "How",
      "many",
      "heads",
      "of",
      "the",
      "departments",
      "are",
      "older",
      "than",
      "56",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          56.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC",
    "query_toks": [
      "SELECT",
      "team_name",
      "FROM",
      "basketball_match",
      "ORDER",
      "BY",
      "All_Home",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "team_name",
      "from",
      "basketball_match",
      "order",
      "by",
      "all_home",
      "desc"
    ],
    "question": "List names of all teams in the basketball competition, ordered by all home scores in descending order.",
    "question_toks": [
      "List",
      "names",
      "of",
      "all",
      "teams",
      "in",
      "the",
      "basketball",
      "competition",
      ",",
      "ordered",
      "by",
      "all",
      "home",
      "scores",
      "in",
      "descending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Working_Horses",
      ")",
      "FROM",
      "farm",
      "WHERE",
      "Total_Horses",
      ">",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "working_horses",
      ")",
      "from",
      "farm",
      "where",
      "total_horses",
      ">",
      "value"
    ],
    "question": "Give the average number of working horses on farms with more than 5000 total horses.",
    "question_toks": [
      "Give",
      "the",
      "average",
      "number",
      "of",
      "working",
      "horses",
      "on",
      "farms",
      "with",
      "more",
      "than",
      "5000",
      "total",
      "horses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          5000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "stadium",
      "ORDER",
      "BY",
      "capacity",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "stadium",
      "order",
      "by",
      "capacity",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name of the stadium that has the maximum capacity.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "stadium",
      "that",
      "has",
      "the",
      "maximum",
      "capacity",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers"
    ],
    "question": "Find the name of all customers.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "all",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4",
    "query_toks": [
      "SELECT",
      "Winery",
      "FROM",
      "WINE",
      "GROUP",
      "BY",
      "Winery",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "4"
    ],
    "query_toks_no_value": [
      "select",
      "winery",
      "from",
      "wine",
      "group",
      "by",
      "winery",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Find the wineries that have at least four wines.",
    "question_toks": [
      "Find",
      "the",
      "wineries",
      "that",
      "have",
      "at",
      "least",
      "four",
      "wines",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "characteristic_name",
      "FROM",
      "CHARACTERISTICS"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "characteristic_name",
      "from",
      "characteristics"
    ],
    "question": "Find the names of all the product characteristics.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "the",
      "product",
      "characteristics",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\"",
    "query_toks": [
      "SELECT",
      "Official_native_language",
      "FROM",
      "country",
      "WHERE",
      "Official_native_language",
      "LIKE",
      "``",
      "%",
      "English",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "official_native_language",
      "from",
      "country",
      "where",
      "official_native_language",
      "like",
      "value"
    ],
    "question": "Show all official native languages that contain the word \"English\".",
    "question_toks": [
      "Show",
      "all",
      "official",
      "native",
      "languages",
      "that",
      "contain",
      "the",
      "word",
      "``",
      "English",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%English%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";",
    "query_toks": [
      "SELECT",
      "LENGTH",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "rio",
      "grande",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "length",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "what is the length of the rio grande river",
    "question_toks": [
      "what",
      "is",
      "the",
      "length",
      "of",
      "the",
      "rio",
      "grande",
      "river"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"rio grande\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT count(*) FROM BOOKINGS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "BOOKINGS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "bookings"
    ],
    "question": "How many bookings do we have?",
    "question_toks": [
      "How",
      "many",
      "bookings",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Name FROM ARTIST WHERE Name LIKE \"%a%\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "ARTIST",
      "WHERE",
      "Name",
      "LIKE",
      "``",
      "%",
      "a",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "artist",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "What are the names of artist who have the letter 'a' in their names?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "artist",
      "who",
      "have",
      "the",
      "letter",
      "'a",
      "'",
      "in",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"%a%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT state FROM park GROUP BY state HAVING count(*)  >  2;",
    "query_toks": [
      "SELECT",
      "state",
      "FROM",
      "park",
      "GROUP",
      "BY",
      "state",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state",
      "from",
      "park",
      "group",
      "by",
      "state",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "List the names of states that have more than 2 parks.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "states",
      "that",
      "have",
      "more",
      "than",
      "2",
      "parks",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            17
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                210,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          210,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT avg(International_Passengers) FROM airport",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "International_Passengers",
      ")",
      "FROM",
      "airport"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "international_passengers",
      ")",
      "from",
      "airport"
    ],
    "question": "What is the average number of international passengers of all airports?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "international",
      "passengers",
      "of",
      "all",
      "airports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"guadalupe peak\";",
    "query_toks": [
      "SELECT",
      "highest_elevation",
      "FROM",
      "highlow",
      "WHERE",
      "highest_point",
      "=",
      "``",
      "guadalupe",
      "peak",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "highest_elevation",
      "from",
      "highlow",
      "where",
      "highest_point",
      "=",
      "value"
    ],
    "question": "how high is guadalupe peak",
    "question_toks": [
      "how",
      "high",
      "is",
      "guadalupe",
      "peak"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"guadalupe peak\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"",
    "query_toks": [
      "SELECT",
      "Other_Details",
      "FROM",
      "LOCATIONS",
      "WHERE",
      "Location_Name",
      "=",
      "``",
      "UK",
      "Gallery",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "other_details",
      "from",
      "locations",
      "where",
      "location_name",
      "=",
      "value"
    ],
    "question": "Return the detail of the location named \"UK Gallery\".",
    "question_toks": [
      "Return",
      "the",
      "detail",
      "of",
      "the",
      "location",
      "named",
      "``",
      "UK",
      "Gallery",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"UK Gallery\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1",
    "query_toks": [
      "SELECT",
      "Denomination",
      "FROM",
      "school",
      "GROUP",
      "BY",
      "Denomination",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "denomination",
      "from",
      "school",
      "group",
      "by",
      "denomination",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Show the denomination shared by more than one school.",
    "question_toks": [
      "Show",
      "the",
      "denomination",
      "shared",
      "by",
      "more",
      "than",
      "one",
      "school",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\"",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "documents",
      "WHERE",
      "document_name",
      "=",
      "``",
      "David",
      "CV",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "documents",
      "where",
      "document_name",
      "=",
      "value"
    ],
    "question": "What is the type of the document named \"David CV\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "type",
      "of",
      "the",
      "document",
      "named",
      "``",
      "David",
      "CV",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"David CV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "candidate_id",
      "FROM",
      "candidate_assessments",
      "ORDER",
      "BY",
      "assessment_date",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "candidate_id",
      "from",
      "candidate_assessments",
      "order",
      "by",
      "assessment_date",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find id of the candidate who most recently accessed the course?",
    "question_toks": [
      "Find",
      "id",
      "of",
      "the",
      "candidate",
      "who",
      "most",
      "recently",
      "accessed",
      "the",
      "course",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Order_Date FROM BOOKINGS",
    "query_toks": [
      "SELECT",
      "Order_Date",
      "FROM",
      "BOOKINGS"
    ],
    "query_toks_no_value": [
      "select",
      "order_date",
      "from",
      "bookings"
    ],
    "question": "What is the order date of each booking?",
    "question_toks": [
      "What",
      "is",
      "the",
      "order",
      "date",
      "of",
      "each",
      "booking",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "body_builder",
    "query": "SELECT Birth_Date FROM People ORDER BY Height ASC",
    "query_toks": [
      "SELECT",
      "Birth_Date",
      "FROM",
      "People",
      "ORDER",
      "BY",
      "Height",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "birth_date",
      "from",
      "people",
      "order",
      "by",
      "height",
      "asc"
    ],
    "question": "What are the birthdays of people in ascending order of height?",
    "question_toks": [
      "What",
      "are",
      "the",
      "birthdays",
      "of",
      "people",
      "in",
      "ascending",
      "order",
      "of",
      "height",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\"",
    "query_toks": [
      "SELECT",
      "customer_id",
      "FROM",
      "customers",
      "WHERE",
      "customer_name",
      "LIKE",
      "``",
      "%",
      "Diana",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      "from",
      "customers",
      "where",
      "customer_name",
      "like",
      "value"
    ],
    "question": "Find the IDs of customers whose name contains \"Diana\".",
    "question_toks": [
      "Find",
      "the",
      "IDs",
      "of",
      "customers",
      "whose",
      "name",
      "contains",
      "``",
      "Diana",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Diana%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"East\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Police_force",
      "FROM",
      "county_public_safety",
      "WHERE",
      "LOCATION",
      "!",
      "=",
      "``",
      "East",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "police_force",
      "from",
      "county_public_safety",
      "where",
      "location",
      "!",
      "=",
      "value"
    ],
    "question": "List the distinct police forces of counties whose location is not on east side.",
    "question_toks": [
      "List",
      "the",
      "distinct",
      "police",
      "forces",
      "of",
      "counties",
      "whose",
      "location",
      "is",
      "not",
      "on",
      "east",
      "side",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"East\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";",
    "query_toks": [
      "SELECT",
      "highest_elevation",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "delaware",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "highest_elevation",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how high is the highest point in delaware",
    "question_toks": [
      "how",
      "high",
      "is",
      "the",
      "highest",
      "point",
      "in",
      "delaware"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"delaware\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT Country FROM market ORDER BY Number_cities DESC",
    "query_toks": [
      "SELECT",
      "Country",
      "FROM",
      "market",
      "ORDER",
      "BY",
      "Number_cities",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "market",
      "order",
      "by",
      "number_cities",
      "desc"
    ],
    "question": "What are the countries for each market ordered by decreasing number of cities?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "for",
      "each",
      "market",
      "ordered",
      "by",
      "decreasing",
      "number",
      "of",
      "cities",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "product_name",
      "FROM",
      "products",
      "WHERE",
      "product_type_code",
      "=",
      "'Hardware",
      "'",
      "ORDER",
      "BY",
      "product_price",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      "from",
      "products",
      "where",
      "product_type_code",
      "=",
      "value",
      "order",
      "by",
      "product_price",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the hardware product with the greatest price?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "hardware",
      "product",
      "with",
      "the",
      "greatest",
      "price",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Hardware\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT count(*) FROM student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student"
    ],
    "question": "How many students are there?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "boulder",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "number of citizens in boulder",
    "question_toks": [
      "number",
      "of",
      "citizens",
      "in",
      "boulder"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"boulder\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT count(DISTINCT city) FROM bank",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "bank"
    ],
    "question": "In how many different cities are banks located?",
    "question_toks": [
      "In",
      "how",
      "many",
      "different",
      "cities",
      "are",
      "banks",
      "located",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT dept_address FROM department WHERE dept_name  =  'History'",
    "query_toks": [
      "SELECT",
      "dept_address",
      "FROM",
      "department",
      "WHERE",
      "dept_name",
      "=",
      "'History",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "dept_address",
      "from",
      "department",
      "where",
      "dept_name",
      "=",
      "value"
    ],
    "question": "Where is the history department?",
    "question_toks": [
      "Where",
      "is",
      "the",
      "history",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"History\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT count(*) FROM program",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "program"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "program"
    ],
    "question": "Count the number of programs.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "programs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "railway",
    "query": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC",
    "query_toks": [
      "SELECT",
      "Working_year_starts",
      "FROM",
      "manager",
      "ORDER",
      "BY",
      "LEVEL",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "working_year_starts",
      "from",
      "manager",
      "order",
      "by",
      "level",
      "desc"
    ],
    "question": "Show the working years of managers in descending order of their level.",
    "question_toks": [
      "Show",
      "the",
      "working",
      "years",
      "of",
      "managers",
      "in",
      "descending",
      "order",
      "of",
      "their",
      "level",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM Ref_calendar",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_calendar"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_calendar"
    ],
    "question": "How many calendar items do we have?",
    "question_toks": [
      "How",
      "many",
      "calendar",
      "items",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT count(DISTINCT i_id) FROM review",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "i_id",
      ")",
      "FROM",
      "review"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "i_id",
      ")",
      "from",
      "review"
    ],
    "question": "How many different items were reviewed by some users?",
    "question_toks": [
      "How",
      "many",
      "different",
      "items",
      "were",
      "reviewed",
      "by",
      "some",
      "users",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\"",
    "query_toks": [
      "SELECT",
      "Enrollment",
      "FROM",
      "school",
      "WHERE",
      "Denomination",
      "!",
      "=",
      "``",
      "Catholic",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "enrollment",
      "from",
      "school",
      "where",
      "denomination",
      "!",
      "=",
      "value"
    ],
    "question": "What are the enrollments of schools whose denomination is not \"Catholic\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "enrollments",
      "of",
      "schools",
      "whose",
      "denomination",
      "is",
      "not",
      "``",
      "Catholic",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Catholic\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT citation_num FROM publication WHERE title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "citation_num",
      "FROM",
      "publication",
      "WHERE",
      "title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "citation_num",
      "from",
      "publication",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "return me the citations of \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "citations",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Product_Name",
      "FROM",
      "PRODUCTS",
      "ORDER",
      "BY",
      "Product_Price",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      "from",
      "products",
      "order",
      "by",
      "product_price",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the most expensive product?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "most",
      "expensive",
      "product",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT count(DISTINCT OWNER) FROM channel",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "OWNER",
      ")",
      "FROM",
      "channel"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "owner",
      ")",
      "from",
      "channel"
    ],
    "question": "what is the number of different channel owners?",
    "question_toks": [
      "what",
      "is",
      "the",
      "number",
      "of",
      "different",
      "channel",
      "owners",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
    "query_toks": [
      "SELECT",
      "employee_id",
      "FROM",
      "Employees",
      "EXCEPT",
      "SELECT",
      "Destroyed_by_Employee_ID",
      "FROM",
      "Documents_to_be_destroyed"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      "from",
      "employees",
      "except",
      "select",
      "destroyed_by_employee_id",
      "from",
      "documents_to_be_destroyed"
    ],
    "question": "Show the ids of all employees who don't destroy any document.",
    "question_toks": [
      "Show",
      "the",
      "ids",
      "of",
      "all",
      "employees",
      "who",
      "do",
      "n't",
      "destroy",
      "any",
      "document",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              7
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  30,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "other_hotel_details",
      "FROM",
      "HOTELS",
      "ORDER",
      "BY",
      "price_range",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "other_hotel_details",
      "from",
      "hotels",
      "order",
      "by",
      "price_range",
      "desc",
      "limit",
      "value"
    ],
    "question": "Show the details of the top 3 most expensive hotels.",
    "question_toks": [
      "Show",
      "the",
      "details",
      "of",
      "the",
      "top",
      "3",
      "most",
      "expensive",
      "hotels",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT DISTINCT Visit_Date FROM VISITS",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Visit_Date",
      "FROM",
      "VISITS"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "visit_date",
      "from",
      "visits"
    ],
    "question": "Find all the distinct visit dates.",
    "question_toks": [
      "Find",
      "all",
      "the",
      "distinct",
      "visit",
      "dates",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT Name FROM technician WHERE Team != \"NYY\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "technician",
      "WHERE",
      "Team",
      "!",
      "=",
      "``",
      "NYY",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "technician",
      "where",
      "team",
      "!",
      "=",
      "value"
    ],
    "question": "What is the name of the technician whose team is not 'NYY'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "technician",
      "whose",
      "team",
      "is",
      "not",
      "'NYY",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"NYY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT i_id FROM item WHERE title  =  \"orange\"",
    "query_toks": [
      "SELECT",
      "i_id",
      "FROM",
      "item",
      "WHERE",
      "title",
      "=",
      "``",
      "orange",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "i_id",
      "from",
      "item",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "Find the id of the item whose title is \"orange\".",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "item",
      "whose",
      "title",
      "is",
      "``",
      "orange",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"orange\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM CHARACTERISTICS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CHARACTERISTICS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "characteristics"
    ],
    "question": "How many characteristics are there?",
    "question_toks": [
      "How",
      "many",
      "characteristics",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "film",
      "WHERE",
      "special_features",
      "LIKE",
      "'",
      "%",
      "Deleted",
      "Scenes",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "film",
      "where",
      "special_features",
      "like",
      "value"
    ],
    "question": "Return the titles of films that include 'Deleted Scenes' in their special feature section.",
    "question_toks": [
      "Return",
      "the",
      "titles",
      "of",
      "films",
      "that",
      "include",
      "'Deleted",
      "Scenes",
      "'",
      "in",
      "their",
      "special",
      "feature",
      "section",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"%Deleted Scenes%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT DISTINCT publisher FROM book_club",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "publisher",
      "FROM",
      "book_club"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "publisher",
      "from",
      "book_club"
    ],
    "question": "What are all the different book publishers?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "different",
      "book",
      "publishers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name",
    "query_toks": [
      "SELECT",
      "amenity_name",
      "FROM",
      "dorm_amenity",
      "ORDER",
      "BY",
      "amenity_name"
    ],
    "query_toks_no_value": [
      "select",
      "amenity_name",
      "from",
      "dorm_amenity",
      "order",
      "by",
      "amenity_name"
    ],
    "question": "List in alphabetic order all different amenities.",
    "question_toks": [
      "List",
      "in",
      "alphabetic",
      "order",
      "all",
      "different",
      "amenities",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "student_course_attendance",
      "WHERE",
      "course_id",
      "=",
      "301"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "value"
    ],
    "question": "What are the ids of the students who registered for course 301?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "the",
      "students",
      "who",
      "registered",
      "for",
      "course",
      "301",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          301.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM College WHERE enr  >  15000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "College",
      "WHERE",
      "enr",
      ">",
      "15000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "college",
      "where",
      "enr",
      ">",
      "value"
    ],
    "question": "What is the number of colleges with a student population greater than 15000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "colleges",
      "with",
      "a",
      "student",
      "population",
      "greater",
      "than",
      "15000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          15000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT SUM ( area ) FROM state;",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "area",
      ")",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "area",
      ")",
      "from",
      "state"
    ],
    "question": "how many square kilometers in the us",
    "question_toks": [
      "how",
      "many",
      "square",
      "kilometers",
      "in",
      "the",
      "us"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\"",
    "query_toks": [
      "SELECT",
      "customer_phone",
      "FROM",
      "available_policies",
      "WHERE",
      "policy_type_code",
      "=",
      "``",
      "Life",
      "Insurance",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      "from",
      "available_policies",
      "where",
      "policy_type_code",
      "=",
      "value"
    ],
    "question": "What are the phone numbers of customers using the policy with the code \"Life Insurance\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "phone",
      "numbers",
      "of",
      "customers",
      "using",
      "the",
      "policy",
      "with",
      "the",
      "code",
      "``",
      "Life",
      "Insurance",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Life Insurance\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5",
    "query_toks": [
      "SELECT",
      "Competition_type",
      "FROM",
      "competition",
      "GROUP",
      "BY",
      "Competition_type",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      "<",
      "=",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "competition_type",
      "from",
      "competition",
      "group",
      "by",
      "competition_type",
      "having",
      "count",
      "(",
      "*",
      ")",
      "<",
      "=",
      "value"
    ],
    "question": "What are the types of competition that have most 5 competitions for that type?",
    "question_toks": [
      "What",
      "are",
      "the",
      "types",
      "of",
      "competition",
      "that",
      "have",
      "most",
      "5",
      "competitions",
      "for",
      "that",
      "type",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          21,
          false
        ]
      ],
      "having": [
        [
          false,
          6,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE state = \"CA\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "state",
      "=",
      "``",
      "CA",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "How many customers in state of CA?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "in",
      "state",
      "of",
      "CA",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"CA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers"
    ],
    "question": "What are the names of all the customers?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "customers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT DISTINCT city FROM addresses",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "city",
      "FROM",
      "addresses"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "city",
      "from",
      "addresses"
    ],
    "question": "Retrieve the list of all cities.",
    "question_toks": [
      "Retrieve",
      "the",
      "list",
      "of",
      "all",
      "cities",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\"",
    "query_toks": [
      "SELECT",
      "budget_type_description",
      "FROM",
      "Ref_budget_codes",
      "WHERE",
      "budget_type_code",
      "=",
      "``",
      "ORG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "budget_type_description",
      "from",
      "ref_budget_codes",
      "where",
      "budget_type_code",
      "=",
      "value"
    ],
    "question": "Return the description of the budget type that has the code ORG.",
    "question_toks": [
      "Return",
      "the",
      "description",
      "of",
      "the",
      "budget",
      "type",
      "that",
      "has",
      "the",
      "code",
      "ORG",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ORG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "illinois",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "which rivers flow through illinois",
    "question_toks": [
      "which",
      "rivers",
      "flow",
      "through",
      "illinois"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"illinois\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "person",
      "EXCEPT",
      "SELECT",
      "name",
      "FROM",
      "PersonFriend"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "person",
      "except",
      "select",
      "name",
      "from",
      "personfriend"
    ],
    "question": "What are the names of all people who do not have friends?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "people",
      "who",
      "do",
      "not",
      "have",
      "friends",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  6,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT name FROM club ORDER BY name DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "club",
      "ORDER",
      "BY",
      "name",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "club",
      "order",
      "by",
      "name",
      "desc"
    ],
    "question": "What are the names of all the clubs ordered in descending alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "clubs",
      "ordered",
      "in",
      "descending",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(DISTINCT s_id) FROM advisor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "s_id",
      ")",
      "FROM",
      "advisor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "s_id",
      ")",
      "from",
      "advisor"
    ],
    "question": "Count the number of students who have advisors.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "students",
      "who",
      "have",
      "advisors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                37,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\"",
    "query_toks": [
      "SELECT",
      "building_full_name",
      "FROM",
      "Apartment_Buildings",
      "WHERE",
      "building_full_name",
      "LIKE",
      "``",
      "%",
      "court",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "building_full_name",
      "from",
      "apartment_buildings",
      "where",
      "building_full_name",
      "like",
      "value"
    ],
    "question": "Find all the building full names containing the word \"court\".",
    "question_toks": [
      "Find",
      "all",
      "the",
      "building",
      "full",
      "names",
      "containing",
      "the",
      "word",
      "``",
      "court",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"%court%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\"",
    "query_toks": [
      "SELECT",
      "customer_id",
      "FROM",
      "customers",
      "WHERE",
      "customer_name",
      "LIKE",
      "``",
      "%",
      "Diana",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      "from",
      "customers",
      "where",
      "customer_name",
      "like",
      "value"
    ],
    "question": "What are the IDs of customers who have \"Diana\" in part of their names?",
    "question_toks": [
      "What",
      "are",
      "the",
      "IDs",
      "of",
      "customers",
      "who",
      "have",
      "``",
      "Diana",
      "''",
      "in",
      "part",
      "of",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Diana%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT count(*) FROM medicine WHERE FDA_approved  =  'No'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "medicine",
      "WHERE",
      "FDA_approved",
      "=",
      "'No",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "medicine",
      "where",
      "fda_approved",
      "=",
      "value"
    ],
    "question": "How many medicines were not approved by the FDA?",
    "question_toks": [
      "How",
      "many",
      "medicines",
      "were",
      "not",
      "approved",
      "by",
      "the",
      "FDA",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"No\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\"",
    "query_toks": [
      "SELECT",
      "document_type_description",
      "FROM",
      "Ref_document_types",
      "WHERE",
      "document_type_name",
      "=",
      "``",
      "Film",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_description",
      "from",
      "ref_document_types",
      "where",
      "document_type_name",
      "=",
      "value"
    ],
    "question": "What is the document type description for document type named Film?",
    "question_toks": [
      "What",
      "is",
      "the",
      "document",
      "type",
      "description",
      "for",
      "document",
      "type",
      "named",
      "Film",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Film\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(DISTINCT gtype) FROM Video_games",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "gtype",
      ")",
      "FROM",
      "Video_games"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "gtype",
      ")",
      "from",
      "video_games"
    ],
    "question": "How many video game types exist?",
    "question_toks": [
      "How",
      "many",
      "video",
      "game",
      "types",
      "exist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT draft_details FROM Document_Drafts WHERE document_id = 7;",
    "query_toks": [
      "SELECT",
      "draft_details",
      "FROM",
      "Document_Drafts",
      "WHERE",
      "document_id",
      "=",
      "7",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "draft_details",
      "from",
      "document_drafts",
      "where",
      "document_id",
      "=",
      "value"
    ],
    "question": "What is draft detail of the document with id 7?",
    "question_toks": [
      "What",
      "is",
      "draft",
      "detail",
      "of",
      "the",
      "document",
      "with",
      "id",
      "7",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          7.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT count(*) FROM architect WHERE gender  =  'female'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "architect",
      "WHERE",
      "gender",
      "=",
      "'female",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "architect",
      "where",
      "gender",
      "=",
      "value"
    ],
    "question": "How many architects are female?",
    "question_toks": [
      "How",
      "many",
      "architects",
      "are",
      "female",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"female\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT city_name FROM city WHERE population  >  150000;",
    "query_toks": [
      "SELECT",
      "city_name",
      "FROM",
      "city",
      "WHERE",
      "population",
      ">",
      "150000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "city_name",
      "from",
      "city",
      "where",
      "population",
      ">",
      "value"
    ],
    "question": "what are the major cities of the united states",
    "question_toks": [
      "what",
      "are",
      "the",
      "major",
      "cities",
      "of",
      "the",
      "united",
      "states"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          150000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  103",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "grade",
      "FROM",
      "list",
      "WHERE",
      "classroom",
      "=",
      "103"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "grade",
      "from",
      "list",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "Which grade is studying in classroom 103?",
    "question_toks": [
      "Which",
      "grade",
      "is",
      "studying",
      "in",
      "classroom",
      "103",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          103.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "boulder",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "what is the population in boulder",
    "question_toks": [
      "what",
      "is",
      "the",
      "population",
      "in",
      "boulder"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"boulder\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(DISTINCT job) FROM Person",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "job",
      ")",
      "FROM",
      "Person"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "job",
      ")",
      "from",
      "person"
    ],
    "question": "How many different jobs are listed?",
    "question_toks": [
      "How",
      "many",
      "different",
      "jobs",
      "are",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "course_id",
      ")",
      "FROM",
      "course",
      "WHERE",
      "dept_name",
      "=",
      "'Physics",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "course_id",
      ")",
      "from",
      "course",
      "where",
      "dept_name",
      "=",
      "value"
    ],
    "question": "Count the number of courses in the Physics department.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "courses",
      "in",
      "the",
      "Physics",
      "department",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Physics\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "course",
      "GROUP",
      "BY",
      "title",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "course",
      "group",
      "by",
      "title",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the titles of courses that are offered in more than one department?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "courses",
      "that",
      "are",
      "offered",
      "in",
      "more",
      "than",
      "one",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC",
    "query_toks": [
      "SELECT",
      "College",
      "FROM",
      "match_season",
      "GROUP",
      "BY",
      "College",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2",
      "ORDER",
      "BY",
      "College",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "college",
      "from",
      "match_season",
      "group",
      "by",
      "college",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value",
      "order",
      "by",
      "college",
      "desc"
    ],
    "question": "What are the names of colleges that have two or more players, listed in descending alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "colleges",
      "that",
      "have",
      "two",
      "or",
      "more",
      "players",
      ",",
      "listed",
      "in",
      "descending",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3",
    "query_toks": [
      "SELECT",
      "attribute_data_type",
      "FROM",
      "Attribute_Definitions",
      "GROUP",
      "BY",
      "attribute_data_type",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "attribute_data_type",
      "from",
      "attribute_definitions",
      "group",
      "by",
      "attribute_data_type",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the list of attribute data types possessed by more than 3 attribute definitions.",
    "question_toks": [
      "Find",
      "the",
      "list",
      "of",
      "attribute",
      "data",
      "types",
      "possessed",
      "by",
      "more",
      "than",
      "3",
      "attribute",
      "definitions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM tryout WHERE decision  =  'yes'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "tryout",
      "WHERE",
      "decision",
      "=",
      "'yes",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tryout",
      "where",
      "decision",
      "=",
      "value"
    ],
    "question": "How many students got accepted after the tryout?",
    "question_toks": [
      "How",
      "many",
      "students",
      "got",
      "accepted",
      "after",
      "the",
      "tryout",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"yes\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "small_bank_1",
    "query": "SELECT count(*) FROM accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts"
    ],
    "question": "Count the number of accounts.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "accounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1",
    "query_toks": [
      "SELECT",
      "Country",
      "FROM",
      "mountain",
      "GROUP",
      "BY",
      "Country",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "mountain",
      "group",
      "by",
      "country",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which countries have more than one mountain?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "more",
      "than",
      "one",
      "mountain",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT count(*) FROM enzyme",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "enzyme"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "enzyme"
    ],
    "question": "How many kinds of enzymes are there?",
    "question_toks": [
      "How",
      "many",
      "kinds",
      "of",
      "enzymes",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT login_name FROM Students WHERE family_name  =  \"Ward\"",
    "query_toks": [
      "SELECT",
      "login_name",
      "FROM",
      "Students",
      "WHERE",
      "family_name",
      "=",
      "``",
      "Ward",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "login_name",
      "from",
      "students",
      "where",
      "family_name",
      "=",
      "value"
    ],
    "question": "What are the login names of the students with family name \"Ward\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "login",
      "names",
      "of",
      "the",
      "students",
      "with",
      "family",
      "name",
      "``",
      "Ward",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Ward\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT name FROM races ORDER BY date DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "races",
      "ORDER",
      "BY",
      "date",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "races",
      "order",
      "by",
      "date",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the race held most recently?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "race",
      "held",
      "most",
      "recently",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "physician",
      "WHERE",
      "POSITION",
      "LIKE",
      "'",
      "%",
      "senior",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "physician",
      "where",
      "position",
      "like",
      "value"
    ],
    "question": "What are the names of the physicians who have 'senior' in their titles.",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "physicians",
      "who",
      "have",
      "'senior",
      "'",
      "in",
      "their",
      "titles",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"%senior%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "hire_date",
      "<",
      "'2002-06-21",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "hire_date",
      "<",
      "value"
    ],
    "question": "What is all the information about employees hired before June 21, 2002?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "information",
      "about",
      "employees",
      "hired",
      "before",
      "June",
      "21",
      ",",
      "2002",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"2002-06-21\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "border",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "border",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what state borders kentucky",
    "question_toks": [
      "what",
      "state",
      "borders",
      "kentucky"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dept_address",
      ")",
      "FROM",
      "department",
      "WHERE",
      "school_code",
      "=",
      "'BUS",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dept_address",
      ")",
      "from",
      "department",
      "where",
      "school_code",
      "=",
      "value"
    ],
    "question": "What are the different locations of the school with the code BUS?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "locations",
      "of",
      "the",
      "school",
      "with",
      "the",
      "code",
      "BUS",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"BUS\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT COUNT (DISTINCT Publication_Date) FROM publication",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Publication_Date",
      ")",
      "FROM",
      "publication"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "publication_date",
      ")",
      "from",
      "publication"
    ],
    "question": "What is the number of distinct publication dates?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "distinct",
      "publication",
      "dates",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_deliveries",
    "query": "SELECT actual_order_id FROM actual_orders WHERE order_status_code  =  'Success'",
    "query_toks": [
      "SELECT",
      "actual_order_id",
      "FROM",
      "actual_orders",
      "WHERE",
      "order_status_code",
      "=",
      "'Success",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "actual_order_id",
      "from",
      "actual_orders",
      "where",
      "order_status_code",
      "=",
      "value"
    ],
    "question": "Find the ids of orders whose status is 'Success'.",
    "question_toks": [
      "Find",
      "the",
      "ids",
      "of",
      "orders",
      "whose",
      "status",
      "is",
      "'Success",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"Success\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT area FROM state WHERE state_name  =  \"new mexico\";",
    "query_toks": [
      "SELECT",
      "area",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "new",
      "mexico",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "area",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the area of new mexico",
    "question_toks": [
      "what",
      "is",
      "the",
      "area",
      "of",
      "new",
      "mexico"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"new mexico\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";",
    "query_toks": [
      "SELECT",
      "LENGTH",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "rio",
      "grande",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "length",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "how long is the rio grande",
    "question_toks": [
      "how",
      "long",
      "is",
      "the",
      "rio",
      "grande"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"rio grande\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_1",
    "query": "SELECT dname FROM department ORDER BY mgr_start_date",
    "query_toks": [
      "SELECT",
      "dname",
      "FROM",
      "department",
      "ORDER",
      "BY",
      "mgr_start_date"
    ],
    "query_toks_no_value": [
      "select",
      "dname",
      "from",
      "department",
      "order",
      "by",
      "mgr_start_date"
    ],
    "question": "List all department names ordered by their starting date.",
    "question_toks": [
      "List",
      "all",
      "department",
      "names",
      "ordered",
      "by",
      "their",
      "starting",
      "date",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(course_id) FROM Student_Course_Enrolment",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "course_id",
      ")",
      "FROM",
      "Student_Course_Enrolment"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "course_id",
      ")",
      "from",
      "student_course_enrolment"
    ],
    "question": "How many distinct courses are enrolled in by students?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "courses",
      "are",
      "enrolled",
      "in",
      "by",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_and_lot",
    "query": "SELECT DISTINCT date_moved_in FROM residents",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "date_moved_in",
      "FROM",
      "residents"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "date_moved_in",
      "from",
      "residents"
    ],
    "question": "What are the distinct move in dates of the residents?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "move",
      "in",
      "dates",
      "of",
      "the",
      "residents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT count(*) FROM device",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "device"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "device"
    ],
    "question": "Count the number of devices.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "devices",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "District_name",
      "FROM",
      "district",
      "ORDER",
      "BY",
      "city_area",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "district_name",
      "from",
      "district",
      "order",
      "by",
      "city_area",
      "desc"
    ],
    "question": "Find all the distinct district names ordered by city area in descending.",
    "question_toks": [
      "Find",
      "all",
      "the",
      "distinct",
      "district",
      "names",
      "ordered",
      "by",
      "city",
      "area",
      "in",
      "descending",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM ref_colors",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ref_colors"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_colors"
    ],
    "question": "Count the number of colors.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "colors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT lake_name FROM lake WHERE area  >  750;",
    "query_toks": [
      "SELECT",
      "lake_name",
      "FROM",
      "lake",
      "WHERE",
      "area",
      ">",
      "750",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "lake_name",
      "from",
      "lake",
      "where",
      "area",
      ">",
      "value"
    ],
    "question": "what are the major lakes in united states",
    "question_toks": [
      "what",
      "are",
      "the",
      "major",
      "lakes",
      "in",
      "united",
      "states"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          750.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT count(DISTINCT school_id) FROM basketball_match",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "school_id",
      ")",
      "FROM",
      "basketball_match"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "school_id",
      ")",
      "from",
      "basketball_match"
    ],
    "question": "Count the number of schools that have had basketball matches.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "schools",
      "that",
      "have",
      "had",
      "basketball",
      "matches",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3",
    "query_toks": [
      "SELECT",
      "role_code",
      "FROM",
      "Employees",
      "GROUP",
      "BY",
      "role_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "role_code",
      "from",
      "employees",
      "group",
      "by",
      "role_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the roles with three or more employees? Give me the role codes.",
    "question_toks": [
      "What",
      "are",
      "the",
      "roles",
      "with",
      "three",
      "or",
      "more",
      "employees",
      "?",
      "Give",
      "me",
      "the",
      "role",
      "codes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  2014;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "paperid",
      "FROM",
      "paper",
      "WHERE",
      "YEAR",
      "=",
      "2014",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "paperid",
      "from",
      "paper",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "papers from 2014",
    "question_toks": [
      "papers",
      "from",
      "2014"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "railway",
    "query": "SELECT Name FROM manager ORDER BY LEVEL ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "manager",
      "ORDER",
      "BY",
      "LEVEL",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "manager",
      "order",
      "by",
      "level",
      "asc"
    ],
    "question": "What are the names of managers in ascending order of level?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "managers",
      "in",
      "ascending",
      "order",
      "of",
      "level",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT lname FROM authors WHERE fname  =  \"Amal\"",
    "query_toks": [
      "SELECT",
      "lname",
      "FROM",
      "authors",
      "WHERE",
      "fname",
      "=",
      "``",
      "Amal",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      "from",
      "authors",
      "where",
      "fname",
      "=",
      "value"
    ],
    "question": "Which authors have first name \"Amal\"? List their last names.",
    "question_toks": [
      "Which",
      "authors",
      "have",
      "first",
      "name",
      "``",
      "Amal",
      "''",
      "?",
      "List",
      "their",
      "last",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Amal\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT * FROM Albums WHERE YEAR  =  2012",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "Albums",
      "WHERE",
      "YEAR",
      "=",
      "2012"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "albums",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Find all the albums in 2012.",
    "question_toks": [
      "Find",
      "all",
      "the",
      "albums",
      "in",
      "2012",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          2012.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airports WHERE name LIKE '%International%'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "International",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airports",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Find the number of airports whose name contain the word 'International'.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "airports",
      "whose",
      "name",
      "contain",
      "the",
      "word",
      "'International",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"%International%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wedding",
    "query": "SELECT open_date FROM church GROUP BY open_date HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "open_date",
      "FROM",
      "church",
      "GROUP",
      "BY",
      "open_date",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "open_date",
      "from",
      "church",
      "group",
      "by",
      "open_date",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show the opening year in whcih at least two churches opened.",
    "question_toks": [
      "Show",
      "the",
      "opening",
      "year",
      "in",
      "whcih",
      "at",
      "least",
      "two",
      "churches",
      "opened",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Greenland",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "In how many cities are there airports in the country of Greenland?",
    "question_toks": [
      "In",
      "how",
      "many",
      "cities",
      "are",
      "there",
      "airports",
      "in",
      "the",
      "country",
      "of",
      "Greenland",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Greenland\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code  =  'PUR'",
    "query_toks": [
      "SELECT",
      "transaction_id",
      "FROM",
      "TRANSACTIONS",
      "WHERE",
      "transaction_type_code",
      "=",
      "'PUR",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "transaction_id",
      "from",
      "transactions",
      "where",
      "transaction_type_code",
      "=",
      "value"
    ],
    "question": "Show all transaction ids with transaction code 'PUR'.",
    "question_toks": [
      "Show",
      "all",
      "transaction",
      "ids",
      "with",
      "transaction",
      "code",
      "'PUR",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"PUR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(DISTINCT customer_id) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "from",
      "accounts"
    ],
    "question": "Count the number of customers who have an account.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "who",
      "have",
      "an",
      "account",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                21,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Date_Claim_Made",
      "FROM",
      "Claims",
      "ORDER",
      "BY",
      "Date_Claim_Made",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "date_claim_made",
      "from",
      "claims",
      "order",
      "by",
      "date_claim_made",
      "asc",
      "limit",
      "value"
    ],
    "question": "Tell me the the date when the first claim was made.",
    "question_toks": [
      "Tell",
      "me",
      "the",
      "the",
      "date",
      "when",
      "the",
      "first",
      "claim",
      "was",
      "made",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Employee",
      "ORDER",
      "BY",
      "salary",
      "ASC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "asc",
      "limit",
      "value"
    ],
    "question": "Show the name of employees with three lowest salaries.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "of",
      "employees",
      "with",
      "three",
      "lowest",
      "salaries",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers WHERE payment_method  =  \"Cash\"",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "payment_method",
      "=",
      "``",
      "Cash",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers",
      "where",
      "payment_method",
      "=",
      "value"
    ],
    "question": "What are the names of customers who use payment method \"Cash\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "customers",
      "who",
      "use",
      "payment",
      "method",
      "``",
      "Cash",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Cash\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT country_name FROM state WHERE state_name  =  \"massachusetts\";",
    "query_toks": [
      "SELECT",
      "country_name",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "massachusetts",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "country_name",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "where is massachusetts",
    "question_toks": [
      "where",
      "is",
      "massachusetts"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"massachusetts\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT title FROM film WHERE rating  =  'R'",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "film",
      "WHERE",
      "rating",
      "=",
      "'R",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "film",
      "where",
      "rating",
      "=",
      "value"
    ],
    "question": "What are all the movies rated as R? List the titles.",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "movies",
      "rated",
      "as",
      "R",
      "?",
      "List",
      "the",
      "titles",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              42,
              false
            ],
            null
          ],
          "\"R\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT gname FROM Video_games WHERE gtype  =  \"Collectible card game\"",
    "query_toks": [
      "SELECT",
      "gname",
      "FROM",
      "Video_games",
      "WHERE",
      "gtype",
      "=",
      "``",
      "Collectible",
      "card",
      "game",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "gname",
      "from",
      "video_games",
      "where",
      "gtype",
      "=",
      "value"
    ],
    "question": "Show all video games with type Collectible card game.",
    "question_toks": [
      "Show",
      "all",
      "video",
      "games",
      "with",
      "type",
      "Collectible",
      "card",
      "game",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Collectible card game\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(DISTINCT customer_id) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "from",
      "accounts"
    ],
    "question": "Count the number of customers who hold an account.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "who",
      "hold",
      "an",
      "account",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT count(*) FROM Draft_Copies WHERE document_id = 2;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Draft_Copies",
      "WHERE",
      "document_id",
      "=",
      "2",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "draft_copies",
      "where",
      "document_id",
      "=",
      "value"
    ],
    "question": "How many draft copies does the document with id 2 have?",
    "question_toks": [
      "How",
      "many",
      "draft",
      "copies",
      "does",
      "the",
      "document",
      "with",
      "id",
      "2",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT lake_name FROM lake WHERE area  >  750;",
    "query_toks": [
      "SELECT",
      "lake_name",
      "FROM",
      "lake",
      "WHERE",
      "area",
      ">",
      "750",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "lake_name",
      "from",
      "lake",
      "where",
      "area",
      ">",
      "value"
    ],
    "question": "show me all the major lakes in the us",
    "question_toks": [
      "show",
      "me",
      "all",
      "the",
      "major",
      "lakes",
      "in",
      "the",
      "us"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          750.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\"",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      "FROM",
      "catalog_contents",
      "WHERE",
      "product_stock_number",
      "LIKE",
      "``",
      "2",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      "from",
      "catalog_contents",
      "where",
      "product_stock_number",
      "like",
      "value"
    ],
    "question": "Find the names of all the products whose stock number starts with \"2\".",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "the",
      "products",
      "whose",
      "stock",
      "number",
      "starts",
      "with",
      "``",
      "2",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"2%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT region_name FROM region ORDER BY region_name",
    "query_toks": [
      "SELECT",
      "region_name",
      "FROM",
      "region",
      "ORDER",
      "BY",
      "region_name"
    ],
    "query_toks_no_value": [
      "select",
      "region_name",
      "from",
      "region",
      "order",
      "by",
      "region_name"
    ],
    "question": "What are the names of the regions in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "regions",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT user_id FROM USER WHERE name  =  \"Michelle\";",
    "query_toks": [
      "SELECT",
      "user_id",
      "FROM",
      "USER",
      "WHERE",
      "name",
      "=",
      "``",
      "Michelle",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "user_id",
      "from",
      "user",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "List all user ids with name Michelle",
    "question_toks": [
      "List",
      "all",
      "user",
      "ids",
      "with",
      "name",
      "Michelle"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Michelle\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What is the number of cities in the United States with more than 3 airports?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "cities",
      "in",
      "the",
      "United",
      "States",
      "with",
      "more",
      "than",
      "3",
      "airports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT count(*) FROM party",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "party"
    ],
    "question": "Count the number of parties.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "parties",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT DISTINCT Location_Name FROM LOCATIONS",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Location_Name",
      "FROM",
      "LOCATIONS"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "location_name",
      "from",
      "locations"
    ],
    "question": "What are the distinct location names?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "location",
      "names",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT rID FROM Rating WHERE stars != 4",
    "query_toks": [
      "SELECT",
      "rID",
      "FROM",
      "Rating",
      "WHERE",
      "stars",
      "!",
      "=",
      "4"
    ],
    "query_toks_no_value": [
      "select",
      "rid",
      "from",
      "rating",
      "where",
      "stars",
      "!",
      "=",
      "value"
    ],
    "question": "What are the ids of all reviewers who have not given 4 stars at least once?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "reviewers",
      "who",
      "have",
      "not",
      "given",
      "4",
      "stars",
      "at",
      "least",
      "once",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT distinct(UnitPrice) FROM TRACK",
    "query_toks": [
      "SELECT",
      "distinct",
      "(",
      "UnitPrice",
      ")",
      "FROM",
      "TRACK"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "(",
      "unitprice",
      ")",
      "from",
      "track"
    ],
    "question": "What are the distinct unit prices of all tracks?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "unit",
      "prices",
      "of",
      "all",
      "tracks",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                64,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM Employees",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Employees"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employees"
    ],
    "question": "Find the number of employees we have.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "employees",
      "we",
      "have",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"guadalupe peak\";",
    "query_toks": [
      "SELECT",
      "highest_elevation",
      "FROM",
      "highlow",
      "WHERE",
      "highest_point",
      "=",
      "``",
      "guadalupe",
      "peak",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "highest_elevation",
      "from",
      "highlow",
      "where",
      "highest_point",
      "=",
      "value"
    ],
    "question": "what is the maximum elevation of guadalupe peak",
    "question_toks": [
      "what",
      "is",
      "the",
      "maximum",
      "elevation",
      "of",
      "guadalupe",
      "peak"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"guadalupe peak\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(*) FROM dorm_amenity",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "dorm_amenity"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "dorm_amenity"
    ],
    "question": "How many diffrent dorm amenities are there?",
    "question_toks": [
      "How",
      "many",
      "diffrent",
      "dorm",
      "amenities",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( city_name ) FROM city WHERE city_name  =  \"austin\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "city_name",
      ")",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "austin",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "city_name",
      ")",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "how many cities named austin are there in the usa",
    "question_toks": [
      "how",
      "many",
      "cities",
      "named",
      "austin",
      "are",
      "there",
      "in",
      "the",
      "usa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"austin\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT release_year FROM movie WHERE title  =  \"The Imitation Game\";",
    "query_toks": [
      "SELECT",
      "release_year",
      "FROM",
      "movie",
      "WHERE",
      "title",
      "=",
      "``",
      "The",
      "Imitation",
      "Game",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "release_year",
      "from",
      "movie",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "What year is the movie \" The Imitation Game \" from ?",
    "question_toks": [
      "What",
      "year",
      "is",
      "the",
      "movie",
      "``",
      "The",
      "Imitation",
      "Game",
      "``",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                44,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"The Imitation Game\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"",
    "query_toks": [
      "SELECT",
      "Location_Name",
      "FROM",
      "LOCATIONS",
      "WHERE",
      "Location_Name",
      "LIKE",
      "``",
      "%",
      "film",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "location_name",
      "from",
      "locations",
      "where",
      "location_name",
      "like",
      "value"
    ],
    "question": "Which location names contain the word \"film\"?",
    "question_toks": [
      "Which",
      "location",
      "names",
      "contain",
      "the",
      "word",
      "``",
      "film",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%film%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  2014;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "paperid",
      "FROM",
      "paper",
      "WHERE",
      "YEAR",
      "=",
      "2014",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "paperid",
      "from",
      "paper",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "2014 papers",
    "question_toks": [
      "2014",
      "papers"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"",
    "query_toks": [
      "SELECT",
      "unit_of_measure",
      "FROM",
      "ref_product_categories",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Herbs",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "unit_of_measure",
      "from",
      "ref_product_categories",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "What is the unit of measuerment of the product category code \"Herbs\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "unit",
      "of",
      "measuerment",
      "of",
      "the",
      "product",
      "category",
      "code",
      "``",
      "Herbs",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Herbs\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums ORDER BY title;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "ORDER",
      "BY",
      "title",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "order",
      "by",
      "title"
    ],
    "question": "List every album ordered by album title in ascending order.",
    "question_toks": [
      "List",
      "every",
      "album",
      "ordered",
      "by",
      "album",
      "title",
      "in",
      "ascending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";",
    "query_toks": [
      "SELECT",
      "lowest_point",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "iowa",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "lowest_point",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the lowest point of iowa",
    "question_toks": [
      "what",
      "is",
      "the",
      "lowest",
      "point",
      "of",
      "iowa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"iowa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Order_Quantity",
      ")",
      "FROM",
      "Invoices",
      "WHERE",
      "payment_method_code",
      "=",
      "``",
      "MasterCard",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "order_quantity",
      ")",
      "from",
      "invoices",
      "where",
      "payment_method_code",
      "=",
      "value"
    ],
    "question": "What is the average quantities ordered with payment method code \"MasterCard\" on invoices?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "quantities",
      "ordered",
      "with",
      "payment",
      "method",
      "code",
      "``",
      "MasterCard",
      "''",
      "on",
      "invoices",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            14
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                81,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              79,
              false
            ],
            null
          ],
          "\"MasterCard\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Famous_Release_date",
      "FROM",
      "artist",
      "ORDER",
      "BY",
      "Age",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "famous_release_date",
      "from",
      "artist",
      "order",
      "by",
      "age",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the famous release date of the artist with the oldest age?",
    "question_toks": [
      "What",
      "is",
      "the",
      "famous",
      "release",
      "date",
      "of",
      "the",
      "artist",
      "with",
      "the",
      "oldest",
      "age",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT avg(no_of_customers) FROM bank",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "no_of_customers",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "no_of_customers",
      ")",
      "from",
      "bank"
    ],
    "question": "Find the average number of customers cross all banks.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "number",
      "of",
      "customers",
      "cross",
      "all",
      "banks",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT avg(Num_of_Audience) FROM festival_detail",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Num_of_Audience",
      ")",
      "FROM",
      "festival_detail"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "num_of_audience",
      ")",
      "from",
      "festival_detail"
    ],
    "question": "What is the average number of audience for festivals?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "audience",
      "for",
      "festivals",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "open_year",
      "FROM",
      "branch",
      "GROUP",
      "BY",
      "open_year",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "open_year",
      "from",
      "branch",
      "group",
      "by",
      "open_year",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "List all open years when at least two shops are opened.",
    "question_toks": [
      "List",
      "all",
      "open",
      "years",
      "when",
      "at",
      "least",
      "two",
      "shops",
      "are",
      "opened",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT count(*) FROM artist",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artist"
    ],
    "question": "How many artists are there?",
    "question_toks": [
      "How",
      "many",
      "artists",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "traverse",
      ")",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "missouri",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "traverse",
      ")",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "how many states does the missouri river flow through",
    "question_toks": [
      "how",
      "many",
      "states",
      "does",
      "the",
      "missouri",
      "river",
      "flow",
      "through"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"missouri\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT count(*) FROM aircraft",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft"
    ],
    "question": "What is the number of aircraft?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "aircraft",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT capital FROM state WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "capital",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "capital",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the capital of texas",
    "question_toks": [
      "what",
      "is",
      "the",
      "capital",
      "of",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT count(DISTINCT rank) FROM captain",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "rank",
      ")",
      "FROM",
      "captain"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "rank",
      ")",
      "from",
      "captain"
    ],
    "question": "How many different captain ranks are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "captain",
      "ranks",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT(*)  >  1",
    "query_toks": [
      "SELECT",
      "YEAR",
      "FROM",
      "festival_detail",
      "GROUP",
      "BY",
      "YEAR",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "year",
      "from",
      "festival_detail",
      "group",
      "by",
      "year",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "List the year in which there are more than one festivals.",
    "question_toks": [
      "List",
      "the",
      "year",
      "in",
      "which",
      "there",
      "are",
      "more",
      "than",
      "one",
      "festivals",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(DISTINCT dormid) FROM has_amenity",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dormid",
      ")",
      "FROM",
      "has_amenity"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dormid",
      ")",
      "from",
      "has_amenity"
    ],
    "question": "Find the number of dorms that have some amenity.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "dorms",
      "that",
      "have",
      "some",
      "amenity",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_in_alabama",
    "query": "SELECT count(*) FROM participants WHERE participant_type_code  =  'Organizer'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "participants",
      "WHERE",
      "participant_type_code",
      "=",
      "'Organizer",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "participants",
      "where",
      "participant_type_code",
      "=",
      "value"
    ],
    "question": "How many participants belong to the type 'Organizer'?",
    "question_toks": [
      "How",
      "many",
      "participants",
      "belong",
      "to",
      "the",
      "type",
      "'Organizer",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Organizer\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT activity_name FROM Activity",
    "query_toks": [
      "SELECT",
      "activity_name",
      "FROM",
      "Activity"
    ],
    "query_toks_no_value": [
      "select",
      "activity_name",
      "from",
      "activity"
    ],
    "question": "What activities do we have?",
    "question_toks": [
      "What",
      "activities",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "musical",
      "WHERE",
      "Nominee",
      "=",
      "``",
      "Bob",
      "Fosse",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "musical",
      "where",
      "nominee",
      "=",
      "value"
    ],
    "question": "What are the names of musicals with nominee \"Bob Fosse\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "musicals",
      "with",
      "nominee",
      "``",
      "Bob",
      "Fosse",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Bob Fosse\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "channel",
      "ORDER",
      "BY",
      "rating_in_percent",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "channel",
      "order",
      "by",
      "rating_in_percent",
      "desc"
    ],
    "question": "List all channel names ordered by their rating in percent from big to small.",
    "question_toks": [
      "List",
      "all",
      "channel",
      "names",
      "ordered",
      "by",
      "their",
      "rating",
      "in",
      "percent",
      "from",
      "big",
      "to",
      "small",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "university",
      "WHERE",
      "LOCATION",
      "LIKE",
      "``",
      "%",
      "NY",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "university",
      "where",
      "location",
      "like",
      "value"
    ],
    "question": "Find how many school locations have the word 'NY'.",
    "question_toks": [
      "Find",
      "how",
      "many",
      "school",
      "locations",
      "have",
      "the",
      "word",
      "'NY",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%NY%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name FROM program ORDER BY launch DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "program",
      "ORDER",
      "BY",
      "launch",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "program",
      "order",
      "by",
      "launch",
      "desc",
      "limit",
      "value"
    ],
    "question": "find the name of the program that was launched most recently.",
    "question_toks": [
      "find",
      "the",
      "name",
      "of",
      "the",
      "program",
      "that",
      "was",
      "launched",
      "most",
      "recently",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT city_name FROM city WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "city_name",
      "FROM",
      "city",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "city_name",
      "from",
      "city",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what cities in texas",
    "question_toks": [
      "what",
      "cities",
      "in",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT title FROM papers WHERE title LIKE \"%ML%\"",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "papers",
      "WHERE",
      "title",
      "LIKE",
      "``",
      "%",
      "ML",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "papers",
      "where",
      "title",
      "like",
      "value"
    ],
    "question": "Which papers have the substring \"ML\" in their titles? Return the titles of the papers.",
    "question_toks": [
      "Which",
      "papers",
      "have",
      "the",
      "substring",
      "``",
      "ML",
      "''",
      "in",
      "their",
      "titles",
      "?",
      "Return",
      "the",
      "titles",
      "of",
      "the",
      "papers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"%ML%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT origin FROM program ORDER BY origin",
    "query_toks": [
      "SELECT",
      "origin",
      "FROM",
      "program",
      "ORDER",
      "BY",
      "origin"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      "from",
      "program",
      "order",
      "by",
      "origin"
    ],
    "question": "What is the list of program origins ordered alphabetically?",
    "question_toks": [
      "What",
      "is",
      "the",
      "list",
      "of",
      "program",
      "origins",
      "ordered",
      "alphabetically",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name",
    "query_toks": [
      "SELECT",
      "amenity_name",
      "FROM",
      "dorm_amenity",
      "ORDER",
      "BY",
      "amenity_name"
    ],
    "query_toks_no_value": [
      "select",
      "amenity_name",
      "from",
      "dorm_amenity",
      "order",
      "by",
      "amenity_name"
    ],
    "question": "What are the different dorm amenity names in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "dorm",
      "amenity",
      "names",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT SUM ( population ) FROM state;",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "population",
      ")",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "population",
      ")",
      "from",
      "state"
    ],
    "question": "what is the combined population of all 50 states",
    "question_toks": [
      "what",
      "is",
      "the",
      "combined",
      "population",
      "of",
      "all",
      "50",
      "states"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "ohio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "what states does the ohio run through",
    "question_toks": [
      "what",
      "states",
      "does",
      "the",
      "ohio",
      "run",
      "through"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"ohio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5",
    "query_toks": [
      "SELECT",
      "Competition_type",
      "FROM",
      "competition",
      "GROUP",
      "BY",
      "Competition_type",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      "<",
      "=",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "competition_type",
      "from",
      "competition",
      "group",
      "by",
      "competition_type",
      "having",
      "count",
      "(",
      "*",
      ")",
      "<",
      "=",
      "value"
    ],
    "question": "List the types of competition that have at most five competitions of that type.",
    "question_toks": [
      "List",
      "the",
      "types",
      "of",
      "competition",
      "that",
      "have",
      "at",
      "most",
      "five",
      "competitions",
      "of",
      "that",
      "type",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          21,
          false
        ]
      ],
      "having": [
        [
          false,
          6,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT SUM ( population ) FROM state;",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "population",
      ")",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "population",
      ")",
      "from",
      "state"
    ],
    "question": "how many people live in the united states",
    "question_toks": [
      "how",
      "many",
      "people",
      "live",
      "in",
      "the",
      "united",
      "states"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT DISTINCT Publisher FROM publication WHERE Price  >  5000000",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Publisher",
      "FROM",
      "publication",
      "WHERE",
      "Price",
      ">",
      "5000000"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "publisher",
      "from",
      "publication",
      "where",
      "price",
      ">",
      "value"
    ],
    "question": "What are the distinct publishers of publications with price higher than 5000000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "publishers",
      "of",
      "publications",
      "with",
      "price",
      "higher",
      "than",
      "5000000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          5000000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1",
    "query_toks": [
      "SELECT",
      "Category",
      "FROM",
      "music_festival",
      "GROUP",
      "BY",
      "Category",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "category",
      "from",
      "music_festival",
      "group",
      "by",
      "category",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the categories of music festivals for which there have been more than 1 music festival?",
    "question_toks": [
      "What",
      "are",
      "the",
      "categories",
      "of",
      "music",
      "festivals",
      "for",
      "which",
      "there",
      "have",
      "been",
      "more",
      "than",
      "1",
      "music",
      "festival",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  4",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "classroom",
      "FROM",
      "list",
      "WHERE",
      "grade",
      "=",
      "4"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "classroom",
      "from",
      "list",
      "where",
      "grade",
      "=",
      "value"
    ],
    "question": "Find the classrooms in which grade 4 is studying.",
    "question_toks": [
      "Find",
      "the",
      "classrooms",
      "in",
      "which",
      "grade",
      "4",
      "is",
      "studying",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT count(*) FROM device",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "device"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "device"
    ],
    "question": "How many devices are there?",
    "question_toks": [
      "How",
      "many",
      "devices",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "OWNER",
      "FROM",
      "channel",
      "ORDER",
      "BY",
      "rating_in_percent",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "owner",
      "from",
      "channel",
      "order",
      "by",
      "rating_in_percent",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the owner of the channel that has the highest rating ratio?",
    "question_toks": [
      "What",
      "is",
      "the",
      "owner",
      "of",
      "the",
      "channel",
      "that",
      "has",
      "the",
      "highest",
      "rating",
      "ratio",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "Course_Authors_and_Tutors",
      "ORDER",
      "BY",
      "personal_name"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "course_authors_and_tutors",
      "order",
      "by",
      "personal_name"
    ],
    "question": "Sort the information about course authors and tutors in alphabetical order of the personal name.",
    "question_toks": [
      "Sort",
      "the",
      "information",
      "about",
      "course",
      "authors",
      "and",
      "tutors",
      "in",
      "alphabetical",
      "order",
      "of",
      "the",
      "personal",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT DISTINCT form_type_code FROM forms",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "form_type_code",
      "FROM",
      "forms"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "form_type_code",
      "from",
      "forms"
    ],
    "question": "List all the types of forms.",
    "question_toks": [
      "List",
      "all",
      "the",
      "types",
      "of",
      "forms",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3",
    "query_toks": [
      "SELECT",
      "Team",
      "FROM",
      "elimination",
      "GROUP",
      "BY",
      "Team",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "team",
      "from",
      "elimination",
      "group",
      "by",
      "team",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Show teams that have suffered more than three eliminations.",
    "question_toks": [
      "Show",
      "teams",
      "that",
      "have",
      "suffered",
      "more",
      "than",
      "three",
      "eliminations",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Destruction_Authorised_by_Employee_ID",
      "FROM",
      "Documents_to_be_destroyed"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "destruction_authorised_by_employee_id",
      "from",
      "documents_to_be_destroyed"
    ],
    "question": "Show the ids of all employees who have authorized destruction.",
    "question_toks": [
      "Show",
      "the",
      "ids",
      "of",
      "all",
      "employees",
      "who",
      "have",
      "authorized",
      "destruction",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "performance_attendance",
    "query": "SELECT count(*) FROM performance",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "performance"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "performance"
    ],
    "question": "How many performances are there?",
    "question_toks": [
      "How",
      "many",
      "performances",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT title FROM publication WHERE citation_num  >  200;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "publication",
      "WHERE",
      "citation_num",
      ">",
      "200",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "publication",
      "where",
      "citation_num",
      ">",
      "value"
    ],
    "question": "return me the paper with more than 200 citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "with",
      "more",
      "than",
      "200",
      "citations",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "body_builder",
    "query": "SELECT * FROM body_builder",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "body_builder"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "body_builder"
    ],
    "question": "Show all information about each body builder.",
    "question_toks": [
      "Show",
      "all",
      "information",
      "about",
      "each",
      "body",
      "builder",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1",
    "query_toks": [
      "SELECT",
      "cust_name",
      "FROM",
      "customer",
      "ORDER",
      "BY",
      "credit_score",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "cust_name",
      "from",
      "customer",
      "order",
      "by",
      "credit_score",
      "limit",
      "value"
    ],
    "question": "What is the name of the customer with the worst credit score?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "customer",
      "with",
      "the",
      "worst",
      "credit",
      "score",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT Address FROM Restaurant WHERE ResName = \"Subway\";",
    "query_toks": [
      "SELECT",
      "Address",
      "FROM",
      "Restaurant",
      "WHERE",
      "ResName",
      "=",
      "``",
      "Subway",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "restaurant",
      "where",
      "resname",
      "=",
      "value"
    ],
    "question": "What is the address of the restaurant Subway?",
    "question_toks": [
      "What",
      "is",
      "the",
      "address",
      "of",
      "the",
      "restaurant",
      "Subway",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Subway\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Customers_cards WHERE card_type_code  =  \"Debit\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers_cards",
      "WHERE",
      "card_type_code",
      "=",
      "``",
      "Debit",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers_cards",
      "where",
      "card_type_code",
      "=",
      "value"
    ],
    "question": "Count the number of customer cards of the type Debit.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customer",
      "cards",
      "of",
      "the",
      "type",
      "Debit",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Debit\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  \"Cancelled\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "FROM",
      "customer_orders",
      "WHERE",
      "order_status",
      "=",
      "``",
      "Cancelled",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "from",
      "customer_orders",
      "where",
      "order_status",
      "=",
      "value"
    ],
    "question": "Return the number of customers who have at least one order with \"Cancelled\" status.",
    "question_toks": [
      "Return",
      "the",
      "number",
      "of",
      "customers",
      "who",
      "have",
      "at",
      "least",
      "one",
      "order",
      "with",
      "``",
      "Cancelled",
      "''",
      "status",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Cancelled\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName",
    "query_toks": [
      "SELECT",
      "cName",
      "FROM",
      "College",
      "WHERE",
      "enr",
      ">",
      "18000",
      "ORDER",
      "BY",
      "cName"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "college",
      "where",
      "enr",
      ">",
      "value",
      "order",
      "by",
      "cname"
    ],
    "question": "List the name of the colleges whose enrollment is greater 18000 sorted by the college's name.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "the",
      "colleges",
      "whose",
      "enrollment",
      "is",
      "greater",
      "18000",
      "sorted",
      "by",
      "the",
      "college",
      "'s",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          18000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "city",
      "ORDER",
      "BY",
      "regional_population",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "city",
      "order",
      "by",
      "regional_population",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which three cities have the largest regional population?",
    "question_toks": [
      "Which",
      "three",
      "cities",
      "have",
      "the",
      "largest",
      "regional",
      "population",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC",
    "query_toks": [
      "SELECT",
      "Total_Points",
      "FROM",
      "gymnast",
      "ORDER",
      "BY",
      "Floor_Exercise_Points",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "total_points",
      "from",
      "gymnast",
      "order",
      "by",
      "floor_exercise_points",
      "desc"
    ],
    "question": "List the total points of gymnasts in descending order of floor exercise points.",
    "question_toks": [
      "List",
      "the",
      "total",
      "points",
      "of",
      "gymnasts",
      "in",
      "descending",
      "order",
      "of",
      "floor",
      "exercise",
      "points",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "county_public_safety",
      "ORDER",
      "BY",
      "Population",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "county_public_safety",
      "order",
      "by",
      "population",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the county with the greatest population?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "county",
      "with",
      "the",
      "greatest",
      "population",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3",
    "query_toks": [
      "SELECT",
      "County_name",
      "FROM",
      "county",
      "ORDER",
      "BY",
      "Population",
      "ASC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "county_name",
      "from",
      "county",
      "order",
      "by",
      "population",
      "asc",
      "limit",
      "value"
    ],
    "question": "Show the 3 counties with the smallest population.",
    "question_toks": [
      "Show",
      "the",
      "3",
      "counties",
      "with",
      "the",
      "smallest",
      "population",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT count(*) FROM artwork",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "artwork"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artwork"
    ],
    "question": "How many artworks are there?",
    "question_toks": [
      "How",
      "many",
      "artworks",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM park WHERE state  =  'NY';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "park",
      "WHERE",
      "state",
      "=",
      "'NY",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "park",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "Show me the number of parks the state of NY has.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "number",
      "of",
      "parks",
      "the",
      "state",
      "of",
      "NY",
      "has",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            17
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              210,
              false
            ],
            null
          ],
          "\"NY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT avg(enrollment) FROM university WHERE founded  <  1850",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "enrollment",
      ")",
      "FROM",
      "university",
      "WHERE",
      "founded",
      "<",
      "1850"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enrollment",
      ")",
      "from",
      "university",
      "where",
      "founded",
      "<",
      "value"
    ],
    "question": "What are the average enrollment size of the universities that are founded before 1850?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "enrollment",
      "size",
      "of",
      "the",
      "universities",
      "that",
      "are",
      "founded",
      "before",
      "1850",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          1850.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "elevation",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Iceland",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "elevation",
      ")",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "What is the maximum elevation of all airports in the country of Iceland?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "elevation",
      "of",
      "all",
      "airports",
      "in",
      "the",
      "country",
      "of",
      "Iceland",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Iceland\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "campusfee",
      ")",
      "FROM",
      "csu_fees",
      "WHERE",
      "YEAR",
      "=",
      "1996"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "campusfee",
      ")",
      "from",
      "csu_fees",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Find the average fee on a CSU campus in 1996",
    "question_toks": [
      "Find",
      "the",
      "average",
      "fee",
      "on",
      "a",
      "CSU",
      "campus",
      "in",
      "1996"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          1996.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT review_count FROM business WHERE name  =  \"Acacia Cafe\";",
    "query_toks": [
      "SELECT",
      "review_count",
      "FROM",
      "business",
      "WHERE",
      "name",
      "=",
      "``",
      "Acacia",
      "Cafe",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "review_count",
      "from",
      "business",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "How many reviews does \" Acacia Cafe \" have ?",
    "question_toks": [
      "How",
      "many",
      "reviews",
      "does",
      "``",
      "Acacia",
      "Cafe",
      "``",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Acacia Cafe\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT StuID FROM Student WHERE age  >  20",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "age",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "Show all student ids who are older than 20.",
    "question_toks": [
      "Show",
      "all",
      "student",
      "ids",
      "who",
      "are",
      "older",
      "than",
      "20",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT count(DISTINCT nationality) FROM swimmer",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "nationality",
      ")",
      "FROM",
      "swimmer"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "nationality",
      ")",
      "from",
      "swimmer"
    ],
    "question": "How many different countries are all the swimmers from?",
    "question_toks": [
      "How",
      "many",
      "different",
      "countries",
      "are",
      "all",
      "the",
      "swimmers",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT id FROM trip ORDER BY duration LIMIT 1",
    "query_toks": [
      "SELECT",
      "id",
      "FROM",
      "trip",
      "ORDER",
      "BY",
      "duration",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      "from",
      "trip",
      "order",
      "by",
      "duration",
      "limit",
      "value"
    ],
    "question": "What is the id of the shortest trip?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "shortest",
      "trip",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT avg(Gross_in_dollar) FROM film",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Gross_in_dollar",
      ")",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "gross_in_dollar",
      ")",
      "from",
      "film"
    ],
    "question": "Return the average gross sales in dollars across all films.",
    "question_toks": [
      "Return",
      "the",
      "average",
      "gross",
      "sales",
      "in",
      "dollars",
      "across",
      "all",
      "films",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC",
    "query_toks": [
      "SELECT",
      "Total_Points",
      "FROM",
      "gymnast",
      "ORDER",
      "BY",
      "Total_Points",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "total_points",
      "from",
      "gymnast",
      "order",
      "by",
      "total_points",
      "desc"
    ],
    "question": "List the total points of gymnasts in descending order.",
    "question_toks": [
      "List",
      "the",
      "total",
      "points",
      "of",
      "gymnasts",
      "in",
      "descending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wedding",
    "query": "SELECT count(*) FROM Church WHERE Open_Date  <  1850",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Church",
      "WHERE",
      "Open_Date",
      "<",
      "1850"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "church",
      "where",
      "open_date",
      "<",
      "value"
    ],
    "question": "How many churches opened before 1850 are there?",
    "question_toks": [
      "How",
      "many",
      "churches",
      "opened",
      "before",
      "1850",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          1850.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Nominee",
      "FROM",
      "musical",
      "WHERE",
      "Award",
      "!",
      "=",
      "``",
      "Tony",
      "Award",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "nominee",
      "from",
      "musical",
      "where",
      "award",
      "!",
      "=",
      "value"
    ],
    "question": "What are the distinct nominees of the musicals with the award that is not \"Tony Award\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "nominees",
      "of",
      "the",
      "musicals",
      "with",
      "the",
      "award",
      "that",
      "is",
      "not",
      "``",
      "Tony",
      "Award",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Tony Award\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT count(DISTINCT Hometown) FROM people",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Hometown",
      ")",
      "FROM",
      "people"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "hometown",
      ")",
      "from",
      "people"
    ],
    "question": "How many distinct hometowns did these people have?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "hometowns",
      "did",
      "these",
      "people",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                13,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT DISTINCT LOCATION FROM track",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "LOCATION",
      "FROM",
      "track"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "location",
      "from",
      "track"
    ],
    "question": "What are distinct locations where tracks are located?",
    "question_toks": [
      "What",
      "are",
      "distinct",
      "locations",
      "where",
      "tracks",
      "are",
      "located",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT * FROM Albums WHERE YEAR  =  2012",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "Albums",
      "WHERE",
      "YEAR",
      "=",
      "2012"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "albums",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "return all columns of the albums created in the year of 2012.",
    "question_toks": [
      "return",
      "all",
      "columns",
      "of",
      "the",
      "albums",
      "created",
      "in",
      "the",
      "year",
      "of",
      "2012",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          2012.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT color_description FROM ref_colors",
    "query_toks": [
      "SELECT",
      "color_description",
      "FROM",
      "ref_colors"
    ],
    "query_toks_no_value": [
      "select",
      "color_description",
      "from",
      "ref_colors"
    ],
    "question": "List the description of all the colors.",
    "question_toks": [
      "List",
      "the",
      "description",
      "of",
      "all",
      "the",
      "colors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE ORDER BY Score LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "ORDER",
      "BY",
      "Score",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "order",
      "by",
      "score",
      "limit",
      "value"
    ],
    "question": "Give the name of the wine with the highest score.",
    "question_toks": [
      "Give",
      "the",
      "name",
      "of",
      "the",
      "wine",
      "with",
      "the",
      "highest",
      "score",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "Show the number of customers.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT name FROM buildings ORDER BY Height DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "buildings",
      "ORDER",
      "BY",
      "Height",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "buildings",
      "order",
      "by",
      "height",
      "desc"
    ],
    "question": "What are the names of buildings sorted in descending order of building height?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "buildings",
      "sorted",
      "in",
      "descending",
      "order",
      "of",
      "building",
      "height",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Faculty",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty"
    ],
    "question": "How many faculty do we have?",
    "question_toks": [
      "How",
      "many",
      "faculty",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1",
    "query_toks": [
      "SELECT",
      "Candidate_ID",
      "FROM",
      "candidate",
      "ORDER",
      "BY",
      "oppose_rate",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "candidate_id",
      "from",
      "candidate",
      "order",
      "by",
      "oppose_rate",
      "limit",
      "value"
    ],
    "question": "What is the id of the candidate with the lowest oppose rate?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "candidate",
      "with",
      "the",
      "lowest",
      "oppose",
      "rate",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT Country FROM market ORDER BY Country ASC",
    "query_toks": [
      "SELECT",
      "Country",
      "FROM",
      "market",
      "ORDER",
      "BY",
      "Country",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "market",
      "order",
      "by",
      "country",
      "asc"
    ],
    "question": "List all countries of markets in ascending alphabetical order.",
    "question_toks": [
      "List",
      "all",
      "countries",
      "of",
      "markets",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT login_name FROM Students WHERE family_name  =  \"Ward\"",
    "query_toks": [
      "SELECT",
      "login_name",
      "FROM",
      "Students",
      "WHERE",
      "family_name",
      "=",
      "``",
      "Ward",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "login_name",
      "from",
      "students",
      "where",
      "family_name",
      "=",
      "value"
    ],
    "question": "Return the login names of the students whose family name is \"Ward\".",
    "question_toks": [
      "Return",
      "the",
      "login",
      "names",
      "of",
      "the",
      "students",
      "whose",
      "family",
      "name",
      "is",
      "``",
      "Ward",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Ward\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Name FROM climber WHERE Country != \"Switzerland\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "climber",
      "WHERE",
      "Country",
      "!",
      "=",
      "``",
      "Switzerland",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "climber",
      "where",
      "country",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of climbers who are not from the country of Switzerland?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "climbers",
      "who",
      "are",
      "not",
      "from",
      "the",
      "country",
      "of",
      "Switzerland",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Switzerland\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT count(*) FROM race",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "race"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "race"
    ],
    "question": "How many races are there?",
    "question_toks": [
      "How",
      "many",
      "races",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT Name FROM People ORDER BY Weight ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "People",
      "ORDER",
      "BY",
      "Weight",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "order",
      "by",
      "weight",
      "asc"
    ],
    "question": "What are the names of people in ascending order of weight?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "people",
      "in",
      "ascending",
      "order",
      "of",
      "weight",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "springfield is in what state",
    "question_toks": [
      "springfield",
      "is",
      "in",
      "what",
      "state"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT avg(velocity) FROM flight WHERE pilot  =  'Thompson'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "velocity",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "pilot",
      "=",
      "'Thompson",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "velocity",
      ")",
      "from",
      "flight",
      "where",
      "pilot",
      "=",
      "value"
    ],
    "question": "What is the velocity of the pilot named 'Thompson'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "velocity",
      "of",
      "the",
      "pilot",
      "named",
      "'Thompson",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Thompson\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT count(DISTINCT bedType) FROM Rooms;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "bedType",
      ")",
      "FROM",
      "Rooms",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "bedtype",
      ")",
      "from",
      "rooms"
    ],
    "question": "How many different types of beds are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "types",
      "of",
      "beds",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT school_name FROM school ORDER BY school_name",
    "query_toks": [
      "SELECT",
      "school_name",
      "FROM",
      "school",
      "ORDER",
      "BY",
      "school_name"
    ],
    "query_toks_no_value": [
      "select",
      "school_name",
      "from",
      "school",
      "order",
      "by",
      "school_name"
    ],
    "question": "Show all school names in alphabetical order.",
    "question_toks": [
      "Show",
      "all",
      "school",
      "names",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";",
    "query_toks": [
      "SELECT",
      "LENGTH",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "rio",
      "grande",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "length",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "how long is rio grande",
    "question_toks": [
      "how",
      "long",
      "is",
      "rio",
      "grande"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"rio grande\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'",
    "query_toks": [
      "SELECT",
      "Carrier",
      "FROM",
      "device",
      "WHERE",
      "Software_Platform",
      "!",
      "=",
      "'Android",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "carrier",
      "from",
      "device",
      "where",
      "software_platform",
      "!",
      "=",
      "value"
    ],
    "question": "What are the carriers of devices whose software platforms are not \"Android\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "carriers",
      "of",
      "devices",
      "whose",
      "software",
      "platforms",
      "are",
      "not",
      "``",
      "Android",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Android\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Customers",
      "WHERE",
      "customer_status_code",
      "=",
      "'Good",
      "Customer",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "customers",
      "where",
      "customer_status_code",
      "=",
      "value"
    ],
    "question": "What is the date of birth of every customer whose status code is 'Good Customer'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "date",
      "of",
      "birth",
      "of",
      "every",
      "customer",
      "whose",
      "status",
      "code",
      "is",
      "'Good",
      "Customer",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Good Customer\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Team",
      "FROM",
      "player",
      "ORDER",
      "BY",
      "Age",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "team",
      "from",
      "player",
      "order",
      "by",
      "age",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which team has the oldest player?",
    "question_toks": [
      "Which",
      "team",
      "has",
      "the",
      "oldest",
      "player",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "Count the number of customers.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT dorm_name FROM dorm WHERE gender  =  'F'",
    "query_toks": [
      "SELECT",
      "dorm_name",
      "FROM",
      "dorm",
      "WHERE",
      "gender",
      "=",
      "'F",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "dorm_name",
      "from",
      "dorm",
      "where",
      "gender",
      "=",
      "value"
    ],
    "question": "Find the name of dorms only for female (F gender).",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "dorms",
      "only",
      "for",
      "female",
      "(",
      "F",
      "gender",
      ")",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT count(*) FROM Companies",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Companies"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "companies"
    ],
    "question": "How many companies are there?",
    "question_toks": [
      "How",
      "many",
      "companies",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM Person WHERE age  <  30",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Person",
      "WHERE",
      "age",
      "<",
      "30"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "person",
      "where",
      "age",
      "<",
      "value"
    ],
    "question": "What is the name of the person whose age is below 30?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "person",
      "whose",
      "age",
      "is",
      "below",
      "30",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          30.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT count(DISTINCT Company) FROM entrepreneur",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Company",
      ")",
      "FROM",
      "entrepreneur"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "company",
      ")",
      "from",
      "entrepreneur"
    ],
    "question": "How many distinct companies are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "companies",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "assets_maintenance",
    "query": "SELECT DISTINCT fault_status FROM Fault_Log_Parts",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "fault_status",
      "FROM",
      "Fault_Log_Parts"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "fault_status",
      "from",
      "fault_log_parts"
    ],
    "question": "How many fault status codes are recorded in the fault log parts table?",
    "question_toks": [
      "How",
      "many",
      "fault",
      "status",
      "codes",
      "are",
      "recorded",
      "in",
      "the",
      "fault",
      "log",
      "parts",
      "table",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                62,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "state_name",
      ")",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "state_name",
      ")",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "how many states have cities or towns named springfield",
    "question_toks": [
      "how",
      "many",
      "states",
      "have",
      "cities",
      "or",
      "towns",
      "named",
      "springfield"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "appointmentid",
      "FROM",
      "appointment",
      "ORDER",
      "BY",
      "START",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "appointmentid",
      "from",
      "appointment",
      "order",
      "by",
      "start",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the id of the appointment that started most recently?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "appointment",
      "that",
      "started",
      "most",
      "recently",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              33,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT text ) FROM tip WHERE YEAR  =  2015;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "text",
      ")",
      "FROM",
      "tip",
      "WHERE",
      "YEAR",
      "=",
      "2015",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "text",
      ")",
      "from",
      "tip",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "How many tips have been written in 2015",
    "question_toks": [
      "How",
      "many",
      "tips",
      "have",
      "been",
      "written",
      "in",
      "2015"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                34,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          2015.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT name FROM products WHERE price  <=  200",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "products",
      "WHERE",
      "price",
      "<",
      "=",
      "200"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "products",
      "where",
      "price",
      "<",
      "=",
      "value"
    ],
    "question": "What are the names of products with price at most 200?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "products",
      "with",
      "price",
      "at",
      "most",
      "200",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          6,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT count(*) FROM ALBUM",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ALBUM"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "album"
    ],
    "question": "How many albums are there?",
    "question_toks": [
      "How",
      "many",
      "albums",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT COUNT (DISTINCT id) FROM teaches",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "id",
      ")",
      "FROM",
      "teaches"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "id",
      ")",
      "from",
      "teaches"
    ],
    "question": "How many different instructors have taught some course?",
    "question_toks": [
      "How",
      "many",
      "different",
      "instructors",
      "have",
      "taught",
      "some",
      "course",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                22,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT Delegate FROM election WHERE District  =  1",
    "query_toks": [
      "SELECT",
      "Delegate",
      "FROM",
      "election",
      "WHERE",
      "District",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "delegate",
      "from",
      "election",
      "where",
      "district",
      "=",
      "value"
    ],
    "question": "Who is the delegate of district 1 in the elections?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "delegate",
      "of",
      "district",
      "1",
      "in",
      "the",
      "elections",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT customer_details FROM customers ORDER BY customer_details",
    "query_toks": [
      "SELECT",
      "customer_details",
      "FROM",
      "customers",
      "ORDER",
      "BY",
      "customer_details"
    ],
    "query_toks_no_value": [
      "select",
      "customer_details",
      "from",
      "customers",
      "order",
      "by",
      "customer_details"
    ],
    "question": "List the names of all the customers in alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "the",
      "customers",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name FROM program WHERE origin != 'Beijing'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "program",
      "WHERE",
      "origin",
      "!",
      "=",
      "'Beijing",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "program",
      "where",
      "origin",
      "!",
      "=",
      "value"
    ],
    "question": "find the names of programs whose origin is not in Beijing.",
    "question_toks": [
      "find",
      "the",
      "names",
      "of",
      "programs",
      "whose",
      "origin",
      "is",
      "not",
      "in",
      "Beijing",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Beijing\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(*) FROM inventory WHERE store_id  =  1",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "inventory",
      "WHERE",
      "store_id",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "inventory",
      "where",
      "store_id",
      "=",
      "value"
    ],
    "question": "Count the number of items store 1 has in stock.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "items",
      "store",
      "1",
      "has",
      "in",
      "stock",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              56,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "river_name",
      ")",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "idaho",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "river_name",
      ")",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "give me the number of rivers in idaho",
    "question_toks": [
      "give",
      "me",
      "the",
      "number",
      "of",
      "rivers",
      "in",
      "idaho"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"idaho\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
    "query_toks": [
      "SELECT",
      "patient",
      "FROM",
      "undergoes",
      "ORDER",
      "BY",
      "dateundergoes",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "patient",
      "from",
      "undergoes",
      "order",
      "by",
      "dateundergoes",
      "limit",
      "value"
    ],
    "question": "Which patient is undergoing the most recent treatment?",
    "question_toks": [
      "Which",
      "patient",
      "is",
      "undergoing",
      "the",
      "most",
      "recent",
      "treatment",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            14
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                63,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              66,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "district",
      "FROM",
      "address",
      "GROUP",
      "BY",
      "district",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "district",
      "from",
      "address",
      "group",
      "by",
      "district",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Which districts have at least two addresses?",
    "question_toks": [
      "Which",
      "districts",
      "have",
      "at",
      "least",
      "two",
      "addresses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC",
    "query_toks": [
      "SELECT",
      "organization_name",
      "FROM",
      "organizations",
      "ORDER",
      "BY",
      "date_formed",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "organization_name",
      "from",
      "organizations",
      "order",
      "by",
      "date_formed",
      "asc"
    ],
    "question": "List all the name of organizations in order of the date formed.",
    "question_toks": [
      "List",
      "all",
      "the",
      "name",
      "of",
      "organizations",
      "in",
      "order",
      "of",
      "the",
      "date",
      "formed",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM student_course_attendance",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "student_course_attendance"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance"
    ],
    "question": "List the id of students who attended some courses?",
    "question_toks": [
      "List",
      "the",
      "id",
      "of",
      "students",
      "who",
      "attended",
      "some",
      "courses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT name FROM airport WHERE name LIKE '%international%'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airport",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "international",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airport",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Which of the airport names contains the word 'international'?",
    "question_toks": [
      "Which",
      "of",
      "the",
      "airport",
      "names",
      "contains",
      "the",
      "word",
      "'international",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"%international%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT COUNT (DISTINCT team) FROM elimination",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "team",
      ")",
      "FROM",
      "elimination"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "team",
      ")",
      "from",
      "elimination"
    ],
    "question": "What is the number of distinct teams that suffer elimination?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "distinct",
      "teams",
      "that",
      "suffer",
      "elimination",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(*) FROM inventory WHERE store_id  =  1",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "inventory",
      "WHERE",
      "store_id",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "inventory",
      "where",
      "store_id",
      "=",
      "value"
    ],
    "question": "How many items in inventory does store 1 have?",
    "question_toks": [
      "How",
      "many",
      "items",
      "in",
      "inventory",
      "does",
      "store",
      "1",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              56,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_and_lot",
    "query": "SELECT count(DISTINCT Status_of_Thing_Code) FROM Timed_Status_of_Things",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Status_of_Thing_Code",
      ")",
      "FROM",
      "Timed_Status_of_Things"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "status_of_thing_code",
      ")",
      "from",
      "timed_status_of_things"
    ],
    "question": "How many different status codes of things are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "status",
      "codes",
      "of",
      "things",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                45,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT f_id FROM files WHERE formats  =  \"mp3\"",
    "query_toks": [
      "SELECT",
      "f_id",
      "FROM",
      "files",
      "WHERE",
      "formats",
      "=",
      "``",
      "mp3",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "f_id",
      "from",
      "files",
      "where",
      "formats",
      "=",
      "value"
    ],
    "question": "What are the id of all the files in mp3 format?",
    "question_toks": [
      "What",
      "are",
      "the",
      "id",
      "of",
      "all",
      "the",
      "files",
      "in",
      "mp3",
      "format",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mp3\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(DISTINCT StuID) FROM Plays_games",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "StuID",
      ")",
      "FROM",
      "Plays_games"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "stuid",
      ")",
      "from",
      "plays_games"
    ],
    "question": "How many different students play games?",
    "question_toks": [
      "How",
      "many",
      "different",
      "students",
      "play",
      "games",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  103",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "grade",
      "FROM",
      "list",
      "WHERE",
      "classroom",
      "=",
      "103"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "grade",
      "from",
      "list",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "Find the grade taught in classroom 103.",
    "question_toks": [
      "Find",
      "the",
      "grade",
      "taught",
      "in",
      "classroom",
      "103",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          103.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(DISTINCT customer_id) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "from",
      "accounts"
    ],
    "question": "How many customers have an account?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "have",
      "an",
      "account",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Aircraft",
      "ORDER",
      "BY",
      "distance",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "aircraft",
      "order",
      "by",
      "distance",
      "limit",
      "value"
    ],
    "question": "What are the aircrafts with top 3 shortest lengthes? List their names.",
    "question_toks": [
      "What",
      "are",
      "the",
      "aircrafts",
      "with",
      "top",
      "3",
      "shortest",
      "lengthes",
      "?",
      "List",
      "their",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq",
    "query_toks": [
      "SELECT",
      "course_id",
      "FROM",
      "course",
      "EXCEPT",
      "SELECT",
      "course_id",
      "FROM",
      "prereq"
    ],
    "query_toks_no_value": [
      "select",
      "course_id",
      "from",
      "course",
      "except",
      "select",
      "course_id",
      "from",
      "prereq"
    ],
    "question": "What are the ids of courses without prerequisites?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "courses",
      "without",
      "prerequisites",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              10
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  45,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "support_rate",
      "FROM",
      "candidate",
      "ORDER",
      "BY",
      "support_rate",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "support_rate",
      "from",
      "candidate",
      "order",
      "by",
      "support_rate",
      "desc",
      "limit",
      "value"
    ],
    "question": "what are the top 3 highest support rates?",
    "question_toks": [
      "what",
      "are",
      "the",
      "top",
      "3",
      "highest",
      "support",
      "rates",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT count(DISTINCT Name) FROM PHOTOS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Name",
      ")",
      "FROM",
      "PHOTOS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "photos"
    ],
    "question": "Count the number of distinct names associated with the photos.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "names",
      "associated",
      "with",
      "the",
      "photos",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            13
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(*) FROM customer WHERE active = '1'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customer",
      "WHERE",
      "active",
      "=",
      "'1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customer",
      "where",
      "active",
      "=",
      "value"
    ],
    "question": "Count the number of customers who are active.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "who",
      "are",
      "active",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"1\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT avg(hours) FROM projects",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "hours",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "hours",
      ")",
      "from",
      "projects"
    ],
    "question": "What is the average hours across all projects?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "hours",
      "across",
      "all",
      "projects",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "FacID",
      ")",
      "FROM",
      "Faculty_participates_in"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "facid",
      ")",
      "from",
      "faculty_participates_in"
    ],
    "question": "Give me the number of faculty members who participate in an activity",
    "question_toks": [
      "Give",
      "me",
      "the",
      "number",
      "of",
      "faculty",
      "members",
      "who",
      "participate",
      "in",
      "an",
      "activity"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT count(*) FROM user_profiles",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "user_profiles"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "user_profiles"
    ],
    "question": "How many users are there?",
    "question_toks": [
      "How",
      "many",
      "users",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( river_name ) FROM river;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "river_name",
      ")",
      "FROM",
      "river",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "river_name",
      ")",
      "from",
      "river"
    ],
    "question": "how many rivers are there in us",
    "question_toks": [
      "how",
      "many",
      "rivers",
      "are",
      "there",
      "in",
      "us"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT Festival_Name FROM festival_detail WHERE YEAR  =  2007",
    "query_toks": [
      "SELECT",
      "Festival_Name",
      "FROM",
      "festival_detail",
      "WHERE",
      "YEAR",
      "=",
      "2007"
    ],
    "query_toks_no_value": [
      "select",
      "festival_name",
      "from",
      "festival_detail",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What are the names of festivals held in year 2007?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "festivals",
      "held",
      "in",
      "year",
      "2007",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          2007.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "How many customers do we have?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2",
    "query_toks": [
      "SELECT",
      "employee_id",
      "FROM",
      "job_history",
      "GROUP",
      "BY",
      "employee_id",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      "from",
      "job_history",
      "group",
      "by",
      "employee_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the employee ids for those who had two or more jobs.",
    "question_toks": [
      "What",
      "are",
      "the",
      "employee",
      "ids",
      "for",
      "those",
      "who",
      "had",
      "two",
      "or",
      "more",
      "jobs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "coffee_shop",
    "query": "SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "MONTH",
      "FROM",
      "happy_hour",
      "GROUP",
      "BY",
      "MONTH",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "month",
      "from",
      "happy_hour",
      "group",
      "by",
      "month",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which months have more than 2 happy hours?",
    "question_toks": [
      "Which",
      "months",
      "have",
      "more",
      "than",
      "2",
      "happy",
      "hours",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Stories",
      "FROM",
      "buildings",
      "ORDER",
      "BY",
      "Height",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "stories",
      "from",
      "buildings",
      "order",
      "by",
      "height",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the stories of the building with the largest height.",
    "question_toks": [
      "Find",
      "the",
      "stories",
      "of",
      "the",
      "building",
      "with",
      "the",
      "largest",
      "height",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT avg(age) FROM Person",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      "FROM",
      "Person"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "person"
    ],
    "question": "What is the average age for all people in the table?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "age",
      "for",
      "all",
      "people",
      "in",
      "the",
      "table",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "addresses",
      "WHERE",
      "state_province_county",
      "=",
      "``",
      "Colorado",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "where",
      "state_province_county",
      "=",
      "value"
    ],
    "question": "Count the number of cities in the state of Colorado.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "cities",
      "in",
      "the",
      "state",
      "of",
      "Colorado",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Colorado\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Documents_with_expenses",
      "WHERE",
      "budget_type_code",
      "=",
      "'SF",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "documents_with_expenses",
      "where",
      "budget_type_code",
      "=",
      "value"
    ],
    "question": "What are the document ids for the budget type code 'SF'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "document",
      "ids",
      "for",
      "the",
      "budget",
      "type",
      "code",
      "'SF",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"SF\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  5",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "classroom",
      "FROM",
      "list",
      "WHERE",
      "grade",
      "=",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "classroom",
      "from",
      "list",
      "where",
      "grade",
      "=",
      "value"
    ],
    "question": "Show me the classrooms grade 5 is using.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "classrooms",
      "grade",
      "5",
      "is",
      "using",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT count(*) FROM list",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "list"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "list"
    ],
    "question": "How many students are there?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Name FROM climber ORDER BY Points DESC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "climber",
      "ORDER",
      "BY",
      "Points",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "climber",
      "order",
      "by",
      "points",
      "desc"
    ],
    "question": "List the names of climbers in descending order of points.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "climbers",
      "in",
      "descending",
      "order",
      "of",
      "points",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT count(DISTINCT Industry) FROM Companies",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Industry",
      ")",
      "FROM",
      "Companies"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "industry",
      ")",
      "from",
      "companies"
    ],
    "question": "How many different industries are the companies in?",
    "question_toks": [
      "How",
      "many",
      "different",
      "industries",
      "are",
      "the",
      "companies",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Customers;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "How many customers are there?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "PROF_NUM",
      ")",
      "FROM",
      "CLASS",
      "WHERE",
      "CRS_CODE",
      "=",
      "``",
      "ACCT-211",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "prof_num",
      ")",
      "from",
      "class",
      "where",
      "crs_code",
      "=",
      "value"
    ],
    "question": "How many professors are teaching class with code ACCT-211?",
    "question_toks": [
      "How",
      "many",
      "professors",
      "are",
      "teaching",
      "class",
      "with",
      "code",
      "ACCT-211",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACCT-211\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC",
    "query_toks": [
      "SELECT",
      "Company",
      "FROM",
      "entrepreneur",
      "ORDER",
      "BY",
      "Money_Requested",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "entrepreneur",
      "order",
      "by",
      "money_requested",
      "desc"
    ],
    "question": "What are the companies of entrepreneurs, ordered descending by amount of money requested?",
    "question_toks": [
      "What",
      "are",
      "the",
      "companies",
      "of",
      "entrepreneurs",
      ",",
      "ordered",
      "descending",
      "by",
      "amount",
      "of",
      "money",
      "requested",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "ohio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "which states border the ohio river",
    "question_toks": [
      "which",
      "states",
      "border",
      "the",
      "ohio",
      "river"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"ohio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code\t  =  \"PUR\"",
    "query_toks": [
      "SELECT",
      "transaction_type_description",
      "FROM",
      "Ref_Transaction_Types",
      "WHERE",
      "transaction_type_code",
      "=",
      "``",
      "PUR",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "transaction_type_description",
      "from",
      "ref_transaction_types",
      "where",
      "transaction_type_code",
      "=",
      "value"
    ],
    "question": "Show the description of transaction type with code \"PUR\".",
    "question_toks": [
      "Show",
      "the",
      "description",
      "of",
      "transaction",
      "type",
      "with",
      "code",
      "``",
      "PUR",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"PUR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "perpetrator",
    "query": "SELECT Name FROM People ORDER BY Height ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "People",
      "ORDER",
      "BY",
      "Height",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "order",
      "by",
      "height",
      "asc"
    ],
    "question": "What are the names of people in ascending order of height?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "people",
      "in",
      "ascending",
      "order",
      "of",
      "height",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "city_population",
      ")",
      "FROM",
      "district",
      "ORDER",
      "BY",
      "city_area",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "city_population",
      ")",
      "from",
      "district",
      "order",
      "by",
      "city_area",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the total population of the top 3 districts with the largest area.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "population",
      "of",
      "the",
      "top",
      "3",
      "districts",
      "with",
      "the",
      "largest",
      "area",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Secretary_Vote",
      "FROM",
      "VOTING_RECORD",
      "WHERE",
      "ELECTION_CYCLE",
      "=",
      "``",
      "Fall",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "secretary_vote",
      "from",
      "voting_record",
      "where",
      "election_cycle",
      "=",
      "value"
    ],
    "question": "Return all the distinct secretary votes made in the fall election cycle.",
    "question_toks": [
      "Return",
      "all",
      "the",
      "distinct",
      "secretary",
      "votes",
      "made",
      "in",
      "the",
      "fall",
      "election",
      "cycle",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Fall\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_mdm",
    "query": "SELECT cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT cmi_cross_ref_id FROM parking_fines",
    "query_toks": [
      "SELECT",
      "cmi_cross_ref_id",
      "FROM",
      "cmi_cross_references",
      "EXCEPT",
      "SELECT",
      "cmi_cross_ref_id",
      "FROM",
      "parking_fines"
    ],
    "query_toks_no_value": [
      "select",
      "cmi_cross_ref_id",
      "from",
      "cmi_cross_references",
      "except",
      "select",
      "cmi_cross_ref_id",
      "from",
      "parking_fines"
    ],
    "question": "Which cmi cross reference id is not related to any parking taxes?",
    "question_toks": [
      "Which",
      "cmi",
      "cross",
      "reference",
      "id",
      "is",
      "not",
      "related",
      "to",
      "any",
      "parking",
      "taxes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              5
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  13,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT avg(Number_of_hosts) FROM party",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Number_of_hosts",
      ")",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "number_of_hosts",
      ")",
      "from",
      "party"
    ],
    "question": "Compute the average number of hosts for parties.",
    "question_toks": [
      "Compute",
      "the",
      "average",
      "number",
      "of",
      "hosts",
      "for",
      "parties",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "event_name",
      "FROM",
      "party_events",
      "GROUP",
      "BY",
      "event_name",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "event_name",
      "from",
      "party_events",
      "group",
      "by",
      "event_name",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "find the event names that have more than 2 records.",
    "question_toks": [
      "find",
      "the",
      "event",
      "names",
      "that",
      "have",
      "more",
      "than",
      "2",
      "records",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "cName",
      "FROM",
      "college",
      "ORDER",
      "BY",
      "enr",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "college",
      "order",
      "by",
      "enr",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the names of the schools with the top 3 largest class sizes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "schools",
      "with",
      "the",
      "top",
      "3",
      "largest",
      "class",
      "sizes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT avg(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "amount_of_transaction",
      ")",
      "FROM",
      "TRANSACTIONS",
      "WHERE",
      "transaction_type_code",
      "=",
      "``",
      "SALE",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "amount_of_transaction",
      ")",
      "from",
      "transactions",
      "where",
      "transaction_type_code",
      "=",
      "value"
    ],
    "question": "Show the average amount of transactions with type code \"SALE\".",
    "question_toks": [
      "Show",
      "the",
      "average",
      "amount",
      "of",
      "transactions",
      "with",
      "type",
      "code",
      "``",
      "SALE",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"SALE\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "ohio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "through which states does the ohio flow",
    "question_toks": [
      "through",
      "which",
      "states",
      "does",
      "the",
      "ohio",
      "flow"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"ohio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\"",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "enzyme",
      "WHERE",
      "name",
      "LIKE",
      "``",
      "%",
      "ALA",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "enzyme",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Which enzyme names have the substring \"ALA\"?",
    "question_toks": [
      "Which",
      "enzyme",
      "names",
      "have",
      "the",
      "substring",
      "``",
      "ALA",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"%ALA%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(DISTINCT dept_name) FROM course",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dept_name",
      ")",
      "FROM",
      "course"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dept_name",
      ")",
      "from",
      "course"
    ],
    "question": "Count the number of departments which offer courses.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "departments",
      "which",
      "offer",
      "courses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Employee",
      "ORDER",
      "BY",
      "salary",
      "ASC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "employee",
      "order",
      "by",
      "salary",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the name of the 3 employees who get paid the least?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "3",
      "employees",
      "who",
      "get",
      "paid",
      "the",
      "least",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT sum(student_capacity) FROM dorm",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "student_capacity",
      ")",
      "FROM",
      "dorm"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "student_capacity",
      ")",
      "from",
      "dorm"
    ],
    "question": "Find the total capacity of all dorms.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "capacity",
      "of",
      "all",
      "dorms",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "california",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how many citizens live in california",
    "question_toks": [
      "how",
      "many",
      "citizens",
      "live",
      "in",
      "california"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"california\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT count(DISTINCT payment_method_code) FROM parties",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "payment_method_code",
      ")",
      "FROM",
      "parties"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "payment_method_code",
      ")",
      "from",
      "parties"
    ],
    "question": "How many distinct payment methods are used by parties?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "payment",
      "methods",
      "are",
      "used",
      "by",
      "parties",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT eid FROM Employee WHERE salary  >  100000",
    "query_toks": [
      "SELECT",
      "eid",
      "FROM",
      "Employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "eid",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "Show ids for all employees with at least 100000 salary.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "all",
      "employees",
      "with",
      "at",
      "least",
      "100000",
      "salary",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          100000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT DISTINCT country FROM artist",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "country",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "country",
      "from",
      "artist"
    ],
    "question": "What are all distinct country for artists?",
    "question_toks": [
      "What",
      "are",
      "all",
      "distinct",
      "country",
      "for",
      "artists",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT CName FROM COURSE WHERE Credits  =  1",
    "query_toks": [
      "SELECT",
      "CName",
      "FROM",
      "COURSE",
      "WHERE",
      "Credits",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "course",
      "where",
      "credits",
      "=",
      "value"
    ],
    "question": "What are the names of courses with 1 credit?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "courses",
      "with",
      "1",
      "credit",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3",
    "query_toks": [
      "SELECT",
      "Publication_Date",
      "FROM",
      "publication",
      "ORDER",
      "BY",
      "Price",
      "ASC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "publication_date",
      "from",
      "publication",
      "order",
      "by",
      "price",
      "asc",
      "limit",
      "value"
    ],
    "question": "List the publication dates of publications with 3 lowest prices.",
    "question_toks": [
      "List",
      "the",
      "publication",
      "dates",
      "of",
      "publications",
      "with",
      "3",
      "lowest",
      "prices",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT sum(Num_of_Audience) FROM festival_detail",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Num_of_Audience",
      ")",
      "FROM",
      "festival_detail"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "num_of_audience",
      ")",
      "from",
      "festival_detail"
    ],
    "question": "What are the total number of the audiences who visited any of the festivals?",
    "question_toks": [
      "What",
      "are",
      "the",
      "total",
      "number",
      "of",
      "the",
      "audiences",
      "who",
      "visited",
      "any",
      "of",
      "the",
      "festivals",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT avg(HS) FROM Player",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "HS",
      ")",
      "FROM",
      "Player"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "hs",
      ")",
      "from",
      "player"
    ],
    "question": "How many hours do the players train on average?",
    "question_toks": [
      "How",
      "many",
      "hours",
      "do",
      "the",
      "players",
      "train",
      "on",
      "average",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT text ) FROM review WHERE MONTH  =  \"March\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "text",
      ")",
      "FROM",
      "review",
      "WHERE",
      "MONTH",
      "=",
      "``",
      "March",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "text",
      ")",
      "from",
      "review",
      "where",
      "month",
      "=",
      "value"
    ],
    "question": "Find the total number of reviews written in March",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "reviews",
      "written",
      "in",
      "March"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          "\"March\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT avg(access_count) FROM documents",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "access_count",
      ")",
      "FROM",
      "documents"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "access_count",
      ")",
      "from",
      "documents"
    ],
    "question": "What is the average access count of documents?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "access",
      "count",
      "of",
      "documents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "gdp",
      "FROM",
      "city",
      "ORDER",
      "BY",
      "Regional_Population",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "gdp",
      "from",
      "city",
      "order",
      "by",
      "regional_population",
      "desc",
      "limit",
      "value"
    ],
    "question": "what is the GDP of the city with the largest population.",
    "question_toks": [
      "what",
      "is",
      "the",
      "GDP",
      "of",
      "the",
      "city",
      "with",
      "the",
      "largest",
      "population",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT * FROM COURSE ORDER BY Credits",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "COURSE",
      "ORDER",
      "BY",
      "Credits"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "course",
      "order",
      "by",
      "credits"
    ],
    "question": "What is all the information about courses, ordered by credits ascending?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "information",
      "about",
      "courses",
      ",",
      "ordered",
      "by",
      "credits",
      "ascending",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "bname",
      "FROM",
      "bank",
      "ORDER",
      "BY",
      "no_of_customers",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "bname",
      "from",
      "bank",
      "order",
      "by",
      "no_of_customers",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the bank branch with the greatest number of customers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "bank",
      "branch",
      "with",
      "the",
      "greatest",
      "number",
      "of",
      "customers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT city_name FROM city WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "city_name",
      "FROM",
      "city",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "city_name",
      "from",
      "city",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what cities are located in texas",
    "question_toks": [
      "what",
      "cities",
      "are",
      "located",
      "in",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\"",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "shipments",
      "WHERE",
      "shipment_tracking_number",
      "=",
      "``",
      "3452",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "shipments",
      "where",
      "shipment_tracking_number",
      "=",
      "value"
    ],
    "question": "Find the id of the order whose shipment tracking number is \"3452\".",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "order",
      "whose",
      "shipment",
      "tracking",
      "number",
      "is",
      "``",
      "3452",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"3452\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "order_id",
      "FROM",
      "orders",
      "ORDER",
      "BY",
      "date_order_placed"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "order_id",
      "from",
      "orders",
      "order",
      "by",
      "date_order_placed"
    ],
    "question": "List the ids of all distinct orders ordered by placed date.",
    "question_toks": [
      "List",
      "the",
      "ids",
      "of",
      "all",
      "distinct",
      "orders",
      "ordered",
      "by",
      "placed",
      "date",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE LENGTH  >  750;",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "LENGTH",
      ">",
      "750",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "length",
      ">",
      "value"
    ],
    "question": "what states contain at least one major rivers",
    "question_toks": [
      "what",
      "states",
      "contain",
      "at",
      "least",
      "one",
      "major",
      "rivers"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          750.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT DISTINCT forename FROM drivers ORDER BY forename ASC",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "forename",
      "FROM",
      "drivers",
      "ORDER",
      "BY",
      "forename",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "forename",
      "from",
      "drivers",
      "order",
      "by",
      "forename",
      "asc"
    ],
    "question": "List the forenames of all distinct drivers in alphabetical order?",
    "question_toks": [
      "List",
      "the",
      "forenames",
      "of",
      "all",
      "distinct",
      "drivers",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\"",
    "query_toks": [
      "SELECT",
      "problem_id",
      "FROM",
      "problems",
      "WHERE",
      "date_problem_reported",
      "<",
      "``",
      "1978-06-26",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "problem_id",
      "from",
      "problems",
      "where",
      "date_problem_reported",
      "<",
      "value"
    ],
    "question": "Which problems are reported before 1978-06-26? Give me the ids of the problems.",
    "question_toks": [
      "Which",
      "problems",
      "are",
      "reported",
      "before",
      "1978-06-26",
      "?",
      "Give",
      "me",
      "the",
      "ids",
      "of",
      "the",
      "problems",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"1978-06-26\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "hire_date",
      ">",
      "'1987-09-07",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "hire_date",
      ">",
      "value"
    ],
    "question": "display those employees who joined after 7th September, 1987.",
    "question_toks": [
      "display",
      "those",
      "employees",
      "who",
      "joined",
      "after",
      "7th",
      "September",
      ",",
      "1987",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"1987-09-07\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy",
      "GROUP",
      "BY",
      "StuID",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "has_allergy",
      "group",
      "by",
      "stuid",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show all student IDs who have at least two allergies.",
    "question_toks": [
      "Show",
      "all",
      "student",
      "IDs",
      "who",
      "have",
      "at",
      "least",
      "two",
      "allergies",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT DISTINCT name FROM medication ORDER BY name",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "name",
      "FROM",
      "medication",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "medication",
      "order",
      "by",
      "name"
    ],
    "question": "List the names of all distinct medications, ordered in an alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "distinct",
      "medications",
      ",",
      "ordered",
      "in",
      "an",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT count(DISTINCT affiliation) FROM university",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "affiliation",
      ")",
      "FROM",
      "university"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "affiliation",
      ")",
      "from",
      "university"
    ],
    "question": "Count the number of different affiliation types.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "affiliation",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                17,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "border",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "border",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what states border kentucky",
    "question_toks": [
      "what",
      "states",
      "border",
      "kentucky"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\"",
    "query_toks": [
      "SELECT",
      "building_short_name",
      "FROM",
      "Apartment_Buildings",
      "WHERE",
      "building_manager",
      "=",
      "``",
      "Emma",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "building_short_name",
      "from",
      "apartment_buildings",
      "where",
      "building_manager",
      "=",
      "value"
    ],
    "question": "Which buildings does \"Emma\" manage? Give me the short names of the buildings.",
    "question_toks": [
      "Which",
      "buildings",
      "does",
      "``",
      "Emma",
      "''",
      "manage",
      "?",
      "Give",
      "me",
      "the",
      "short",
      "names",
      "of",
      "the",
      "buildings",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Emma\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\"",
    "query_toks": [
      "SELECT",
      "product_description",
      "FROM",
      "products",
      "WHERE",
      "product_name",
      "=",
      "``",
      "Chocolate",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_description",
      "from",
      "products",
      "where",
      "product_name",
      "=",
      "value"
    ],
    "question": "Return the description of the product called \"Chocolate\".",
    "question_toks": [
      "Return",
      "the",
      "description",
      "of",
      "the",
      "product",
      "called",
      "``",
      "Chocolate",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Chocolate\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT avg(Enrollment) FROM school",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Enrollment",
      ")",
      "FROM",
      "school"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enrollment",
      ")",
      "from",
      "school"
    ],
    "question": "Take the average of the school enrollment.",
    "question_toks": [
      "Take",
      "the",
      "average",
      "of",
      "the",
      "school",
      "enrollment",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\"",
    "query_toks": [
      "SELECT",
      "rID",
      "FROM",
      "Reviewer",
      "WHERE",
      "name",
      "=",
      "``",
      "Daniel",
      "Lewis",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "rid",
      "from",
      "reviewer",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What is the id of the reviewer named Daniel Lewis?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "reviewer",
      "named",
      "Daniel",
      "Lewis",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Daniel Lewis\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT count(DISTINCT POSITION) FROM player",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "POSITION",
      ")",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "position",
      ")",
      "from",
      "player"
    ],
    "question": "Count the number of distinct player positions.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "player",
      "positions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                25,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT avg(length_feet) FROM bridge",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "length_feet",
      ")",
      "FROM",
      "bridge"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "length_feet",
      ")",
      "from",
      "bridge"
    ],
    "question": "What is the average length in feet of the bridges?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "length",
      "in",
      "feet",
      "of",
      "the",
      "bridges",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "revenue",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "headquarter",
      "=",
      "'Austin",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "revenue",
      ")",
      "from",
      "manufacturers",
      "where",
      "headquarter",
      "=",
      "value"
    ],
    "question": "Find the total revenue created by the companies whose headquarter is located at Austin.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "revenue",
      "created",
      "by",
      "the",
      "companies",
      "whose",
      "headquarter",
      "is",
      "located",
      "at",
      "Austin",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Austin\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "ohio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "which states does the ohio river pass through",
    "question_toks": [
      "which",
      "states",
      "does",
      "the",
      "ohio",
      "river",
      "pass",
      "through"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"ohio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "acc_percent",
      "FROM",
      "basketball_match",
      "ORDER",
      "BY",
      "acc_percent",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "acc_percent",
      "from",
      "basketball_match",
      "order",
      "by",
      "acc_percent",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the highest acc percent score in the competition?",
    "question_toks": [
      "What",
      "is",
      "the",
      "highest",
      "acc",
      "percent",
      "score",
      "in",
      "the",
      "competition",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT avg(enr) FROM College WHERE state  =  'FL'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "enr",
      ")",
      "FROM",
      "College",
      "WHERE",
      "state",
      "=",
      "'FL",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enr",
      ")",
      "from",
      "college",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "What is average number of students enrolled in Florida colleges?",
    "question_toks": [
      "What",
      "is",
      "average",
      "number",
      "of",
      "students",
      "enrolled",
      "in",
      "Florida",
      "colleges",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"FL\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(*) FROM Video_games WHERE gtype  =  \"Massively multiplayer online game\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Video_games",
      "WHERE",
      "gtype",
      "=",
      "``",
      "Massively",
      "multiplayer",
      "online",
      "game",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "video_games",
      "where",
      "gtype",
      "=",
      "value"
    ],
    "question": "Count the number of video games with Massively multiplayer online game type .",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "video",
      "games",
      "with",
      "Massively",
      "multiplayer",
      "online",
      "game",
      "type",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Massively multiplayer online game\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_deliveries",
    "query": "SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "Customers",
      "ORDER",
      "BY",
      "date_became_customer",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers",
      "order",
      "by",
      "date_became_customer",
      "limit",
      "value"
    ],
    "question": "Find the name of the first 5 customers.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "first",
      "5",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 5,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT capital FROM state WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "capital",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "capital",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is capital of texas",
    "question_toks": [
      "what",
      "is",
      "capital",
      "of",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT MAX ( highest_elevation ) FROM highlow;",
    "query_toks": [
      "SELECT",
      "MAX",
      "(",
      "highest_elevation",
      ")",
      "FROM",
      "highlow",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "highest_elevation",
      ")",
      "from",
      "highlow"
    ],
    "question": "what is the height of the highest point in the usa",
    "question_toks": [
      "what",
      "is",
      "the",
      "height",
      "of",
      "the",
      "highest",
      "point",
      "in",
      "the",
      "usa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3",
    "query_toks": [
      "SELECT",
      "payment_method_code",
      "FROM",
      "parties",
      "GROUP",
      "BY",
      "payment_method_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "payment_method_code",
      "from",
      "parties",
      "group",
      "by",
      "payment_method_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the payment method code used by more than 3 parties.",
    "question_toks": [
      "Find",
      "the",
      "payment",
      "method",
      "code",
      "used",
      "by",
      "more",
      "than",
      "3",
      "parties",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          29,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Documents_with_expenses",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents_with_expenses"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents_with_expenses"
    ],
    "question": "Count the number of documents with expenses.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "documents",
      "with",
      "expenses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "apt_number",
      "FROM",
      "Apartments",
      "ORDER",
      "BY",
      "bedroom_count",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "apt_number",
      "from",
      "apartments",
      "order",
      "by",
      "bedroom_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the apartment number of the apartment with the most beds?",
    "question_toks": [
      "What",
      "is",
      "the",
      "apartment",
      "number",
      "of",
      "the",
      "apartment",
      "with",
      "the",
      "most",
      "beds",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_injury",
    "query": "SELECT name FROM stadium WHERE name LIKE \"%Bank%\"",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "stadium",
      "WHERE",
      "name",
      "LIKE",
      "``",
      "%",
      "Bank",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "stadium",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Which stadium name contains the substring \"Bank\"?",
    "question_toks": [
      "Which",
      "stadium",
      "name",
      "contains",
      "the",
      "substring",
      "``",
      "Bank",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Bank%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT area FROM state;",
    "query_toks": [
      "SELECT",
      "area",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "area",
      "from",
      "state"
    ],
    "question": "what is the area of the states",
    "question_toks": [
      "what",
      "is",
      "the",
      "area",
      "of",
      "the",
      "states"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT cust_name FROM customer ORDER BY acc_bal",
    "query_toks": [
      "SELECT",
      "cust_name",
      "FROM",
      "customer",
      "ORDER",
      "BY",
      "acc_bal"
    ],
    "query_toks_no_value": [
      "select",
      "cust_name",
      "from",
      "customer",
      "order",
      "by",
      "acc_bal"
    ],
    "question": "List the name of all customers sorted by their account balance in ascending order.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "all",
      "customers",
      "sorted",
      "by",
      "their",
      "account",
      "balance",
      "in",
      "ascending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT COUNT (DISTINCT director) FROM movie",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "director",
      ")",
      "FROM",
      "movie"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "director",
      ")",
      "from",
      "movie"
    ],
    "question": "Count the number of different directors.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "directors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT SUM ( LENGTH ) FROM river;",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "LENGTH",
      ")",
      "FROM",
      "river",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "length",
      ")",
      "from",
      "river"
    ],
    "question": "what is the total length of all rivers in the usa",
    "question_toks": [
      "what",
      "is",
      "the",
      "total",
      "length",
      "of",
      "all",
      "rivers",
      "in",
      "the",
      "usa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Documents",
      "EXCEPT",
      "SELECT",
      "document_id",
      "FROM",
      "Documents_with_expenses"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "documents",
      "except",
      "select",
      "document_id",
      "from",
      "documents_with_expenses"
    ],
    "question": "Return the ids of documents that do not have expenses.",
    "question_toks": [
      "Return",
      "the",
      "ids",
      "of",
      "documents",
      "that",
      "do",
      "not",
      "have",
      "expenses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              5
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  17,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT MAX ( highest_elevation ) FROM highlow;",
    "query_toks": [
      "SELECT",
      "MAX",
      "(",
      "highest_elevation",
      ")",
      "FROM",
      "highlow",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "highest_elevation",
      ")",
      "from",
      "highlow"
    ],
    "question": "what is the elevation of the highest point in the usa",
    "question_toks": [
      "what",
      "is",
      "the",
      "elevation",
      "of",
      "the",
      "highest",
      "point",
      "in",
      "the",
      "usa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "border",
      ")",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "border",
      ")",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the number of neighboring states for kentucky",
    "question_toks": [
      "what",
      "is",
      "the",
      "number",
      "of",
      "neighboring",
      "states",
      "for",
      "kentucky"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"Team Orton\"",
    "query_toks": [
      "SELECT",
      "Elimination_Move",
      "FROM",
      "Elimination",
      "WHERE",
      "Team",
      "=",
      "``",
      "Team",
      "Orton",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "elimination_move",
      "from",
      "elimination",
      "where",
      "team",
      "=",
      "value"
    ],
    "question": "Return the elimination movies of wrestlers on Team Orton.",
    "question_toks": [
      "Return",
      "the",
      "elimination",
      "movies",
      "of",
      "wrestlers",
      "on",
      "Team",
      "Orton",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Team Orton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "ohio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "which states does the ohio run through",
    "question_toks": [
      "which",
      "states",
      "does",
      "the",
      "ohio",
      "run",
      "through"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"ohio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_deliveries",
    "query": "SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "product_name",
      "FROM",
      "products",
      "ORDER",
      "BY",
      "product_price",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      "from",
      "products",
      "order",
      "by",
      "product_price",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name of the most expensive product.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "most",
      "expensive",
      "product",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors",
    "query_toks": [
      "SELECT",
      "address_line_1",
      "FROM",
      "Course_Authors_and_Tutors"
    ],
    "query_toks_no_value": [
      "select",
      "address_line_1",
      "from",
      "course_authors_and_tutors"
    ],
    "question": "List the addresses of all the course authors or tutors.",
    "question_toks": [
      "List",
      "the",
      "addresses",
      "of",
      "all",
      "the",
      "course",
      "authors",
      "or",
      "tutors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "journal_committee",
    "query": "SELECT DISTINCT Theme FROM journal",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Theme",
      "FROM",
      "journal"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "theme",
      "from",
      "journal"
    ],
    "question": "Show the distinct themes of journals.",
    "question_toks": [
      "Show",
      "the",
      "distinct",
      "themes",
      "of",
      "journals",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT Name FROM WINE ORDER BY price",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Name",
      "FROM",
      "WINE",
      "ORDER",
      "BY",
      "price"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "wine",
      "order",
      "by",
      "price"
    ],
    "question": "What are the names of wines, sorted by price ascending?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wines",
      ",",
      "sorted",
      "by",
      "price",
      "ascending",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Country FROM mountain WHERE Height  >  5000",
    "query_toks": [
      "SELECT",
      "Country",
      "FROM",
      "mountain",
      "WHERE",
      "Height",
      ">",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "mountain",
      "where",
      "height",
      ">",
      "value"
    ],
    "question": "Return the countries of the mountains that have a height larger than 5000.",
    "question_toks": [
      "Return",
      "the",
      "countries",
      "of",
      "the",
      "mountains",
      "that",
      "have",
      "a",
      "height",
      "larger",
      "than",
      "5000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          5000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;",
    "query_toks": [
      "SELECT",
      "vehicle_details",
      "FROM",
      "Vehicles",
      "WHERE",
      "vehicle_id",
      "=",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "vehicle_details",
      "from",
      "vehicles",
      "where",
      "vehicle_id",
      "=",
      "value"
    ],
    "question": "What are the details of the car with id 1?",
    "question_toks": [
      "What",
      "are",
      "the",
      "details",
      "of",
      "the",
      "car",
      "with",
      "id",
      "1",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_for_hire",
    "query": "SELECT count(DISTINCT product_type_code) FROM products_for_hire",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "product_type_code",
      ")",
      "FROM",
      "products_for_hire"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "product_type_code",
      ")",
      "from",
      "products_for_hire"
    ],
    "question": "How many different product types are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "product",
      "types",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                24,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT count(*) FROM Reviewer",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Reviewer"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "reviewer"
    ],
    "question": "How many reviewers are there?",
    "question_toks": [
      "How",
      "many",
      "reviewers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Phone FROM EMPLOYEE",
    "query_toks": [
      "SELECT",
      "Phone",
      "FROM",
      "EMPLOYEE"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employee"
    ],
    "question": "List the phone numbers of all employees.",
    "question_toks": [
      "List",
      "the",
      "phone",
      "numbers",
      "of",
      "all",
      "employees",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "mountain",
      "WHERE",
      "mountain_name",
      "=",
      "``",
      "whitney",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "mountain",
      "where",
      "mountain_name",
      "=",
      "value"
    ],
    "question": "which state is mount whitney in",
    "question_toks": [
      "which",
      "state",
      "is",
      "mount",
      "whitney",
      "in"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"whitney\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_mdm",
    "query": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "source_system_code",
      "FROM",
      "cmi_cross_references",
      "WHERE",
      "source_system_code",
      "LIKE",
      "'",
      "%",
      "en",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "source_system_code",
      "from",
      "cmi_cross_references",
      "where",
      "source_system_code",
      "like",
      "value"
    ],
    "question": "Which distinct source system code includes the substring 'en'?",
    "question_toks": [
      "Which",
      "distinct",
      "source",
      "system",
      "code",
      "includes",
      "the",
      "substring",
      "'en",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"%en%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\"",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "LOCATION",
      "=",
      "``",
      "Chico",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "location",
      "=",
      "value"
    ],
    "question": "What are the names of all campuses located at Chico?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "campuses",
      "located",
      "at",
      "Chico",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Chico\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT subject_name FROM SUBJECTS",
    "query_toks": [
      "SELECT",
      "subject_name",
      "FROM",
      "SUBJECTS"
    ],
    "query_toks_no_value": [
      "select",
      "subject_name",
      "from",
      "subjects"
    ],
    "question": "List all the subject names.",
    "question_toks": [
      "List",
      "all",
      "the",
      "subject",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "district_name",
      "FROM",
      "district",
      "ORDER",
      "BY",
      "city_population",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "district_name",
      "from",
      "district",
      "order",
      "by",
      "city_population",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the district with the most residents?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "district",
      "with",
      "the",
      "most",
      "residents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Starting_Year",
      "FROM",
      "technician",
      "ORDER",
      "BY",
      "Age",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "starting_year",
      "from",
      "technician",
      "order",
      "by",
      "age",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the starting year for the oldest technician?",
    "question_toks": [
      "What",
      "is",
      "the",
      "starting",
      "year",
      "for",
      "the",
      "oldest",
      "technician",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT count(*) FROM cinema",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "cinema"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "cinema"
    ],
    "question": "Count the number of cinemas.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "cinemas",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election_representative",
    "query": "SELECT count(*) FROM election",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "election"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "election"
    ],
    "question": "How many elections are there?",
    "question_toks": [
      "How",
      "many",
      "elections",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT name FROM station WHERE lat  <  37.5",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "station",
      "WHERE",
      "lat",
      "<",
      "37.5"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "station",
      "where",
      "lat",
      "<",
      "value"
    ],
    "question": "What are the names of all stations with a latitude smaller than 37.5?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "stations",
      "with",
      "a",
      "latitude",
      "smaller",
      "than",
      "37.5",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          37.5,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT count(DISTINCT region_id) FROM affected_region",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "region_id",
      ")",
      "FROM",
      "affected_region"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "region_id",
      ")",
      "from",
      "affected_region"
    ],
    "question": "How many regions are affected?",
    "question_toks": [
      "How",
      "many",
      "regions",
      "are",
      "affected",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'",
    "query_toks": [
      "SELECT",
      "class_code",
      "FROM",
      "CLASS",
      "WHERE",
      "class_room",
      "=",
      "'KLR209",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "class_code",
      "from",
      "class",
      "where",
      "class_room",
      "=",
      "value"
    ],
    "question": "What are the codes of all the courses that are located in room KLR209?",
    "question_toks": [
      "What",
      "are",
      "the",
      "codes",
      "of",
      "all",
      "the",
      "courses",
      "that",
      "are",
      "located",
      "in",
      "room",
      "KLR209",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"KLR209\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT DISTINCT fname FROM student",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "fname",
      "FROM",
      "student"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "fname",
      "from",
      "student"
    ],
    "question": "What are the first names of all the students?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "all",
      "the",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(DISTINCT city) FROM Person",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "Person"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "person"
    ],
    "question": "How many different cities do people originate from?",
    "question_toks": [
      "How",
      "many",
      "different",
      "cities",
      "do",
      "people",
      "originate",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "riding_club",
    "query": "SELECT Residence FROM player GROUP BY Residence HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "Residence",
      "FROM",
      "player",
      "GROUP",
      "BY",
      "Residence",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "residence",
      "from",
      "player",
      "group",
      "by",
      "residence",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show the residences that have at least two players.",
    "question_toks": [
      "Show",
      "the",
      "residences",
      "that",
      "have",
      "at",
      "least",
      "two",
      "players",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "acc_percent",
      "FROM",
      "basketball_match",
      "ORDER",
      "BY",
      "acc_percent",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "acc_percent",
      "from",
      "basketball_match",
      "order",
      "by",
      "acc_percent",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the highest acc percent across all basketball matches.",
    "question_toks": [
      "Return",
      "the",
      "highest",
      "acc",
      "percent",
      "across",
      "all",
      "basketball",
      "matches",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\"",
    "query_toks": [
      "SELECT",
      "CName",
      "FROM",
      "COURSE",
      "WHERE",
      "Days",
      "=",
      "``",
      "MTW",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "course",
      "where",
      "days",
      "=",
      "value"
    ],
    "question": "Which courses are taught on days MTW?",
    "question_toks": [
      "Which",
      "courses",
      "are",
      "taught",
      "on",
      "days",
      "MTW",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          "\"MTW\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT state FROM business WHERE name  =  \"Whataburger\";",
    "query_toks": [
      "SELECT",
      "state",
      "FROM",
      "business",
      "WHERE",
      "name",
      "=",
      "``",
      "Whataburger",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state",
      "from",
      "business",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Find all states in which there is a Whataburger",
    "question_toks": [
      "Find",
      "all",
      "states",
      "in",
      "which",
      "there",
      "is",
      "a",
      "Whataburger"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Whataburger\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "traverse",
      ")",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "missouri",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "traverse",
      ")",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "how many states does the missouri run through",
    "question_toks": [
      "how",
      "many",
      "states",
      "does",
      "the",
      "missouri",
      "run",
      "through"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"missouri\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "california",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how many residents live in california",
    "question_toks": [
      "how",
      "many",
      "residents",
      "live",
      "in",
      "california"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"california\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Invoices",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Invoices"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices"
    ],
    "question": "Count the number of invoices.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "invoices",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT title FROM publication ORDER BY citation_num DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "publication",
      "ORDER",
      "BY",
      "citation_num",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "publication",
      "order",
      "by",
      "citation_num",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the paper with the most citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "with",
      "the",
      "most",
      "citations",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufacturer",
    "query": "SELECT avg(Num_of_Factories) FROM manufacturer WHERE num_of_shops  >  20",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Num_of_Factories",
      ")",
      "FROM",
      "manufacturer",
      "WHERE",
      "num_of_shops",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "num_of_factories",
      ")",
      "from",
      "manufacturer",
      "where",
      "num_of_shops",
      ">",
      "value"
    ],
    "question": "Find the average number of factories for the manufacturers that have more than 20 shops.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "number",
      "of",
      "factories",
      "for",
      "the",
      "manufacturers",
      "that",
      "have",
      "more",
      "than",
      "20",
      "shops",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "WINE",
      "WHERE",
      "Winery",
      "=",
      "``",
      "Robert",
      "Biale",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "wine",
      "where",
      "winery",
      "=",
      "value"
    ],
    "question": "Count the number of wines produced at Robert Biale winery.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "wines",
      "produced",
      "at",
      "Robert",
      "Biale",
      "winery",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Robert Biale\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT MAX ( DISTINCT highest_elevation ) FROM highlow WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "MAX",
      "(",
      "DISTINCT",
      "highest_elevation",
      ")",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "distinct",
      "highest_elevation",
      ")",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the height of the highest mountain in texas",
    "question_toks": [
      "what",
      "is",
      "the",
      "height",
      "of",
      "the",
      "highest",
      "mountain",
      "in",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                14,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT count(DISTINCT city) FROM bank",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "bank"
    ],
    "question": "Find the number of different cities which banks are located at.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "different",
      "cities",
      "which",
      "banks",
      "are",
      "located",
      "at",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT Name FROM technician WHERE Team != \"NYY\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "technician",
      "WHERE",
      "Team",
      "!",
      "=",
      "``",
      "NYY",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "technician",
      "where",
      "team",
      "!",
      "=",
      "value"
    ],
    "question": "List the name of technicians whose team is not \"NYY\".",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "technicians",
      "whose",
      "team",
      "is",
      "not",
      "``",
      "NYY",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"NYY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT density FROM state WHERE capital  =  \"austin\";",
    "query_toks": [
      "SELECT",
      "density",
      "FROM",
      "state",
      "WHERE",
      "capital",
      "=",
      "``",
      "austin",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "density",
      "from",
      "state",
      "where",
      "capital",
      "=",
      "value"
    ],
    "question": "what is the population density in the state with capital austin",
    "question_toks": [
      "what",
      "is",
      "the",
      "population",
      "density",
      "in",
      "the",
      "state",
      "with",
      "capital",
      "austin"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"austin\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(DISTINCT language_id) FROM film",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "language_id",
      ")",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "language_id",
      ")",
      "from",
      "film"
    ],
    "question": "How many languages are in these films?",
    "question_toks": [
      "How",
      "many",
      "languages",
      "are",
      "in",
      "these",
      "films",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                36,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "debate",
    "query": "SELECT DISTINCT Venue FROM debate",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Venue",
      "FROM",
      "debate"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "venue",
      "from",
      "debate"
    ],
    "question": "Show the distinct venues of debates",
    "question_toks": [
      "Show",
      "the",
      "distinct",
      "venues",
      "of",
      "debates"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Name FROM city ORDER BY Name ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "city",
      "ORDER",
      "BY",
      "Name",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "city",
      "order",
      "by",
      "name",
      "asc"
    ],
    "question": "What are the names of cities in ascending alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "cities",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT count(*) FROM papers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "papers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "papers"
    ],
    "question": "Count the number of total papers.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "total",
      "papers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT city_code FROM Student WHERE LName  =  \"Kim\"",
    "query_toks": [
      "SELECT",
      "city_code",
      "FROM",
      "Student",
      "WHERE",
      "LName",
      "=",
      "``",
      "Kim",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "city_code",
      "from",
      "student",
      "where",
      "lname",
      "=",
      "value"
    ],
    "question": "Which city does the student whose last name is \"Kim\" live in?",
    "question_toks": [
      "Which",
      "city",
      "does",
      "the",
      "student",
      "whose",
      "last",
      "name",
      "is",
      "``",
      "Kim",
      "''",
      "live",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Kim\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT fname FROM authors WHERE lname  =  \"Ueno\"",
    "query_toks": [
      "SELECT",
      "fname",
      "FROM",
      "authors",
      "WHERE",
      "lname",
      "=",
      "``",
      "Ueno",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "authors",
      "where",
      "lname",
      "=",
      "value"
    ],
    "question": "What is the first name of the author with last name \"Ueno\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "first",
      "name",
      "of",
      "the",
      "author",
      "with",
      "last",
      "name",
      "``",
      "Ueno",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Ueno\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(DISTINCT city) FROM Person",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "Person"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "person"
    ],
    "question": "How many different cities are they from?",
    "question_toks": [
      "How",
      "many",
      "different",
      "cities",
      "are",
      "they",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT area FROM state WHERE state_name  =  \"new mexico\";",
    "query_toks": [
      "SELECT",
      "area",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "new",
      "mexico",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "area",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the area of new mexico in square kilometers",
    "question_toks": [
      "what",
      "is",
      "the",
      "area",
      "of",
      "new",
      "mexico",
      "in",
      "square",
      "kilometers"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"new mexico\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT DISTINCT capital FROM state;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "capital",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "capital",
      "from",
      "state"
    ],
    "question": "name the 50 capitals in the usa",
    "question_toks": [
      "name",
      "the",
      "50",
      "capitals",
      "in",
      "the",
      "usa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT count(DISTINCT Name) FROM PHOTOS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Name",
      ")",
      "FROM",
      "PHOTOS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "photos"
    ],
    "question": "How many distinct names are associated with all the photos?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "names",
      "are",
      "associated",
      "with",
      "all",
      "the",
      "photos",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            13
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT count(*) FROM stadium",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "stadium"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "stadium"
    ],
    "question": "How many stadiums are there?",
    "question_toks": [
      "How",
      "many",
      "stadiums",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name FROM program ORDER BY launch",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "program",
      "ORDER",
      "BY",
      "launch"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "program",
      "order",
      "by",
      "launch"
    ],
    "question": "list all the names of programs, ordering by launch time.",
    "question_toks": [
      "list",
      "all",
      "the",
      "names",
      "of",
      "programs",
      ",",
      "ordering",
      "by",
      "launch",
      "time",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "projects",
      "ORDER",
      "BY",
      "hours",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "projects",
      "order",
      "by",
      "hours",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name of project that continues for the longest time.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "project",
      "that",
      "continues",
      "for",
      "the",
      "longest",
      "time",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Song FROM volume ORDER BY Song",
    "query_toks": [
      "SELECT",
      "Song",
      "FROM",
      "volume",
      "ORDER",
      "BY",
      "Song"
    ],
    "query_toks_no_value": [
      "select",
      "song",
      "from",
      "volume",
      "order",
      "by",
      "song"
    ],
    "question": "Please list all songs in volumes in ascending alphabetical order.",
    "question_toks": [
      "Please",
      "list",
      "all",
      "songs",
      "in",
      "volumes",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\"",
    "query_toks": [
      "SELECT",
      "Famous_Title",
      "FROM",
      "artist",
      "WHERE",
      "Artist",
      "=",
      "``",
      "Triumfall",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "famous_title",
      "from",
      "artist",
      "where",
      "artist",
      "=",
      "value"
    ],
    "question": "What are the famous titles of the artist \"Triumfall\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "famous",
      "titles",
      "of",
      "the",
      "artist",
      "``",
      "Triumfall",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Triumfall\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Fname",
      "FROM",
      "STUDENT",
      "WHERE",
      "Fname",
      "LIKE",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "fname",
      "from",
      "student",
      "where",
      "fname",
      "like",
      "value"
    ],
    "question": "Find the first names of students whose first names contain letter \"a\".",
    "question_toks": [
      "Find",
      "the",
      "first",
      "names",
      "of",
      "students",
      "whose",
      "first",
      "names",
      "contain",
      "letter",
      "``",
      "a",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"%a%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Theme FROM farm_competition ORDER BY YEAR ASC",
    "query_toks": [
      "SELECT",
      "Theme",
      "FROM",
      "farm_competition",
      "ORDER",
      "BY",
      "YEAR",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "theme",
      "from",
      "farm_competition",
      "order",
      "by",
      "year",
      "asc"
    ],
    "question": "What are the themes of farm competitions sorted by year in ascending order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "themes",
      "of",
      "farm",
      "competitions",
      "sorted",
      "by",
      "year",
      "in",
      "ascending",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT count(*) FROM club_rank WHERE Total  <  10",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "club_rank",
      "WHERE",
      "Total",
      "<",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "club_rank",
      "where",
      "total",
      "<",
      "value"
    ],
    "question": "How many clubs have total medals less than 10?",
    "question_toks": [
      "How",
      "many",
      "clubs",
      "have",
      "total",
      "medals",
      "less",
      "than",
      "10",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "TRACK",
      "WHERE",
      "Name",
      "LIKE",
      "'",
      "%",
      "you",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "track",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "What are the names of tracks that contain the the word you in them?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "tracks",
      "that",
      "contain",
      "the",
      "the",
      "word",
      "you",
      "in",
      "them",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                57,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              57,
              false
            ],
            null
          ],
          "\"%you%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = \"UPS\";",
    "query_toks": [
      "SELECT",
      "shipping_agent_code",
      "FROM",
      "Ref_Shipping_Agents",
      "WHERE",
      "shipping_agent_name",
      "=",
      "``",
      "UPS",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "shipping_agent_code",
      "from",
      "ref_shipping_agents",
      "where",
      "shipping_agent_name",
      "=",
      "value"
    ],
    "question": "What is the shipping agent code of shipping agent UPS?",
    "question_toks": [
      "What",
      "is",
      "the",
      "shipping",
      "agent",
      "code",
      "of",
      "shipping",
      "agent",
      "UPS",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"UPS\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_deliveries",
    "query": "SELECT truck_details FROM trucks ORDER BY truck_licence_number",
    "query_toks": [
      "SELECT",
      "truck_details",
      "FROM",
      "trucks",
      "ORDER",
      "BY",
      "truck_licence_number"
    ],
    "query_toks_no_value": [
      "select",
      "truck_details",
      "from",
      "trucks",
      "order",
      "by",
      "truck_licence_number"
    ],
    "question": "Show the details of all trucks in the order of their license number.",
    "question_toks": [
      "Show",
      "the",
      "details",
      "of",
      "all",
      "trucks",
      "in",
      "the",
      "order",
      "of",
      "their",
      "license",
      "number",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                41,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              40,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT count(*) FROM climber",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "climber"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "climber"
    ],
    "question": "Count the number of climbers.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "climbers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT course_name FROM courses ORDER BY course_name",
    "query_toks": [
      "SELECT",
      "course_name",
      "FROM",
      "courses",
      "ORDER",
      "BY",
      "course_name"
    ],
    "query_toks_no_value": [
      "select",
      "course_name",
      "from",
      "courses",
      "order",
      "by",
      "course_name"
    ],
    "question": "List the names of courses in alphabetical order?",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "courses",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT distinct(BillingCountry) FROM INVOICE",
    "query_toks": [
      "SELECT",
      "distinct",
      "(",
      "BillingCountry",
      ")",
      "FROM",
      "INVOICE"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "(",
      "billingcountry",
      ")",
      "from",
      "invoice"
    ],
    "question": "Find the different billing countries for all invoices.",
    "question_toks": [
      "Find",
      "the",
      "different",
      "billing",
      "countries",
      "for",
      "all",
      "invoices",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                42,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT paperid FROM paper WHERE YEAR != 2015;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "paperid",
      "FROM",
      "paper",
      "WHERE",
      "YEAR",
      "!",
      "=",
      "2015",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "paperid",
      "from",
      "paper",
      "where",
      "year",
      "!",
      "=",
      "value"
    ],
    "question": "papers that were not published in the last year",
    "question_toks": [
      "papers",
      "that",
      "were",
      "not",
      "published",
      "in",
      "the",
      "last",
      "year"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT count(*) FROM bank",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "bank"
    ],
    "question": "How many bank branches are there?",
    "question_toks": [
      "How",
      "many",
      "bank",
      "branches",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Sportsinfo",
      "WHERE",
      "onscholarship",
      "=",
      "'Y",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "sportsinfo",
      "where",
      "onscholarship",
      "=",
      "value"
    ],
    "question": "What are the ids for all sporty students who are on scholarship?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "for",
      "all",
      "sporty",
      "students",
      "who",
      "are",
      "on",
      "scholarship",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Y\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT gender FROM TEACHERS WHERE last_name  =  \"Medhurst\"",
    "query_toks": [
      "SELECT",
      "gender",
      "FROM",
      "TEACHERS",
      "WHERE",
      "last_name",
      "=",
      "``",
      "Medhurst",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "gender",
      "from",
      "teachers",
      "where",
      "last_name",
      "=",
      "value"
    ],
    "question": "What is the gender of the teacher with last name \"Medhurst\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "gender",
      "of",
      "the",
      "teacher",
      "with",
      "last",
      "name",
      "``",
      "Medhurst",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          "\"Medhurst\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT date_of_notes FROM Assessment_Notes",
    "query_toks": [
      "SELECT",
      "date_of_notes",
      "FROM",
      "Assessment_Notes"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_notes",
      "from",
      "assessment_notes"
    ],
    "question": "What are the dates of the assessment notes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "dates",
      "of",
      "the",
      "assessment",
      "notes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Destroyed_by_Employee_ID",
      "FROM",
      "Documents_to_be_destroyed"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "destroyed_by_employee_id",
      "from",
      "documents_to_be_destroyed"
    ],
    "question": "Show the ids of all employees who have destroyed a document.",
    "question_toks": [
      "Show",
      "the",
      "ids",
      "of",
      "all",
      "employees",
      "who",
      "have",
      "destroyed",
      "a",
      "document",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT count(*) FROM catalog_contents",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "catalog_contents"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "catalog_contents"
    ],
    "question": "How many products are there in the records?",
    "question_toks": [
      "How",
      "many",
      "products",
      "are",
      "there",
      "in",
      "the",
      "records",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC",
    "query_toks": [
      "SELECT",
      "Shop_Name",
      "FROM",
      "shop",
      "ORDER",
      "BY",
      "Open_Year",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "shop_name",
      "from",
      "shop",
      "order",
      "by",
      "open_year",
      "asc"
    ],
    "question": "What are the names of shops in ascending order of open year?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "shops",
      "in",
      "ascending",
      "order",
      "of",
      "open",
      "year",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "county_public_safety",
      "ORDER",
      "BY",
      "Population",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "county_public_safety",
      "order",
      "by",
      "population",
      "desc"
    ],
    "question": "What are the names of the counties of public safety, ordered by population descending?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "counties",
      "of",
      "public",
      "safety",
      ",",
      "ordered",
      "by",
      "population",
      "descending",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM Aircraft",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft"
    ],
    "question": "How many aircrafts do we have?",
    "question_toks": [
      "How",
      "many",
      "aircrafts",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "storm",
      "WHERE",
      "Number_Deaths",
      ">",
      "0"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "storm",
      "where",
      "number_deaths",
      ">",
      "value"
    ],
    "question": "Count the number of storms in which at least 1 person died.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "storms",
      "in",
      "which",
      "at",
      "least",
      "1",
      "person",
      "died",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          0.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\"",
    "query_toks": [
      "SELECT",
      "role_description",
      "FROM",
      "ROLES",
      "WHERE",
      "role_name",
      "=",
      "``",
      "Proof",
      "Reader",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "role_description",
      "from",
      "roles",
      "where",
      "role_name",
      "=",
      "value"
    ],
    "question": "Show the description for role name \"Proof Reader\".",
    "question_toks": [
      "Show",
      "the",
      "description",
      "for",
      "role",
      "name",
      "``",
      "Proof",
      "Reader",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Proof Reader\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Document_Types",
      "WHERE",
      "document_description",
      "LIKE",
      "'Initial",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "document_types",
      "where",
      "document_description",
      "like",
      "value"
    ],
    "question": "Which document type is described with the prefix 'Initial'?",
    "question_toks": [
      "Which",
      "document",
      "type",
      "is",
      "described",
      "with",
      "the",
      "prefix",
      "'Initial",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Initial%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT Fname FROM STUDENT ORDER BY Age DESC",
    "query_toks": [
      "SELECT",
      "Fname",
      "FROM",
      "STUDENT",
      "ORDER",
      "BY",
      "Age",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "student",
      "order",
      "by",
      "age",
      "desc"
    ],
    "question": "Find the first name of students in the descending order of age.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "of",
      "students",
      "in",
      "the",
      "descending",
      "order",
      "of",
      "age",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_1",
    "query": "SELECT count(*) FROM chip_model WHERE wifi  =  'No'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "chip_model",
      "WHERE",
      "wifi",
      "=",
      "'No",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "chip_model",
      "where",
      "wifi",
      "=",
      "value"
    ],
    "question": "How many models do not have the wifi function?",
    "question_toks": [
      "How",
      "many",
      "models",
      "do",
      "not",
      "have",
      "the",
      "wifi",
      "function",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"No\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT count(DISTINCT acc_type) FROM customer",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "acc_type",
      ")",
      "FROM",
      "customer"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "acc_type",
      ")",
      "from",
      "customer"
    ],
    "question": "How many distinct types of accounts are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "types",
      "of",
      "accounts",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "boulder",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "how many people lived in boulder",
    "question_toks": [
      "how",
      "many",
      "people",
      "lived",
      "in",
      "boulder"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"boulder\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "boulder",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "how many people live in boulder",
    "question_toks": [
      "how",
      "many",
      "people",
      "live",
      "in",
      "boulder"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"boulder\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(*) FROM dorm_amenity",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "dorm_amenity"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "dorm_amenity"
    ],
    "question": "Find the number of distinct amenities.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "amenities",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT count(DISTINCT OWNER) FROM channel",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "OWNER",
      ")",
      "FROM",
      "channel"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "owner",
      ")",
      "from",
      "channel"
    ],
    "question": "Count the number of distinct channel owners.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "channel",
      "owners",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT count(*) FROM region",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "region"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "region"
    ],
    "question": "How many regions do we have?",
    "question_toks": [
      "How",
      "many",
      "regions",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_market",
    "query": "SELECT count(*) FROM phone",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "phone"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "phone"
    ],
    "question": "How many phones are there?",
    "question_toks": [
      "How",
      "many",
      "phones",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "debate",
    "query": "SELECT count(*) FROM debate",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "debate"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "debate"
    ],
    "question": "How many debates are there?",
    "question_toks": [
      "How",
      "many",
      "debates",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT DISTINCT region_name FROM region ORDER BY Label",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "region_name",
      "FROM",
      "region",
      "ORDER",
      "BY",
      "Label"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "region_name",
      "from",
      "region",
      "order",
      "by",
      "label"
    ],
    "question": "What are the different region names, ordered by labels?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "region",
      "names",
      ",",
      "ordered",
      "by",
      "labels",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT name FROM captain ORDER BY age LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "captain",
      "ORDER",
      "BY",
      "age",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "captain",
      "order",
      "by",
      "age",
      "limit",
      "value"
    ],
    "question": "Return the name of the youngest captain.",
    "question_toks": [
      "Return",
      "the",
      "name",
      "of",
      "the",
      "youngest",
      "captain",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3",
    "query_toks": [
      "SELECT",
      "flno",
      "FROM",
      "Flight",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "flno",
      "from",
      "flight",
      "order",
      "by",
      "distance",
      "asc",
      "limit",
      "value"
    ],
    "question": "What are the numbers of the shortest flights?",
    "question_toks": [
      "What",
      "are",
      "the",
      "numbers",
      "of",
      "the",
      "shortest",
      "flights",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "railway",
    "query": "SELECT Builder FROM railway ORDER BY Builder ASC",
    "query_toks": [
      "SELECT",
      "Builder",
      "FROM",
      "railway",
      "ORDER",
      "BY",
      "Builder",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "builder",
      "from",
      "railway",
      "order",
      "by",
      "builder",
      "asc"
    ],
    "question": "List the builders of railways in ascending alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "builders",
      "of",
      "railways",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT song_name FROM song ORDER BY resolution",
    "query_toks": [
      "SELECT",
      "song_name",
      "FROM",
      "song",
      "ORDER",
      "BY",
      "resolution"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      "from",
      "song",
      "order",
      "by",
      "resolution"
    ],
    "question": "What are the names of all songs that are ordered by their resolution numbers?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "songs",
      "that",
      "are",
      "ordered",
      "by",
      "their",
      "resolution",
      "numbers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT Name FROM ship WHERE Nationality != \"United States\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "ship",
      "WHERE",
      "Nationality",
      "!",
      "=",
      "``",
      "United",
      "States",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "ship",
      "where",
      "nationality",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of the ships that are not from the United States?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "ships",
      "that",
      "are",
      "not",
      "from",
      "the",
      "United",
      "States",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "small_bank_1",
    "query": "SELECT sum(balance) FROM checking",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "balance",
      ")",
      "FROM",
      "checking"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "balance",
      ")",
      "from",
      "checking"
    ],
    "question": "What is the total checking balance in all accounts?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "checking",
      "balance",
      "in",
      "all",
      "accounts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT avg(Gross_in_dollar) FROM film",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Gross_in_dollar",
      ")",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "gross_in_dollar",
      ")",
      "from",
      "film"
    ],
    "question": "What is the average ticket sales gross in dollars of films?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "ticket",
      "sales",
      "gross",
      "in",
      "dollars",
      "of",
      "films",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT sum(Amount_Claimed) FROM Claims",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Amount_Claimed",
      ")",
      "FROM",
      "Claims"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount_claimed",
      ")",
      "from",
      "claims"
    ],
    "question": "Find the total claimed amount of all the claims.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "claimed",
      "amount",
      "of",
      "all",
      "the",
      "claims",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT name FROM playlists;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "playlists",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "playlists"
    ],
    "question": "What are the names of all the playlists?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "playlists",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                64,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT name FROM airport WHERE country != 'Iceland'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airport",
      "WHERE",
      "country",
      "!",
      "=",
      "'Iceland",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airport",
      "where",
      "country",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of the airports which are not in the country 'Iceland'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "airports",
      "which",
      "are",
      "not",
      "in",
      "the",
      "country",
      "'Iceland",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Iceland\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT building FROM Faculty WHERE rank  =  \"Professor\" GROUP BY building HAVING count(*)  >=  10",
    "query_toks": [
      "SELECT",
      "building",
      "FROM",
      "Faculty",
      "WHERE",
      "rank",
      "=",
      "``",
      "Professor",
      "''",
      "GROUP",
      "BY",
      "building",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "building",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value",
      "group",
      "by",
      "building",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "In which buildings are there at least ten professors?",
    "question_toks": [
      "In",
      "which",
      "buildings",
      "are",
      "there",
      "at",
      "least",
      "ten",
      "professors",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          22,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT count(DISTINCT acc_type) FROM customer",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "acc_type",
      ")",
      "FROM",
      "customer"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "acc_type",
      ")",
      "from",
      "customer"
    ],
    "question": "Count the number of different account types.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "account",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT city_name FROM city WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "city_name",
      "FROM",
      "city",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "city_name",
      "from",
      "city",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "tell me what cities are in texas",
    "question_toks": [
      "tell",
      "me",
      "what",
      "cities",
      "are",
      "in",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(DISTINCT allergytype) FROM Allergy_type",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "allergytype",
      ")",
      "FROM",
      "Allergy_type"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "allergytype",
      ")",
      "from",
      "allergy_type"
    ],
    "question": "How many different allergy types exist?",
    "question_toks": [
      "How",
      "many",
      "different",
      "allergy",
      "types",
      "exist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT dept_name) FROM department",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dept_name",
      ")",
      "FROM",
      "department"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dept_name",
      ")",
      "from",
      "department"
    ],
    "question": "How many departments does the college has?",
    "question_toks": [
      "How",
      "many",
      "departments",
      "does",
      "the",
      "college",
      "has",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT DISTINCT District FROM election",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "District",
      "FROM",
      "election"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "district",
      "from",
      "election"
    ],
    "question": "Show all the distinct districts for elections.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "distinct",
      "districts",
      "for",
      "elections",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT * FROM people",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "people"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "people"
    ],
    "question": "What is all the information about all people?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "information",
      "about",
      "all",
      "people",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT count(*) FROM budget WHERE budgeted  <  invested",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "budget",
      "WHERE",
      "budgeted",
      "<",
      "invested"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "budget",
      "where",
      "budgeted",
      "<",
      "invested"
    ],
    "question": "How many budget record has a budget amount smaller than the invested amount?",
    "question_toks": [
      "How",
      "many",
      "budget",
      "record",
      "has",
      "a",
      "budget",
      "amount",
      "smaller",
      "than",
      "the",
      "invested",
      "amount",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          [
            0,
            13,
            false
          ],
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT count(*) FROM school",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "school"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "school"
    ],
    "question": "How many schools are there?",
    "question_toks": [
      "How",
      "many",
      "schools",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "payment_method",
      "!",
      "=",
      "'Cash",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers",
      "where",
      "payment_method",
      "!",
      "=",
      "value"
    ],
    "question": "What is the name of customers who do not use Cash as payment method.",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "customers",
      "who",
      "do",
      "not",
      "use",
      "Cash",
      "as",
      "payment",
      "method",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Cash\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Shop_Name",
      "FROM",
      "shop",
      "ORDER",
      "BY",
      "Open_Year",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "shop_name",
      "from",
      "shop",
      "order",
      "by",
      "open_year",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the shop name corresponding to the shop that opened in the most recent year?",
    "question_toks": [
      "What",
      "is",
      "the",
      "shop",
      "name",
      "corresponding",
      "to",
      "the",
      "shop",
      "that",
      "opened",
      "in",
      "the",
      "most",
      "recent",
      "year",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election_representative",
    "query": "SELECT State FROM representative GROUP BY State HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "State",
      "FROM",
      "representative",
      "GROUP",
      "BY",
      "State",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "state",
      "from",
      "representative",
      "group",
      "by",
      "state",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What states have at least two representatives?",
    "question_toks": [
      "What",
      "states",
      "have",
      "at",
      "least",
      "two",
      "representatives",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "cinema",
      "WHERE",
      "capacity",
      ">",
      "300",
      "GROUP",
      "BY",
      "LOCATION",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "cinema",
      "where",
      "capacity",
      ">",
      "value",
      "group",
      "by",
      "location",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "In which locations are there more than one movie theater with capacity above 300?",
    "question_toks": [
      "In",
      "which",
      "locations",
      "are",
      "there",
      "more",
      "than",
      "one",
      "movie",
      "theater",
      "with",
      "capacity",
      "above",
      "300",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          300.0,
          null
        ]
      ],
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\"",
    "query_toks": [
      "SELECT",
      "apt_number",
      "FROM",
      "Apartments",
      "WHERE",
      "apt_type_code",
      "=",
      "``",
      "Flat",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "apt_number",
      "from",
      "apartments",
      "where",
      "apt_type_code",
      "=",
      "value"
    ],
    "question": "Return the apartment numbers of the apartments with type code \"Flat\".",
    "question_toks": [
      "Return",
      "the",
      "apartment",
      "numbers",
      "of",
      "the",
      "apartments",
      "with",
      "type",
      "code",
      "``",
      "Flat",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Flat\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT DISTINCT LOCATION FROM station",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "LOCATION",
      "FROM",
      "station"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "location",
      "from",
      "station"
    ],
    "question": "What are all locations of train stations?",
    "question_toks": [
      "What",
      "are",
      "all",
      "locations",
      "of",
      "train",
      "stations",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "category",
      "FROM",
      "book_club",
      "WHERE",
      "YEAR",
      ">",
      "1989",
      "GROUP",
      "BY",
      "category",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "category",
      "from",
      "book_club",
      "where",
      "year",
      ">",
      "value",
      "group",
      "by",
      "category",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "List categories that have at least two books after year 1989.",
    "question_toks": [
      "List",
      "categories",
      "that",
      "have",
      "at",
      "least",
      "two",
      "books",
      "after",
      "year",
      "1989",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          1989.0,
          null
        ]
      ],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "county",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "What campuses are in Los Angeles county?",
    "question_toks": [
      "What",
      "campuses",
      "are",
      "in",
      "Los",
      "Angeles",
      "county",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT count(*) FROM party_events",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "party_events"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "party_events"
    ],
    "question": "Count the number of party events.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "party",
      "events",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT FacID FROM Faculty WHERE Sex  =  'M'",
    "query_toks": [
      "SELECT",
      "FacID",
      "FROM",
      "Faculty",
      "WHERE",
      "Sex",
      "=",
      "'M",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "facid",
      "from",
      "faculty",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "What are the faculty ids of all the male faculty members?",
    "question_toks": [
      "What",
      "are",
      "the",
      "faculty",
      "ids",
      "of",
      "all",
      "the",
      "male",
      "faculty",
      "members",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT name FROM business WHERE rating  =  3.5;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "business",
      "WHERE",
      "rating",
      "=",
      "3.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "business",
      "where",
      "rating",
      "=",
      "value"
    ],
    "question": "List all businesses with rating 3.5",
    "question_toks": [
      "List",
      "all",
      "businesses",
      "with",
      "rating",
      "3.5"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          3.5,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT DISTINCT gtype FROM Video_games",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "gtype",
      "FROM",
      "Video_games"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "gtype",
      "from",
      "video_games"
    ],
    "question": "Show all video game types.",
    "question_toks": [
      "Show",
      "all",
      "video",
      "game",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT Title FROM book WHERE Writer != \"Elaine Lee\"",
    "query_toks": [
      "SELECT",
      "Title",
      "FROM",
      "book",
      "WHERE",
      "Writer",
      "!",
      "=",
      "``",
      "Elaine",
      "Lee",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "book",
      "where",
      "writer",
      "!",
      "=",
      "value"
    ],
    "question": "What are the titles of the books whose writer is not \"Elaine Lee\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "the",
      "books",
      "whose",
      "writer",
      "is",
      "not",
      "``",
      "Elaine",
      "Lee",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Elaine Lee\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums"
    ],
    "question": "What are the titles of all the albums?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "all",
      "the",
      "albums",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "start_station_name",
      "FROM",
      "trip",
      "WHERE",
      "duration",
      "<",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "start_station_name",
      "from",
      "trip",
      "where",
      "duration",
      "<",
      "value"
    ],
    "question": "What are all the different start station names for a trip that lasted less than 100?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "different",
      "start",
      "station",
      "names",
      "for",
      "a",
      "trip",
      "that",
      "lasted",
      "less",
      "than",
      "100",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT avg(enr) FROM College",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "enr",
      ")",
      "FROM",
      "College"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enr",
      ")",
      "from",
      "college"
    ],
    "question": "What is the average enrollment number?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "enrollment",
      "number",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT count(*) FROM candidate",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "candidate"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "candidate"
    ],
    "question": "How many candidates are there?",
    "question_toks": [
      "How",
      "many",
      "candidates",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT DISTINCT form_type_code FROM forms",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "form_type_code",
      "FROM",
      "forms"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "form_type_code",
      "from",
      "forms"
    ],
    "question": "What are the different types of forms?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "types",
      "of",
      "forms",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT count(*) FROM STUDENT",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "STUDENT"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student"
    ],
    "question": "Find the number of students in total.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "students",
      "in",
      "total",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT count(*) FROM authors",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "authors"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "authors"
    ],
    "question": "Count the number of authors.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "authors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\"",
    "query_toks": [
      "SELECT",
      "Customer_Phone",
      "FROM",
      "PERFORMERS",
      "WHERE",
      "Customer_Name",
      "=",
      "``",
      "Ashley",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      "from",
      "performers",
      "where",
      "customer_name",
      "=",
      "value"
    ],
    "question": "What is the phone number of the performer Ashley?",
    "question_toks": [
      "What",
      "is",
      "the",
      "phone",
      "number",
      "of",
      "the",
      "performer",
      "Ashley",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          "\"Ashley\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT lname FROM authors ORDER BY lname",
    "query_toks": [
      "SELECT",
      "lname",
      "FROM",
      "authors",
      "ORDER",
      "BY",
      "lname"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      "from",
      "authors",
      "order",
      "by",
      "lname"
    ],
    "question": "Retrieve all the last names of authors in alphabetical order.",
    "question_toks": [
      "Retrieve",
      "all",
      "the",
      "last",
      "names",
      "of",
      "authors",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_deliveries",
    "query": "SELECT count(DISTINCT payment_method) FROM customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "payment_method",
      ")",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "payment_method",
      ")",
      "from",
      "customers"
    ],
    "question": "How many different payment methods are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "payment",
      "methods",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\"",
    "query_toks": [
      "SELECT",
      "Nickname",
      "FROM",
      "school_details",
      "WHERE",
      "Division",
      "!",
      "=",
      "``",
      "Division",
      "1",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "school_details",
      "where",
      "division",
      "!",
      "=",
      "value"
    ],
    "question": "Show the nicknames of schools that are not in division 1.",
    "question_toks": [
      "Show",
      "the",
      "nicknames",
      "of",
      "schools",
      "that",
      "are",
      "not",
      "in",
      "division",
      "1",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Division 1\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "illinois",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "rivers in illinois",
    "question_toks": [
      "rivers",
      "in",
      "illinois"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"illinois\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT count(*) FROM ship",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ship"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ship"
    ],
    "question": "how many ships are there?",
    "question_toks": [
      "how",
      "many",
      "ships",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT school_code) FROM department",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "school_code",
      ")",
      "FROM",
      "department"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "school_code",
      ")",
      "from",
      "department"
    ],
    "question": "how many schools exist in total?",
    "question_toks": [
      "how",
      "many",
      "schools",
      "exist",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                13,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "student_id",
      ")",
      "FROM",
      "Student_Course_Enrolment"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "student_id",
      ")",
      "from",
      "student_course_enrolment"
    ],
    "question": "Find the number of distinct students enrolled in courses.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "students",
      "enrolled",
      "in",
      "courses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE YEAR  =  1958",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "YEAR",
      "=",
      "1958"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What are the campuses that opened in 1958?",
    "question_toks": [
      "What",
      "are",
      "the",
      "campuses",
      "that",
      "opened",
      "in",
      "1958",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1958.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\"",
    "query_toks": [
      "SELECT",
      "problem_id",
      "FROM",
      "problems",
      "WHERE",
      "date_problem_reported",
      "<",
      "``",
      "1978-06-26",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "problem_id",
      "from",
      "problems",
      "where",
      "date_problem_reported",
      "<",
      "value"
    ],
    "question": "What are the ids of the problems which are reported before 1978-06-26?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "the",
      "problems",
      "which",
      "are",
      "reported",
      "before",
      "1978-06-26",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"1978-06-26\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT density FROM state WHERE state_name  =  \"wyoming\";",
    "query_toks": [
      "SELECT",
      "density",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "wyoming",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "density",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the population density of wyoming",
    "question_toks": [
      "what",
      "is",
      "the",
      "population",
      "density",
      "of",
      "wyoming"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"wyoming\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "pName",
      "FROM",
      "Player",
      "WHERE",
      "pName",
      "LIKE",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "pname",
      "from",
      "player",
      "where",
      "pname",
      "like",
      "value"
    ],
    "question": "Find the players whose names contain letter 'a'.",
    "question_toks": [
      "Find",
      "the",
      "players",
      "whose",
      "names",
      "contain",
      "letter",
      "'a",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"%a%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT name FROM buildings ORDER BY Height DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "buildings",
      "ORDER",
      "BY",
      "Height",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "buildings",
      "order",
      "by",
      "height",
      "desc"
    ],
    "question": "List the names of buildings in descending order of building height.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "buildings",
      "in",
      "descending",
      "order",
      "of",
      "building",
      "height",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT count(*) FROM party_events",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "party_events"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "party_events"
    ],
    "question": "How many party events do we have?",
    "question_toks": [
      "How",
      "many",
      "party",
      "events",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Currency_Code",
      ")",
      "FROM",
      "Drama_Workshop_Groups"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "currency_code",
      ")",
      "from",
      "drama_workshop_groups"
    ],
    "question": "How many distinct currency codes are there for all drama workshop groups?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "currency",
      "codes",
      "are",
      "there",
      "for",
      "all",
      "drama",
      "workshop",
      "groups",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "protein_institute",
    "query": "SELECT name FROM building ORDER BY height_feet DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "building",
      "ORDER",
      "BY",
      "height_feet",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "building",
      "order",
      "by",
      "height_feet",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the tallest building?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "tallest",
      "building",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\"",
    "query_toks": [
      "SELECT",
      "other_account_details",
      "FROM",
      "Accounts",
      "WHERE",
      "account_name",
      "=",
      "``",
      "338",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "other_account_details",
      "from",
      "accounts",
      "where",
      "account_name",
      "=",
      "value"
    ],
    "question": "Show other account details for account with name 338.",
    "question_toks": [
      "Show",
      "other",
      "account",
      "details",
      "for",
      "account",
      "with",
      "name",
      "338",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"338\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "boulder",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "how many inhabitants does boulder have",
    "question_toks": [
      "how",
      "many",
      "inhabitants",
      "does",
      "boulder",
      "have"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"boulder\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT homepage FROM journal WHERE name  =  \"PVLDB\";",
    "query_toks": [
      "SELECT",
      "homepage",
      "FROM",
      "journal",
      "WHERE",
      "name",
      "=",
      "``",
      "PVLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "homepage",
      "from",
      "journal",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "return me the homepage of PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "homepage",
      "of",
      "PVLDB",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2",
    "query_toks": [
      "SELECT",
      "Nominee",
      "FROM",
      "musical",
      "GROUP",
      "BY",
      "Nominee",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "nominee",
      "from",
      "musical",
      "group",
      "by",
      "nominee",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "List the nominees that have been nominated more than two musicals.",
    "question_toks": [
      "List",
      "the",
      "nominees",
      "that",
      "have",
      "been",
      "nominated",
      "more",
      "than",
      "two",
      "musicals",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT count(DISTINCT POSITION) FROM player",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "POSITION",
      ")",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "position",
      ")",
      "from",
      "player"
    ],
    "question": "How many different positions of players are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "positions",
      "of",
      "players",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                25,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "wrestler",
      "ORDER",
      "BY",
      "Days_held",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wrestler",
      "order",
      "by",
      "days_held",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the name of the wrestler with the fewest days held?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "wrestler",
      "with",
      "the",
      "fewest",
      "days",
      "held",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM College",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "College"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "college"
    ],
    "question": "How many different colleges are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "colleges",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "building",
      "FROM",
      "classroom",
      "WHERE",
      "capacity",
      ">",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "building",
      "from",
      "classroom",
      "where",
      "capacity",
      ">",
      "value"
    ],
    "question": "What are the distinct buildings with capacities of greater than 50?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "buildings",
      "with",
      "capacities",
      "of",
      "greater",
      "than",
      "50",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          50.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT County_name FROM county ORDER BY Population ASC",
    "query_toks": [
      "SELECT",
      "County_name",
      "FROM",
      "county",
      "ORDER",
      "BY",
      "Population",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "county_name",
      "from",
      "county",
      "order",
      "by",
      "population",
      "asc"
    ],
    "question": "Return the names of all counties sorted by population in ascending order.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "all",
      "counties",
      "sorted",
      "by",
      "population",
      "in",
      "ascending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(DISTINCT cName) FROM tryout",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "cName",
      ")",
      "FROM",
      "tryout"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "cname",
      ")",
      "from",
      "tryout"
    ],
    "question": "How many different colleges do attend the tryout test?",
    "question_toks": [
      "How",
      "many",
      "different",
      "colleges",
      "do",
      "attend",
      "the",
      "tryout",
      "test",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\"",
    "query_toks": [
      "SELECT",
      "building_full_name",
      "FROM",
      "Apartment_Buildings",
      "WHERE",
      "building_full_name",
      "LIKE",
      "``",
      "%",
      "court",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "building_full_name",
      "from",
      "apartment_buildings",
      "where",
      "building_full_name",
      "like",
      "value"
    ],
    "question": "What are the building full names that contain the word \"court\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "building",
      "full",
      "names",
      "that",
      "contain",
      "the",
      "word",
      "``",
      "court",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"%court%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\"",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      "FROM",
      "catalog_contents",
      "WHERE",
      "product_stock_number",
      "LIKE",
      "``",
      "2",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      "from",
      "catalog_contents",
      "where",
      "product_stock_number",
      "like",
      "value"
    ],
    "question": "Which catalog contents have a product stock number that starts from \"2\"? Show the catalog entry names.",
    "question_toks": [
      "Which",
      "catalog",
      "contents",
      "have",
      "a",
      "product",
      "stock",
      "number",
      "that",
      "starts",
      "from",
      "``",
      "2",
      "''",
      "?",
      "Show",
      "the",
      "catalog",
      "entry",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"2%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "cinema",
      "WHERE",
      "capacity",
      ">",
      "300",
      "GROUP",
      "BY",
      "LOCATION",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "cinema",
      "where",
      "capacity",
      ">",
      "value",
      "group",
      "by",
      "location",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the locations that have more than one movie theater with capacity above 300.",
    "question_toks": [
      "Find",
      "the",
      "locations",
      "that",
      "have",
      "more",
      "than",
      "one",
      "movie",
      "theater",
      "with",
      "capacity",
      "above",
      "300",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          300.0,
          null
        ]
      ],
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "ship",
      "ORDER",
      "BY",
      "Tonnage",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "ship",
      "order",
      "by",
      "tonnage",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the ship with the largest tonnage?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "ship",
      "with",
      "the",
      "largest",
      "tonnage",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH  >  750;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "traverse",
      ")",
      "FROM",
      "river",
      "WHERE",
      "LENGTH",
      ">",
      "750",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "traverse",
      ")",
      "from",
      "river",
      "where",
      "length",
      ">",
      "value"
    ],
    "question": "how many states are next to major rivers",
    "question_toks": [
      "how",
      "many",
      "states",
      "are",
      "next",
      "to",
      "major",
      "rivers"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          750.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE YEAR  =  1958",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "YEAR",
      "=",
      "1958"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Find all the campuses opened in 1958.",
    "question_toks": [
      "Find",
      "all",
      "the",
      "campuses",
      "opened",
      "in",
      "1958",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1958.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "product_id",
      "FROM",
      "product_suppliers",
      "ORDER",
      "BY",
      "total_amount_purchased",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "product_id",
      "from",
      "product_suppliers",
      "order",
      "by",
      "total_amount_purchased",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the ids of the top three products that were purchased in the largest amount?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "the",
      "top",
      "three",
      "products",
      "that",
      "were",
      "purchased",
      "in",
      "the",
      "largest",
      "amount",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              50,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "assets_maintenance",
    "query": "SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "asset_acquired_date",
      "FROM",
      "Assets",
      "ORDER",
      "BY",
      "asset_acquired_date",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "asset_acquired_date",
      "from",
      "assets",
      "order",
      "by",
      "asset_acquired_date",
      "asc",
      "limit",
      "value"
    ],
    "question": "When was the first asset acquired?",
    "question_toks": [
      "When",
      "was",
      "the",
      "first",
      "asset",
      "acquired",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "where is springfield",
    "question_toks": [
      "where",
      "is",
      "springfield"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT DISTINCT donator_name FROM endowment",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "donator_name",
      "FROM",
      "endowment"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "donator_name",
      "from",
      "endowment"
    ],
    "question": "Show all donor names.",
    "question_toks": [
      "Show",
      "all",
      "donor",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT count(*) FROM papers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "papers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "papers"
    ],
    "question": "How many papers are published in total?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "are",
      "published",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM state WHERE capital  =  \"salem\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "state",
      "WHERE",
      "capital",
      "=",
      "``",
      "salem",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "state",
      "where",
      "capital",
      "=",
      "value"
    ],
    "question": "what states capital is salem",
    "question_toks": [
      "what",
      "states",
      "capital",
      "is",
      "salem"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"salem\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT DISTINCT directed_by FROM film",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "directed_by",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "directed_by",
      "from",
      "film"
    ],
    "question": "Show all directors.",
    "question_toks": [
      "Show",
      "all",
      "directors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT DISTINCT product_name FROM products ORDER BY product_name",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "product_name",
      "FROM",
      "products",
      "ORDER",
      "BY",
      "product_name"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "product_name",
      "from",
      "products",
      "order",
      "by",
      "product_name"
    ],
    "question": "List the names of all distinct products in alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "distinct",
      "products",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT DISTINCT product_size FROM Products",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "product_size",
      "FROM",
      "Products"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "product_size",
      "from",
      "products"
    ],
    "question": "What are the different product sizes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "product",
      "sizes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT lname FROM authors WHERE fname  =  \"Amal\"",
    "query_toks": [
      "SELECT",
      "lname",
      "FROM",
      "authors",
      "WHERE",
      "fname",
      "=",
      "``",
      "Amal",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      "from",
      "authors",
      "where",
      "fname",
      "=",
      "value"
    ],
    "question": "Find the last name of the author with first name \"Amal\".",
    "question_toks": [
      "Find",
      "the",
      "last",
      "name",
      "of",
      "the",
      "author",
      "with",
      "first",
      "name",
      "``",
      "Amal",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Amal\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"",
    "query_toks": [
      "SELECT",
      "origin",
      "FROM",
      "Flight",
      "WHERE",
      "destination",
      "=",
      "``",
      "Honolulu",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "value"
    ],
    "question": "Show origins of all flights with destination Honolulu.",
    "question_toks": [
      "Show",
      "origins",
      "of",
      "all",
      "flights",
      "with",
      "destination",
      "Honolulu",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Honolulu\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name FROM airports WHERE city  =  'Goroka'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airports",
      "WHERE",
      "city",
      "=",
      "'Goroka",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airports",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "What are the names of the airports in the city of Goroka?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "airports",
      "in",
      "the",
      "city",
      "of",
      "Goroka",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Goroka\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  \"Fail\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student_Tests_Taken",
      "WHERE",
      "test_result",
      "=",
      "``",
      "Fail",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student_tests_taken",
      "where",
      "test_result",
      "=",
      "value"
    ],
    "question": "Count the number of tests with \"Fail\" result.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "tests",
      "with",
      "``",
      "Fail",
      "''",
      "result",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              32,
              false
            ],
            null
          ],
          "\"Fail\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT first_name FROM people ORDER BY first_name",
    "query_toks": [
      "SELECT",
      "first_name",
      "FROM",
      "people",
      "ORDER",
      "BY",
      "first_name"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      "from",
      "people",
      "order",
      "by",
      "first_name"
    ],
    "question": "What are the first names of the people in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "the",
      "people",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3",
    "query_toks": [
      "SELECT",
      "location_code",
      "FROM",
      "Document_locations",
      "GROUP",
      "BY",
      "location_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "location_code",
      "from",
      "document_locations",
      "group",
      "by",
      "location_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the codes of the locations with at least three documents?",
    "question_toks": [
      "What",
      "are",
      "the",
      "codes",
      "of",
      "the",
      "locations",
      "with",
      "at",
      "least",
      "three",
      "documents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "manufacturers",
      "WHERE",
      "founder",
      "=",
      "'Andy",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "manufacturers",
      "where",
      "founder",
      "=",
      "value"
    ],
    "question": "How many companies were created by Andy?",
    "question_toks": [
      "How",
      "many",
      "companies",
      "were",
      "created",
      "by",
      "Andy",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Andy\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "School_Colors",
      "FROM",
      "school",
      "ORDER",
      "BY",
      "Enrollment",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "school_colors",
      "from",
      "school",
      "order",
      "by",
      "enrollment",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the school color of the school with the largest enrollment?",
    "question_toks": [
      "What",
      "is",
      "the",
      "school",
      "color",
      "of",
      "the",
      "school",
      "with",
      "the",
      "largest",
      "enrollment",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT DISTINCT building_description FROM Apartment_Buildings",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "building_description",
      "FROM",
      "Apartment_Buildings"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "building_description",
      "from",
      "apartment_buildings"
    ],
    "question": "Give me a list of all the distinct building descriptions.",
    "question_toks": [
      "Give",
      "me",
      "a",
      "list",
      "of",
      "all",
      "the",
      "distinct",
      "building",
      "descriptions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\"",
    "query_toks": [
      "SELECT",
      "organization_name",
      "FROM",
      "organizations",
      "WHERE",
      "organization_name",
      "LIKE",
      "``",
      "%",
      "Party",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "organization_name",
      "from",
      "organizations",
      "where",
      "organization_name",
      "like",
      "value"
    ],
    "question": "Find the name of organizations whose names contain \"Party\".",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "organizations",
      "whose",
      "names",
      "contain",
      "``",
      "Party",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"%Party%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Artist_ID",
      ")",
      "FROM",
      "volume"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "artist_id",
      ")",
      "from",
      "volume"
    ],
    "question": "Count the number of distinct artists who have volumes.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "artists",
      "who",
      "have",
      "volumes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "small_bank_1",
    "query": "SELECT count(*) FROM accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts"
    ],
    "question": "How many accounts are there in total?",
    "question_toks": [
      "How",
      "many",
      "accounts",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT count(*) FROM campuses",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "campuses"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "campuses"
    ],
    "question": "What is the total number of campuses?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "campuses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT Name FROM WINE ORDER BY Name",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Name",
      "FROM",
      "WINE",
      "ORDER",
      "BY",
      "Name"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "wine",
      "order",
      "by",
      "name"
    ],
    "question": "What are the names of wines, sorted in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wines",
      ",",
      "sorted",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";",
    "query_toks": [
      "SELECT",
      "LENGTH",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "rio",
      "grande",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "length",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "how long is the rio grande river",
    "question_toks": [
      "how",
      "long",
      "is",
      "the",
      "rio",
      "grande",
      "river"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"rio grande\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT school_name FROM school ORDER BY enrollment LIMIT 1",
    "query_toks": [
      "SELECT",
      "school_name",
      "FROM",
      "school",
      "ORDER",
      "BY",
      "enrollment",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "school_name",
      "from",
      "school",
      "order",
      "by",
      "enrollment",
      "limit",
      "value"
    ],
    "question": "List the name of the school with the smallest enrollment.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "the",
      "school",
      "with",
      "the",
      "smallest",
      "enrollment",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"animal\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Allergy_type",
      "WHERE",
      "allergytype",
      "=",
      "``",
      "animal",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "allergy_type",
      "where",
      "allergytype",
      "=",
      "value"
    ],
    "question": "How many animal type allergies exist?",
    "question_toks": [
      "How",
      "many",
      "animal",
      "type",
      "allergies",
      "exist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"animal\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "assets_maintenance",
    "query": "SELECT DISTINCT last_name FROM Maintenance_Engineers",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "last_name",
      "FROM",
      "Maintenance_Engineers"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "last_name",
      "from",
      "maintenance_engineers"
    ],
    "question": "What are all the distinct last names of all the engineers?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "distinct",
      "last",
      "names",
      "of",
      "all",
      "the",
      "engineers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pilot_record",
    "query": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC",
    "query_toks": [
      "SELECT",
      "Pilot_name",
      "FROM",
      "pilot",
      "ORDER",
      "BY",
      "Rank",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "pilot_name",
      "from",
      "pilot",
      "order",
      "by",
      "rank",
      "asc"
    ],
    "question": "List the names of pilots in ascending order of rank.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "pilots",
      "in",
      "ascending",
      "order",
      "of",
      "rank",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM Ref_calendar",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_calendar"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_calendar"
    ],
    "question": "Count the number of all the calendar items.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "all",
      "the",
      "calendar",
      "items",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Cancelled\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Lessons",
      "WHERE",
      "lesson_status_code",
      "=",
      "``",
      "Cancelled",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "lessons",
      "where",
      "lesson_status_code",
      "=",
      "value"
    ],
    "question": "How many lessons were in cancelled state?",
    "question_toks": [
      "How",
      "many",
      "lessons",
      "were",
      "in",
      "cancelled",
      "state",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"Cancelled\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "documents",
      "GROUP",
      "BY",
      "document_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "documents",
      "group",
      "by",
      "document_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Give the codes of document types that have more than 2 corresponding documents.",
    "question_toks": [
      "Give",
      "the",
      "codes",
      "of",
      "document",
      "types",
      "that",
      "have",
      "more",
      "than",
      "2",
      "corresponding",
      "documents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          20,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"Studio\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "room_count",
      ")",
      "FROM",
      "Apartments",
      "WHERE",
      "apt_type_code",
      "=",
      "``",
      "Studio",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "room_count",
      ")",
      "from",
      "apartments",
      "where",
      "apt_type_code",
      "=",
      "value"
    ],
    "question": "Find the average room count of the apartments that have the \"Studio\" type code.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "room",
      "count",
      "of",
      "the",
      "apartments",
      "that",
      "have",
      "the",
      "``",
      "Studio",
      "''",
      "type",
      "code",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Studio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1",
    "query_toks": [
      "SELECT",
      "Song",
      "FROM",
      "volume",
      "WHERE",
      "Weeks_on_Top",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "song",
      "from",
      "volume",
      "where",
      "weeks_on_top",
      ">",
      "value"
    ],
    "question": "Give the songs included in volumes that have more than 1 week on top.",
    "question_toks": [
      "Give",
      "the",
      "songs",
      "included",
      "in",
      "volumes",
      "that",
      "have",
      "more",
      "than",
      "1",
      "week",
      "on",
      "top",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "illinois",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "what river runs through illinois",
    "question_toks": [
      "what",
      "river",
      "runs",
      "through",
      "illinois"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"illinois\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "coffee_shop",
    "query": "SELECT address FROM shop ORDER BY open_year",
    "query_toks": [
      "SELECT",
      "address",
      "FROM",
      "shop",
      "ORDER",
      "BY",
      "open_year"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "shop",
      "order",
      "by",
      "open_year"
    ],
    "question": "Show the shop addresses ordered by their opening year.",
    "question_toks": [
      "Show",
      "the",
      "shop",
      "addresses",
      "ordered",
      "by",
      "their",
      "opening",
      "year",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_injury",
    "query": "SELECT Date FROM game ORDER BY home_team DESC",
    "query_toks": [
      "SELECT",
      "Date",
      "FROM",
      "game",
      "ORDER",
      "BY",
      "home_team",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      "from",
      "game",
      "order",
      "by",
      "home_team",
      "desc"
    ],
    "question": "List the dates of games by the home team name in descending order.",
    "question_toks": [
      "List",
      "the",
      "dates",
      "of",
      "games",
      "by",
      "the",
      "home",
      "team",
      "name",
      "in",
      "descending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT DISTINCT detention_type_code FROM Detention",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "detention_type_code",
      "FROM",
      "Detention"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "detention_type_code",
      "from",
      "detention"
    ],
    "question": "Return all distinct detention type codes.",
    "question_toks": [
      "Return",
      "all",
      "distinct",
      "detention",
      "type",
      "codes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                50,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM Person WHERE gender  =  'male' ORDER BY age",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Person",
      "WHERE",
      "gender",
      "=",
      "'male",
      "'",
      "ORDER",
      "BY",
      "age"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "person",
      "where",
      "gender",
      "=",
      "value",
      "order",
      "by",
      "age"
    ],
    "question": "What is the name and age of every male? Order the results by age.",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "and",
      "age",
      "of",
      "every",
      "male",
      "?",
      "Order",
      "the",
      "results",
      "by",
      "age",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"male\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  4",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "classroom",
      "FROM",
      "list",
      "WHERE",
      "grade",
      "=",
      "4"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "classroom",
      "from",
      "list",
      "where",
      "grade",
      "=",
      "value"
    ],
    "question": "Which classrooms are used by grade 4?",
    "question_toks": [
      "Which",
      "classrooms",
      "are",
      "used",
      "by",
      "grade",
      "4",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT count(*) FROM county",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "county"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "county"
    ],
    "question": "Count the total number of counties.",
    "question_toks": [
      "Count",
      "the",
      "total",
      "number",
      "of",
      "counties",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\"",
    "query_toks": [
      "SELECT",
      "building_short_name",
      "FROM",
      "Apartment_Buildings",
      "WHERE",
      "building_manager",
      "=",
      "``",
      "Emma",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "building_short_name",
      "from",
      "apartment_buildings",
      "where",
      "building_manager",
      "=",
      "value"
    ],
    "question": "Show the short names of the buildings managed by \"Emma\".",
    "question_toks": [
      "Show",
      "the",
      "short",
      "names",
      "of",
      "the",
      "buildings",
      "managed",
      "by",
      "``",
      "Emma",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Emma\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "district_name",
      "FROM",
      "district",
      "ORDER",
      "BY",
      "city_area",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "district_name",
      "from",
      "district",
      "order",
      "by",
      "city_area",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the name of the district with the smallest area?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "district",
      "with",
      "the",
      "smallest",
      "area",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(*) FROM store",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "store"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "store"
    ],
    "question": "Count the number of stores.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "stores",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            15
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(*) FROM employee",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employee"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employee"
    ],
    "question": "Find the total number of employees.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "employees",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river;",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river"
    ],
    "question": "what are the major rivers in the us",
    "question_toks": [
      "what",
      "are",
      "the",
      "major",
      "rivers",
      "in",
      "the",
      "us"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT count(*) FROM gymnast",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "gymnast"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "gymnast"
    ],
    "question": "Count the number of gymnasts.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "gymnasts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT fname FROM authors WHERE lname  =  \"Ueno\"",
    "query_toks": [
      "SELECT",
      "fname",
      "FROM",
      "authors",
      "WHERE",
      "lname",
      "=",
      "``",
      "Ueno",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "authors",
      "where",
      "lname",
      "=",
      "value"
    ],
    "question": "Which authors have last name \"Ueno\"? List their first names.",
    "question_toks": [
      "Which",
      "authors",
      "have",
      "last",
      "name",
      "``",
      "Ueno",
      "''",
      "?",
      "List",
      "their",
      "first",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Ueno\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT headquarter FROM manufacturers WHERE founder  =  'James'",
    "query_toks": [
      "SELECT",
      "headquarter",
      "FROM",
      "manufacturers",
      "WHERE",
      "founder",
      "=",
      "'James",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "headquarter",
      "from",
      "manufacturers",
      "where",
      "founder",
      "=",
      "value"
    ],
    "question": "Where is the headquarter of the company founded by James?",
    "question_toks": [
      "Where",
      "is",
      "the",
      "headquarter",
      "of",
      "the",
      "company",
      "founded",
      "by",
      "James",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"James\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT DISTINCT building FROM Faculty",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "building",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "building",
      "from",
      "faculty"
    ],
    "question": "What buildings have faculty offices?",
    "question_toks": [
      "What",
      "buildings",
      "have",
      "faculty",
      "offices",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT avg(enrollment) FROM university WHERE founded  <  1850",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "enrollment",
      ")",
      "FROM",
      "university",
      "WHERE",
      "founded",
      "<",
      "1850"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enrollment",
      ")",
      "from",
      "university",
      "where",
      "founded",
      "<",
      "value"
    ],
    "question": "Return the average enrollment of universities founded before 1850.",
    "question_toks": [
      "Return",
      "the",
      "average",
      "enrollment",
      "of",
      "universities",
      "founded",
      "before",
      "1850",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          1850.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT YEAR FROM publication WHERE title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "YEAR",
      "FROM",
      "publication",
      "WHERE",
      "title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "year",
      "from",
      "publication",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "return me the year of \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "year",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT DISTINCT main_industry FROM company",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "main_industry",
      "FROM",
      "company"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "main_industry",
      "from",
      "company"
    ],
    "question": "Show all main industry for all companies.",
    "question_toks": [
      "Show",
      "all",
      "main",
      "industry",
      "for",
      "all",
      "companies",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "date_of_latest_revision",
      "FROM",
      "Catalogs",
      "GROUP",
      "BY",
      "date_of_latest_revision",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_latest_revision",
      "from",
      "catalogs",
      "group",
      "by",
      "date_of_latest_revision",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "On which days more than one revisions were made on catalogs.",
    "question_toks": [
      "On",
      "which",
      "days",
      "more",
      "than",
      "one",
      "revisions",
      "were",
      "made",
      "on",
      "catalogs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT customer_details FROM customers ORDER BY customer_details",
    "query_toks": [
      "SELECT",
      "customer_details",
      "FROM",
      "customers",
      "ORDER",
      "BY",
      "customer_details"
    ],
    "query_toks_no_value": [
      "select",
      "customer_details",
      "from",
      "customers",
      "order",
      "by",
      "customer_details"
    ],
    "question": "Sort the customer names in alphabetical order.",
    "question_toks": [
      "Sort",
      "the",
      "customer",
      "names",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "project_id",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "project_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "project_id",
      "from",
      "documents",
      "group",
      "by",
      "project_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are project ids of projects that have 2 or more corresponding documents?",
    "question_toks": [
      "What",
      "are",
      "project",
      "ids",
      "of",
      "projects",
      "that",
      "have",
      "2",
      "or",
      "more",
      "corresponding",
      "documents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT avg(Quantity) FROM stock",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Quantity",
      ")",
      "FROM",
      "stock"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "quantity",
      ")",
      "from",
      "stock"
    ],
    "question": "Give the average quantity of stocks.",
    "question_toks": [
      "Give",
      "the",
      "average",
      "quantity",
      "of",
      "stocks",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(*) FROM address WHERE district  =  'California'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "address",
      "WHERE",
      "district",
      "=",
      "'California",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "address",
      "where",
      "district",
      "=",
      "value"
    ],
    "question": "Count the number of addressed in the California district.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "addressed",
      "in",
      "the",
      "California",
      "district",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"California\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "f_id",
      "FROM",
      "files",
      "ORDER",
      "BY",
      "duration",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "f_id",
      "from",
      "files",
      "order",
      "by",
      "duration",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the id of the song that lasts the longest.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "song",
      "that",
      "lasts",
      "the",
      "longest",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(*)  >  1",
    "query_toks": [
      "SELECT",
      "Publisher",
      "FROM",
      "publication",
      "GROUP",
      "BY",
      "Publisher",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "publisher",
      "from",
      "publication",
      "group",
      "by",
      "publisher",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Show publishers that have more than one publication.",
    "question_toks": [
      "Show",
      "publishers",
      "that",
      "have",
      "more",
      "than",
      "one",
      "publication",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"food\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "allergy",
      "FROM",
      "Allergy_type",
      "WHERE",
      "allergytype",
      "=",
      "``",
      "food",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "allergy",
      "from",
      "allergy_type",
      "where",
      "allergytype",
      "=",
      "value"
    ],
    "question": "Show all allergies with type food.",
    "question_toks": [
      "Show",
      "all",
      "allergies",
      "with",
      "type",
      "food",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"food\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "film",
      "WHERE",
      "special_features",
      "LIKE",
      "'",
      "%",
      "Deleted",
      "Scenes",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "film",
      "where",
      "special_features",
      "like",
      "value"
    ],
    "question": "Which movies have 'Deleted Scenes' as a substring in the special feature?",
    "question_toks": [
      "Which",
      "movies",
      "have",
      "'Deleted",
      "Scenes",
      "'",
      "as",
      "a",
      "substring",
      "in",
      "the",
      "special",
      "feature",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"%Deleted Scenes%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT count(*) FROM customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "How many customers are there?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_and_lot",
    "query": "SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations",
    "query_toks": [
      "SELECT",
      "organization_id",
      "FROM",
      "organizations",
      "EXCEPT",
      "SELECT",
      "parent_organization_id",
      "FROM",
      "organizations"
    ],
    "query_toks_no_value": [
      "select",
      "organization_id",
      "from",
      "organizations",
      "except",
      "select",
      "parent_organization_id",
      "from",
      "organizations"
    ],
    "question": "Which organizations are not a parent organization of others? List the organization id.",
    "question_toks": [
      "Which",
      "organizations",
      "are",
      "not",
      "a",
      "parent",
      "organization",
      "of",
      "others",
      "?",
      "List",
      "the",
      "organization",
      "id",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              3
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  13,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "no_of_customers",
      ")",
      "FROM",
      "bank",
      "WHERE",
      "state",
      "=",
      "'Utah",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "no_of_customers",
      ")",
      "from",
      "bank",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "What is the average number of customers across banks in the state of Utah?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "customers",
      "across",
      "banks",
      "in",
      "the",
      "state",
      "of",
      "Utah",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Utah\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT vehicle_id FROM Vehicles;",
    "query_toks": [
      "SELECT",
      "vehicle_id",
      "FROM",
      "Vehicles",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "vehicle_id",
      "from",
      "vehicles"
    ],
    "question": "List all vehicle id",
    "question_toks": [
      "List",
      "all",
      "vehicle",
      "id"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Store_Name FROM Drama_Workshop_Groups",
    "query_toks": [
      "SELECT",
      "Store_Name",
      "FROM",
      "Drama_Workshop_Groups"
    ],
    "query_toks_no_value": [
      "select",
      "store_name",
      "from",
      "drama_workshop_groups"
    ],
    "question": "What are the store names of drama workshop groups?",
    "question_toks": [
      "What",
      "are",
      "the",
      "store",
      "names",
      "of",
      "drama",
      "workshop",
      "groups",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Statements",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Statements"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "statements"
    ],
    "question": "How many statements do we have?",
    "question_toks": [
      "How",
      "many",
      "statements",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT mountain_name FROM mountain WHERE state_name  =  \"alaska\";",
    "query_toks": [
      "SELECT",
      "mountain_name",
      "FROM",
      "mountain",
      "WHERE",
      "state_name",
      "=",
      "``",
      "alaska",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "mountain_name",
      "from",
      "mountain",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what mountains are in alaska",
    "question_toks": [
      "what",
      "mountains",
      "are",
      "in",
      "alaska"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"alaska\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT DISTINCT cName FROM tryout ORDER BY cName",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "cName",
      "FROM",
      "tryout",
      "ORDER",
      "BY",
      "cName"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "cname",
      "from",
      "tryout",
      "order",
      "by",
      "cname"
    ],
    "question": "Find the name of different colleges involved in the tryout in alphabetical order.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "different",
      "colleges",
      "involved",
      "in",
      "the",
      "tryout",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\"",
    "query_toks": [
      "SELECT",
      "document_type_description",
      "FROM",
      "Ref_document_types",
      "WHERE",
      "document_type_name",
      "=",
      "``",
      "Film",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_description",
      "from",
      "ref_document_types",
      "where",
      "document_type_name",
      "=",
      "value"
    ],
    "question": "Return the description of the document type name 'Film'.",
    "question_toks": [
      "Return",
      "the",
      "description",
      "of",
      "the",
      "document",
      "type",
      "name",
      "'Film",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Film\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_products_contacts",
    "query": "SELECT DISTINCT city FROM addresses",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "city",
      "FROM",
      "addresses"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "city",
      "from",
      "addresses"
    ],
    "question": "Show all distinct cities in the address record.",
    "question_toks": [
      "Show",
      "all",
      "distinct",
      "cities",
      "in",
      "the",
      "address",
      "record",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT MAX ( highest_elevation ) FROM highlow;",
    "query_toks": [
      "SELECT",
      "MAX",
      "(",
      "highest_elevation",
      ")",
      "FROM",
      "highlow",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "highest_elevation",
      ")",
      "from",
      "highlow"
    ],
    "question": "what is the highest elevation in the united states",
    "question_toks": [
      "what",
      "is",
      "the",
      "highest",
      "elevation",
      "in",
      "the",
      "united",
      "states"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "date_to",
      "FROM",
      "Project_Staff",
      "ORDER",
      "BY",
      "date_to",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "date_to",
      "from",
      "project_staff",
      "order",
      "by",
      "date_to",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the last date of the staff leaving the projects?",
    "question_toks": [
      "What",
      "is",
      "the",
      "last",
      "date",
      "of",
      "the",
      "staff",
      "leaving",
      "the",
      "projects",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "district_name",
      "FROM",
      "district",
      "ORDER",
      "BY",
      "city_population",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "district_name",
      "from",
      "district",
      "order",
      "by",
      "city_population",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which district has the largest population?",
    "question_toks": [
      "Which",
      "district",
      "has",
      "the",
      "largest",
      "population",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(*) FROM dorm",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "dorm"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "dorm"
    ],
    "question": "How many dorms are there?",
    "question_toks": [
      "How",
      "many",
      "dorms",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(DISTINCT last_name) FROM actor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "last_name",
      ")",
      "FROM",
      "actor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "last_name",
      ")",
      "from",
      "actor"
    ],
    "question": "Count the number of different last names actors have.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "last",
      "names",
      "actors",
      "have",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "musical",
      "WHERE",
      "Nominee",
      "=",
      "``",
      "Bob",
      "Fosse",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "musical",
      "where",
      "nominee",
      "=",
      "value"
    ],
    "question": "Return the names of musicals who have the nominee Bob Fosse.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "musicals",
      "who",
      "have",
      "the",
      "nominee",
      "Bob",
      "Fosse",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Bob Fosse\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Staff;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Staff",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "staff"
    ],
    "question": "How many employees are there?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "campuses",
      "WHERE",
      "county",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "campuses",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "How many campuses exist are in the county of LA?",
    "question_toks": [
      "How",
      "many",
      "campuses",
      "exist",
      "are",
      "in",
      "the",
      "county",
      "of",
      "LA",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "problem_log_id",
      "FROM",
      "problem_log",
      "ORDER",
      "BY",
      "log_entry_date",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "problem_log_id",
      "from",
      "problem_log",
      "order",
      "by",
      "log_entry_date",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the id of the problem log that is created most recently?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "problem",
      "log",
      "that",
      "is",
      "created",
      "most",
      "recently",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT fname FROM authors ORDER BY fname",
    "query_toks": [
      "SELECT",
      "fname",
      "FROM",
      "authors",
      "ORDER",
      "BY",
      "fname"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "authors",
      "order",
      "by",
      "fname"
    ],
    "question": "Sort the first names of all the authors in alphabetical order.",
    "question_toks": [
      "Sort",
      "the",
      "first",
      "names",
      "of",
      "all",
      "the",
      "authors",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT DISTINCT name FROM genres;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "name",
      "FROM",
      "genres",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "genres"
    ],
    "question": "What are the different names of the genres?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "names",
      "of",
      "the",
      "genres",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT service_name FROM services ORDER BY service_name",
    "query_toks": [
      "SELECT",
      "service_name",
      "FROM",
      "services",
      "ORDER",
      "BY",
      "service_name"
    ],
    "query_toks_no_value": [
      "select",
      "service_name",
      "from",
      "services",
      "order",
      "by",
      "service_name"
    ],
    "question": "Give me a list of all the service names sorted alphabetically.",
    "question_toks": [
      "Give",
      "me",
      "a",
      "list",
      "of",
      "all",
      "the",
      "service",
      "names",
      "sorted",
      "alphabetically",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( capital ) FROM state WHERE state_name  =  \"rhode island\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "capital",
      ")",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "rhode",
      "island",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "capital",
      ")",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how many capitals does rhode island have",
    "question_toks": [
      "how",
      "many",
      "capitals",
      "does",
      "rhode",
      "island",
      "have"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"rhode island\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT sum(hours) FROM projects",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "hours",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "hours",
      ")",
      "from",
      "projects"
    ],
    "question": "What is the total number of hours for all projects?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "hours",
      "for",
      "all",
      "projects",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Theme FROM farm_competition ORDER BY YEAR ASC",
    "query_toks": [
      "SELECT",
      "Theme",
      "FROM",
      "farm_competition",
      "ORDER",
      "BY",
      "YEAR",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "theme",
      "from",
      "farm_competition",
      "order",
      "by",
      "year",
      "asc"
    ],
    "question": "Return the themes of farm competitions, sorted by year ascending.",
    "question_toks": [
      "Return",
      "the",
      "themes",
      "of",
      "farm",
      "competitions",
      ",",
      "sorted",
      "by",
      "year",
      "ascending",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM tryout WHERE decision  =  'yes'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "tryout",
      "WHERE",
      "decision",
      "=",
      "'yes",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tryout",
      "where",
      "decision",
      "=",
      "value"
    ],
    "question": "How many students received a yes from tryouts?",
    "question_toks": [
      "How",
      "many",
      "students",
      "received",
      "a",
      "yes",
      "from",
      "tryouts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"yes\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Range",
      "FROM",
      "mountain",
      "ORDER",
      "BY",
      "Prominence",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "range",
      "from",
      "mountain",
      "order",
      "by",
      "prominence",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the different ranges of the 3 mountains with the highest prominence?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "ranges",
      "of",
      "the",
      "3",
      "mountains",
      "with",
      "the",
      "highest",
      "prominence",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT avg(price) FROM products",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "products"
    ],
    "question": "What is the average price across all products?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "across",
      "all",
      "products",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Share_in_percent",
      ")",
      "FROM",
      "channel",
      "WHERE",
      "OWNER",
      "=",
      "'CCTV",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "share_in_percent",
      ")",
      "from",
      "channel",
      "where",
      "owner",
      "=",
      "value"
    ],
    "question": "What is the total share (in percent) of all the channels owned by CCTV?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "share",
      "(",
      "in",
      "percent",
      ")",
      "of",
      "all",
      "the",
      "channels",
      "owned",
      "by",
      "CCTV",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"CCTV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student"
    ],
    "question": "What is the total number of students?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT sum(amount) FROM payment",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "amount",
      ")",
      "FROM",
      "payment"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount",
      ")",
      "from",
      "payment"
    ],
    "question": "What is the total amount of all payments?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "amount",
      "of",
      "all",
      "payments",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                65,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "roller_coaster",
    "query": "SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT(*)  >  2",
    "query_toks": [
      "SELECT",
      "Status",
      "FROM",
      "roller_coaster",
      "GROUP",
      "BY",
      "Status",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "status",
      "from",
      "roller_coaster",
      "group",
      "by",
      "status",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "List the status shared by more than two roller coaster.",
    "question_toks": [
      "List",
      "the",
      "status",
      "shared",
      "by",
      "more",
      "than",
      "two",
      "roller",
      "coaster",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_mdm",
    "query": "SELECT count(*) FROM rent_arrears",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "rent_arrears"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "rent_arrears"
    ],
    "question": "How many council taxes are collected for renting arrears ?",
    "question_toks": [
      "How",
      "many",
      "council",
      "taxes",
      "are",
      "collected",
      "for",
      "renting",
      "arrears",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT document_status_code FROM Ref_Document_Status;",
    "query_toks": [
      "SELECT",
      "document_status_code",
      "FROM",
      "Ref_Document_Status",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "document_status_code",
      "from",
      "ref_document_status"
    ],
    "question": "What document status codes do we have?",
    "question_toks": [
      "What",
      "document",
      "status",
      "codes",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT dept_name FROM department ORDER BY dept_name",
    "query_toks": [
      "SELECT",
      "dept_name",
      "FROM",
      "department",
      "ORDER",
      "BY",
      "dept_name"
    ],
    "query_toks_no_value": [
      "select",
      "dept_name",
      "from",
      "department",
      "order",
      "by",
      "dept_name"
    ],
    "question": "What are the names of all departments in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "departments",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "building",
      "FROM",
      "classroom",
      "WHERE",
      "capacity",
      ">",
      "50"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "building",
      "from",
      "classroom",
      "where",
      "capacity",
      ">",
      "value"
    ],
    "question": "Find the buildings which have rooms with capacity more than 50.",
    "question_toks": [
      "Find",
      "the",
      "buildings",
      "which",
      "have",
      "rooms",
      "with",
      "capacity",
      "more",
      "than",
      "50",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          50.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "coffee_shop",
    "query": "SELECT count(*) FROM member WHERE Membership_card  =  'Black'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "member",
      "WHERE",
      "Membership_card",
      "=",
      "'Black",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "member",
      "where",
      "membership_card",
      "=",
      "value"
    ],
    "question": "How many members have the black membership card?",
    "question_toks": [
      "How",
      "many",
      "members",
      "have",
      "the",
      "black",
      "membership",
      "card",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Black\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      "FROM",
      "catalog_contents",
      "ORDER",
      "BY",
      "height",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      "from",
      "catalog_contents",
      "order",
      "by",
      "height",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the product with the highest height? Give me the catalog entry name.",
    "question_toks": [
      "What",
      "is",
      "the",
      "product",
      "with",
      "the",
      "highest",
      "height",
      "?",
      "Give",
      "me",
      "the",
      "catalog",
      "entry",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_in_alabama",
    "query": "SELECT service_type_code FROM services ORDER BY service_type_code",
    "query_toks": [
      "SELECT",
      "service_type_code",
      "FROM",
      "services",
      "ORDER",
      "BY",
      "service_type_code"
    ],
    "query_toks_no_value": [
      "select",
      "service_type_code",
      "from",
      "services",
      "order",
      "by",
      "service_type_code"
    ],
    "question": "List the type of the services in alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "type",
      "of",
      "the",
      "services",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(*) FROM store",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "store"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "store"
    ],
    "question": "How many stores are there?",
    "question_toks": [
      "How",
      "many",
      "stores",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            15
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT DISTINCT product_name FROM product ORDER BY product_name",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "product_name",
      "FROM",
      "product",
      "ORDER",
      "BY",
      "product_name"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "product_name",
      "from",
      "product",
      "order",
      "by",
      "product_name"
    ],
    "question": "Sort all the distinct product names in alphabetical order.",
    "question_toks": [
      "Sort",
      "all",
      "the",
      "distinct",
      "product",
      "names",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT DISTINCT product_name FROM product ORDER BY product_id",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "product_name",
      "FROM",
      "product",
      "ORDER",
      "BY",
      "product_id"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "product_name",
      "from",
      "product",
      "order",
      "by",
      "product_id"
    ],
    "question": "What is the list of distinct product names sorted by product id?",
    "question_toks": [
      "What",
      "is",
      "the",
      "list",
      "of",
      "distinct",
      "product",
      "names",
      "sorted",
      "by",
      "product",
      "id",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\"",
    "query_toks": [
      "SELECT",
      "attribute_data_type",
      "FROM",
      "Attribute_Definitions",
      "WHERE",
      "attribute_name",
      "=",
      "``",
      "Green",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "attribute_data_type",
      "from",
      "attribute_definitions",
      "where",
      "attribute_name",
      "=",
      "value"
    ],
    "question": "What is the attribute data type of the attribute with name \"Green\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "attribute",
      "data",
      "type",
      "of",
      "the",
      "attribute",
      "with",
      "name",
      "``",
      "Green",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Green\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT max(OMIM) FROM enzyme",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "OMIM",
      ")",
      "FROM",
      "enzyme"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "omim",
      ")",
      "from",
      "enzyme"
    ],
    "question": "What is the maximum OMIM value in the database?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "OMIM",
      "value",
      "in",
      "the",
      "database",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Order_Date FROM BOOKINGS",
    "query_toks": [
      "SELECT",
      "Order_Date",
      "FROM",
      "BOOKINGS"
    ],
    "query_toks_no_value": [
      "select",
      "order_date",
      "from",
      "bookings"
    ],
    "question": "List the order dates of all the bookings.",
    "question_toks": [
      "List",
      "the",
      "order",
      "dates",
      "of",
      "all",
      "the",
      "bookings",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM Ref_document_types",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_document_types"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_document_types"
    ],
    "question": "How many document types are there?",
    "question_toks": [
      "How",
      "many",
      "document",
      "types",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums"
    ],
    "question": "List every album's title.",
    "question_toks": [
      "List",
      "every",
      "album",
      "'s",
      "title",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "characteristic_name",
      "FROM",
      "CHARACTERISTICS"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "characteristic_name",
      "from",
      "characteristics"
    ],
    "question": "What are the different names of the product characteristics?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "names",
      "of",
      "the",
      "product",
      "characteristics",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM state WHERE capital  =  \"salem\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "state",
      "WHERE",
      "capital",
      "=",
      "``",
      "salem",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "state",
      "where",
      "capital",
      "=",
      "value"
    ],
    "question": "what state is salem the capital of",
    "question_toks": [
      "what",
      "state",
      "is",
      "salem",
      "the",
      "capital",
      "of"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"salem\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT avg(order_quantity) FROM order_items",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "order_quantity",
      ")",
      "FROM",
      "order_items"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "order_quantity",
      ")",
      "from",
      "order_items"
    ],
    "question": "Find the average order quantity per order.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "order",
      "quantity",
      "per",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT * FROM COURSE ORDER BY Credits",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "COURSE",
      "ORDER",
      "BY",
      "Credits"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "course",
      "order",
      "by",
      "credits"
    ],
    "question": "List all information about courses sorted by credits in the ascending order.",
    "question_toks": [
      "List",
      "all",
      "information",
      "about",
      "courses",
      "sorted",
      "by",
      "credits",
      "in",
      "the",
      "ascending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM tryout WHERE pPos  =  'goalie'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "tryout",
      "WHERE",
      "pPos",
      "=",
      "'goalie",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tryout",
      "where",
      "ppos",
      "=",
      "value"
    ],
    "question": "What is the number of students playing as a goalie?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "students",
      "playing",
      "as",
      "a",
      "goalie",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"goalie\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Ludie",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value"
    ],
    "question": "How many staff have the first name Ludie?",
    "question_toks": [
      "How",
      "many",
      "staff",
      "have",
      "the",
      "first",
      "name",
      "Ludie",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Ludie\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT DISTINCT product_name FROM product ORDER BY product_id",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "product_name",
      "FROM",
      "product",
      "ORDER",
      "BY",
      "product_id"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "product_name",
      "from",
      "product",
      "order",
      "by",
      "product_id"
    ],
    "question": "List all the distinct product names ordered by product id?",
    "question_toks": [
      "List",
      "all",
      "the",
      "distinct",
      "product",
      "names",
      "ordered",
      "by",
      "product",
      "id",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Name FROM GENRE",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "GENRE"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "genre"
    ],
    "question": "What are the names of different music genres?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "different",
      "music",
      "genres",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "CUSTOMER",
      "WHERE",
      "Email",
      "LIKE",
      "``",
      "%",
      "gmail.com",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customer",
      "where",
      "email",
      "like",
      "value"
    ],
    "question": "How many customers have email that contains \"gmail.com\"?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "have",
      "email",
      "that",
      "contains",
      "``",
      "gmail.com",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"%gmail.com%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT capital FROM state WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "capital",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "capital",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what are the capital city in texas",
    "question_toks": [
      "what",
      "are",
      "the",
      "capital",
      "city",
      "in",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "mountain_photos",
    "query": "SELECT count(*) FROM camera_lens WHERE focal_length_mm  >  15",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "camera_lens",
      "WHERE",
      "focal_length_mm",
      ">",
      "15"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "camera_lens",
      "where",
      "focal_length_mm",
      ">",
      "value"
    ],
    "question": "How many camera lenses have a focal length longer than 15 mm?",
    "question_toks": [
      "How",
      "many",
      "camera",
      "lenses",
      "have",
      "a",
      "focal",
      "length",
      "longer",
      "than",
      "15",
      "mm",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          15.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\"",
    "query_toks": [
      "SELECT",
      "distinct",
      "(",
      "catalog_publisher",
      ")",
      "FROM",
      "catalogs",
      "WHERE",
      "catalog_publisher",
      "LIKE",
      "``",
      "%",
      "Murray",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "(",
      "catalog_publisher",
      ")",
      "from",
      "catalogs",
      "where",
      "catalog_publisher",
      "like",
      "value"
    ],
    "question": "Which catalog publishers have substring \"Murray\" in their names?",
    "question_toks": [
      "Which",
      "catalog",
      "publishers",
      "have",
      "substring",
      "``",
      "Murray",
      "''",
      "in",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"%Murray%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT keyword FROM keyword;",
    "query_toks": [
      "SELECT",
      "keyword",
      "FROM",
      "keyword",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "keyword",
      "from",
      "keyword"
    ],
    "question": "return me all the keywords .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "keywords",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Destroyed_by_Employee_ID",
      "FROM",
      "Documents_to_be_destroyed"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "destroyed_by_employee_id",
      "from",
      "documents_to_be_destroyed"
    ],
    "question": "What are the ids of all the employees who have destroyed documents?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "the",
      "employees",
      "who",
      "have",
      "destroyed",
      "documents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT color_description FROM ref_colors",
    "query_toks": [
      "SELECT",
      "color_description",
      "FROM",
      "ref_colors"
    ],
    "query_toks_no_value": [
      "select",
      "color_description",
      "from",
      "ref_colors"
    ],
    "question": "What are the descriptions for each color?",
    "question_toks": [
      "What",
      "are",
      "the",
      "descriptions",
      "for",
      "each",
      "color",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "Party",
      "FROM",
      "party",
      "GROUP",
      "BY",
      "Party",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "party",
      "from",
      "party",
      "group",
      "by",
      "party",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Which party has two or more records?",
    "question_toks": [
      "Which",
      "party",
      "has",
      "two",
      "or",
      "more",
      "records",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "border",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "border",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what states neighbor kentucky",
    "question_toks": [
      "what",
      "states",
      "neighbor",
      "kentucky"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\"",
    "query_toks": [
      "SELECT",
      "product_name",
      "FROM",
      "products",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Spices",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      "from",
      "products",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "What are the names of products with category \"Spices\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "products",
      "with",
      "category",
      "``",
      "Spices",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Spices\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT DISTINCT name FROM nurse ORDER BY name",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "name",
      "FROM",
      "nurse",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "nurse",
      "order",
      "by",
      "name"
    ],
    "question": "List the names of all distinct nurses ordered by alphabetical order?",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "distinct",
      "nurses",
      "ordered",
      "by",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT lake_name FROM lake WHERE state_name  =  \"california\";",
    "query_toks": [
      "SELECT",
      "lake_name",
      "FROM",
      "lake",
      "WHERE",
      "state_name",
      "=",
      "``",
      "california",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "lake_name",
      "from",
      "lake",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "give me the lakes in california",
    "question_toks": [
      "give",
      "me",
      "the",
      "lakes",
      "in",
      "california"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"california\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
    "query_toks": [
      "SELECT",
      "patient",
      "FROM",
      "undergoes",
      "ORDER",
      "BY",
      "dateundergoes",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "patient",
      "from",
      "undergoes",
      "order",
      "by",
      "dateundergoes",
      "limit",
      "value"
    ],
    "question": "Find the patient who has the most recent undergoing treatment?",
    "question_toks": [
      "Find",
      "the",
      "patient",
      "who",
      "has",
      "the",
      "most",
      "recent",
      "undergoing",
      "treatment",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            14
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                63,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              66,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( state_name ) FROM state;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "state_name",
      ")",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "state_name",
      ")",
      "from",
      "state"
    ],
    "question": "how many states does usa have",
    "question_toks": [
      "how",
      "many",
      "states",
      "does",
      "usa",
      "have"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_1",
    "query": "SELECT Dependent_name FROM dependent WHERE relationship  =  'Spouse'",
    "query_toks": [
      "SELECT",
      "Dependent_name",
      "FROM",
      "dependent",
      "WHERE",
      "relationship",
      "=",
      "'Spouse",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "dependent_name",
      "from",
      "dependent",
      "where",
      "relationship",
      "=",
      "value"
    ],
    "question": "find all dependent names who have a spouse relation with some employee.",
    "question_toks": [
      "find",
      "all",
      "dependent",
      "names",
      "who",
      "have",
      "a",
      "spouse",
      "relation",
      "with",
      "some",
      "employee",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"Spouse\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "District_name",
      "FROM",
      "district",
      "ORDER",
      "BY",
      "city_area",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "district_name",
      "from",
      "district",
      "order",
      "by",
      "city_area",
      "desc"
    ],
    "question": "What are the different district names in order of descending city area?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "district",
      "names",
      "in",
      "order",
      "of",
      "descending",
      "city",
      "area",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT count(*) FROM COURSE",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "COURSE"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "course"
    ],
    "question": "How many courses are there in total?",
    "question_toks": [
      "How",
      "many",
      "courses",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM employees WHERE country = \"Canada\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employees",
      "WHERE",
      "country",
      "=",
      "``",
      "Canada",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employees",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many employees live in Canada?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "live",
      "in",
      "Canada",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Canada\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_injury",
    "query": "SELECT average_attendance FROM stadium WHERE capacity_percentage  >  100",
    "query_toks": [
      "SELECT",
      "average_attendance",
      "FROM",
      "stadium",
      "WHERE",
      "capacity_percentage",
      ">",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "average_attendance",
      "from",
      "stadium",
      "where",
      "capacity_percentage",
      ">",
      "value"
    ],
    "question": "What is the average attendance of stadiums with capacity percentage higher than 100%?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "attendance",
      "of",
      "stadiums",
      "with",
      "capacity",
      "percentage",
      "higher",
      "than",
      "100",
      "%",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clubname FROM club WHERE clublocation  =  \"AKW\"",
    "query_toks": [
      "SELECT",
      "clubname",
      "FROM",
      "club",
      "WHERE",
      "clublocation",
      "=",
      "``",
      "AKW",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clubname",
      "from",
      "club",
      "where",
      "clublocation",
      "=",
      "value"
    ],
    "question": "Which clubs are located at \"AKW\"? Return the club names.",
    "question_toks": [
      "Which",
      "clubs",
      "are",
      "located",
      "at",
      "``",
      "AKW",
      "''",
      "?",
      "Return",
      "the",
      "club",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"AKW\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "CLASS",
      "FROM",
      "race",
      "GROUP",
      "BY",
      "CLASS",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "class",
      "from",
      "race",
      "group",
      "by",
      "class",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "List the race class with at least two races.",
    "question_toks": [
      "List",
      "the",
      "race",
      "class",
      "with",
      "at",
      "least",
      "two",
      "races",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT name FROM organization WHERE continent  =  \"North America\";",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "organization",
      "WHERE",
      "continent",
      "=",
      "``",
      "North",
      "America",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "organization",
      "where",
      "continent",
      "=",
      "value"
    ],
    "question": "return me all the organizations in \" North America \" .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "organizations",
      "in",
      "``",
      "North",
      "America",
      "``",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              33,
              false
            ],
            null
          ],
          "\"North America\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT count(*) FROM Reviewer",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Reviewer"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "reviewer"
    ],
    "question": "How many reviewers listed?",
    "question_toks": [
      "How",
      "many",
      "reviewers",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Customers_cards",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers_cards"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers_cards"
    ],
    "question": "Show the number of customer cards.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "customer",
      "cards",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name FROM program ORDER BY launch DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "program",
      "ORDER",
      "BY",
      "launch",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "program",
      "order",
      "by",
      "launch",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which program was launched most recently? Return the program name.",
    "question_toks": [
      "Which",
      "program",
      "was",
      "launched",
      "most",
      "recently",
      "?",
      "Return",
      "the",
      "program",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Greenland",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many different cities do have some airport in the country of Greenland?",
    "question_toks": [
      "How",
      "many",
      "different",
      "cities",
      "do",
      "have",
      "some",
      "airport",
      "in",
      "the",
      "country",
      "of",
      "Greenland",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Greenland\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT Investor_details FROM INVESTORS",
    "query_toks": [
      "SELECT",
      "Investor_details",
      "FROM",
      "INVESTORS"
    ],
    "query_toks_no_value": [
      "select",
      "investor_details",
      "from",
      "investors"
    ],
    "question": "Show all investor details.",
    "question_toks": [
      "Show",
      "all",
      "investor",
      "details",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT Country FROM market ORDER BY Number_cities DESC",
    "query_toks": [
      "SELECT",
      "Country",
      "FROM",
      "market",
      "ORDER",
      "BY",
      "Number_cities",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "market",
      "order",
      "by",
      "number_cities",
      "desc"
    ],
    "question": "List all countries of markets in descending order of number of cities.",
    "question_toks": [
      "List",
      "all",
      "countries",
      "of",
      "markets",
      "in",
      "descending",
      "order",
      "of",
      "number",
      "of",
      "cities",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT avg(Profits_billion) FROM Companies",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Profits_billion",
      ")",
      "FROM",
      "Companies"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "profits_billion",
      ")",
      "from",
      "companies"
    ],
    "question": "What are the average profits of companies?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "profits",
      "of",
      "companies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT price_range FROM HOTELS",
    "query_toks": [
      "SELECT",
      "price_range",
      "FROM",
      "HOTELS"
    ],
    "query_toks_no_value": [
      "select",
      "price_range",
      "from",
      "hotels"
    ],
    "question": "Tell me the price ranges for all the hotels.",
    "question_toks": [
      "Tell",
      "me",
      "the",
      "price",
      "ranges",
      "for",
      "all",
      "the",
      "hotels",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(DISTINCT sportname) FROM Sportsinfo",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "sportname",
      ")",
      "FROM",
      "Sportsinfo"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "sportname",
      ")",
      "from",
      "sportsinfo"
    ],
    "question": "How many different types of sports do we offer?",
    "question_toks": [
      "How",
      "many",
      "different",
      "types",
      "of",
      "sports",
      "do",
      "we",
      "offer",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                16,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT distinct(BillingCountry) FROM INVOICE",
    "query_toks": [
      "SELECT",
      "distinct",
      "(",
      "BillingCountry",
      ")",
      "FROM",
      "INVOICE"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "(",
      "billingcountry",
      ")",
      "from",
      "invoice"
    ],
    "question": "What are the distinct billing countries of the invoices?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "billing",
      "countries",
      "of",
      "the",
      "invoices",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                42,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(*) FROM Video_games",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Video_games"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "video_games"
    ],
    "question": "How many video games exist?",
    "question_toks": [
      "How",
      "many",
      "video",
      "games",
      "exist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT f_id FROM files WHERE formats  =  \"mp3\"",
    "query_toks": [
      "SELECT",
      "f_id",
      "FROM",
      "files",
      "WHERE",
      "formats",
      "=",
      "``",
      "mp3",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "f_id",
      "from",
      "files",
      "where",
      "formats",
      "=",
      "value"
    ],
    "question": "What are the id of songs whose format is mp3.",
    "question_toks": [
      "What",
      "are",
      "the",
      "id",
      "of",
      "songs",
      "whose",
      "format",
      "is",
      "mp3",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mp3\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3",
    "query_toks": [
      "SELECT",
      "role_code",
      "FROM",
      "Employees",
      "GROUP",
      "BY",
      "role_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "role_code",
      "from",
      "employees",
      "group",
      "by",
      "role_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show all role codes with at least 3 employees.",
    "question_toks": [
      "Show",
      "all",
      "role",
      "codes",
      "with",
      "at",
      "least",
      "3",
      "employees",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT count(*) FROM school",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "school"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "school"
    ],
    "question": "Count the number of schools.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "schools",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT lname FROM authors ORDER BY lname",
    "query_toks": [
      "SELECT",
      "lname",
      "FROM",
      "authors",
      "ORDER",
      "BY",
      "lname"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      "from",
      "authors",
      "order",
      "by",
      "lname"
    ],
    "question": "Give me a list of all the last names of authors sorted in alphabetical order",
    "question_toks": [
      "Give",
      "me",
      "a",
      "list",
      "of",
      "all",
      "the",
      "last",
      "names",
      "of",
      "authors",
      "sorted",
      "in",
      "alphabetical",
      "order"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT * FROM basketball_match",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "basketball_match"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "basketball_match"
    ],
    "question": "What is all the information about the basketball match?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "information",
      "about",
      "the",
      "basketball",
      "match",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = \"working\";",
    "query_toks": [
      "SELECT",
      "document_status_description",
      "FROM",
      "Ref_Document_Status",
      "WHERE",
      "document_status_code",
      "=",
      "``",
      "working",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "document_status_description",
      "from",
      "ref_document_status",
      "where",
      "document_status_code",
      "=",
      "value"
    ],
    "question": "What is the description of document status code 'working'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "document",
      "status",
      "code",
      "'working",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"working\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT first_name FROM people ORDER BY first_name",
    "query_toks": [
      "SELECT",
      "first_name",
      "FROM",
      "people",
      "ORDER",
      "BY",
      "first_name"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      "from",
      "people",
      "order",
      "by",
      "first_name"
    ],
    "question": "List the first names of people in alphabetical order?",
    "question_toks": [
      "List",
      "the",
      "first",
      "names",
      "of",
      "people",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"Pass\"",
    "query_toks": [
      "SELECT",
      "candidate_id",
      "FROM",
      "candidate_assessments",
      "WHERE",
      "asessment_outcome_code",
      "=",
      "``",
      "Pass",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "candidate_id",
      "from",
      "candidate_assessments",
      "where",
      "asessment_outcome_code",
      "=",
      "value"
    ],
    "question": "What are the ids of the candidates that have an outcome code of Pass?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "the",
      "candidates",
      "that",
      "have",
      "an",
      "outcome",
      "code",
      "of",
      "Pass",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          "\"Pass\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT job_title FROM jobs WHERE min_salary  >  9000",
    "query_toks": [
      "SELECT",
      "job_title",
      "FROM",
      "jobs",
      "WHERE",
      "min_salary",
      ">",
      "9000"
    ],
    "query_toks_no_value": [
      "select",
      "job_title",
      "from",
      "jobs",
      "where",
      "min_salary",
      ">",
      "value"
    ],
    "question": "Which job titles correspond to jobs with salaries over 9000?",
    "question_toks": [
      "Which",
      "job",
      "titles",
      "correspond",
      "to",
      "jobs",
      "with",
      "salaries",
      "over",
      "9000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          9000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT count(*) FROM BOOKINGS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "BOOKINGS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "bookings"
    ],
    "question": "Count the total number of bookings made.",
    "question_toks": [
      "Count",
      "the",
      "total",
      "number",
      "of",
      "bookings",
      "made",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( city_name ) FROM city;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "city_name",
      ")",
      "FROM",
      "city",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "city_name",
      ")",
      "from",
      "city"
    ],
    "question": "how many cities are there in the united states",
    "question_toks": [
      "how",
      "many",
      "cities",
      "are",
      "there",
      "in",
      "the",
      "united",
      "states"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT Name FROM People ORDER BY Weight ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "People",
      "ORDER",
      "BY",
      "Weight",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "order",
      "by",
      "weight",
      "asc"
    ],
    "question": "Return the names of people, ordered by weight ascending.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "people",
      ",",
      "ordered",
      "by",
      "weight",
      "ascending",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT * FROM College ORDER BY enr",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "College",
      "ORDER",
      "BY",
      "enr"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "college",
      "order",
      "by",
      "enr"
    ],
    "question": "What information do you have on colleges sorted by increasing enrollment numbers?",
    "question_toks": [
      "What",
      "information",
      "do",
      "you",
      "have",
      "on",
      "colleges",
      "sorted",
      "by",
      "increasing",
      "enrollment",
      "numbers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT Carrier FROM device ORDER BY Carrier ASC",
    "query_toks": [
      "SELECT",
      "Carrier",
      "FROM",
      "device",
      "ORDER",
      "BY",
      "Carrier",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "carrier",
      "from",
      "device",
      "order",
      "by",
      "carrier",
      "asc"
    ],
    "question": "What are the different carriers for devices, listed in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "carriers",
      "for",
      "devices",
      ",",
      "listed",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT count(*) FROM COURSE",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "COURSE"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "course"
    ],
    "question": "Count the number of courses.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "courses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT DISTINCT card_type_code FROM Customers_Cards",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "card_type_code",
      "FROM",
      "Customers_Cards"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "card_type_code",
      "from",
      "customers_cards"
    ],
    "question": "Show all card type codes.",
    "question_toks": [
      "Show",
      "all",
      "card",
      "type",
      "codes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_1",
    "query": "SELECT model_name FROM chip_model ORDER BY launch_year",
    "query_toks": [
      "SELECT",
      "model_name",
      "FROM",
      "chip_model",
      "ORDER",
      "BY",
      "launch_year"
    ],
    "query_toks_no_value": [
      "select",
      "model_name",
      "from",
      "chip_model",
      "order",
      "by",
      "launch_year"
    ],
    "question": "List all the model names sorted by their launch year.",
    "question_toks": [
      "List",
      "all",
      "the",
      "model",
      "names",
      "sorted",
      "by",
      "their",
      "launch",
      "year",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "support_rate",
      "FROM",
      "candidate",
      "ORDER",
      "BY",
      "support_rate",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "support_rate",
      "from",
      "candidate",
      "order",
      "by",
      "support_rate",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the top 3 greatest support rates.",
    "question_toks": [
      "Return",
      "the",
      "top",
      "3",
      "greatest",
      "support",
      "rates",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT avg(access_count) FROM documents",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "access_count",
      ")",
      "FROM",
      "documents"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "access_count",
      ")",
      "from",
      "documents"
    ],
    "question": "Find the average access count across all documents?",
    "question_toks": [
      "Find",
      "the",
      "average",
      "access",
      "count",
      "across",
      "all",
      "documents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT abstract FROM publication WHERE title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "abstract",
      "FROM",
      "publication",
      "WHERE",
      "title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "abstract",
      "from",
      "publication",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "return me the abstract of \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "abstract",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT * FROM College ORDER BY enr",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "College",
      "ORDER",
      "BY",
      "enr"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "college",
      "order",
      "by",
      "enr"
    ],
    "question": "List all information about college sorted by enrollment number in the ascending order.",
    "question_toks": [
      "List",
      "all",
      "information",
      "about",
      "college",
      "sorted",
      "by",
      "enrollment",
      "number",
      "in",
      "the",
      "ascending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "classroom",
      "WHERE",
      "building",
      "=",
      "'Lamberton",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "classroom",
      "where",
      "building",
      "=",
      "value"
    ],
    "question": "Count the number of classrooms in Lamberton.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "classrooms",
      "in",
      "Lamberton",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Lamberton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT * FROM basketball_match",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "basketball_match"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "basketball_match"
    ],
    "question": "List all information regarding the basketball match.",
    "question_toks": [
      "List",
      "all",
      "information",
      "regarding",
      "the",
      "basketball",
      "match",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "boulder",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "population of boulder",
    "question_toks": [
      "population",
      "of",
      "boulder"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"boulder\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT avg(price) FROM products WHERE Manufacturer  =  2",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "products",
      "WHERE",
      "Manufacturer",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "products",
      "where",
      "manufacturer",
      "=",
      "value"
    ],
    "question": "Compute the average price of all products with manufacturer code equal to 2.",
    "question_toks": [
      "Compute",
      "the",
      "average",
      "price",
      "of",
      "all",
      "products",
      "with",
      "manufacturer",
      "code",
      "equal",
      "to",
      "2",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM park WHERE city = 'Atlanta';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "park",
      "WHERE",
      "city",
      "=",
      "'Atlanta",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "park",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "How many parks are there in Atlanta city?",
    "question_toks": [
      "How",
      "many",
      "parks",
      "are",
      "there",
      "in",
      "Atlanta",
      "city",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            17
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              209,
              false
            ],
            null
          ],
          "\"Atlanta\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT DISTINCT allergytype FROM Allergy_type",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "allergytype",
      "FROM",
      "Allergy_type"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "allergytype",
      "from",
      "allergy_type"
    ],
    "question": "Show all allergy types.",
    "question_toks": [
      "Show",
      "all",
      "allergy",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "border",
      ")",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "border",
      ")",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how many states does kentucky border",
    "question_toks": [
      "how",
      "many",
      "states",
      "does",
      "kentucky",
      "border"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(DISTINCT card_type_code) FROM Customers_Cards",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "card_type_code",
      ")",
      "FROM",
      "Customers_Cards"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "card_type_code",
      ")",
      "from",
      "customers_cards"
    ],
    "question": "Show the number of card types.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "card",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                14,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT Name FROM Products",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "Products"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "products"
    ],
    "question": "What are the names of all products?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "products",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT mountain_altitude FROM mountain WHERE mountain_name  =  \"mckinley\";",
    "query_toks": [
      "SELECT",
      "mountain_altitude",
      "FROM",
      "mountain",
      "WHERE",
      "mountain_name",
      "=",
      "``",
      "mckinley",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "mountain_altitude",
      "from",
      "mountain",
      "where",
      "mountain_name",
      "=",
      "value"
    ],
    "question": "what is the height of mount mckinley",
    "question_toks": [
      "what",
      "is",
      "the",
      "height",
      "of",
      "mount",
      "mckinley"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"mckinley\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT name FROM station WHERE lat  <  37.5",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "station",
      "WHERE",
      "lat",
      "<",
      "37.5"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "station",
      "where",
      "lat",
      "<",
      "value"
    ],
    "question": "What are the names of stations that have latitude lower than 37.5?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "stations",
      "that",
      "have",
      "latitude",
      "lower",
      "than",
      "37.5",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          37.5,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Song FROM volume ORDER BY Song",
    "query_toks": [
      "SELECT",
      "Song",
      "FROM",
      "volume",
      "ORDER",
      "BY",
      "Song"
    ],
    "query_toks_no_value": [
      "select",
      "song",
      "from",
      "volume",
      "order",
      "by",
      "song"
    ],
    "question": "What are the the songs in volumes, listed in ascending order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "the",
      "songs",
      "in",
      "volumes",
      ",",
      "listed",
      "in",
      "ascending",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student"
    ],
    "question": "How many students are there?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "roller_coaster",
    "query": "SELECT count(*) FROM roller_coaster",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "roller_coaster"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "roller_coaster"
    ],
    "question": "How many roller coasters are there?",
    "question_toks": [
      "How",
      "many",
      "roller",
      "coasters",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT count(DISTINCT roomtype) FROM room",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "roomtype",
      ")",
      "FROM",
      "room"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "roomtype",
      ")",
      "from",
      "room"
    ],
    "question": "Find the number of distinct room types available.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "room",
      "types",
      "available",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                49,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "roomName",
      "FROM",
      "Rooms",
      "ORDER",
      "BY",
      "maxOccupancy",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "roomname",
      "from",
      "rooms",
      "order",
      "by",
      "maxoccupancy",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the room that can accommodate the most people?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "room",
      "that",
      "can",
      "accommodate",
      "the",
      "most",
      "people",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT email FROM user_profiles WHERE name  =  'Mary'",
    "query_toks": [
      "SELECT",
      "email",
      "FROM",
      "user_profiles",
      "WHERE",
      "name",
      "=",
      "'Mary",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "email",
      "from",
      "user_profiles",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Find the emails of the user named \"Mary\".",
    "question_toks": [
      "Find",
      "the",
      "emails",
      "of",
      "the",
      "user",
      "named",
      "``",
      "Mary",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Mary\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "County_name",
      "FROM",
      "county",
      "ORDER",
      "BY",
      "Population",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "county_name",
      "from",
      "county",
      "order",
      "by",
      "population",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which county has the largest population? Give me the name of the county.",
    "question_toks": [
      "Which",
      "county",
      "has",
      "the",
      "largest",
      "population",
      "?",
      "Give",
      "me",
      "the",
      "name",
      "of",
      "the",
      "county",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Staff",
      "WHERE",
      "first_name",
      "=",
      "``",
      "Ludie",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "staff",
      "where",
      "first_name",
      "=",
      "value"
    ],
    "question": "How many employees have a first name of Ludie?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "have",
      "a",
      "first",
      "name",
      "of",
      "Ludie",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Ludie\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "workshop_paper",
    "query": "SELECT count(*) FROM submission",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "submission"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "submission"
    ],
    "question": "How many submissions are there?",
    "question_toks": [
      "How",
      "many",
      "submissions",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC",
    "query_toks": [
      "SELECT",
      "Crime_rate",
      "FROM",
      "county_public_safety",
      "ORDER",
      "BY",
      "Police_officers",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "crime_rate",
      "from",
      "county_public_safety",
      "order",
      "by",
      "police_officers",
      "asc"
    ],
    "question": "What are the crime rates of counties sorted by number of offices ascending?",
    "question_toks": [
      "What",
      "are",
      "the",
      "crime",
      "rates",
      "of",
      "counties",
      "sorted",
      "by",
      "number",
      "of",
      "offices",
      "ascending",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "Studio",
      "FROM",
      "film",
      "GROUP",
      "BY",
      "Studio",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "studio",
      "from",
      "film",
      "group",
      "by",
      "studio",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the names of studios that have made two or more films?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "studios",
      "that",
      "have",
      "made",
      "two",
      "or",
      "more",
      "films",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT count(*) FROM review",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "review"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "review"
    ],
    "question": "Find the number of reviews.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "reviews",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT city_name FROM city WHERE population  >  150000;",
    "query_toks": [
      "SELECT",
      "city_name",
      "FROM",
      "city",
      "WHERE",
      "population",
      ">",
      "150000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "city_name",
      "from",
      "city",
      "where",
      "population",
      ">",
      "value"
    ],
    "question": "what are the major cities of the us",
    "question_toks": [
      "what",
      "are",
      "the",
      "major",
      "cities",
      "of",
      "the",
      "us"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          150000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT bname FROM bank WHERE state  =  'New York'",
    "query_toks": [
      "SELECT",
      "bname",
      "FROM",
      "bank",
      "WHERE",
      "state",
      "=",
      "'New",
      "York",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "bname",
      "from",
      "bank",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "What are the names of banks in the state of New York?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "banks",
      "in",
      "the",
      "state",
      "of",
      "New",
      "York",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"New York\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "county_public_safety",
      "ORDER",
      "BY",
      "Population",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "county_public_safety",
      "order",
      "by",
      "population",
      "desc",
      "limit",
      "value"
    ],
    "question": "List the name of the county with the largest population.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "the",
      "county",
      "with",
      "the",
      "largest",
      "population",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT avg(Number_of_hosts) FROM party",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Number_of_hosts",
      ")",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "number_of_hosts",
      ")",
      "from",
      "party"
    ],
    "question": "What is the average number of hosts for parties?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "hosts",
      "for",
      "parties",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT count(DISTINCT FDA_approved) FROM medicine",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "FDA_approved",
      ")",
      "FROM",
      "medicine"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "fda_approved",
      ")",
      "from",
      "medicine"
    ],
    "question": "How many distinct FDA approval statuses are there for the medicines?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "FDA",
      "approval",
      "statuses",
      "are",
      "there",
      "for",
      "the",
      "medicines",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Team",
      "FROM",
      "player",
      "ORDER",
      "BY",
      "Age",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "team",
      "from",
      "player",
      "order",
      "by",
      "age",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the team of the player of the highest age.",
    "question_toks": [
      "Find",
      "the",
      "team",
      "of",
      "the",
      "player",
      "of",
      "the",
      "highest",
      "age",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'A",
      "%",
      "'",
      "ORDER",
      "BY",
      "title",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "value",
      "order",
      "by",
      "title"
    ],
    "question": "List every album whose title starts with A in alphabetical order.",
    "question_toks": [
      "List",
      "every",
      "album",
      "whose",
      "title",
      "starts",
      "with",
      "A",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"A%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code  =  \"VIOLENCE\"",
    "query_toks": [
      "SELECT",
      "incident_type_description",
      "FROM",
      "Ref_Incident_Type",
      "WHERE",
      "incident_type_code",
      "=",
      "``",
      "VIOLENCE",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "incident_type_description",
      "from",
      "ref_incident_type",
      "where",
      "incident_type_code",
      "=",
      "value"
    ],
    "question": "What is the incident type description for the incident type with code \"VIOLENCE\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "incident",
      "type",
      "description",
      "for",
      "the",
      "incident",
      "type",
      "with",
      "code",
      "``",
      "VIOLENCE",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"VIOLENCE\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(*) FROM student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student"
    ],
    "question": "How many students are there?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(*) FROM Person WHERE gender  =  'female'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Person",
      "WHERE",
      "gender",
      "=",
      "'female",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "person",
      "where",
      "gender",
      "=",
      "value"
    ],
    "question": "How many females are in the network?",
    "question_toks": [
      "How",
      "many",
      "females",
      "are",
      "in",
      "the",
      "network",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"female\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT distinct(catalog_entry_name) FROM catalog_contents",
    "query_toks": [
      "SELECT",
      "distinct",
      "(",
      "catalog_entry_name",
      ")",
      "FROM",
      "catalog_contents"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "(",
      "catalog_entry_name",
      ")",
      "from",
      "catalog_contents"
    ],
    "question": "Find the names of all the catalog entries.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "the",
      "catalog",
      "entries",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "PROF_NUM",
      ")",
      "FROM",
      "CLASS",
      "WHERE",
      "CRS_CODE",
      "=",
      "``",
      "ACCT-211",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "prof_num",
      ")",
      "from",
      "class",
      "where",
      "crs_code",
      "=",
      "value"
    ],
    "question": "How many professors teach a class with the code ACCT-211?",
    "question_toks": [
      "How",
      "many",
      "professors",
      "teach",
      "a",
      "class",
      "with",
      "the",
      "code",
      "ACCT-211",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACCT-211\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Financial_transactions",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Financial_transactions"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "financial_transactions"
    ],
    "question": "Count the number of transactions.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "transactions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "faculty",
      ")",
      "FROM",
      "faculty",
      "WHERE",
      "YEAR",
      "=",
      "2002"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "faculty",
      ")",
      "from",
      "faculty",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "How many faculty, in total, are there in the year 2002?",
    "question_toks": [
      "How",
      "many",
      "faculty",
      ",",
      "in",
      "total",
      ",",
      "are",
      "there",
      "in",
      "the",
      "year",
      "2002",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          2002.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT customer_phone FROM available_policies",
    "query_toks": [
      "SELECT",
      "customer_phone",
      "FROM",
      "available_policies"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      "from",
      "available_policies"
    ],
    "question": "What are all the phone numbers?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "phone",
      "numbers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( state_name ) FROM state;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "state_name",
      ")",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "state_name",
      ")",
      "from",
      "state"
    ],
    "question": "how many states are there in united states",
    "question_toks": [
      "how",
      "many",
      "states",
      "are",
      "there",
      "in",
      "united",
      "states"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "city",
      "ORDER",
      "BY",
      "regional_population",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "city",
      "order",
      "by",
      "regional_population",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the three largest cities in terms of regional population?",
    "question_toks": [
      "What",
      "are",
      "the",
      "three",
      "largest",
      "cities",
      "in",
      "terms",
      "of",
      "regional",
      "population",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT DISTINCT Location_Name FROM LOCATIONS",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Location_Name",
      "FROM",
      "LOCATIONS"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "location_name",
      "from",
      "locations"
    ],
    "question": "Show all distinct location names.",
    "question_toks": [
      "Show",
      "all",
      "distinct",
      "location",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Name FROM city ORDER BY White DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "city",
      "ORDER",
      "BY",
      "White",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "city",
      "order",
      "by",
      "white",
      "desc",
      "limit",
      "value"
    ],
    "question": "List the names of the city with the top 5 white percentages.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "the",
      "city",
      "with",
      "the",
      "top",
      "5",
      "white",
      "percentages",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 5,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "railway",
    "query": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*)  >  1",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "railway",
      "GROUP",
      "BY",
      "LOCATION",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "railway",
      "group",
      "by",
      "location",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Show the locations that have more than one railways.",
    "question_toks": [
      "Show",
      "the",
      "locations",
      "that",
      "have",
      "more",
      "than",
      "one",
      "railways",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "body_builder",
    "query": "SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Clean_Jerk",
      "FROM",
      "body_builder",
      "ORDER",
      "BY",
      "Total",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "clean_jerk",
      "from",
      "body_builder",
      "order",
      "by",
      "total",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the clean and jerk score of the body builder with the highest total score?",
    "question_toks": [
      "What",
      "are",
      "the",
      "clean",
      "and",
      "jerk",
      "score",
      "of",
      "the",
      "body",
      "builder",
      "with",
      "the",
      "highest",
      "total",
      "score",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "appointmentid",
      "FROM",
      "appointment",
      "ORDER",
      "BY",
      "START",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "appointmentid",
      "from",
      "appointment",
      "order",
      "by",
      "start",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the id of the appointment with the most recent start date?",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "appointment",
      "with",
      "the",
      "most",
      "recent",
      "start",
      "date",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              33,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT DISTINCT Region FROM club ORDER BY Region ASC",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Region",
      "FROM",
      "club",
      "ORDER",
      "BY",
      "Region",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "region",
      "from",
      "club",
      "order",
      "by",
      "region",
      "asc"
    ],
    "question": "List the distinct region of clubs in ascending alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "distinct",
      "region",
      "of",
      "clubs",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname",
    "query_toks": [
      "SELECT",
      "Lname",
      "FROM",
      "FACULTY",
      "WHERE",
      "Building",
      "=",
      "``",
      "Barton",
      "''",
      "ORDER",
      "BY",
      "Lname"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      "from",
      "faculty",
      "where",
      "building",
      "=",
      "value",
      "order",
      "by",
      "lname"
    ],
    "question": "Find the last names of faculties in building Barton in alphabetic order.",
    "question_toks": [
      "Find",
      "the",
      "last",
      "names",
      "of",
      "faculties",
      "in",
      "building",
      "Barton",
      "in",
      "alphabetic",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Barton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT city FROM city WHERE regional_population  >  10000000",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "city",
      "WHERE",
      "regional_population",
      ">",
      "10000000"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "city",
      "where",
      "regional_population",
      ">",
      "value"
    ],
    "question": "Which cities have regional population above 10000000?",
    "question_toks": [
      "Which",
      "cities",
      "have",
      "regional",
      "population",
      "above",
      "10000000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          10000000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Seeds",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "Count the number of products in the category 'Seeds'.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "products",
      "in",
      "the",
      "category",
      "'Seeds",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Seeds\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(course_id) FROM Student_Course_Enrolment",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "course_id",
      ")",
      "FROM",
      "Student_Course_Enrolment"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "course_id",
      ")",
      "from",
      "student_course_enrolment"
    ],
    "question": "Find the number of distinct courses that have enrolled students.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "courses",
      "that",
      "have",
      "enrolled",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT venue FROM MATCH ORDER BY date DESC",
    "query_toks": [
      "SELECT",
      "venue",
      "FROM",
      "MATCH",
      "ORDER",
      "BY",
      "date",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "venue",
      "from",
      "match",
      "order",
      "by",
      "date",
      "desc"
    ],
    "question": "List venues of all matches in the order of their dates starting from the most recent one.",
    "question_toks": [
      "List",
      "venues",
      "of",
      "all",
      "matches",
      "in",
      "the",
      "order",
      "of",
      "their",
      "dates",
      "starting",
      "from",
      "the",
      "most",
      "recent",
      "one",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT Fname FROM STUDENT ORDER BY Age DESC",
    "query_toks": [
      "SELECT",
      "Fname",
      "FROM",
      "STUDENT",
      "ORDER",
      "BY",
      "Age",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "student",
      "order",
      "by",
      "age",
      "desc"
    ],
    "question": "What are the first names of students, ordered by age from greatest to least?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "students",
      ",",
      "ordered",
      "by",
      "age",
      "from",
      "greatest",
      "to",
      "least",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT count(*) FROM market WHERE Number_cities  <  300",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "market",
      "WHERE",
      "Number_cities",
      "<",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "market",
      "where",
      "number_cities",
      "<",
      "value"
    ],
    "question": "Count the number of markets that have a number of cities lower than 300.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "markets",
      "that",
      "have",
      "a",
      "number",
      "of",
      "cities",
      "lower",
      "than",
      "300",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          300.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT count(*) FROM ship",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ship"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ship"
    ],
    "question": "Count the number of ships.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "ships",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";",
    "query_toks": [
      "SELECT",
      "highest_elevation",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "delaware",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "highest_elevation",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how high is the highest point of delaware",
    "question_toks": [
      "how",
      "high",
      "is",
      "the",
      "highest",
      "point",
      "of",
      "delaware"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"delaware\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "county",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "List the campuses in Los Angeles county.",
    "question_toks": [
      "List",
      "the",
      "campuses",
      "in",
      "Los",
      "Angeles",
      "county",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1",
    "query_toks": [
      "SELECT",
      "Candidate_ID",
      "FROM",
      "candidate",
      "ORDER",
      "BY",
      "oppose_rate",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "candidate_id",
      "from",
      "candidate",
      "order",
      "by",
      "oppose_rate",
      "limit",
      "value"
    ],
    "question": "Find the id of the candidate who got the lowest oppose rate.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "candidate",
      "who",
      "got",
      "the",
      "lowest",
      "oppose",
      "rate",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Name FROM ARTIST WHERE Name LIKE \"%a%\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "ARTIST",
      "WHERE",
      "Name",
      "LIKE",
      "``",
      "%",
      "a",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "artist",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Find the names of all artists that have \"a\" in their names.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "artists",
      "that",
      "have",
      "``",
      "a",
      "''",
      "in",
      "their",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"%a%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Rooms",
      "WHERE",
      "bedType",
      "=",
      "``",
      "King",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "rooms",
      "where",
      "bedtype",
      "=",
      "value"
    ],
    "question": "How many rooms have a king bed?",
    "question_toks": [
      "How",
      "many",
      "rooms",
      "have",
      "a",
      "king",
      "bed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"King\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE score  >  90",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "score",
      ">",
      "90"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "score",
      ">",
      "value"
    ],
    "question": "What are the names of wines with scores higher than 90?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wines",
      "with",
      "scores",
      "higher",
      "than",
      "90",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          90.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Customers_cards WHERE card_type_code  =  \"Debit\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers_cards",
      "WHERE",
      "card_type_code",
      "=",
      "``",
      "Debit",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers_cards",
      "where",
      "card_type_code",
      "=",
      "value"
    ],
    "question": "How many debit cards do we have?",
    "question_toks": [
      "How",
      "many",
      "debit",
      "cards",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Debit\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "enzyme",
      "WHERE",
      "product",
      "!",
      "=",
      "'Heme",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "enzyme",
      "where",
      "product",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of enzymes whose product is not 'Heme'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "enzymes",
      "whose",
      "product",
      "is",
      "not",
      "'Heme",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Heme\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Nominee",
      "FROM",
      "musical",
      "WHERE",
      "Award",
      "!",
      "=",
      "``",
      "Tony",
      "Award",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "nominee",
      "from",
      "musical",
      "where",
      "award",
      "!",
      "=",
      "value"
    ],
    "question": "Return the different nominees of musicals that have an award that is not the Tony Award.",
    "question_toks": [
      "Return",
      "the",
      "different",
      "nominees",
      "of",
      "musicals",
      "that",
      "have",
      "an",
      "award",
      "that",
      "is",
      "not",
      "the",
      "Tony",
      "Award",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Tony Award\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT sum(enr) FROM College",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "enr",
      ")",
      "FROM",
      "College"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "enr",
      ")",
      "from",
      "college"
    ],
    "question": "What is the total enrollment number of all colleges?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "enrollment",
      "number",
      "of",
      "all",
      "colleges",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT name ) FROM organization;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "organization",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "organization"
    ],
    "question": "return me the number of the organizations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "the",
      "organizations",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                35,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\"",
    "query_toks": [
      "SELECT",
      "role_description",
      "FROM",
      "ROLES",
      "WHERE",
      "role_name",
      "=",
      "``",
      "Proof",
      "Reader",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "role_description",
      "from",
      "roles",
      "where",
      "role_name",
      "=",
      "value"
    ],
    "question": "What is the description of the role named \"Proof Reader\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "role",
      "named",
      "``",
      "Proof",
      "Reader",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Proof Reader\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM Aircraft",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "aircraft"
    ],
    "question": "How many aircrafts exist in the database?",
    "question_toks": [
      "How",
      "many",
      "aircrafts",
      "exist",
      "in",
      "the",
      "database",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT name FROM club ORDER BY Start_year ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "club",
      "ORDER",
      "BY",
      "Start_year",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "club",
      "order",
      "by",
      "start_year",
      "asc"
    ],
    "question": "List all club names in ascending order of start year.",
    "question_toks": [
      "List",
      "all",
      "club",
      "names",
      "in",
      "ascending",
      "order",
      "of",
      "start",
      "year",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT count(*) FROM climber",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "climber"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "climber"
    ],
    "question": "How many climbers are there?",
    "question_toks": [
      "How",
      "many",
      "climbers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "border",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "border",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "which states border kentucky",
    "question_toks": [
      "which",
      "states",
      "border",
      "kentucky"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT count(DISTINCT state) FROM bank",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "state",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "state",
      ")",
      "from",
      "bank"
    ],
    "question": "Find the number of different states which banks are located at.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "different",
      "states",
      "which",
      "banks",
      "are",
      "located",
      "at",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"Mergenthaler\"",
    "query_toks": [
      "SELECT",
      "DName",
      "FROM",
      "DEPARTMENT",
      "WHERE",
      "Building",
      "=",
      "``",
      "Mergenthaler",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "dname",
      "from",
      "department",
      "where",
      "building",
      "=",
      "value"
    ],
    "question": "What is the name of the department in the Building Mergenthaler?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "department",
      "in",
      "the",
      "Building",
      "Mergenthaler",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Mergenthaler\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "no_of_customers",
      ")",
      "FROM",
      "bank",
      "WHERE",
      "city",
      "=",
      "'New",
      "York",
      "City",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "no_of_customers",
      ")",
      "from",
      "bank",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "Find the number of customers in the banks at New York City.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "customers",
      "in",
      "the",
      "banks",
      "at",
      "New",
      "York",
      "City",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"New York City\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT avg(pages_per_minute_color) FROM product",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "pages_per_minute_color",
      ")",
      "FROM",
      "product"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "pages_per_minute_color",
      ")",
      "from",
      "product"
    ],
    "question": "What is the average number of pages per minute color?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "pages",
      "per",
      "minute",
      "color",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3",
    "query_toks": [
      "SELECT",
      "attribute_data_type",
      "FROM",
      "Attribute_Definitions",
      "GROUP",
      "BY",
      "attribute_data_type",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "attribute_data_type",
      "from",
      "attribute_definitions",
      "group",
      "by",
      "attribute_data_type",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the attribute data types with more than 3 attribute definitions?",
    "question_toks": [
      "What",
      "are",
      "the",
      "attribute",
      "data",
      "types",
      "with",
      "more",
      "than",
      "3",
      "attribute",
      "definitions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT count(*) FROM STUDENT",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "STUDENT"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student"
    ],
    "question": "How many students are there in total?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "river_name",
      ")",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "idaho",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "river_name",
      ")",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "how many rivers are found in idaho",
    "question_toks": [
      "how",
      "many",
      "rivers",
      "are",
      "found",
      "in",
      "idaho"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"idaho\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Official_Name FROM city ORDER BY Population DESC",
    "query_toks": [
      "SELECT",
      "Official_Name",
      "FROM",
      "city",
      "ORDER",
      "BY",
      "Population",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "official_name",
      "from",
      "city",
      "order",
      "by",
      "population",
      "desc"
    ],
    "question": "List official names of cities in descending order of population.",
    "question_toks": [
      "List",
      "official",
      "names",
      "of",
      "cities",
      "in",
      "descending",
      "order",
      "of",
      "population",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Addresses WHERE state_province_county = \"Georgia\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Addresses",
      "WHERE",
      "state_province_county",
      "=",
      "``",
      "Georgia",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "where",
      "state_province_county",
      "=",
      "value"
    ],
    "question": "How many employees live in Georgia?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "live",
      "in",
      "Georgia",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Georgia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC",
    "query_toks": [
      "SELECT",
      "Case_burden",
      "FROM",
      "county_public_safety",
      "ORDER",
      "BY",
      "Population",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "case_burden",
      "from",
      "county_public_safety",
      "order",
      "by",
      "population",
      "desc"
    ],
    "question": "What are the case burdens of counties, ordered descending by population?",
    "question_toks": [
      "What",
      "are",
      "the",
      "case",
      "burdens",
      "of",
      "counties",
      ",",
      "ordered",
      "descending",
      "by",
      "population",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT count(*) FROM flight WHERE velocity  >  200",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "flight",
      "WHERE",
      "velocity",
      ">",
      "200"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight",
      "where",
      "velocity",
      ">",
      "value"
    ],
    "question": "How many flights have a velocity larger than 200?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "have",
      "a",
      "velocity",
      "larger",
      "than",
      "200",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT lowest_elevation FROM highlow WHERE lowest_point  =  \"death valley\";",
    "query_toks": [
      "SELECT",
      "lowest_elevation",
      "FROM",
      "highlow",
      "WHERE",
      "lowest_point",
      "=",
      "``",
      "death",
      "valley",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "lowest_elevation",
      "from",
      "highlow",
      "where",
      "lowest_point",
      "=",
      "value"
    ],
    "question": "what is the elevation of death valley",
    "question_toks": [
      "what",
      "is",
      "the",
      "elevation",
      "of",
      "death",
      "valley"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"death valley\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT count(*) FROM ship",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ship"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ship"
    ],
    "question": "How many ships are there?",
    "question_toks": [
      "How",
      "many",
      "ships",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "student_course_attendance",
      "WHERE",
      "course_id",
      "=",
      "301",
      "ORDER",
      "BY",
      "date_of_attendance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "value",
      "order",
      "by",
      "date_of_attendance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the id of the student who most recently registered course 301?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "student",
      "who",
      "most",
      "recently",
      "registered",
      "course",
      "301",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          301.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              32,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\"",
    "query_toks": [
      "SELECT",
      "Famous_Title",
      "FROM",
      "artist",
      "WHERE",
      "Artist",
      "=",
      "``",
      "Triumfall",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "famous_title",
      "from",
      "artist",
      "where",
      "artist",
      "=",
      "value"
    ],
    "question": "Return the famous titles of the artist called \"Triumfall\".",
    "question_toks": [
      "Return",
      "the",
      "famous",
      "titles",
      "of",
      "the",
      "artist",
      "called",
      "``",
      "Triumfall",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Triumfall\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Vehicles;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Vehicles",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "vehicles"
    ],
    "question": "How many vehicles exist?",
    "question_toks": [
      "How",
      "many",
      "vehicles",
      "exist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "Students",
      "WHERE",
      "personal_name",
      "LIKE",
      "``",
      "%",
      "son",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "students",
      "where",
      "personal_name",
      "like",
      "value"
    ],
    "question": "How many students have personal names that contain the word \"son\"?",
    "question_toks": [
      "How",
      "many",
      "students",
      "have",
      "personal",
      "names",
      "that",
      "contain",
      "the",
      "word",
      "``",
      "son",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%son%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "station_weather",
    "query": "SELECT count(DISTINCT services) FROM station",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "services",
      ")",
      "FROM",
      "station"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "services",
      ")",
      "from",
      "station"
    ],
    "question": "How many different services are provided by all stations?",
    "question_toks": [
      "How",
      "many",
      "different",
      "services",
      "are",
      "provided",
      "by",
      "all",
      "stations",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(DISTINCT eid) FROM Certificate",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "eid",
      ")",
      "FROM",
      "Certificate"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "eid",
      ")",
      "from",
      "certificate"
    ],
    "question": "What is the count of distinct employees with certificates?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "distinct",
      "employees",
      "with",
      "certificates",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT count(*) FROM users WHERE user_login  =  1",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "users",
      "WHERE",
      "user_login",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "users",
      "where",
      "user_login",
      "=",
      "value"
    ],
    "question": "How many users are logged in?",
    "question_toks": [
      "How",
      "many",
      "users",
      "are",
      "logged",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995",
    "query_toks": [
      "SELECT",
      "TYPE",
      "FROM",
      "film_market_estimation",
      "WHERE",
      "YEAR",
      "=",
      "1995"
    ],
    "query_toks_no_value": [
      "select",
      "type",
      "from",
      "film_market_estimation",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Return the types of film market estimations in 1995.",
    "question_toks": [
      "Return",
      "the",
      "types",
      "of",
      "film",
      "market",
      "estimations",
      "in",
      "1995",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          1995.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT max(Enrollment) FROM university",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Enrollment",
      ")",
      "FROM",
      "university"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "enrollment",
      ")",
      "from",
      "university"
    ],
    "question": "Return the maximum enrollment across all schools.",
    "question_toks": [
      "Return",
      "the",
      "maximum",
      "enrollment",
      "across",
      "all",
      "schools",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5",
    "query_toks": [
      "SELECT",
      "card_type_code",
      "FROM",
      "Customers_cards",
      "GROUP",
      "BY",
      "card_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "card_type_code",
      "from",
      "customers_cards",
      "group",
      "by",
      "card_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the codes of card types that have 5 or more cards?",
    "question_toks": [
      "What",
      "are",
      "the",
      "codes",
      "of",
      "card",
      "types",
      "that",
      "have",
      "5",
      "or",
      "more",
      "cards",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "other_hotel_details",
      "FROM",
      "HOTELS",
      "ORDER",
      "BY",
      "price_range",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "other_hotel_details",
      "from",
      "hotels",
      "order",
      "by",
      "price_range",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the details of the three most expensive hotels?",
    "question_toks": [
      "What",
      "are",
      "the",
      "details",
      "of",
      "the",
      "three",
      "most",
      "expensive",
      "hotels",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "APPELLATIONS",
      "WHERE",
      "County",
      "=",
      "``",
      "Napa",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "appellations",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "Count the number of appelations in Napa County.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "appelations",
      "in",
      "Napa",
      "County",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Napa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT venueid FROM paper WHERE title  =  \"Fracture of acrylic bone cement\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "venueid",
      "FROM",
      "paper",
      "WHERE",
      "title",
      "=",
      "``",
      "Fracture",
      "of",
      "acrylic",
      "bone",
      "cement",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "venueid",
      "from",
      "paper",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "What is the venue of Fracture of acrylic bone cement ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "venue",
      "of",
      "Fracture",
      "of",
      "acrylic",
      "bone",
      "cement",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Fracture of acrylic bone cement\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(*) FROM Video_games WHERE gtype  =  \"Massively multiplayer online game\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Video_games",
      "WHERE",
      "gtype",
      "=",
      "``",
      "Massively",
      "multiplayer",
      "online",
      "game",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "video_games",
      "where",
      "gtype",
      "=",
      "value"
    ],
    "question": "How many video games have type Massively multiplayer online game?",
    "question_toks": [
      "How",
      "many",
      "video",
      "games",
      "have",
      "type",
      "Massively",
      "multiplayer",
      "online",
      "game",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Massively multiplayer online game\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC",
    "query_toks": [
      "SELECT",
      "Total_Horses",
      "FROM",
      "farm",
      "ORDER",
      "BY",
      "Total_Horses",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "total_horses",
      "from",
      "farm",
      "order",
      "by",
      "total_horses",
      "asc"
    ],
    "question": "What is the total horses record for each farm, sorted ascending?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "horses",
      "record",
      "for",
      "each",
      "farm",
      ",",
      "sorted",
      "ascending",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "hire_date",
      ">",
      "'1987-09-07",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "hire_date",
      ">",
      "value"
    ],
    "question": "Which employees were hired after September 7th, 1987?",
    "question_toks": [
      "Which",
      "employees",
      "were",
      "hired",
      "after",
      "September",
      "7th",
      ",",
      "1987",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"1987-09-07\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "School_Colors",
      "FROM",
      "school",
      "ORDER",
      "BY",
      "Enrollment",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "school_colors",
      "from",
      "school",
      "order",
      "by",
      "enrollment",
      "desc",
      "limit",
      "value"
    ],
    "question": "List the school color of the school that has the largest enrollment.",
    "question_toks": [
      "List",
      "the",
      "school",
      "color",
      "of",
      "the",
      "school",
      "that",
      "has",
      "the",
      "largest",
      "enrollment",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT DISTINCT payment_method_code FROM INVOICES",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "payment_method_code",
      "FROM",
      "INVOICES"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "payment_method_code",
      "from",
      "invoices"
    ],
    "question": "Show me the distinct payment method codes from the invoice record.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "distinct",
      "payment",
      "method",
      "codes",
      "from",
      "the",
      "invoice",
      "record",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            14
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                79,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT MAX ( area ) FROM state;",
    "query_toks": [
      "SELECT",
      "MAX",
      "(",
      "area",
      ")",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "area",
      ")",
      "from",
      "state"
    ],
    "question": "what is the area of the largest state",
    "question_toks": [
      "what",
      "is",
      "the",
      "area",
      "of",
      "the",
      "largest",
      "state"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT employee_name FROM Employees WHERE role_code  =  \"HR\"",
    "query_toks": [
      "SELECT",
      "employee_name",
      "FROM",
      "Employees",
      "WHERE",
      "role_code",
      "=",
      "``",
      "HR",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "employee_name",
      "from",
      "employees",
      "where",
      "role_code",
      "=",
      "value"
    ],
    "question": "Show the names of all the employees with role \"HR\".",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "all",
      "the",
      "employees",
      "with",
      "role",
      "``",
      "HR",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"HR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268",
    "query_toks": [
      "SELECT",
      "DPhone",
      "FROM",
      "DEPARTMENT",
      "WHERE",
      "Room",
      "=",
      "268"
    ],
    "query_toks_no_value": [
      "select",
      "dphone",
      "from",
      "department",
      "where",
      "room",
      "=",
      "value"
    ],
    "question": "What are the phones of departments in Room 268?",
    "question_toks": [
      "What",
      "are",
      "the",
      "phones",
      "of",
      "departments",
      "in",
      "Room",
      "268",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          268.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "california",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what are the population of california",
    "question_toks": [
      "what",
      "are",
      "the",
      "population",
      "of",
      "california"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"california\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Customers",
      "WHERE",
      "customer_status_code",
      "=",
      "'Good",
      "Customer",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "customers",
      "where",
      "customer_status_code",
      "=",
      "value"
    ],
    "question": "When are the birthdays of customer who are classified as 'Good Customer' status?",
    "question_toks": [
      "When",
      "are",
      "the",
      "birthdays",
      "of",
      "customer",
      "who",
      "are",
      "classified",
      "as",
      "'Good",
      "Customer",
      "'",
      "status",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Good Customer\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "perpetrator",
    "query": "SELECT avg(Injured) FROM perpetrator",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Injured",
      ")",
      "FROM",
      "perpetrator"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "injured",
      ")",
      "from",
      "perpetrator"
    ],
    "question": "What is the average number of people injured by all perpetrators?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "people",
      "injured",
      "by",
      "all",
      "perpetrators",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\"",
    "query_toks": [
      "SELECT",
      "Official_native_language",
      "FROM",
      "country",
      "WHERE",
      "Official_native_language",
      "LIKE",
      "``",
      "%",
      "English",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "official_native_language",
      "from",
      "country",
      "where",
      "official_native_language",
      "like",
      "value"
    ],
    "question": "What are the official native languages that contain the string \"English\".",
    "question_toks": [
      "What",
      "are",
      "the",
      "official",
      "native",
      "languages",
      "that",
      "contain",
      "the",
      "string",
      "``",
      "English",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%English%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT DISTINCT customer_details FROM Customers",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "customer_details",
      "FROM",
      "Customers"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "customer_details",
      "from",
      "customers"
    ],
    "question": "Return the distinct customer details.",
    "question_toks": [
      "Return",
      "the",
      "distinct",
      "customer",
      "details",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "airports",
      "ORDER",
      "BY",
      "elevation",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airports",
      "order",
      "by",
      "elevation",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which country is the airport that has the highest altitude located in?",
    "question_toks": [
      "Which",
      "country",
      "is",
      "the",
      "airport",
      "that",
      "has",
      "the",
      "highest",
      "altitude",
      "located",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT origin FROM program ORDER BY origin",
    "query_toks": [
      "SELECT",
      "origin",
      "FROM",
      "program",
      "ORDER",
      "BY",
      "origin"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      "from",
      "program",
      "order",
      "by",
      "origin"
    ],
    "question": "List all program origins in the alphabetical order.",
    "question_toks": [
      "List",
      "all",
      "program",
      "origins",
      "in",
      "the",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT name FROM races WHERE YEAR = 2017",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "races",
      "WHERE",
      "YEAR",
      "=",
      "2017"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "races",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "Find the names of all races held in 2017.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "races",
      "held",
      "in",
      "2017",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          2017.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\"",
    "query_toks": [
      "SELECT",
      "last_name",
      "FROM",
      "staff",
      "WHERE",
      "email_address",
      "LIKE",
      "``",
      "%",
      "wrau",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "last_name",
      "from",
      "staff",
      "where",
      "email_address",
      "like",
      "value"
    ],
    "question": "What are the last names of staff with email addressed containing the substring \"wrau\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "last",
      "names",
      "of",
      "staff",
      "with",
      "email",
      "addressed",
      "containing",
      "the",
      "substring",
      "``",
      "wrau",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"%wrau%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT count(DISTINCT Status) FROM city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Status",
      ")",
      "FROM",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "status",
      ")",
      "from",
      "city"
    ],
    "question": "Count the number of different statuses.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "statuses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Name FROM wrestler ORDER BY Days_held DESC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "wrestler",
      "ORDER",
      "BY",
      "Days_held",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wrestler",
      "order",
      "by",
      "days_held",
      "desc"
    ],
    "question": "What are the names of the wrestlers, ordered descending by days held?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "wrestlers",
      ",",
      "ordered",
      "descending",
      "by",
      "days",
      "held",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT eid FROM Employee WHERE salary  >  100000",
    "query_toks": [
      "SELECT",
      "eid",
      "FROM",
      "Employee",
      "WHERE",
      "salary",
      ">",
      "100000"
    ],
    "query_toks_no_value": [
      "select",
      "eid",
      "from",
      "employee",
      "where",
      "salary",
      ">",
      "value"
    ],
    "question": "What is the id of every employee who has at least a salary of  100000?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "every",
      "employee",
      "who",
      "has",
      "at",
      "least",
      "a",
      "salary",
      "of",
      "100000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          100000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT count(DISTINCT party_name) FROM party",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "party_name",
      ")",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "party_name",
      ")",
      "from",
      "party"
    ],
    "question": "How many parties do we have?",
    "question_toks": [
      "How",
      "many",
      "parties",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "date_of_latest_revision",
      "FROM",
      "Catalogs",
      "GROUP",
      "BY",
      "date_of_latest_revision",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_latest_revision",
      "from",
      "catalogs",
      "group",
      "by",
      "date_of_latest_revision",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the dates on which more than one revisions were made.",
    "question_toks": [
      "Find",
      "the",
      "dates",
      "on",
      "which",
      "more",
      "than",
      "one",
      "revisions",
      "were",
      "made",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT shipping_agent_name FROM Ref_Shipping_Agents;",
    "query_toks": [
      "SELECT",
      "shipping_agent_name",
      "FROM",
      "Ref_Shipping_Agents",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "shipping_agent_name",
      "from",
      "ref_shipping_agents"
    ],
    "question": "What are the shipping agent names?",
    "question_toks": [
      "What",
      "are",
      "the",
      "shipping",
      "agent",
      "names",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT count(DISTINCT affiliation) FROM university",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "affiliation",
      ")",
      "FROM",
      "university"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "affiliation",
      ")",
      "from",
      "university"
    ],
    "question": "Find how many different affiliation types there are.",
    "question_toks": [
      "Find",
      "how",
      "many",
      "different",
      "affiliation",
      "types",
      "there",
      "are",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                17,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM Flight",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Flight"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight"
    ],
    "question": "How many flights do we have?",
    "question_toks": [
      "How",
      "many",
      "flights",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT count(*) FROM authors",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "authors"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "authors"
    ],
    "question": "How many authors are there?",
    "question_toks": [
      "How",
      "many",
      "authors",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM Employees",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Employees"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employees"
    ],
    "question": "How many employees do we have?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      "FROM",
      "catalog_contents",
      "ORDER",
      "BY",
      "price_in_dollars",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      "from",
      "catalog_contents",
      "order",
      "by",
      "price_in_dollars",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the entry name of the most expensive catalog (in USD)?",
    "question_toks": [
      "What",
      "is",
      "the",
      "entry",
      "name",
      "of",
      "the",
      "most",
      "expensive",
      "catalog",
      "(",
      "in",
      "USD",
      ")",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Name FROM wrestler WHERE Days_held  <  100",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "wrestler",
      "WHERE",
      "Days_held",
      "<",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wrestler",
      "where",
      "days_held",
      "<",
      "value"
    ],
    "question": "What are the names of wrestlers days held less than 100?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "wrestlers",
      "days",
      "held",
      "less",
      "than",
      "100",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\"",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Guests",
      "WHERE",
      "gender_code",
      "=",
      "``",
      "Male",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "guests",
      "where",
      "gender_code",
      "=",
      "value"
    ],
    "question": "Return the date of birth for all the guests with gender code \"Male\".",
    "question_toks": [
      "Return",
      "the",
      "date",
      "of",
      "birth",
      "for",
      "all",
      "the",
      "guests",
      "with",
      "gender",
      "code",
      "``",
      "Male",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Male\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\"",
    "query_toks": [
      "SELECT",
      "organization_name",
      "FROM",
      "organizations",
      "WHERE",
      "organization_name",
      "LIKE",
      "``",
      "%",
      "Party",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "organization_name",
      "from",
      "organizations",
      "where",
      "organization_name",
      "like",
      "value"
    ],
    "question": "What are the names of organizations that contain the word \"Party\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "organizations",
      "that",
      "contain",
      "the",
      "word",
      "``",
      "Party",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"%Party%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT count(*) FROM tweets",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "tweets"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tweets"
    ],
    "question": "Find the number of tweets in record.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "tweets",
      "in",
      "record",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT vehicle_id FROM Vehicles;",
    "query_toks": [
      "SELECT",
      "vehicle_id",
      "FROM",
      "Vehicles",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "vehicle_id",
      "from",
      "vehicles"
    ],
    "question": "What are the ids of all vehicles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "vehicles",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT Fname FROM STUDENT WHERE Age  >  22",
    "query_toks": [
      "SELECT",
      "Fname",
      "FROM",
      "STUDENT",
      "WHERE",
      "Age",
      ">",
      "22"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "student",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "Find the first names of students with age above 22.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "names",
      "of",
      "students",
      "with",
      "age",
      "above",
      "22",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          22.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "amount",
      "FROM",
      "payment",
      "ORDER",
      "BY",
      "amount",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "amount",
      "from",
      "payment",
      "order",
      "by",
      "amount",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the amount of the largest payment.",
    "question_toks": [
      "Return",
      "the",
      "amount",
      "of",
      "the",
      "largest",
      "payment",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                65,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              65,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT count(*) FROM catalog_contents",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "catalog_contents"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "catalog_contents"
    ],
    "question": "Find the total number of catalog contents.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "catalog",
      "contents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Companies",
      "ORDER",
      "BY",
      "Market_Value_billion",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "companies",
      "order",
      "by",
      "market_value_billion",
      "desc"
    ],
    "question": "Sort the company names in descending order of the company's market value.",
    "question_toks": [
      "Sort",
      "the",
      "company",
      "names",
      "in",
      "descending",
      "order",
      "of",
      "the",
      "company",
      "'s",
      "market",
      "value",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(DISTINCT scientist) FROM assignedto",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "scientist",
      ")",
      "FROM",
      "assignedto"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "scientist",
      ")",
      "from",
      "assignedto"
    ],
    "question": "How many different scientists are assigned to any project?",
    "question_toks": [
      "How",
      "many",
      "different",
      "scientists",
      "are",
      "assigned",
      "to",
      "any",
      "project",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT count(*) FROM train",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "train"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "train"
    ],
    "question": "Show the number of trains",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "trains"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "mountain",
      "WHERE",
      "mountain_name",
      "=",
      "``",
      "whitney",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "mountain",
      "where",
      "mountain_name",
      "=",
      "value"
    ],
    "question": "in what state is mount whitney",
    "question_toks": [
      "in",
      "what",
      "state",
      "is",
      "mount",
      "whitney"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"whitney\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT LOCATION FROM gas_station ORDER BY open_year",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "gas_station",
      "ORDER",
      "BY",
      "open_year"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "gas_station",
      "order",
      "by",
      "open_year"
    ],
    "question": "What are the locations of all the gas stations ordered by opening year?",
    "question_toks": [
      "What",
      "are",
      "the",
      "locations",
      "of",
      "all",
      "the",
      "gas",
      "stations",
      "ordered",
      "by",
      "opening",
      "year",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300",
    "query_toks": [
      "SELECT",
      "dorm_name",
      "FROM",
      "dorm",
      "WHERE",
      "student_capacity",
      ">",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "dorm_name",
      "from",
      "dorm",
      "where",
      "student_capacity",
      ">",
      "value"
    ],
    "question": "Find the name of dorms that can accommodate more than 300 students.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "dorms",
      "that",
      "can",
      "accommodate",
      "more",
      "than",
      "300",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          300.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "small_bank_1",
    "query": "SELECT name FROM accounts ORDER BY name",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "accounts",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "accounts",
      "order",
      "by",
      "name"
    ],
    "question": "List all customers\u2019 names in the alphabetical order.",
    "question_toks": [
      "List",
      "all",
      "customers\u2019",
      "names",
      "in",
      "the",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "category",
      "FROM",
      "book_club",
      "WHERE",
      "YEAR",
      ">",
      "1989",
      "GROUP",
      "BY",
      "category",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "category",
      "from",
      "book_club",
      "where",
      "year",
      ">",
      "value",
      "group",
      "by",
      "category",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What categories have two or more corresponding books that were made after 1989?",
    "question_toks": [
      "What",
      "categories",
      "have",
      "two",
      "or",
      "more",
      "corresponding",
      "books",
      "that",
      "were",
      "made",
      "after",
      "1989",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          1989.0,
          null
        ]
      ],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "dorm_name",
      "FROM",
      "dorm",
      "ORDER",
      "BY",
      "student_capacity",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "dorm_name",
      "from",
      "dorm",
      "order",
      "by",
      "student_capacity",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name of the dorm with the largest capacity.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "dorm",
      "with",
      "the",
      "largest",
      "capacity",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "Team",
      "FROM",
      "technician",
      "GROUP",
      "BY",
      "Team",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "team",
      "from",
      "technician",
      "group",
      "by",
      "team",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What is the team with at least 2 technicians?",
    "question_toks": [
      "What",
      "is",
      "the",
      "team",
      "with",
      "at",
      "least",
      "2",
      "technicians",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "decoration_competition",
    "query": "SELECT Country FROM member GROUP BY Country HAVING COUNT(*)  >  2",
    "query_toks": [
      "SELECT",
      "Country",
      "FROM",
      "member",
      "GROUP",
      "BY",
      "Country",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "member",
      "group",
      "by",
      "country",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which countries have more than two members?",
    "question_toks": [
      "Which",
      "countries",
      "have",
      "more",
      "than",
      "two",
      "members",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT flno FROM Flight WHERE distance  >  2000",
    "query_toks": [
      "SELECT",
      "flno",
      "FROM",
      "Flight",
      "WHERE",
      "distance",
      ">",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "flno",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Show flight number for all flights with more than 2000 distance.",
    "question_toks": [
      "Show",
      "flight",
      "number",
      "for",
      "all",
      "flights",
      "with",
      "more",
      "than",
      "2000",
      "distance",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\"",
    "query_toks": [
      "SELECT",
      "BirthDate",
      "FROM",
      "EMPLOYEE",
      "WHERE",
      "City",
      "=",
      "``",
      "Edmonton",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "birthdate",
      "from",
      "employee",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "What are the birth dates of employees living in Edmonton?",
    "question_toks": [
      "What",
      "are",
      "the",
      "birth",
      "dates",
      "of",
      "employees",
      "living",
      "in",
      "Edmonton",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Edmonton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT count(DISTINCT bike_id) FROM trip",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "bike_id",
      ")",
      "FROM",
      "trip"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "bike_id",
      ")",
      "from",
      "trip"
    ],
    "question": "How many different bike ids are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "bike",
      "ids",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                20,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT subject_name FROM SUBJECTS",
    "query_toks": [
      "SELECT",
      "subject_name",
      "FROM",
      "SUBJECTS"
    ],
    "query_toks_no_value": [
      "select",
      "subject_name",
      "from",
      "subjects"
    ],
    "question": "What are the names of all the subjects.",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "subjects",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT count(*) FROM driver",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "driver"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "driver"
    ],
    "question": "How many drivers are there?",
    "question_toks": [
      "How",
      "many",
      "drivers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\"",
    "query_toks": [
      "SELECT",
      "other_account_details",
      "FROM",
      "Accounts",
      "WHERE",
      "account_name",
      "=",
      "``",
      "338",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "other_account_details",
      "from",
      "accounts",
      "where",
      "account_name",
      "=",
      "value"
    ],
    "question": "What are the other account details for the account with the name 338?",
    "question_toks": [
      "What",
      "are",
      "the",
      "other",
      "account",
      "details",
      "for",
      "the",
      "account",
      "with",
      "the",
      "name",
      "338",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"338\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Hispanic FROM city WHERE Black  >  10",
    "query_toks": [
      "SELECT",
      "Hispanic",
      "FROM",
      "city",
      "WHERE",
      "Black",
      ">",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "hispanic",
      "from",
      "city",
      "where",
      "black",
      ">",
      "value"
    ],
    "question": "What are the percentage of hispanics in cities with the black percentage higher than 10?",
    "question_toks": [
      "What",
      "are",
      "the",
      "percentage",
      "of",
      "hispanics",
      "in",
      "cities",
      "with",
      "the",
      "black",
      "percentage",
      "higher",
      "than",
      "10",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT count(*) FROM list",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "list"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "list"
    ],
    "question": "Find the number of students in total.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "students",
      "in",
      "total",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT class_code) FROM CLASS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "class_code",
      ")",
      "FROM",
      "CLASS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "class_code",
      ")",
      "from",
      "class"
    ],
    "question": "How many unique classes are offered?",
    "question_toks": [
      "How",
      "many",
      "unique",
      "classes",
      "are",
      "offered",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                1,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_injury",
    "query": "SELECT count(DISTINCT SOURCE) FROM injury_accident",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "SOURCE",
      ")",
      "FROM",
      "injury_accident"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "source",
      ")",
      "from",
      "injury_accident"
    ],
    "question": "How many different kinds of information sources are there for injury accidents?",
    "question_toks": [
      "How",
      "many",
      "different",
      "kinds",
      "of",
      "information",
      "sources",
      "are",
      "there",
      "for",
      "injury",
      "accidents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                20,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\"",
    "query_toks": [
      "SELECT",
      "customer_phone",
      "FROM",
      "available_policies",
      "WHERE",
      "policy_type_code",
      "=",
      "``",
      "Life",
      "Insurance",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      "from",
      "available_policies",
      "where",
      "policy_type_code",
      "=",
      "value"
    ],
    "question": "What are the customer phone numbers under the policy \"Life Insurance\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "customer",
      "phone",
      "numbers",
      "under",
      "the",
      "policy",
      "``",
      "Life",
      "Insurance",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Life Insurance\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC",
    "query_toks": [
      "SELECT",
      "Crime_rate",
      "FROM",
      "county_public_safety",
      "ORDER",
      "BY",
      "Police_officers",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "crime_rate",
      "from",
      "county_public_safety",
      "order",
      "by",
      "police_officers",
      "asc"
    ],
    "question": "Show the crime rates of counties in ascending order of number of police officers.",
    "question_toks": [
      "Show",
      "the",
      "crime",
      "rates",
      "of",
      "counties",
      "in",
      "ascending",
      "order",
      "of",
      "number",
      "of",
      "police",
      "officers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT name FROM captain ORDER BY age DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "captain",
      "ORDER",
      "BY",
      "age",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "captain",
      "order",
      "by",
      "age",
      "desc"
    ],
    "question": "What are the names of captains, sorted by age descending?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "captains",
      ",",
      "sorted",
      "by",
      "age",
      "descending",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      "FROM",
      "catalog_contents",
      "ORDER",
      "BY",
      "capacity",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      "from",
      "catalog_contents",
      "order",
      "by",
      "capacity",
      "asc",
      "limit",
      "value"
    ],
    "question": "Which catalog content has the smallest capacity? Return the catalog entry name.",
    "question_toks": [
      "Which",
      "catalog",
      "content",
      "has",
      "the",
      "smallest",
      "capacity",
      "?",
      "Return",
      "the",
      "catalog",
      "entry",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995",
    "query_toks": [
      "SELECT",
      "TYPE",
      "FROM",
      "film_market_estimation",
      "WHERE",
      "YEAR",
      "=",
      "1995"
    ],
    "query_toks_no_value": [
      "select",
      "type",
      "from",
      "film_market_estimation",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What are the types of film market estimations in year 1995?",
    "question_toks": [
      "What",
      "are",
      "the",
      "types",
      "of",
      "film",
      "market",
      "estimations",
      "in",
      "year",
      "1995",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          1995.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "ohio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "through which states does the ohio run",
    "question_toks": [
      "through",
      "which",
      "states",
      "does",
      "the",
      "ohio",
      "run"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"ohio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT DISTINCT product_name FROM product ORDER BY product_name",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "product_name",
      "FROM",
      "product",
      "ORDER",
      "BY",
      "product_name"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "product_name",
      "from",
      "product",
      "order",
      "by",
      "product_name"
    ],
    "question": "List the names of all the distinct product names in alphabetical order?",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "the",
      "distinct",
      "product",
      "names",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_1",
    "query": "SELECT Company_name FROM phone GROUP BY Company_name HAVING count(*)  >  1;",
    "query_toks": [
      "SELECT",
      "Company_name",
      "FROM",
      "phone",
      "GROUP",
      "BY",
      "Company_name",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "company_name",
      "from",
      "phone",
      "group",
      "by",
      "company_name",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "List the name of the company that produced more than one phone model.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "the",
      "company",
      "that",
      "produced",
      "more",
      "than",
      "one",
      "phone",
      "model",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          15,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "railway",
    "query": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "manager",
      "ORDER",
      "BY",
      "Age",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "manager",
      "order",
      "by",
      "age",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the oldest manager?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "oldest",
      "manager",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT COUNT(DISTINCT Country) FROM climber",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Country",
      ")",
      "FROM",
      "climber"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "country",
      ")",
      "from",
      "climber"
    ],
    "question": "How many distinct countries are the climbers from?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "countries",
      "are",
      "the",
      "climbers",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT Name FROM pilot ORDER BY Name ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "pilot",
      "ORDER",
      "BY",
      "Name",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "pilot",
      "order",
      "by",
      "name",
      "asc"
    ],
    "question": "What are the names of the pilots in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "pilots",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT lastname FROM teachers WHERE classroom  =  109",
    "query_toks": [
      "SELECT",
      "lastname",
      "FROM",
      "teachers",
      "WHERE",
      "classroom",
      "=",
      "109"
    ],
    "query_toks_no_value": [
      "select",
      "lastname",
      "from",
      "teachers",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "Find the last names of teachers teaching in classroom 109.",
    "question_toks": [
      "Find",
      "the",
      "last",
      "names",
      "of",
      "teachers",
      "teaching",
      "in",
      "classroom",
      "109",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          109.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT DISTINCT product_details FROM products",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "product_details",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "product_details",
      "from",
      "products"
    ],
    "question": "What are the details of all products?",
    "question_toks": [
      "What",
      "are",
      "the",
      "details",
      "of",
      "all",
      "products",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(DISTINCT job) FROM Person",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "job",
      ")",
      "FROM",
      "Person"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "job",
      ")",
      "from",
      "person"
    ],
    "question": "How many type of jobs do they have?",
    "question_toks": [
      "How",
      "many",
      "type",
      "of",
      "jobs",
      "do",
      "they",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\"",
    "query_toks": [
      "SELECT",
      "date_of_birth",
      "FROM",
      "Guests",
      "WHERE",
      "gender_code",
      "=",
      "``",
      "Male",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_birth",
      "from",
      "guests",
      "where",
      "gender_code",
      "=",
      "value"
    ],
    "question": "What are dates of birth of all the guests whose gender is \"Male\"?",
    "question_toks": [
      "What",
      "are",
      "dates",
      "of",
      "birth",
      "of",
      "all",
      "the",
      "guests",
      "whose",
      "gender",
      "is",
      "``",
      "Male",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Male\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(DISTINCT customer_id) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "from",
      "accounts"
    ],
    "question": "How many customers have opened an account?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "have",
      "opened",
      "an",
      "account",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                21,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(DISTINCT rating) FROM film",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "rating",
      ")",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "rating",
      ")",
      "from",
      "film"
    ],
    "question": "How many kinds of different ratings are listed?",
    "question_toks": [
      "How",
      "many",
      "kinds",
      "of",
      "different",
      "ratings",
      "are",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                42,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_market",
    "query": "SELECT Name FROM phone ORDER BY Price ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "phone",
      "ORDER",
      "BY",
      "Price",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "phone",
      "order",
      "by",
      "price",
      "asc"
    ],
    "question": "List the names of phones in ascending order of price.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "phones",
      "in",
      "ascending",
      "order",
      "of",
      "price",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(DISTINCT advisor) FROM Student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "advisor",
      ")",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "advisor",
      ")",
      "from",
      "student"
    ],
    "question": "How many advisors are there?",
    "question_toks": [
      "How",
      "many",
      "advisors",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\"",
    "query_toks": [
      "SELECT",
      "Category",
      "FROM",
      "music_festival",
      "WHERE",
      "RESULT",
      "=",
      "``",
      "Awarded",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "category",
      "from",
      "music_festival",
      "where",
      "result",
      "=",
      "value"
    ],
    "question": "What are the category of music festivals with result \"Awarded\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "category",
      "of",
      "music",
      "festivals",
      "with",
      "result",
      "``",
      "Awarded",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Awarded\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\"",
    "query_toks": [
      "SELECT",
      "match_id",
      "FROM",
      "MATCH",
      "WHERE",
      "competition",
      "=",
      "``",
      "1994",
      "FIFA",
      "World",
      "Cup",
      "qualification",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "match_id",
      "from",
      "match",
      "where",
      "competition",
      "=",
      "value"
    ],
    "question": "Find the match ids of the cities that hosted competition \"1994 FIFA World Cup qualification\"?",
    "question_toks": [
      "Find",
      "the",
      "match",
      "ids",
      "of",
      "the",
      "cities",
      "that",
      "hosted",
      "competition",
      "``",
      "1994",
      "FIFA",
      "World",
      "Cup",
      "qualification",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"1994 FIFA World Cup qualification\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT area FROM state WHERE state_name  =  \"new mexico\";",
    "query_toks": [
      "SELECT",
      "area",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "new",
      "mexico",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "area",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the area of the new mexico state",
    "question_toks": [
      "what",
      "is",
      "the",
      "area",
      "of",
      "the",
      "new",
      "mexico",
      "state"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"new mexico\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT count(*) FROM Person WHERE gender  =  'female'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Person",
      "WHERE",
      "gender",
      "=",
      "'female",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "person",
      "where",
      "gender",
      "=",
      "value"
    ],
    "question": "How many females does this network has?",
    "question_toks": [
      "How",
      "many",
      "females",
      "does",
      "this",
      "network",
      "has",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"female\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Weight",
      "FROM",
      "people",
      "ORDER",
      "BY",
      "Height",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "weight",
      "from",
      "people",
      "order",
      "by",
      "height",
      "asc",
      "limit",
      "value"
    ],
    "question": "Return the weight of the shortest person.",
    "question_toks": [
      "Return",
      "the",
      "weight",
      "of",
      "the",
      "shortest",
      "person",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1",
    "query_toks": [
      "SELECT",
      "Country",
      "FROM",
      "mountain",
      "GROUP",
      "BY",
      "Country",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "mountain",
      "group",
      "by",
      "country",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "List the countries that have more than one mountain.",
    "question_toks": [
      "List",
      "the",
      "countries",
      "that",
      "have",
      "more",
      "than",
      "one",
      "mountain",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT density FROM state;",
    "query_toks": [
      "SELECT",
      "density",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "density",
      "from",
      "state"
    ],
    "question": "what are the population densities of each us state",
    "question_toks": [
      "what",
      "are",
      "the",
      "population",
      "densities",
      "of",
      "each",
      "us",
      "state"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "illinois",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "what rivers are there in illinois",
    "question_toks": [
      "what",
      "rivers",
      "are",
      "there",
      "in",
      "illinois"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"illinois\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "Count the number of customers.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT Carrier FROM device ORDER BY Carrier ASC",
    "query_toks": [
      "SELECT",
      "Carrier",
      "FROM",
      "device",
      "ORDER",
      "BY",
      "Carrier",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "carrier",
      "from",
      "device",
      "order",
      "by",
      "carrier",
      "asc"
    ],
    "question": "List the carriers of devices in ascending alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "carriers",
      "of",
      "devices",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\"",
    "query_toks": [
      "SELECT",
      "Zip_code",
      "FROM",
      "county",
      "WHERE",
      "County_name",
      "=",
      "``",
      "Howard",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "zip_code",
      "from",
      "county",
      "where",
      "county_name",
      "=",
      "value"
    ],
    "question": "Show the zip code of the county with name \"Howard\".",
    "question_toks": [
      "Show",
      "the",
      "zip",
      "code",
      "of",
      "the",
      "county",
      "with",
      "name",
      "``",
      "Howard",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Howard\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT text FROM tweets ORDER BY createdate",
    "query_toks": [
      "SELECT",
      "text",
      "FROM",
      "tweets",
      "ORDER",
      "BY",
      "createdate"
    ],
    "query_toks_no_value": [
      "select",
      "text",
      "from",
      "tweets",
      "order",
      "by",
      "createdate"
    ],
    "question": "List the text of all tweets in the order of date.",
    "question_toks": [
      "List",
      "the",
      "text",
      "of",
      "all",
      "tweets",
      "in",
      "the",
      "order",
      "of",
      "date",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT city_name FROM city WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "city_name",
      "FROM",
      "city",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "city_name",
      "from",
      "city",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "give me the cities which are in texas",
    "question_toks": [
      "give",
      "me",
      "the",
      "cities",
      "which",
      "are",
      "in",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "no_of_customers",
      ")",
      "FROM",
      "bank",
      "WHERE",
      "city",
      "=",
      "'New",
      "York",
      "City",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "no_of_customers",
      ")",
      "from",
      "bank",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "What is the total number of customers who use banks in New York City?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "customers",
      "who",
      "use",
      "banks",
      "in",
      "New",
      "York",
      "City",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"New York City\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT count(DISTINCT Team) FROM match_season",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Team",
      ")",
      "FROM",
      "match_season"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "team",
      ")",
      "from",
      "match_season"
    ],
    "question": "How many distinct teams are involved in match seasons?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "teams",
      "are",
      "involved",
      "in",
      "match",
      "seasons",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(*) FROM COURSES",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "COURSES"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "courses"
    ],
    "question": "Find the total number of courses offered.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "courses",
      "offered",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT name FROM races WHERE YEAR = 2017",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "races",
      "WHERE",
      "YEAR",
      "=",
      "2017"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "races",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What are the names of all the races that occurred in the year 2017?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "races",
      "that",
      "occurred",
      "in",
      "the",
      "year",
      "2017",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          2017.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(DISTINCT pPos) FROM tryout",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "pPos",
      ")",
      "FROM",
      "tryout"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "ppos",
      ")",
      "from",
      "tryout"
    ],
    "question": "What are the unique types of player positions in the tryout?",
    "question_toks": [
      "What",
      "are",
      "the",
      "unique",
      "types",
      "of",
      "player",
      "positions",
      "in",
      "the",
      "tryout",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "course_id",
      ")",
      "FROM",
      "course",
      "WHERE",
      "dept_name",
      "=",
      "'Physics",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "course_id",
      ")",
      "from",
      "course",
      "where",
      "dept_name",
      "=",
      "value"
    ],
    "question": "How many different courses offered by Physics department?",
    "question_toks": [
      "How",
      "many",
      "different",
      "courses",
      "offered",
      "by",
      "Physics",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Physics\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Hispanic FROM city WHERE Black  >  10",
    "query_toks": [
      "SELECT",
      "Hispanic",
      "FROM",
      "city",
      "WHERE",
      "Black",
      ">",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "hispanic",
      "from",
      "city",
      "where",
      "black",
      ">",
      "value"
    ],
    "question": "Return the hispanic percentage for cities in which the black percentage is greater than 10.",
    "question_toks": [
      "Return",
      "the",
      "hispanic",
      "percentage",
      "for",
      "cities",
      "in",
      "which",
      "the",
      "black",
      "percentage",
      "is",
      "greater",
      "than",
      "10",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3",
    "query_toks": [
      "SELECT",
      "County_name",
      "FROM",
      "county",
      "ORDER",
      "BY",
      "Population",
      "ASC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "county_name",
      "from",
      "county",
      "order",
      "by",
      "population",
      "asc",
      "limit",
      "value"
    ],
    "question": "What are the 3 counties that have the smallest population? Give me the county names.",
    "question_toks": [
      "What",
      "are",
      "the",
      "3",
      "counties",
      "that",
      "have",
      "the",
      "smallest",
      "population",
      "?",
      "Give",
      "me",
      "the",
      "county",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT DISTINCT main_industry FROM company",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "main_industry",
      "FROM",
      "company"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "main_industry",
      "from",
      "company"
    ],
    "question": "What are the different main industries for all companies?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "main",
      "industries",
      "for",
      "all",
      "companies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "illinois",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "what rivers are in illinois",
    "question_toks": [
      "what",
      "rivers",
      "are",
      "in",
      "illinois"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"illinois\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT Name FROM WINE ORDER BY Name",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Name",
      "FROM",
      "WINE",
      "ORDER",
      "BY",
      "Name"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "wine",
      "order",
      "by",
      "name"
    ],
    "question": "List the names of all distinct wines in alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "distinct",
      "wines",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT DISTINCT label FROM Albums",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "label",
      "FROM",
      "Albums"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "label",
      "from",
      "albums"
    ],
    "question": "What are all the labels?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "labels",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Has_allergy WHERE Allergy  =  \"Cat\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Has_allergy",
      "WHERE",
      "Allergy",
      "=",
      "``",
      "Cat",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "has_allergy",
      "where",
      "allergy",
      "=",
      "value"
    ],
    "question": "How many students are affected by cat allergies?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "affected",
      "by",
      "cat",
      "allergies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Cat\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_mdm",
    "query": "SELECT * FROM customer_master_index ORDER BY cmi_details DESC",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "customer_master_index",
      "ORDER",
      "BY",
      "cmi_details",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "customer_master_index",
      "order",
      "by",
      "cmi_details",
      "desc"
    ],
    "question": "List all information about customer master index, and sort them by details in descending order.",
    "question_toks": [
      "List",
      "all",
      "information",
      "about",
      "customer",
      "master",
      "index",
      ",",
      "and",
      "sort",
      "them",
      "by",
      "details",
      "in",
      "descending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT count(DISTINCT bike_id) FROM trip",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "bike_id",
      ")",
      "FROM",
      "trip"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "bike_id",
      ")",
      "from",
      "trip"
    ],
    "question": "From the trip record, find the number of unique bikes.",
    "question_toks": [
      "From",
      "the",
      "trip",
      "record",
      ",",
      "find",
      "the",
      "number",
      "of",
      "unique",
      "bikes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                20,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clubname FROM club",
    "query_toks": [
      "SELECT",
      "clubname",
      "FROM",
      "club"
    ],
    "query_toks_no_value": [
      "select",
      "clubname",
      "from",
      "club"
    ],
    "question": "Give me the name of each club.",
    "question_toks": [
      "Give",
      "me",
      "the",
      "name",
      "of",
      "each",
      "club",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\"",
    "query_toks": [
      "SELECT",
      "state_province_county",
      "FROM",
      "addresses",
      "WHERE",
      "line_1_number_building",
      "LIKE",
      "``",
      "%",
      "6862",
      "Kaitlyn",
      "Knolls",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "state_province_county",
      "from",
      "addresses",
      "where",
      "line_1_number_building",
      "like",
      "value"
    ],
    "question": "Which state can address \"6862 Kaitlyn Knolls\" possibly be in?",
    "question_toks": [
      "Which",
      "state",
      "can",
      "address",
      "``",
      "6862",
      "Kaitlyn",
      "Knolls",
      "''",
      "possibly",
      "be",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%6862 Kaitlyn Knolls%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\"",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "CUSTOMER",
      "WHERE",
      "State",
      "=",
      "``",
      "NY",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "customer",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "What is all the customer information for customers in NY state?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "customer",
      "information",
      "for",
      "customers",
      "in",
      "NY",
      "state",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"NY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM ref_colors",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ref_colors"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_colors"
    ],
    "question": "How many colors are there?",
    "question_toks": [
      "How",
      "many",
      "colors",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Phone FROM EMPLOYEE",
    "query_toks": [
      "SELECT",
      "Phone",
      "FROM",
      "EMPLOYEE"
    ],
    "query_toks_no_value": [
      "select",
      "phone",
      "from",
      "employee"
    ],
    "question": "What are the phone numbers for each employee?",
    "question_toks": [
      "What",
      "are",
      "the",
      "phone",
      "numbers",
      "for",
      "each",
      "employee",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "start_station_name",
      "FROM",
      "trip",
      "WHERE",
      "duration",
      "<",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "start_station_name",
      "from",
      "trip",
      "where",
      "duration",
      "<",
      "value"
    ],
    "question": "List all the distinct stations from which a trip of duration below 100 started.",
    "question_toks": [
      "List",
      "all",
      "the",
      "distinct",
      "stations",
      "from",
      "which",
      "a",
      "trip",
      "of",
      "duration",
      "below",
      "100",
      "started",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "product_price",
      ")",
      "FROM",
      "products",
      "WHERE",
      "product_type_code",
      "=",
      "'Clothes",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "product_price",
      ")",
      "from",
      "products",
      "where",
      "product_type_code",
      "=",
      "value"
    ],
    "question": "Find the average price of all product clothes.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "price",
      "of",
      "all",
      "product",
      "clothes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Clothes\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\"",
    "query_toks": [
      "SELECT",
      "allergytype",
      "FROM",
      "Allergy_type",
      "WHERE",
      "allergy",
      "=",
      "``",
      "Cat",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "allergytype",
      "from",
      "allergy_type",
      "where",
      "allergy",
      "=",
      "value"
    ],
    "question": "What is allergy type of a cat allergy?",
    "question_toks": [
      "What",
      "is",
      "allergy",
      "type",
      "of",
      "a",
      "cat",
      "allergy",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Cat\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "california",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how many people are there in california",
    "question_toks": [
      "how",
      "many",
      "people",
      "are",
      "there",
      "in",
      "california"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"california\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3",
    "query_toks": [
      "SELECT",
      "complaint_status_code",
      "FROM",
      "complaints",
      "GROUP",
      "BY",
      "complaint_status_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "complaint_status_code",
      "from",
      "complaints",
      "group",
      "by",
      "complaint_status_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Return complaint status codes have more than 3 corresponding complaints?",
    "question_toks": [
      "Return",
      "complaint",
      "status",
      "codes",
      "have",
      "more",
      "than",
      "3",
      "corresponding",
      "complaints",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          27,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "departments",
      "WHERE",
      "department_name",
      "=",
      "'Marketing",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "departments",
      "where",
      "department_name",
      "=",
      "value"
    ],
    "question": "What is all the information about the Marketing department?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "information",
      "about",
      "the",
      "Marketing",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Marketing\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT title FROM publication WHERE YEAR  >  2000;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "publication",
      "WHERE",
      "YEAR",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "publication",
      "where",
      "year",
      ">",
      "value"
    ],
    "question": "return me the papers after 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "after",
      "2000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "film",
      "WHERE",
      "title",
      "LIKE",
      "``",
      "%",
      "Dummy",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "film",
      "where",
      "title",
      "like",
      "value"
    ],
    "question": "How many films have the word 'Dummy' in their titles?",
    "question_toks": [
      "How",
      "many",
      "films",
      "have",
      "the",
      "word",
      "'Dummy",
      "'",
      "in",
      "their",
      "titles",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%Dummy%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "exhibition",
      "WHERE",
      "YEAR",
      ">",
      "=",
      "2005"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "exhibition",
      "where",
      "year",
      ">",
      "=",
      "value"
    ],
    "question": "How many exhibition are there in year 2005 or after?",
    "question_toks": [
      "How",
      "many",
      "exhibition",
      "are",
      "there",
      "in",
      "year",
      "2005",
      "or",
      "after",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT count(*) FROM ALBUM",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ALBUM"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "album"
    ],
    "question": "Find the number of albums.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "albums",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufacturer",
    "query": "SELECT sum(market_rate) FROM furniture ORDER BY market_rate DESC LIMIT 2",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "market_rate",
      ")",
      "FROM",
      "furniture",
      "ORDER",
      "BY",
      "market_rate",
      "DESC",
      "LIMIT",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "market_rate",
      ")",
      "from",
      "furniture",
      "order",
      "by",
      "market_rate",
      "desc",
      "limit",
      "value"
    ],
    "question": "find the total market rate of the furnitures that have the top 2 market shares.",
    "question_toks": [
      "find",
      "the",
      "total",
      "market",
      "rate",
      "of",
      "the",
      "furnitures",
      "that",
      "have",
      "the",
      "top",
      "2",
      "market",
      "shares",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 2,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT count(*) FROM Band",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Band"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "band"
    ],
    "question": "Find the number of bands.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "bands",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT fname FROM student WHERE age  >  20",
    "query_toks": [
      "SELECT",
      "fname",
      "FROM",
      "student",
      "WHERE",
      "age",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "student",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "What are the first names of all students who are older than 20?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "all",
      "students",
      "who",
      "are",
      "older",
      "than",
      "20",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "ohio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "which states do ohio river flow through",
    "question_toks": [
      "which",
      "states",
      "do",
      "ohio",
      "river",
      "flow",
      "through"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"ohio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT avg(enr) FROM College",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "enr",
      ")",
      "FROM",
      "College"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enr",
      ")",
      "from",
      "college"
    ],
    "question": "How many students, on average, does each college have enrolled?",
    "question_toks": [
      "How",
      "many",
      "students",
      ",",
      "on",
      "average",
      ",",
      "does",
      "each",
      "college",
      "have",
      "enrolled",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT date FROM weather WHERE max_temperature_f  >  85",
    "query_toks": [
      "SELECT",
      "date",
      "FROM",
      "weather",
      "WHERE",
      "max_temperature_f",
      ">",
      "85"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      "from",
      "weather",
      "where",
      "max_temperature_f",
      ">",
      "value"
    ],
    "question": "What are the dates with a maximum temperature higher than 85?",
    "question_toks": [
      "What",
      "are",
      "the",
      "dates",
      "with",
      "a",
      "maximum",
      "temperature",
      "higher",
      "than",
      "85",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          85.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "exhibition",
      "WHERE",
      "YEAR",
      ">",
      "=",
      "2005"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "exhibition",
      "where",
      "year",
      ">",
      "=",
      "value"
    ],
    "question": "Count the number of exhibitions that happened in or after 2005.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "exhibitions",
      "that",
      "happened",
      "in",
      "or",
      "after",
      "2005",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT count(DISTINCT FDA_approved) FROM medicine",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "FDA_approved",
      ")",
      "FROM",
      "medicine"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "fda_approved",
      ")",
      "from",
      "medicine"
    ],
    "question": "How many different FDA approval statuses exist for medicines?",
    "question_toks": [
      "How",
      "many",
      "different",
      "FDA",
      "approval",
      "statuses",
      "exist",
      "for",
      "medicines",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clublocation FROM club WHERE clubname  =  \"Hopkins Student Enterprises\"",
    "query_toks": [
      "SELECT",
      "clublocation",
      "FROM",
      "club",
      "WHERE",
      "clubname",
      "=",
      "``",
      "Hopkins",
      "Student",
      "Enterprises",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clublocation",
      "from",
      "club",
      "where",
      "clubname",
      "=",
      "value"
    ],
    "question": "Where is the club \"Hopkins Student Enterprises\" located?",
    "question_toks": [
      "Where",
      "is",
      "the",
      "club",
      "``",
      "Hopkins",
      "Student",
      "Enterprises",
      "''",
      "located",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Hopkins Student Enterprises\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT class_code) FROM CLASS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "class_code",
      ")",
      "FROM",
      "CLASS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "class_code",
      ")",
      "from",
      "class"
    ],
    "question": "How many different classes are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "classes",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                1,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "People",
      "ORDER",
      "BY",
      "Age",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "order",
      "by",
      "age",
      "desc",
      "limit",
      "value"
    ],
    "question": "List the names of the top 5 oldest people.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "the",
      "top",
      "5",
      "oldest",
      "people",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 5,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM mountain;",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "mountain",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "mountain"
    ],
    "question": "where are mountains",
    "question_toks": [
      "where",
      "are",
      "mountains"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "product_id",
      "FROM",
      "product_suppliers",
      "ORDER",
      "BY",
      "total_amount_purchased",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "product_id",
      "from",
      "product_suppliers",
      "order",
      "by",
      "total_amount_purchased",
      "desc",
      "limit",
      "value"
    ],
    "question": "Give the ids of the three products purchased in the largest amounts.",
    "question_toks": [
      "Give",
      "the",
      "ids",
      "of",
      "the",
      "three",
      "products",
      "purchased",
      "in",
      "the",
      "largest",
      "amounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              50,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\"",
    "query_toks": [
      "SELECT",
      "match_id",
      "FROM",
      "MATCH",
      "WHERE",
      "competition",
      "=",
      "``",
      "1994",
      "FIFA",
      "World",
      "Cup",
      "qualification",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "match_id",
      "from",
      "match",
      "where",
      "competition",
      "=",
      "value"
    ],
    "question": "What is the match id of the competition called \"1994 FIFA World Cup qualification\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "match",
      "id",
      "of",
      "the",
      "competition",
      "called",
      "``",
      "1994",
      "FIFA",
      "World",
      "Cup",
      "qualification",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"1994 FIFA World Cup qualification\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wedding",
    "query": "SELECT name FROM church ORDER BY open_date DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "church",
      "ORDER",
      "BY",
      "open_date",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "church",
      "order",
      "by",
      "open_date",
      "desc"
    ],
    "question": "List all church names in descending order of opening date.",
    "question_toks": [
      "List",
      "all",
      "church",
      "names",
      "in",
      "descending",
      "order",
      "of",
      "opening",
      "date",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT title  ) FROM movie WHERE release_year  =  2013;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "title",
      ")",
      "FROM",
      "movie",
      "WHERE",
      "release_year",
      "=",
      "2013",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "title",
      ")",
      "from",
      "movie",
      "where",
      "release_year",
      "=",
      "value"
    ],
    "question": "What is the number of movies produced in 2013 ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "movies",
      "produced",
      "in",
      "2013",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2013.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT Name FROM artwork ORDER BY Name ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "artwork",
      "ORDER",
      "BY",
      "Name",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "artwork",
      "order",
      "by",
      "name",
      "asc"
    ],
    "question": "List the name of artworks in ascending alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "artworks",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC",
    "query_toks": [
      "SELECT",
      "Total_Points",
      "FROM",
      "gymnast",
      "ORDER",
      "BY",
      "Total_Points",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "total_points",
      "from",
      "gymnast",
      "order",
      "by",
      "total_points",
      "desc"
    ],
    "question": "What are the total points for all gymnasts, ordered by total points descending?",
    "question_toks": [
      "What",
      "are",
      "the",
      "total",
      "points",
      "for",
      "all",
      "gymnasts",
      ",",
      "ordered",
      "by",
      "total",
      "points",
      "descending",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Country FROM mountain WHERE Height  >  5000",
    "query_toks": [
      "SELECT",
      "Country",
      "FROM",
      "mountain",
      "WHERE",
      "Height",
      ">",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "mountain",
      "where",
      "height",
      ">",
      "value"
    ],
    "question": "What are the countries of mountains with height bigger than 5000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "of",
      "mountains",
      "with",
      "height",
      "bigger",
      "than",
      "5000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          5000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT DISTINCT District FROM election",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "District",
      "FROM",
      "election"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "district",
      "from",
      "election"
    ],
    "question": "What are the distinct districts for elections?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "districts",
      "for",
      "elections",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2",
    "query_toks": [
      "SELECT",
      "Headquarters",
      "FROM",
      "Companies",
      "GROUP",
      "BY",
      "Headquarters",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "headquarters",
      "from",
      "companies",
      "group",
      "by",
      "headquarters",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which headquarter locations are used by more than 2 companies?",
    "question_toks": [
      "Which",
      "headquarter",
      "locations",
      "are",
      "used",
      "by",
      "more",
      "than",
      "2",
      "companies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT name FROM races ORDER BY date DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "races",
      "ORDER",
      "BY",
      "date",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "races",
      "order",
      "by",
      "date",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the race that occurred most recently?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "race",
      "that",
      "occurred",
      "most",
      "recently",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT AVG(UnitPrice) FROM TRACK",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "UnitPrice",
      ")",
      "FROM",
      "TRACK"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "unitprice",
      ")",
      "from",
      "track"
    ],
    "question": "Find the average unit price for a track.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "unit",
      "price",
      "for",
      "a",
      "track",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                64,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT sum(hours) FROM projects",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "hours",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "hours",
      ")",
      "from",
      "projects"
    ],
    "question": "Find the total hours of all projects.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "hours",
      "of",
      "all",
      "projects",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT DISTINCT LOCATION FROM track",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "LOCATION",
      "FROM",
      "track"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "location",
      "from",
      "track"
    ],
    "question": "Give the different locations of tracks.",
    "question_toks": [
      "Give",
      "the",
      "different",
      "locations",
      "of",
      "tracks",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT count(*) FROM book",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "book"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "book"
    ],
    "question": "How many books are there?",
    "question_toks": [
      "How",
      "many",
      "books",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT count(*) FROM ASSESSMENT_NOTES",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ASSESSMENT_NOTES"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "assessment_notes"
    ],
    "question": "How many assessment notes are there in total?",
    "question_toks": [
      "How",
      "many",
      "assessment",
      "notes",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT avg(Gold) FROM club_rank",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Gold",
      ")",
      "FROM",
      "club_rank"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "gold",
      ")",
      "from",
      "club_rank"
    ],
    "question": "What is the average number of gold medals for a club?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "gold",
      "medals",
      "for",
      "a",
      "club",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "query": "SELECT count(*) FROM premises",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "premises"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "premises"
    ],
    "question": "How many premises are there?",
    "question_toks": [
      "How",
      "many",
      "premises",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT roomName FROM Rooms ORDER BY basePrice;",
    "query_toks": [
      "SELECT",
      "roomName",
      "FROM",
      "Rooms",
      "ORDER",
      "BY",
      "basePrice",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "roomname",
      "from",
      "rooms",
      "order",
      "by",
      "baseprice"
    ],
    "question": "Sort all the rooms according to the price. Just report the room names.",
    "question_toks": [
      "Sort",
      "all",
      "the",
      "rooms",
      "according",
      "to",
      "the",
      "price",
      ".",
      "Just",
      "report",
      "the",
      "room",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";",
    "query_toks": [
      "SELECT",
      "LENGTH",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "rio",
      "grande",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "length",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "what length is the rio grande",
    "question_toks": [
      "what",
      "length",
      "is",
      "the",
      "rio",
      "grande"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"rio grande\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Age",
      "FROM",
      "people",
      "ORDER",
      "BY",
      "Height",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "age",
      "from",
      "people",
      "order",
      "by",
      "height",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the age of the person with the greatest height.",
    "question_toks": [
      "Return",
      "the",
      "age",
      "of",
      "the",
      "person",
      "with",
      "the",
      "greatest",
      "height",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Statements",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Statements"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "statements"
    ],
    "question": "Count the number of statements.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "statements",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Title FROM ALBUM ORDER BY Title",
    "query_toks": [
      "SELECT",
      "Title",
      "FROM",
      "ALBUM",
      "ORDER",
      "BY",
      "Title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "album",
      "order",
      "by",
      "title"
    ],
    "question": "Please list all album titles in alphabetical order.",
    "question_toks": [
      "Please",
      "list",
      "all",
      "album",
      "titles",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "cinema",
      "WHERE",
      "capacity",
      ">",
      "300",
      "GROUP",
      "BY",
      "LOCATION",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "cinema",
      "where",
      "capacity",
      ">",
      "value",
      "group",
      "by",
      "location",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show all the locations with at least two cinemas with capacity above 300.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "locations",
      "with",
      "at",
      "least",
      "two",
      "cinemas",
      "with",
      "capacity",
      "above",
      "300",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          300.0,
          null
        ]
      ],
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT count(DISTINCT Hometown) FROM people",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Hometown",
      ")",
      "FROM",
      "people"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "hometown",
      ")",
      "from",
      "people"
    ],
    "question": "Count the number of different hometowns of these people.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "hometowns",
      "of",
      "these",
      "people",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                13,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\"",
    "query_toks": [
      "SELECT",
      "document_name",
      "FROM",
      "documents",
      "WHERE",
      "document_name",
      "LIKE",
      "``",
      "%",
      "CV",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_name",
      "from",
      "documents",
      "where",
      "document_name",
      "like",
      "value"
    ],
    "question": "List all the document names which contains \"CV\".",
    "question_toks": [
      "List",
      "all",
      "the",
      "document",
      "names",
      "which",
      "contains",
      "``",
      "CV",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"%CV%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Documents",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents"
    ],
    "question": "Show the number of documents.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "documents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Project_outcomes",
      "WHERE",
      "outcome_code",
      "=",
      "'Patent",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "project_outcomes",
      "where",
      "outcome_code",
      "=",
      "value"
    ],
    "question": "How many Patent outcomes are generated from all the projects?",
    "question_toks": [
      "How",
      "many",
      "Patent",
      "outcomes",
      "are",
      "generated",
      "from",
      "all",
      "the",
      "projects",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Patent\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "orders",
      "ORDER",
      "BY",
      "date_order_placed",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "orders",
      "order",
      "by",
      "date_order_placed",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the id of the order made most recently.",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "order",
      "made",
      "most",
      "recently",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(DISTINCT eid) FROM Certificate",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "eid",
      ")",
      "FROM",
      "Certificate"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "eid",
      ")",
      "from",
      "certificate"
    ],
    "question": "How many employees have certificate.",
    "question_toks": [
      "How",
      "many",
      "employees",
      "have",
      "certificate",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT title  ) FROM movie WHERE release_year  =  2013;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "title",
      ")",
      "FROM",
      "movie",
      "WHERE",
      "release_year",
      "=",
      "2013",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "title",
      ")",
      "from",
      "movie",
      "where",
      "release_year",
      "=",
      "value"
    ],
    "question": "How many movies were produced in the year 2013 ?",
    "question_toks": [
      "How",
      "many",
      "movies",
      "were",
      "produced",
      "in",
      "the",
      "year",
      "2013",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2013.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "Studio",
      "FROM",
      "film",
      "GROUP",
      "BY",
      "Studio",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "studio",
      "from",
      "film",
      "group",
      "by",
      "studio",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "List the names of studios that have at least two films.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "studios",
      "that",
      "have",
      "at",
      "least",
      "two",
      "films",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "station",
      "WHERE",
      "city",
      "=",
      "``",
      "Mountain",
      "View",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "station",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "How many stations are in Mountain View?",
    "question_toks": [
      "How",
      "many",
      "stations",
      "are",
      "in",
      "Mountain",
      "View",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Mountain View\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT County_name FROM county ORDER BY County_name DESC",
    "query_toks": [
      "SELECT",
      "County_name",
      "FROM",
      "county",
      "ORDER",
      "BY",
      "County_name",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "county_name",
      "from",
      "county",
      "order",
      "by",
      "county_name",
      "desc"
    ],
    "question": "Return the names of all counties sorted by county name in descending alphabetical order.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "all",
      "counties",
      "sorted",
      "by",
      "county",
      "name",
      "in",
      "descending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Issue_Date",
      "FROM",
      "volume",
      "ORDER",
      "BY",
      "Weeks_on_Top",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "issue_date",
      "from",
      "volume",
      "order",
      "by",
      "weeks_on_top",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the issue date of the volume with the minimum weeks on top?",
    "question_toks": [
      "What",
      "is",
      "the",
      "issue",
      "date",
      "of",
      "the",
      "volume",
      "with",
      "the",
      "minimum",
      "weeks",
      "on",
      "top",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT count(*) FROM film",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "film"
    ],
    "question": "Count the number of films.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "films",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(DISTINCT StuID) FROM Sportsinfo",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "StuID",
      ")",
      "FROM",
      "Sportsinfo"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "stuid",
      ")",
      "from",
      "sportsinfo"
    ],
    "question": "How many students play sports?",
    "question_toks": [
      "How",
      "many",
      "students",
      "play",
      "sports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "CUSTOMER",
      "WHERE",
      "Email",
      "LIKE",
      "``",
      "%",
      "gmail.com",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customer",
      "where",
      "email",
      "like",
      "value"
    ],
    "question": "Count the number of customers that have an email containing \"gmail.com\".",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "that",
      "have",
      "an",
      "email",
      "containing",
      "``",
      "gmail.com",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"%gmail.com%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM CHARACTERISTICS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CHARACTERISTICS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "characteristics"
    ],
    "question": "Count the number of characteristics.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "characteristics",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT rID FROM Rating WHERE stars != 4",
    "query_toks": [
      "SELECT",
      "rID",
      "FROM",
      "Rating",
      "WHERE",
      "stars",
      "!",
      "=",
      "4"
    ],
    "query_toks_no_value": [
      "select",
      "rid",
      "from",
      "rating",
      "where",
      "stars",
      "!",
      "=",
      "value"
    ],
    "question": "Find the ids of reviewers who didn't only give 4 star.",
    "question_toks": [
      "Find",
      "the",
      "ids",
      "of",
      "reviewers",
      "who",
      "did",
      "n't",
      "only",
      "give",
      "4",
      "star",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT partitionid FROM user_profiles WHERE name  =  'Iron Man'",
    "query_toks": [
      "SELECT",
      "partitionid",
      "FROM",
      "user_profiles",
      "WHERE",
      "name",
      "=",
      "'Iron",
      "Man",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "partitionid",
      "from",
      "user_profiles",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What is the partition id of the user named \"Iron Man\".",
    "question_toks": [
      "What",
      "is",
      "the",
      "partition",
      "id",
      "of",
      "the",
      "user",
      "named",
      "``",
      "Iron",
      "Man",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Iron Man\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT count(*) FROM school",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "school"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "school"
    ],
    "question": "Count the number of schools.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "schools",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT DISTINCT POSITION FROM match_season",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "POSITION",
      "FROM",
      "match_season"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "position",
      "from",
      "match_season"
    ],
    "question": "Show all distinct positions of matches.",
    "question_toks": [
      "Show",
      "all",
      "distinct",
      "positions",
      "of",
      "matches",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT count(*) FROM instruments WHERE instrument  =  \"drums\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "instruments",
      "WHERE",
      "instrument",
      "=",
      "``",
      "drums",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "instruments",
      "where",
      "instrument",
      "=",
      "value"
    ],
    "question": "How many songs use drums as an instrument?",
    "question_toks": [
      "How",
      "many",
      "songs",
      "use",
      "drums",
      "as",
      "an",
      "instrument",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"drums\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "user_profiles",
      "ORDER",
      "BY",
      "followers",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "user_profiles",
      "order",
      "by",
      "followers",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name of the user who has the largest number of followers.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "user",
      "who",
      "has",
      "the",
      "largest",
      "number",
      "of",
      "followers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\"",
    "query_toks": [
      "SELECT",
      "state_province_county",
      "FROM",
      "addresses",
      "WHERE",
      "line_1_number_building",
      "LIKE",
      "``",
      "%",
      "6862",
      "Kaitlyn",
      "Knolls",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "state_province_county",
      "from",
      "addresses",
      "where",
      "line_1_number_building",
      "like",
      "value"
    ],
    "question": "Give the state corresponding to the line number building \"6862 Kaitlyn Knolls\".",
    "question_toks": [
      "Give",
      "the",
      "state",
      "corresponding",
      "to",
      "the",
      "line",
      "number",
      "building",
      "``",
      "6862",
      "Kaitlyn",
      "Knolls",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%6862 Kaitlyn Knolls%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\"",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "enzyme",
      "WHERE",
      "name",
      "LIKE",
      "``",
      "%",
      "ALA",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "enzyme",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "What are the names of enzymes that include the string 'ALA'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "enzymes",
      "that",
      "include",
      "the",
      "string",
      "'ALA",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"%ALA%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT date FROM weather WHERE max_temperature_f  >  85",
    "query_toks": [
      "SELECT",
      "date",
      "FROM",
      "weather",
      "WHERE",
      "max_temperature_f",
      ">",
      "85"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      "from",
      "weather",
      "where",
      "max_temperature_f",
      ">",
      "value"
    ],
    "question": "Give me the dates when the max temperature was higher than 85.",
    "question_toks": [
      "Give",
      "me",
      "the",
      "dates",
      "when",
      "the",
      "max",
      "temperature",
      "was",
      "higher",
      "than",
      "85",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          85.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "mountain",
      "ORDER",
      "BY",
      "Height",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "mountain",
      "order",
      "by",
      "height",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the name of the mountain with the greatest height.",
    "question_toks": [
      "Return",
      "the",
      "name",
      "of",
      "the",
      "mountain",
      "with",
      "the",
      "greatest",
      "height",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\"",
    "query_toks": [
      "SELECT",
      "course_description",
      "FROM",
      "COURSES",
      "WHERE",
      "course_name",
      "=",
      "``",
      "database",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "course_description",
      "from",
      "courses",
      "where",
      "course_name",
      "=",
      "value"
    ],
    "question": "Return the description for the courses named \"database\".",
    "question_toks": [
      "Return",
      "the",
      "description",
      "for",
      "the",
      "courses",
      "named",
      "``",
      "database",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"database\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "Student_Addresses",
      "ORDER",
      "BY",
      "monthly_rental",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "student_addresses",
      "order",
      "by",
      "monthly_rental",
      "desc"
    ],
    "question": "Find all information about student addresses, and sort by monthly rental in descending order.",
    "question_toks": [
      "Find",
      "all",
      "information",
      "about",
      "student",
      "addresses",
      ",",
      "and",
      "sort",
      "by",
      "monthly",
      "rental",
      "in",
      "descending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\"",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "customer_name",
      "LIKE",
      "``",
      "%",
      "Alex",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers",
      "where",
      "customer_name",
      "like",
      "value"
    ],
    "question": "Find the name of all customers whose name contains \"Alex\".",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "all",
      "customers",
      "whose",
      "name",
      "contains",
      "``",
      "Alex",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"%Alex%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT count(*) FROM book_club",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "book_club"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "book_club"
    ],
    "question": "How many book clubs are there?",
    "question_toks": [
      "How",
      "many",
      "book",
      "clubs",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "branch",
      "ORDER",
      "BY",
      "membership_amount",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "branch",
      "order",
      "by",
      "membership_amount",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are names for top three branches with most number of membership?",
    "question_toks": [
      "What",
      "are",
      "names",
      "for",
      "top",
      "three",
      "branches",
      "with",
      "most",
      "number",
      "of",
      "membership",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT count(*) FROM party",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "party"
    ],
    "question": "How many parties are there?",
    "question_toks": [
      "How",
      "many",
      "parties",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT dorm_name FROM dorm WHERE gender  =  'F'",
    "query_toks": [
      "SELECT",
      "dorm_name",
      "FROM",
      "dorm",
      "WHERE",
      "gender",
      "=",
      "'F",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "dorm_name",
      "from",
      "dorm",
      "where",
      "gender",
      "=",
      "value"
    ],
    "question": "What are the names of the all-female dorms?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "all-female",
      "dorms",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname",
    "query_toks": [
      "SELECT",
      "Lname",
      "FROM",
      "FACULTY",
      "WHERE",
      "Building",
      "=",
      "``",
      "Barton",
      "''",
      "ORDER",
      "BY",
      "Lname"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      "from",
      "faculty",
      "where",
      "building",
      "=",
      "value",
      "order",
      "by",
      "lname"
    ],
    "question": "What are the last names of faculty in building Barton, sorted by last name?",
    "question_toks": [
      "What",
      "are",
      "the",
      "last",
      "names",
      "of",
      "faculty",
      "in",
      "building",
      "Barton",
      ",",
      "sorted",
      "by",
      "last",
      "name",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Barton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "debate",
    "query": "SELECT Party FROM people ORDER BY Age ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Party",
      "FROM",
      "people",
      "ORDER",
      "BY",
      "Age",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "party",
      "from",
      "people",
      "order",
      "by",
      "age",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the party of the youngest people?",
    "question_toks": [
      "What",
      "is",
      "the",
      "party",
      "of",
      "the",
      "youngest",
      "people",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "small_bank_1",
    "query": "SELECT avg(balance) FROM checking",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "balance",
      ")",
      "FROM",
      "checking"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "balance",
      ")",
      "from",
      "checking"
    ],
    "question": "What is the average balance in checking accounts?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "balance",
      "in",
      "checking",
      "accounts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1",
    "query_toks": [
      "SELECT",
      "Denomination",
      "FROM",
      "school",
      "GROUP",
      "BY",
      "Denomination",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "denomination",
      "from",
      "school",
      "group",
      "by",
      "denomination",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the denomination more than one school have?",
    "question_toks": [
      "What",
      "are",
      "the",
      "denomination",
      "more",
      "than",
      "one",
      "school",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\"",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "documents",
      "WHERE",
      "document_name",
      "=",
      "``",
      "David",
      "CV",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "documents",
      "where",
      "document_name",
      "=",
      "value"
    ],
    "question": "Return the type code of the document named \"David CV\".",
    "question_toks": [
      "Return",
      "the",
      "type",
      "code",
      "of",
      "the",
      "document",
      "named",
      "``",
      "David",
      "CV",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"David CV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT count(*) FROM club",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "club"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "club"
    ],
    "question": "What is the total number of clubs?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "clubs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clublocation FROM club WHERE clubname  =  \"Tennis Club\"",
    "query_toks": [
      "SELECT",
      "clublocation",
      "FROM",
      "club",
      "WHERE",
      "clubname",
      "=",
      "``",
      "Tennis",
      "Club",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clublocation",
      "from",
      "club",
      "where",
      "clubname",
      "=",
      "value"
    ],
    "question": "Where us the club named \"Tennis Club\" located?",
    "question_toks": [
      "Where",
      "us",
      "the",
      "club",
      "named",
      "``",
      "Tennis",
      "Club",
      "''",
      "located",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Tennis Club\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT COUNT (DISTINCT Publication_Date) FROM publication",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Publication_Date",
      ")",
      "FROM",
      "publication"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "publication_date",
      ")",
      "from",
      "publication"
    ],
    "question": "How many distinct publication dates are there in our record?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "publication",
      "dates",
      "are",
      "there",
      "in",
      "our",
      "record",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "california",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the population of california",
    "question_toks": [
      "what",
      "is",
      "the",
      "population",
      "of",
      "california"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"california\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2",
    "query_toks": [
      "SELECT",
      "employee_id",
      "FROM",
      "job_history",
      "GROUP",
      "BY",
      "employee_id",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      "from",
      "job_history",
      "group",
      "by",
      "employee_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "display the ID for those employees who did two or more jobs in the past.",
    "question_toks": [
      "display",
      "the",
      "ID",
      "for",
      "those",
      "employees",
      "who",
      "did",
      "two",
      "or",
      "more",
      "jobs",
      "in",
      "the",
      "past",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "city",
      "FROM",
      "branch",
      "WHERE",
      "membership_amount",
      ">",
      "=",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "city",
      "from",
      "branch",
      "where",
      "membership_amount",
      ">",
      "=",
      "value"
    ],
    "question": "Show all distinct city where branches with at least 100 memberships are located.",
    "question_toks": [
      "Show",
      "all",
      "distinct",
      "city",
      "where",
      "branches",
      "with",
      "at",
      "least",
      "100",
      "memberships",
      "are",
      "located",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "roller_coaster",
    "query": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Speed",
      "FROM",
      "roller_coaster",
      "ORDER",
      "BY",
      "LENGTH",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "speed",
      "from",
      "roller_coaster",
      "order",
      "by",
      "length",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the speeds of the longest roller coaster?",
    "question_toks": [
      "What",
      "are",
      "the",
      "speeds",
      "of",
      "the",
      "longest",
      "roller",
      "coaster",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airlines",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines"
    ],
    "question": "What is the total number of airlines?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "airlines",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_1",
    "query": "SELECT count(*) FROM chip_model WHERE wifi  =  'No'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "chip_model",
      "WHERE",
      "wifi",
      "=",
      "'No",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "chip_model",
      "where",
      "wifi",
      "=",
      "value"
    ],
    "question": "Count the number of chip model that do not have wifi.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "chip",
      "model",
      "that",
      "do",
      "not",
      "have",
      "wifi",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"No\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT Team FROM player ORDER BY Team ASC",
    "query_toks": [
      "SELECT",
      "Team",
      "FROM",
      "player",
      "ORDER",
      "BY",
      "Team",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "team",
      "from",
      "player",
      "order",
      "by",
      "team",
      "asc"
    ],
    "question": "What are the teams of the players, sorted in ascending alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "teams",
      "of",
      "the",
      "players",
      ",",
      "sorted",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT count(*) FROM INVESTORS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "INVESTORS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "investors"
    ],
    "question": "Find the number of investors in total.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "investors",
      "in",
      "total",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "california",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how much population does california have",
    "question_toks": [
      "how",
      "much",
      "population",
      "does",
      "california",
      "have"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"california\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT reference_num FROM publication WHERE title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "reference_num",
      "FROM",
      "publication",
      "WHERE",
      "title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "reference_num",
      "from",
      "publication",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "return me the number of references of \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "references",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\"",
    "query_toks": [
      "SELECT",
      "employee_ID",
      "FROM",
      "Employees",
      "WHERE",
      "employee_name",
      "=",
      "``",
      "Ebba",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      "from",
      "employees",
      "where",
      "employee_name",
      "=",
      "value"
    ],
    "question": "Show the id of the employee named Ebba.",
    "question_toks": [
      "Show",
      "the",
      "id",
      "of",
      "the",
      "employee",
      "named",
      "Ebba",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Ebba\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT Name FROM pilot WHERE Age  >=  25",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "pilot",
      "WHERE",
      "Age",
      ">",
      "=",
      "25"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "pilot",
      "where",
      "age",
      ">",
      "=",
      "value"
    ],
    "question": "What are the name of pilots aged 25 or older?",
    "question_toks": [
      "What",
      "are",
      "the",
      "name",
      "of",
      "pilots",
      "aged",
      "25",
      "or",
      "older",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          25.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT DISTINCT region_name FROM region ORDER BY Label",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "region_name",
      "FROM",
      "region",
      "ORDER",
      "BY",
      "Label"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "region_name",
      "from",
      "region",
      "order",
      "by",
      "label"
    ],
    "question": "Show all distinct region names ordered by their labels.",
    "question_toks": [
      "Show",
      "all",
      "distinct",
      "region",
      "names",
      "ordered",
      "by",
      "their",
      "labels",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "body_builder",
    "query": "SELECT count(DISTINCT Birth_Place) FROM people",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Birth_Place",
      ")",
      "FROM",
      "people"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "birth_place",
      ")",
      "from",
      "people"
    ],
    "question": "How many distinct birth places are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "birth",
      "places",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT count(*) FROM Movie WHERE YEAR  <  2000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Movie",
      "WHERE",
      "YEAR",
      "<",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "movie",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "How many movies were made before 2000?",
    "question_toks": [
      "How",
      "many",
      "movies",
      "were",
      "made",
      "before",
      "2000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT count(*) FROM Settlements",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Settlements"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "settlements"
    ],
    "question": "How many settlements are there in total?",
    "question_toks": [
      "How",
      "many",
      "settlements",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT count(*) FROM county",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "county"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "county"
    ],
    "question": "How many counties are there in total?",
    "question_toks": [
      "How",
      "many",
      "counties",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "campusfee",
      ")",
      "FROM",
      "csu_fees",
      "WHERE",
      "YEAR",
      "=",
      "2005"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "campusfee",
      ")",
      "from",
      "csu_fees",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What is the average fee for a CSU campus in the year of 2005?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "fee",
      "for",
      "a",
      "CSU",
      "campus",
      "in",
      "the",
      "year",
      "of",
      "2005",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM team_franchise WHERE active = 'Y';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "team_franchise",
      "WHERE",
      "active",
      "=",
      "'Y",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "team_franchise",
      "where",
      "active",
      "=",
      "value"
    ],
    "question": "Find the number of team franchises that are active (have 'Y' as \"active\" information).",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "team",
      "franchises",
      "that",
      "are",
      "active",
      "(",
      "have",
      "'Y",
      "'",
      "as",
      "``",
      "active",
      "''",
      "information",
      ")",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            24
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              341,
              false
            ],
            null
          ],
          "\"Y\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "campusfee",
      ")",
      "FROM",
      "csu_fees",
      "WHERE",
      "YEAR",
      "=",
      "2005"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "campusfee",
      ")",
      "from",
      "csu_fees",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What is the average fee on a CSU campus in 2005?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "fee",
      "on",
      "a",
      "CSU",
      "campus",
      "in",
      "2005",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT DISTINCT lot_details FROM LOTS",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "lot_details",
      "FROM",
      "LOTS"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "lot_details",
      "from",
      "lots"
    ],
    "question": "Show all distinct lot details.",
    "question_toks": [
      "Show",
      "all",
      "distinct",
      "lot",
      "details",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT area FROM state WHERE capital  =  \"albany\";",
    "query_toks": [
      "SELECT",
      "area",
      "FROM",
      "state",
      "WHERE",
      "capital",
      "=",
      "``",
      "albany",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "area",
      "from",
      "state",
      "where",
      "capital",
      "=",
      "value"
    ],
    "question": "what is the area of the state with the capital albany",
    "question_toks": [
      "what",
      "is",
      "the",
      "area",
      "of",
      "the",
      "state",
      "with",
      "the",
      "capital",
      "albany"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"albany\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Vehicles;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Vehicles",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "vehicles"
    ],
    "question": "How many vehicle in total?",
    "question_toks": [
      "How",
      "many",
      "vehicle",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT count(DISTINCT region_id) FROM affected_region",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "region_id",
      ")",
      "FROM",
      "affected_region"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "region_id",
      ")",
      "from",
      "affected_region"
    ],
    "question": "Count the number of different affected regions.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "affected",
      "regions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "ohio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "which states does the ohio river run through",
    "question_toks": [
      "which",
      "states",
      "does",
      "the",
      "ohio",
      "river",
      "run",
      "through"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"ohio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "river_name",
      ")",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "idaho",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "river_name",
      ")",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "how many rivers run through idaho",
    "question_toks": [
      "how",
      "many",
      "rivers",
      "run",
      "through",
      "idaho"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"idaho\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT city_name FROM city WHERE population  >  150000;",
    "query_toks": [
      "SELECT",
      "city_name",
      "FROM",
      "city",
      "WHERE",
      "population",
      ">",
      "150000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "city_name",
      "from",
      "city",
      "where",
      "population",
      ">",
      "value"
    ],
    "question": "what are the major cities in the usa",
    "question_toks": [
      "what",
      "are",
      "the",
      "major",
      "cities",
      "in",
      "the",
      "usa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          150000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT max(Age) FROM STUDENT",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Age",
      ")",
      "FROM",
      "STUDENT"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "student"
    ],
    "question": "What is the oldest age among the students?",
    "question_toks": [
      "What",
      "is",
      "the",
      "oldest",
      "age",
      "among",
      "the",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT name FROM event ORDER BY YEAR DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "event",
      "ORDER",
      "BY",
      "YEAR",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "event",
      "order",
      "by",
      "year",
      "desc"
    ],
    "question": "List all the event names by year from the most recent to the oldest.",
    "question_toks": [
      "List",
      "all",
      "the",
      "event",
      "names",
      "by",
      "year",
      "from",
      "the",
      "most",
      "recent",
      "to",
      "the",
      "oldest",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC",
    "query_toks": [
      "SELECT",
      "Total_Horses",
      "FROM",
      "farm",
      "ORDER",
      "BY",
      "Total_Horses",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "total_horses",
      "from",
      "farm",
      "order",
      "by",
      "total_horses",
      "asc"
    ],
    "question": "List the total number of horses on farms in ascending order.",
    "question_toks": [
      "List",
      "the",
      "total",
      "number",
      "of",
      "horses",
      "on",
      "farms",
      "in",
      "ascending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT id FROM trip ORDER BY duration LIMIT 1",
    "query_toks": [
      "SELECT",
      "id",
      "FROM",
      "trip",
      "ORDER",
      "BY",
      "duration",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "id",
      "from",
      "trip",
      "order",
      "by",
      "duration",
      "limit",
      "value"
    ],
    "question": "What is the id of the trip that has the shortest duration?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "trip",
      "that",
      "has",
      "the",
      "shortest",
      "duration",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM College WHERE enr  >  15000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "College",
      "WHERE",
      "enr",
      ">",
      "15000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "college",
      "where",
      "enr",
      ">",
      "value"
    ],
    "question": "How many colleges has more than 15000 students?",
    "question_toks": [
      "How",
      "many",
      "colleges",
      "has",
      "more",
      "than",
      "15000",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          15000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\"",
    "query_toks": [
      "SELECT",
      "Category",
      "FROM",
      "music_festival",
      "WHERE",
      "RESULT",
      "=",
      "``",
      "Awarded",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "category",
      "from",
      "music_festival",
      "where",
      "result",
      "=",
      "value"
    ],
    "question": "Return the categories of music festivals that have the result \"Awarded\".",
    "question_toks": [
      "Return",
      "the",
      "categories",
      "of",
      "music",
      "festivals",
      "that",
      "have",
      "the",
      "result",
      "``",
      "Awarded",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Awarded\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC",
    "query_toks": [
      "SELECT",
      "staff_details",
      "FROM",
      "Research_Staff",
      "ORDER",
      "BY",
      "staff_details",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "staff_details",
      "from",
      "research_staff",
      "order",
      "by",
      "staff_details",
      "asc"
    ],
    "question": "List the research staff details, and order in ascending order.",
    "question_toks": [
      "List",
      "the",
      "research",
      "staff",
      "details",
      ",",
      "and",
      "order",
      "in",
      "ascending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              36,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Documents_with_expenses",
      "WHERE",
      "budget_type_code",
      "=",
      "'SF",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "documents_with_expenses",
      "where",
      "budget_type_code",
      "=",
      "value"
    ],
    "question": "Give the ids of documents with expenses that have the budget code 'SF'.",
    "question_toks": [
      "Give",
      "the",
      "ids",
      "of",
      "documents",
      "with",
      "expenses",
      "that",
      "have",
      "the",
      "budget",
      "code",
      "'SF",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"SF\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT count(*) FROM enzyme",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "enzyme"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "enzyme"
    ],
    "question": "What is the total count of enzymes?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "count",
      "of",
      "enzymes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT Name FROM People ORDER BY Name ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "People",
      "ORDER",
      "BY",
      "Name",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "order",
      "by",
      "name",
      "asc"
    ],
    "question": "What are the names of people in ascending alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "people",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT count(*) FROM customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "Count the number of customers.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT region_name FROM region ORDER BY region_name",
    "query_toks": [
      "SELECT",
      "region_name",
      "FROM",
      "region",
      "ORDER",
      "BY",
      "region_name"
    ],
    "query_toks_no_value": [
      "select",
      "region_name",
      "from",
      "region",
      "order",
      "by",
      "region_name"
    ],
    "question": "List all region names in alphabetical order.",
    "question_toks": [
      "List",
      "all",
      "region",
      "names",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "debate",
    "query": "SELECT Venue FROM debate ORDER BY Num_of_Audience ASC",
    "query_toks": [
      "SELECT",
      "Venue",
      "FROM",
      "debate",
      "ORDER",
      "BY",
      "Num_of_Audience",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "venue",
      "from",
      "debate",
      "order",
      "by",
      "num_of_audience",
      "asc"
    ],
    "question": "List the venues of debates in ascending order of the number of audience.",
    "question_toks": [
      "List",
      "the",
      "venues",
      "of",
      "debates",
      "in",
      "ascending",
      "order",
      "of",
      "the",
      "number",
      "of",
      "audience",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT sum(student_capacity) FROM dorm",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "student_capacity",
      ")",
      "FROM",
      "dorm"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "student_capacity",
      ")",
      "from",
      "dorm"
    ],
    "question": "What is the total student capacity of all dorms?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "student",
      "capacity",
      "of",
      "all",
      "dorms",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\"",
    "query_toks": [
      "SELECT",
      "Nickname",
      "FROM",
      "school_details",
      "WHERE",
      "Division",
      "!",
      "=",
      "``",
      "Division",
      "1",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "nickname",
      "from",
      "school_details",
      "where",
      "division",
      "!",
      "=",
      "value"
    ],
    "question": "What are the nicknames of schools whose division is not 1?",
    "question_toks": [
      "What",
      "are",
      "the",
      "nicknames",
      "of",
      "schools",
      "whose",
      "division",
      "is",
      "not",
      "1",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Division 1\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  105",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "grade",
      "FROM",
      "list",
      "WHERE",
      "classroom",
      "=",
      "105"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "grade",
      "from",
      "list",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "Find the grade studying in room 105.",
    "question_toks": [
      "Find",
      "the",
      "grade",
      "studying",
      "in",
      "room",
      "105",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          105.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(*) FROM dorm",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "dorm"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "dorm"
    ],
    "question": "How many dorms are in the database?",
    "question_toks": [
      "How",
      "many",
      "dorms",
      "are",
      "in",
      "the",
      "database",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT COUNT(DISTINCT Country) FROM climber",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Country",
      ")",
      "FROM",
      "climber"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "country",
      ")",
      "from",
      "climber"
    ],
    "question": "Count the number of different countries that climbers are from.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "countries",
      "that",
      "climbers",
      "are",
      "from",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( state_name ) FROM state;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "state_name",
      ")",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "state_name",
      ")",
      "from",
      "state"
    ],
    "question": "how many states are there in the usa",
    "question_toks": [
      "how",
      "many",
      "states",
      "are",
      "there",
      "in",
      "the",
      "usa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "illinois",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "which rivers are in illinois",
    "question_toks": [
      "which",
      "rivers",
      "are",
      "in",
      "illinois"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"illinois\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "airlines",
      "WHERE",
      "name",
      "LIKE",
      "'Orbit",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airlines",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Find the country of the airlines whose name starts with 'Orbit'.",
    "question_toks": [
      "Find",
      "the",
      "country",
      "of",
      "the",
      "airlines",
      "whose",
      "name",
      "starts",
      "with",
      "'Orbit",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Orbit%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT count(DISTINCT state) FROM bank",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "state",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "state",
      ")",
      "from",
      "bank"
    ],
    "question": "In how many different states are banks located?",
    "question_toks": [
      "In",
      "how",
      "many",
      "different",
      "states",
      "are",
      "banks",
      "located",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "mountain",
      "WHERE",
      "mountain_name",
      "=",
      "``",
      "whitney",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "mountain",
      "where",
      "mountain_name",
      "=",
      "value"
    ],
    "question": "where is mount whitney located",
    "question_toks": [
      "where",
      "is",
      "mount",
      "whitney",
      "located"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"whitney\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\"",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "shipments",
      "WHERE",
      "shipment_date",
      ">",
      "``",
      "2000-01-01",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "shipments",
      "where",
      "shipment_date",
      ">",
      "value"
    ],
    "question": "Which orders have shipment after 2000-01-01? Give me the order ids.",
    "question_toks": [
      "Which",
      "orders",
      "have",
      "shipment",
      "after",
      "2000-01-01",
      "?",
      "Give",
      "me",
      "the",
      "order",
      "ids",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"2000-01-01\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT home_city FROM driver WHERE age  >  40 GROUP BY home_city HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "home_city",
      "FROM",
      "driver",
      "WHERE",
      "age",
      ">",
      "40",
      "GROUP",
      "BY",
      "home_city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "home_city",
      "from",
      "driver",
      "where",
      "age",
      ">",
      "value",
      "group",
      "by",
      "home_city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show home city where at least two drivers older than 40 are from.",
    "question_toks": [
      "Show",
      "home",
      "city",
      "where",
      "at",
      "least",
      "two",
      "drivers",
      "older",
      "than",
      "40",
      "are",
      "from",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          40.0,
          null
        ]
      ],
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\"",
    "query_toks": [
      "SELECT",
      "product_category_code",
      "FROM",
      "products",
      "WHERE",
      "product_name",
      "=",
      "``",
      "flax",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_category_code",
      "from",
      "products",
      "where",
      "product_name",
      "=",
      "value"
    ],
    "question": "What is the code of the category that the product with the name 'flax' belongs to?",
    "question_toks": [
      "What",
      "is",
      "the",
      "code",
      "of",
      "the",
      "category",
      "that",
      "the",
      "product",
      "with",
      "the",
      "name",
      "'flax",
      "'",
      "belongs",
      "to",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"flax\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Name FROM mountain ORDER BY Name ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "mountain",
      "ORDER",
      "BY",
      "Name",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "mountain",
      "order",
      "by",
      "name",
      "asc"
    ],
    "question": "Give the names of mountains in alphabetical order.",
    "question_toks": [
      "Give",
      "the",
      "names",
      "of",
      "mountains",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "body_builder",
    "query": "SELECT avg(Snatch) FROM body_builder",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Snatch",
      ")",
      "FROM",
      "body_builder"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "snatch",
      ")",
      "from",
      "body_builder"
    ],
    "question": "What is the average snatch score of body builders?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "snatch",
      "score",
      "of",
      "body",
      "builders",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "traverse",
      ")",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "missouri",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "traverse",
      ")",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "how many states does the missouri river run through",
    "question_toks": [
      "how",
      "many",
      "states",
      "does",
      "the",
      "missouri",
      "river",
      "run",
      "through"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"missouri\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT first_name FROM Teachers WHERE email_address LIKE '%man%'",
    "query_toks": [
      "SELECT",
      "first_name",
      "FROM",
      "Teachers",
      "WHERE",
      "email_address",
      "LIKE",
      "'",
      "%",
      "man",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "first_name",
      "from",
      "teachers",
      "where",
      "email_address",
      "like",
      "value"
    ],
    "question": "Find the first names of teachers whose email address contains the word \"man\".",
    "question_toks": [
      "Find",
      "the",
      "first",
      "names",
      "of",
      "teachers",
      "whose",
      "email",
      "address",
      "contains",
      "the",
      "word",
      "``",
      "man",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              33,
              false
            ],
            null
          ],
          "\"%man%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(*) FROM COURSES",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "COURSES"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "courses"
    ],
    "question": "How many courses are there in total?",
    "question_toks": [
      "How",
      "many",
      "courses",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "riding_club",
    "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Player_name",
      "FROM",
      "player",
      "ORDER",
      "BY",
      "Votes",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "player_name",
      "from",
      "player",
      "order",
      "by",
      "votes",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the player with the largest number of votes?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "player",
      "with",
      "the",
      "largest",
      "number",
      "of",
      "votes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( city_name ) FROM city WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "city_name",
      ")",
      "FROM",
      "city",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "city_name",
      ")",
      "from",
      "city",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how many cities are in texas",
    "question_toks": [
      "how",
      "many",
      "cities",
      "are",
      "in",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT DISTINCT firstname FROM list WHERE classroom  =  107",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "firstname",
      "FROM",
      "list",
      "WHERE",
      "classroom",
      "=",
      "107"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "firstname",
      "from",
      "list",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "What are the first names of students studying in room 107?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "students",
      "studying",
      "in",
      "room",
      "107",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          107.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE ORDER BY Score LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "ORDER",
      "BY",
      "Score",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "order",
      "by",
      "score",
      "limit",
      "value"
    ],
    "question": "What is the name of the highest rated wine?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "highest",
      "rated",
      "wine",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_finance",
    "query": "SELECT count(*) FROM school",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "school"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "school"
    ],
    "question": "How many schools are there?",
    "question_toks": [
      "How",
      "many",
      "schools",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM team_franchise WHERE active = 'Y';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "team_franchise",
      "WHERE",
      "active",
      "=",
      "'Y",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "team_franchise",
      "where",
      "active",
      "=",
      "value"
    ],
    "question": "How many team franchises are active, with active value 'Y'?",
    "question_toks": [
      "How",
      "many",
      "team",
      "franchises",
      "are",
      "active",
      ",",
      "with",
      "active",
      "value",
      "'Y",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            24
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              341,
              false
            ],
            null
          ],
          "\"Y\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE YEAR  <  1800",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "YEAR",
      "<",
      "1800"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "What campuses opened before 1800?",
    "question_toks": [
      "What",
      "campuses",
      "opened",
      "before",
      "1800",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          1800.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(*) FROM employee",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employee"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employee"
    ],
    "question": "How many employees are there all together?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "are",
      "there",
      "all",
      "together",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT count(DISTINCT complaint_type_code) FROM complaints",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "complaint_type_code",
      ")",
      "FROM",
      "complaints"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "complaint_type_code",
      ")",
      "from",
      "complaints"
    ],
    "question": "Count the number of different complaint type codes.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "complaint",
      "type",
      "codes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                28,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM Ref_locations",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_locations"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_locations"
    ],
    "question": "How many locations are listed in the database?",
    "question_toks": [
      "How",
      "many",
      "locations",
      "are",
      "listed",
      "in",
      "the",
      "database",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pilot_record",
    "query": "SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Join_Year",
      "FROM",
      "pilot",
      "ORDER",
      "BY",
      "Rank",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "join_year",
      "from",
      "pilot",
      "order",
      "by",
      "rank",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the joined year of the pilot of the highest rank?",
    "question_toks": [
      "What",
      "is",
      "the",
      "joined",
      "year",
      "of",
      "the",
      "pilot",
      "of",
      "the",
      "highest",
      "rank",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( city_name ) FROM city;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "city_name",
      ")",
      "FROM",
      "city",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "city_name",
      ")",
      "from",
      "city"
    ],
    "question": "how many cities are there in us",
    "question_toks": [
      "how",
      "many",
      "cities",
      "are",
      "there",
      "in",
      "us"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_employee",
    "query": "SELECT Name FROM company ORDER BY Sales_in_Billion ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "company",
      "ORDER",
      "BY",
      "Sales_in_Billion",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "company",
      "order",
      "by",
      "sales_in_billion",
      "asc"
    ],
    "question": "List the names of companies by ascending number of sales.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "companies",
      "by",
      "ascending",
      "number",
      "of",
      "sales",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC",
    "query_toks": [
      "SELECT",
      "Shop_Name",
      "FROM",
      "shop",
      "ORDER",
      "BY",
      "Open_Year",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "shop_name",
      "from",
      "shop",
      "order",
      "by",
      "open_year",
      "asc"
    ],
    "question": "Return the names of shops, ordered by year of opening ascending.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "shops",
      ",",
      "ordered",
      "by",
      "year",
      "of",
      "opening",
      "ascending",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT Name FROM pilot ORDER BY Age DESC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "pilot",
      "ORDER",
      "BY",
      "Age",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "pilot",
      "order",
      "by",
      "age",
      "desc"
    ],
    "question": "What are the names of all pilots listed by descending age?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "pilots",
      "listed",
      "by",
      "descending",
      "age",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "mountain",
      "WHERE",
      "mountain_name",
      "=",
      "``",
      "whitney",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "mountain",
      "where",
      "mountain_name",
      "=",
      "value"
    ],
    "question": "where is mount whitney",
    "question_toks": [
      "where",
      "is",
      "mount",
      "whitney"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"whitney\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "EXCEPT",
      "SELECT",
      "StuID",
      "FROM",
      "Participates_in"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "except",
      "select",
      "stuid",
      "from",
      "participates_in"
    ],
    "question": "What are the ids of the students who are not involved in any activity",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "the",
      "students",
      "who",
      "are",
      "not",
      "involved",
      "in",
      "any",
      "activity"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3",
    "query_toks": [
      "SELECT",
      "complaint_status_code",
      "FROM",
      "complaints",
      "GROUP",
      "BY",
      "complaint_status_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "complaint_status_code",
      "from",
      "complaints",
      "group",
      "by",
      "complaint_status_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which complaint status has more than 3 records on file?",
    "question_toks": [
      "Which",
      "complaint",
      "status",
      "has",
      "more",
      "than",
      "3",
      "records",
      "on",
      "file",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          27,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "CLASS",
      "FROM",
      "captain",
      "GROUP",
      "BY",
      "CLASS",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "class",
      "from",
      "captain",
      "group",
      "by",
      "class",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Give the classes that have more than two captains.",
    "question_toks": [
      "Give",
      "the",
      "classes",
      "that",
      "have",
      "more",
      "than",
      "two",
      "captains",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "policy_type_code",
      "FROM",
      "policies",
      "GROUP",
      "BY",
      "policy_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "policy_type_code",
      "from",
      "policies",
      "group",
      "by",
      "policy_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which types of policy are chosen by more than 2 customers? Give me the policy type codes.",
    "question_toks": [
      "Which",
      "types",
      "of",
      "policy",
      "are",
      "chosen",
      "by",
      "more",
      "than",
      "2",
      "customers",
      "?",
      "Give",
      "me",
      "the",
      "policy",
      "type",
      "codes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "President_Vote",
      ")",
      "FROM",
      "VOTING_RECORD"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "president_vote",
      ")",
      "from",
      "voting_record"
    ],
    "question": "Find the distinct number of president votes.",
    "question_toks": [
      "Find",
      "the",
      "distinct",
      "number",
      "of",
      "president",
      "votes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\"",
    "query_toks": [
      "SELECT",
      "document_name",
      "FROM",
      "documents",
      "WHERE",
      "document_name",
      "LIKE",
      "``",
      "%",
      "CV",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_name",
      "from",
      "documents",
      "where",
      "document_name",
      "like",
      "value"
    ],
    "question": "What are the names of documents that contain the substring \"CV\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "documents",
      "that",
      "contain",
      "the",
      "substring",
      "``",
      "CV",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ],
          "\"%CV%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT title ) FROM publication WHERE YEAR  >  2000;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "title",
      ")",
      "FROM",
      "publication",
      "WHERE",
      "YEAR",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "title",
      ")",
      "from",
      "publication",
      "where",
      "year",
      ">",
      "value"
    ],
    "question": "return me the number of papers after 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "after",
      "2000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT count(*) FROM region",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "region"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "region"
    ],
    "question": "Count the number of regions.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "regions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT count(*) FROM company",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "company"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "company"
    ],
    "question": "How many gas companies are there?",
    "question_toks": [
      "How",
      "many",
      "gas",
      "companies",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT avg(price) FROM products WHERE Manufacturer  =  2",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "products",
      "WHERE",
      "Manufacturer",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "products",
      "where",
      "manufacturer",
      "=",
      "value"
    ],
    "question": "What is the average price of products with manufacturer codes equal to 2?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "of",
      "products",
      "with",
      "manufacturer",
      "codes",
      "equal",
      "to",
      "2",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Publisher",
      "FROM",
      "publication",
      "ORDER",
      "BY",
      "Price",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "publisher",
      "from",
      "publication",
      "order",
      "by",
      "price",
      "desc",
      "limit",
      "value"
    ],
    "question": "List the publisher of the publication with the highest price.",
    "question_toks": [
      "List",
      "the",
      "publisher",
      "of",
      "the",
      "publication",
      "with",
      "the",
      "highest",
      "price",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'",
    "query_toks": [
      "SELECT",
      "minister",
      "FROM",
      "party",
      "WHERE",
      "party_name",
      "!",
      "=",
      "'Progress",
      "Party",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "minister",
      "from",
      "party",
      "where",
      "party_name",
      "!",
      "=",
      "value"
    ],
    "question": "Which ministers are not a part of the Progress Party?",
    "question_toks": [
      "Which",
      "ministers",
      "are",
      "not",
      "a",
      "part",
      "of",
      "the",
      "Progress",
      "Party",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Progress Party\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\"",
    "query_toks": [
      "SELECT",
      "Census_Ranking",
      "FROM",
      "city",
      "WHERE",
      "Status",
      "!",
      "=",
      "``",
      "Village",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "census_ranking",
      "from",
      "city",
      "where",
      "status",
      "!",
      "=",
      "value"
    ],
    "question": "Show the census ranking of cities whose status are not \"Village\".",
    "question_toks": [
      "Show",
      "the",
      "census",
      "ranking",
      "of",
      "cities",
      "whose",
      "status",
      "are",
      "not",
      "``",
      "Village",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Village\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4",
    "query_toks": [
      "SELECT",
      "Winery",
      "FROM",
      "WINE",
      "GROUP",
      "BY",
      "Winery",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "4"
    ],
    "query_toks_no_value": [
      "select",
      "winery",
      "from",
      "wine",
      "group",
      "by",
      "winery",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Which wineries produce at least four wines?",
    "question_toks": [
      "Which",
      "wineries",
      "produce",
      "at",
      "least",
      "four",
      "wines",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT COUNT(DISTINCT transaction_type_code) FROM TRANSACTIONS",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "transaction_type_code",
      ")",
      "FROM",
      "TRANSACTIONS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "transaction_type_code",
      ")",
      "from",
      "transactions"
    ],
    "question": "How many distinct transaction types are used in the transactions?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "transaction",
      "types",
      "are",
      "used",
      "in",
      "the",
      "transactions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT Name FROM artwork WHERE TYPE != \"Program Talent Show\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "artwork",
      "WHERE",
      "TYPE",
      "!",
      "=",
      "``",
      "Program",
      "Talent",
      "Show",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "artwork",
      "where",
      "type",
      "!",
      "=",
      "value"
    ],
    "question": "List the name of artworks whose type is not \"Program Talent Show\".",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "artworks",
      "whose",
      "type",
      "is",
      "not",
      "``",
      "Program",
      "Talent",
      "Show",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Program Talent Show\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM employees WHERE country = \"Canada\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "employees",
      "WHERE",
      "country",
      "=",
      "``",
      "Canada",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employees",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many employees are living in Canada?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "are",
      "living",
      "in",
      "Canada",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Canada\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( state_name ) FROM state;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "state_name",
      ")",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "state_name",
      ")",
      "from",
      "state"
    ],
    "question": "how many states are there",
    "question_toks": [
      "how",
      "many",
      "states",
      "are",
      "there"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT avg(no_of_customers) FROM bank",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "no_of_customers",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "no_of_customers",
      ")",
      "from",
      "bank"
    ],
    "question": "What is the average number of bank customers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "bank",
      "customers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "classroom",
      "WHERE",
      "building",
      "=",
      "'Lamberton",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "classroom",
      "where",
      "building",
      "=",
      "value"
    ],
    "question": "How many rooms does the Lamberton building have?",
    "question_toks": [
      "How",
      "many",
      "rooms",
      "does",
      "the",
      "Lamberton",
      "building",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Lamberton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT County_name FROM county ORDER BY Population ASC",
    "query_toks": [
      "SELECT",
      "County_name",
      "FROM",
      "county",
      "ORDER",
      "BY",
      "Population",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "county_name",
      "from",
      "county",
      "order",
      "by",
      "population",
      "asc"
    ],
    "question": "Sort the names of all counties in ascending order of population.",
    "question_toks": [
      "Sort",
      "the",
      "names",
      "of",
      "all",
      "counties",
      "in",
      "ascending",
      "order",
      "of",
      "population",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "illinois",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "what rivers flow through illinois",
    "question_toks": [
      "what",
      "rivers",
      "flow",
      "through",
      "illinois"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"illinois\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "district",
      "FROM",
      "address",
      "GROUP",
      "BY",
      "district",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "district",
      "from",
      "address",
      "group",
      "by",
      "district",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Give the districts which have two or more addresses.",
    "question_toks": [
      "Give",
      "the",
      "districts",
      "which",
      "have",
      "two",
      "or",
      "more",
      "addresses",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "product_price",
      ")",
      "FROM",
      "products",
      "WHERE",
      "product_type_code",
      "=",
      "'Clothes",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "product_price",
      ")",
      "from",
      "products",
      "where",
      "product_type_code",
      "=",
      "value"
    ],
    "question": "What is the average price of clothes?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "of",
      "clothes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Clothes\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1",
    "query_toks": [
      "SELECT",
      "cust_name",
      "FROM",
      "customer",
      "ORDER",
      "BY",
      "credit_score",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "cust_name",
      "from",
      "customer",
      "order",
      "by",
      "credit_score",
      "limit",
      "value"
    ],
    "question": "Find the name of customer who has the lowest credit score.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "customer",
      "who",
      "has",
      "the",
      "lowest",
      "credit",
      "score",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT DISTINCT POSITION FROM match_season",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "POSITION",
      "FROM",
      "match_season"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "position",
      "from",
      "match_season"
    ],
    "question": "What are the different positions for match season?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "positions",
      "for",
      "match",
      "season",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "body_builder",
    "query": "SELECT min(snatch) FROM body_builder",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "snatch",
      ")",
      "FROM",
      "body_builder"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "snatch",
      ")",
      "from",
      "body_builder"
    ],
    "question": "What is the minimum snatch score?",
    "question_toks": [
      "What",
      "is",
      "the",
      "minimum",
      "snatch",
      "score",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\"",
    "query_toks": [
      "SELECT",
      "course_description",
      "FROM",
      "COURSES",
      "WHERE",
      "course_name",
      "=",
      "``",
      "database",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "course_description",
      "from",
      "courses",
      "where",
      "course_name",
      "=",
      "value"
    ],
    "question": "What are the descriptions of the courses with name \"database\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "descriptions",
      "of",
      "the",
      "courses",
      "with",
      "name",
      "``",
      "database",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"database\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT service_name FROM services ORDER BY service_name",
    "query_toks": [
      "SELECT",
      "service_name",
      "FROM",
      "services",
      "ORDER",
      "BY",
      "service_name"
    ],
    "query_toks_no_value": [
      "select",
      "service_name",
      "from",
      "services",
      "order",
      "by",
      "service_name"
    ],
    "question": "List all the services in the alphabetical order.",
    "question_toks": [
      "List",
      "all",
      "the",
      "services",
      "in",
      "the",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*)  >  1",
    "query_toks": [
      "SELECT",
      "Writer",
      "FROM",
      "book",
      "GROUP",
      "BY",
      "Writer",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "writer",
      "from",
      "book",
      "group",
      "by",
      "writer",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "List the writers who have written more than one book.",
    "question_toks": [
      "List",
      "the",
      "writers",
      "who",
      "have",
      "written",
      "more",
      "than",
      "one",
      "book",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "wrestler",
      "GROUP",
      "BY",
      "LOCATION",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "wrestler",
      "group",
      "by",
      "location",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "List the locations that are shared by more than two wrestlers.",
    "question_toks": [
      "List",
      "the",
      "locations",
      "that",
      "are",
      "shared",
      "by",
      "more",
      "than",
      "two",
      "wrestlers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "channel",
      "WHERE",
      "OWNER",
      "!",
      "=",
      "'CCTV",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "channel",
      "where",
      "owner",
      "!",
      "=",
      "value"
    ],
    "question": "Find the names of channels that are not owned by CCTV.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "channels",
      "that",
      "are",
      "not",
      "owned",
      "by",
      "CCTV",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"CCTV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT count(*) FROM farm",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "farm"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "farm"
    ],
    "question": "Count the number of farms.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "farms",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_mdm",
    "query": "SELECT count(DISTINCT source_system_code) FROM CMI_cross_references",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "source_system_code",
      ")",
      "FROM",
      "CMI_cross_references"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "source_system_code",
      ")",
      "from",
      "cmi_cross_references"
    ],
    "question": "How many different source system code for the cmi cross references are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "source",
      "system",
      "code",
      "for",
      "the",
      "cmi",
      "cross",
      "references",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(*) FROM customer WHERE active = '1'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customer",
      "WHERE",
      "active",
      "=",
      "'1",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customer",
      "where",
      "active",
      "=",
      "value"
    ],
    "question": "How many customers have an active value of 1?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "have",
      "an",
      "active",
      "value",
      "of",
      "1",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"1\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "founded",
      "FROM",
      "university",
      "WHERE",
      "affiliation",
      "!",
      "=",
      "'Public",
      "'",
      "ORDER",
      "BY",
      "founded",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "founded",
      "from",
      "university",
      "where",
      "affiliation",
      "!",
      "=",
      "value",
      "order",
      "by",
      "founded",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the founded year of the newest non public school.",
    "question_toks": [
      "Find",
      "the",
      "founded",
      "year",
      "of",
      "the",
      "newest",
      "non",
      "public",
      "school",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Public\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "Team",
      "FROM",
      "player",
      "ORDER",
      "BY",
      "Age",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "team",
      "from",
      "player",
      "order",
      "by",
      "age",
      "desc",
      "limit",
      "value"
    ],
    "question": "List the teams of the players with the top 5 largest ages.",
    "question_toks": [
      "List",
      "the",
      "teams",
      "of",
      "the",
      "players",
      "with",
      "the",
      "top",
      "5",
      "largest",
      "ages",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 5,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT founder FROM manufacturers WHERE name  =  'Sony'",
    "query_toks": [
      "SELECT",
      "founder",
      "FROM",
      "manufacturers",
      "WHERE",
      "name",
      "=",
      "'Sony",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "founder",
      "from",
      "manufacturers",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Who is the founder of Sony?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "founder",
      "of",
      "Sony",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Sony\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "architecture",
    "query": "SELECT name FROM mill WHERE name LIKE '%Moulin%'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "mill",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "Moulin",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "mill",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Which of the mill names contains the french word 'Moulin'?",
    "question_toks": [
      "Which",
      "of",
      "the",
      "mill",
      "names",
      "contains",
      "the",
      "french",
      "word",
      "'Moulin",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"%Moulin%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT min(rank) FROM review",
    "query_toks": [
      "SELECT",
      "min",
      "(",
      "rank",
      ")",
      "FROM",
      "review"
    ],
    "query_toks_no_value": [
      "select",
      "min",
      "(",
      "rank",
      ")",
      "from",
      "review"
    ],
    "question": "Find the highest rank of all reviews.",
    "question_toks": [
      "Find",
      "the",
      "highest",
      "rank",
      "of",
      "all",
      "reviews",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT count(*) FROM gymnast",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "gymnast"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "gymnast"
    ],
    "question": "How many gymnasts are there?",
    "question_toks": [
      "How",
      "many",
      "gymnasts",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Order_Quantity",
      ")",
      "FROM",
      "Invoices",
      "WHERE",
      "payment_method_code",
      "=",
      "``",
      "MasterCard",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "order_quantity",
      ")",
      "from",
      "invoices",
      "where",
      "payment_method_code",
      "=",
      "value"
    ],
    "question": "Check the invoices record and compute the average quantities ordered with the payment method \"MasterCard\".",
    "question_toks": [
      "Check",
      "the",
      "invoices",
      "record",
      "and",
      "compute",
      "the",
      "average",
      "quantities",
      "ordered",
      "with",
      "the",
      "payment",
      "method",
      "``",
      "MasterCard",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            14
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                81,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              79,
              false
            ],
            null
          ],
          "\"MasterCard\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT County_name FROM county ORDER BY County_name DESC",
    "query_toks": [
      "SELECT",
      "County_name",
      "FROM",
      "county",
      "ORDER",
      "BY",
      "County_name",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "county_name",
      "from",
      "county",
      "order",
      "by",
      "county_name",
      "desc"
    ],
    "question": "Sort the names of all counties in descending alphabetical order.",
    "question_toks": [
      "Sort",
      "the",
      "names",
      "of",
      "all",
      "counties",
      "in",
      "descending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_deliveries",
    "query": "SELECT route_name FROM Delivery_Routes ORDER BY route_name",
    "query_toks": [
      "SELECT",
      "route_name",
      "FROM",
      "Delivery_Routes",
      "ORDER",
      "BY",
      "route_name"
    ],
    "query_toks_no_value": [
      "select",
      "route_name",
      "from",
      "delivery_routes",
      "order",
      "by",
      "route_name"
    ],
    "question": "List the names of all routes in alphabetic order.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "routes",
      "in",
      "alphabetic",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              33,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3",
    "query_toks": [
      "SELECT",
      "flno",
      "FROM",
      "Flight",
      "ORDER",
      "BY",
      "distance",
      "ASC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "flno",
      "from",
      "flight",
      "order",
      "by",
      "distance",
      "asc",
      "limit",
      "value"
    ],
    "question": "Show the flight number of flights with three lowest distances.",
    "question_toks": [
      "Show",
      "the",
      "flight",
      "number",
      "of",
      "flights",
      "with",
      "three",
      "lowest",
      "distances",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "assets_maintenance",
    "query": "SELECT DISTINCT asset_model FROM Assets",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "asset_model",
      "FROM",
      "Assets"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "asset_model",
      "from",
      "assets"
    ],
    "question": "What are all the distinct asset models?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "distinct",
      "asset",
      "models",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "payment_method",
      "!",
      "=",
      "'Cash",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers",
      "where",
      "payment_method",
      "!",
      "=",
      "value"
    ],
    "question": "Find the name of customers who did not pay with Cash.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "customers",
      "who",
      "did",
      "not",
      "pay",
      "with",
      "Cash",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Cash\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT sum(no_of_customers) FROM bank",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "no_of_customers",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "no_of_customers",
      ")",
      "from",
      "bank"
    ],
    "question": "What is the total number of customers across banks?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "customers",
      "across",
      "banks",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "open_year",
      "FROM",
      "branch",
      "GROUP",
      "BY",
      "open_year",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "open_year",
      "from",
      "branch",
      "group",
      "by",
      "open_year",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the opening years in which at least two shops opened?",
    "question_toks": [
      "What",
      "are",
      "the",
      "opening",
      "years",
      "in",
      "which",
      "at",
      "least",
      "two",
      "shops",
      "opened",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\"",
    "query_toks": [
      "SELECT",
      "Marketing_Region_Descriptrion",
      "FROM",
      "Marketing_Regions",
      "WHERE",
      "Marketing_Region_Name",
      "=",
      "``",
      "China",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "marketing_region_descriptrion",
      "from",
      "marketing_regions",
      "where",
      "marketing_region_name",
      "=",
      "value"
    ],
    "question": "What is the description of the marketing region China?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "marketing",
      "region",
      "China",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"China\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT sum(amount) FROM payment",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "amount",
      ")",
      "FROM",
      "payment"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount",
      ")",
      "from",
      "payment"
    ],
    "question": "Return the sum of all payment amounts.",
    "question_toks": [
      "Return",
      "the",
      "sum",
      "of",
      "all",
      "payment",
      "amounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                65,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "what states have a city named springfield",
    "question_toks": [
      "what",
      "states",
      "have",
      "a",
      "city",
      "named",
      "springfield"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Activity",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Activity"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "activity"
    ],
    "question": "Find the number of activities available.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "activities",
      "available",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT role_code FROM ROLES;",
    "query_toks": [
      "SELECT",
      "role_code",
      "FROM",
      "ROLES",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "role_code",
      "from",
      "roles"
    ],
    "question": "What are all role codes?",
    "question_toks": [
      "What",
      "are",
      "all",
      "role",
      "codes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT count(*) FROM program",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "program"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "program"
    ],
    "question": "how many programs are there?",
    "question_toks": [
      "how",
      "many",
      "programs",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "border",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "border",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "which states adjoin kentucky",
    "question_toks": [
      "which",
      "states",
      "adjoin",
      "kentucky"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM College",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "College"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "college"
    ],
    "question": "How many colleges in total?",
    "question_toks": [
      "How",
      "many",
      "colleges",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT count(*) FROM Employees;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Employees",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employees"
    ],
    "question": "How many employees do we have?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(DISTINCT allergytype) FROM Allergy_type",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "allergytype",
      ")",
      "FROM",
      "Allergy_type"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "allergytype",
      ")",
      "from",
      "allergy_type"
    ],
    "question": "How many distinct allergies are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "allergies",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Official_Name FROM city ORDER BY Population DESC",
    "query_toks": [
      "SELECT",
      "Official_Name",
      "FROM",
      "city",
      "ORDER",
      "BY",
      "Population",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "official_name",
      "from",
      "city",
      "order",
      "by",
      "population",
      "desc"
    ],
    "question": "What are the official names of cities, ordered descending by population?",
    "question_toks": [
      "What",
      "are",
      "the",
      "official",
      "names",
      "of",
      "cities",
      ",",
      "ordered",
      "descending",
      "by",
      "population",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT FacID FROM Faculty WHERE Sex  =  'M'",
    "query_toks": [
      "SELECT",
      "FacID",
      "FROM",
      "Faculty",
      "WHERE",
      "Sex",
      "=",
      "'M",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "facid",
      "from",
      "faculty",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "Show ids for all the male faculty.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "all",
      "the",
      "male",
      "faculty",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\"",
    "query_toks": [
      "SELECT",
      "Zip_code",
      "FROM",
      "county",
      "WHERE",
      "County_name",
      "=",
      "``",
      "Howard",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "zip_code",
      "from",
      "county",
      "where",
      "county_name",
      "=",
      "value"
    ],
    "question": "What is the zip code the county named \"Howard\" is located in?",
    "question_toks": [
      "What",
      "is",
      "the",
      "zip",
      "code",
      "the",
      "county",
      "named",
      "``",
      "Howard",
      "''",
      "is",
      "located",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Howard\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "program_id",
      ")",
      "FROM",
      "broadcast",
      "WHERE",
      "time_of_day",
      "=",
      "'Night",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "program_id",
      ")",
      "from",
      "broadcast",
      "where",
      "time_of_day",
      "=",
      "value"
    ],
    "question": "find the number of different programs that are broadcast during night time.",
    "question_toks": [
      "find",
      "the",
      "number",
      "of",
      "different",
      "programs",
      "that",
      "are",
      "broadcast",
      "during",
      "night",
      "time",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Night\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT DISTINCT gtype FROM Video_games",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "gtype",
      "FROM",
      "Video_games"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "gtype",
      "from",
      "video_games"
    ],
    "question": "What are the different types of video games?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "types",
      "of",
      "video",
      "games",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "EXCEPT",
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "except",
      "select",
      "stuid",
      "from",
      "has_allergy"
    ],
    "question": "What are the student ids of students who don't have any allergies?",
    "question_toks": [
      "What",
      "are",
      "the",
      "student",
      "ids",
      "of",
      "students",
      "who",
      "do",
      "n't",
      "have",
      "any",
      "allergies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT bname FROM bank WHERE state  =  'New York'",
    "query_toks": [
      "SELECT",
      "bname",
      "FROM",
      "bank",
      "WHERE",
      "state",
      "=",
      "'New",
      "York",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "bname",
      "from",
      "bank",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "Find the branch names of banks in the New York state.",
    "question_toks": [
      "Find",
      "the",
      "branch",
      "names",
      "of",
      "banks",
      "in",
      "the",
      "New",
      "York",
      "state",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"New York\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT max(Enrollment) FROM university",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Enrollment",
      ")",
      "FROM",
      "university"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "enrollment",
      ")",
      "from",
      "university"
    ],
    "question": "What is the maximum enrollment across all schools?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "enrollment",
      "across",
      "all",
      "schools",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name FROM program ORDER BY launch",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "program",
      "ORDER",
      "BY",
      "launch"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "program",
      "order",
      "by",
      "launch"
    ],
    "question": "What is the list of program names, sorted by the order of launch date?",
    "question_toks": [
      "What",
      "is",
      "the",
      "list",
      "of",
      "program",
      "names",
      ",",
      "sorted",
      "by",
      "the",
      "order",
      "of",
      "launch",
      "date",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts"
    ],
    "question": "Show the number of accounts.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "accounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "course",
      "GROUP",
      "BY",
      "title",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "course",
      "group",
      "by",
      "title",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the title of the course that is offered by more than one department.",
    "question_toks": [
      "Find",
      "the",
      "title",
      "of",
      "the",
      "course",
      "that",
      "is",
      "offered",
      "by",
      "more",
      "than",
      "one",
      "department",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Ref_budget_codes",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_budget_codes"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_budget_codes"
    ],
    "question": "How many budget types do we have?",
    "question_toks": [
      "How",
      "many",
      "budget",
      "types",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'",
    "query_toks": [
      "SELECT",
      "role_description",
      "FROM",
      "Staff_Roles",
      "WHERE",
      "role_code",
      "=",
      "'researcher",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "role_description",
      "from",
      "staff_roles",
      "where",
      "role_code",
      "=",
      "value"
    ],
    "question": "What is the complete description of the job of a researcher?",
    "question_toks": [
      "What",
      "is",
      "the",
      "complete",
      "description",
      "of",
      "the",
      "job",
      "of",
      "a",
      "researcher",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          "\"researcher\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT AVG(UnitPrice) FROM TRACK",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "UnitPrice",
      ")",
      "FROM",
      "TRACK"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "unitprice",
      ")",
      "from",
      "track"
    ],
    "question": "What is the average unit price of all the tracks?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "unit",
      "price",
      "of",
      "all",
      "the",
      "tracks",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                64,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\"",
    "query_toks": [
      "SELECT",
      "product_category_description",
      "FROM",
      "ref_product_categories",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Spices",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_category_description",
      "from",
      "ref_product_categories",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "Find the product category description of the product category with code \"Spices\".",
    "question_toks": [
      "Find",
      "the",
      "product",
      "category",
      "description",
      "of",
      "the",
      "product",
      "category",
      "with",
      "code",
      "``",
      "Spices",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Spices\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT lake_name FROM lake;",
    "query_toks": [
      "SELECT",
      "lake_name",
      "FROM",
      "lake",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "lake_name",
      "from",
      "lake"
    ],
    "question": "name all the lakes of us",
    "question_toks": [
      "name",
      "all",
      "the",
      "lakes",
      "of",
      "us"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'",
    "query_toks": [
      "SELECT",
      "class_code",
      "FROM",
      "CLASS",
      "WHERE",
      "class_room",
      "=",
      "'KLR209",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "class_code",
      "from",
      "class",
      "where",
      "class_room",
      "=",
      "value"
    ],
    "question": "List the codes of all courses that take place in room KLR209.",
    "question_toks": [
      "List",
      "the",
      "codes",
      "of",
      "all",
      "courses",
      "that",
      "take",
      "place",
      "in",
      "room",
      "KLR209",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"KLR209\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Invoices",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Invoices"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "invoices"
    ],
    "question": "How many invoices do we have?",
    "question_toks": [
      "How",
      "many",
      "invoices",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT MAX ( highest_elevation ) FROM highlow;",
    "query_toks": [
      "SELECT",
      "MAX",
      "(",
      "highest_elevation",
      ")",
      "FROM",
      "highlow",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "highest_elevation",
      ")",
      "from",
      "highlow"
    ],
    "question": "how high is the highest point in america",
    "question_toks": [
      "how",
      "high",
      "is",
      "the",
      "highest",
      "point",
      "in",
      "america"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT activity_name FROM Activity",
    "query_toks": [
      "SELECT",
      "activity_name",
      "FROM",
      "Activity"
    ],
    "query_toks_no_value": [
      "select",
      "activity_name",
      "from",
      "activity"
    ],
    "question": "List all the activities we have.",
    "question_toks": [
      "List",
      "all",
      "the",
      "activities",
      "we",
      "have",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT AVG ( rating ) FROM review WHERE YEAR  =  2014;",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "rating",
      ")",
      "FROM",
      "review",
      "WHERE",
      "YEAR",
      "=",
      "2014",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "rating",
      ")",
      "from",
      "review",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What is the average rating of reviews written in year 2014 ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "rating",
      "of",
      "reviews",
      "written",
      "in",
      "year",
      "2014",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "train_station",
    "query": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "station",
      "GROUP",
      "BY",
      "LOCATION",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "station",
      "group",
      "by",
      "location",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value"
    ],
    "question": "Show all locations with only 1 station.",
    "question_toks": [
      "Show",
      "all",
      "locations",
      "with",
      "only",
      "1",
      "station",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          2,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT count(*) FROM bank",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "bank"
    ],
    "question": "Count the number of bank branches.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "bank",
      "branches",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_market",
    "query": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Carrier",
      "FROM",
      "phone",
      "ORDER",
      "BY",
      "Price",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "carrier",
      "from",
      "phone",
      "order",
      "by",
      "price",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the carrier of the most expensive phone?",
    "question_toks": [
      "What",
      "is",
      "the",
      "carrier",
      "of",
      "the",
      "most",
      "expensive",
      "phone",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( city_name ) FROM city;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "city_name",
      ")",
      "FROM",
      "city",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "city_name",
      ")",
      "from",
      "city"
    ],
    "question": "how many cities are there in usa",
    "question_toks": [
      "how",
      "many",
      "cities",
      "are",
      "there",
      "in",
      "usa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\"",
    "query_toks": [
      "SELECT",
      "gtype",
      "FROM",
      "Video_games",
      "WHERE",
      "gname",
      "=",
      "``",
      "Call",
      "of",
      "Destiny",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "gtype",
      "from",
      "video_games",
      "where",
      "gname",
      "=",
      "value"
    ],
    "question": "What is the type of video game Call of Destiny.",
    "question_toks": [
      "What",
      "is",
      "the",
      "type",
      "of",
      "video",
      "game",
      "Call",
      "of",
      "Destiny",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Call of Destiny\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(DISTINCT card_type_code) FROM Customers_Cards",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "card_type_code",
      ")",
      "FROM",
      "Customers_Cards"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "card_type_code",
      ")",
      "from",
      "customers_cards"
    ],
    "question": "How many different card types are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "card",
      "types",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                14,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT count(DISTINCT city) FROM stadium WHERE opening_year  <  2006",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "stadium",
      "WHERE",
      "opening_year",
      "<",
      "2006"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "stadium",
      "where",
      "opening_year",
      "<",
      "value"
    ],
    "question": "How many cities have a stadium that was opened before the year of 2006?",
    "question_toks": [
      "How",
      "many",
      "cities",
      "have",
      "a",
      "stadium",
      "that",
      "was",
      "opened",
      "before",
      "the",
      "year",
      "of",
      "2006",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          2006.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT Publication_Date FROM publication ORDER BY Price DESC",
    "query_toks": [
      "SELECT",
      "Publication_Date",
      "FROM",
      "publication",
      "ORDER",
      "BY",
      "Price",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "publication_date",
      "from",
      "publication",
      "order",
      "by",
      "price",
      "desc"
    ],
    "question": "What are the dates of publications in descending order of price?",
    "question_toks": [
      "What",
      "are",
      "the",
      "dates",
      "of",
      "publications",
      "in",
      "descending",
      "order",
      "of",
      "price",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\"",
    "query_toks": [
      "SELECT",
      "product_category_code",
      "FROM",
      "products",
      "WHERE",
      "product_name",
      "=",
      "``",
      "flax",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_category_code",
      "from",
      "products",
      "where",
      "product_name",
      "=",
      "value"
    ],
    "question": "Which category does the product named \"flax\" belong to?",
    "question_toks": [
      "Which",
      "category",
      "does",
      "the",
      "product",
      "named",
      "``",
      "flax",
      "''",
      "belong",
      "to",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"flax\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\"",
    "query_toks": [
      "SELECT",
      "Census_Ranking",
      "FROM",
      "city",
      "WHERE",
      "Status",
      "!",
      "=",
      "``",
      "Village",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "census_ranking",
      "from",
      "city",
      "where",
      "status",
      "!",
      "=",
      "value"
    ],
    "question": "What are the census rankings of cities that do not have the status \"Village\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "census",
      "rankings",
      "of",
      "cities",
      "that",
      "do",
      "not",
      "have",
      "the",
      "status",
      "``",
      "Village",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Village\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\"",
    "query_toks": [
      "SELECT",
      "product_name",
      "FROM",
      "products",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Spices",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      "from",
      "products",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "Return the names of products in the category 'Spices'.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "products",
      "in",
      "the",
      "category",
      "'Spices",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Spices\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Documents",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents"
    ],
    "question": "Count the number of documents.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "documents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT DISTINCT allergytype FROM Allergy_type",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "allergytype",
      "FROM",
      "Allergy_type"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "allergytype",
      "from",
      "allergy_type"
    ],
    "question": "What are the different allergy types?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "allergy",
      "types",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'United",
      "States",
      "'",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Return the cities with more than 3 airports in the United States.",
    "question_toks": [
      "Return",
      "the",
      "cities",
      "with",
      "more",
      "than",
      "3",
      "airports",
      "in",
      "the",
      "United",
      "States",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "protein_institute",
    "query": "SELECT DISTINCT TYPE FROM institution",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "TYPE",
      "FROM",
      "institution"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "type",
      "from",
      "institution"
    ],
    "question": "Show all the distinct institution types.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "distinct",
      "institution",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM student_course_attendance",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "student_course_attendance"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance"
    ],
    "question": "What are the ids of all students who have attended at least one course?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "students",
      "who",
      "have",
      "attended",
      "at",
      "least",
      "one",
      "course",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT title FROM item ORDER BY title",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "item",
      "ORDER",
      "BY",
      "title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "item",
      "order",
      "by",
      "title"
    ],
    "question": "List the titles of all items in alphabetic order .",
    "question_toks": [
      "List",
      "the",
      "titles",
      "of",
      "all",
      "items",
      "in",
      "alphabetic",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "ohio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "what states are next to the ohio",
    "question_toks": [
      "what",
      "states",
      "are",
      "next",
      "to",
      "the",
      "ohio"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"ohio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "illinois",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "what are the rivers of illinois",
    "question_toks": [
      "what",
      "are",
      "the",
      "rivers",
      "of",
      "illinois"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"illinois\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT DISTINCT building FROM Faculty",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "building",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "building",
      "from",
      "faculty"
    ],
    "question": "Show all the distinct buildings that have faculty rooms.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "distinct",
      "buildings",
      "that",
      "have",
      "faculty",
      "rooms",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Age",
      ")",
      "FROM",
      "STUDENT",
      "WHERE",
      "Sex",
      "=",
      "``",
      "F",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "What is the average age of female (sex is F) students?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "age",
      "of",
      "female",
      "(",
      "sex",
      "is",
      "F",
      ")",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT DISTINCT forename FROM drivers ORDER BY forename ASC",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "forename",
      "FROM",
      "drivers",
      "ORDER",
      "BY",
      "forename",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "forename",
      "from",
      "drivers",
      "order",
      "by",
      "forename",
      "asc"
    ],
    "question": "What are the first names of all the different drivers in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "all",
      "the",
      "different",
      "drivers",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_employee",
    "query": "SELECT count(*) FROM company WHERE Headquarters  =  'USA'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "company",
      "WHERE",
      "Headquarters",
      "=",
      "'USA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "company",
      "where",
      "headquarters",
      "=",
      "value"
    ],
    "question": "How many companies are headquartered in the US?",
    "question_toks": [
      "How",
      "many",
      "companies",
      "are",
      "headquartered",
      "in",
      "the",
      "US",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"USA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"AS\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "DEPARTMENT",
      "WHERE",
      "Division",
      "=",
      "``",
      "AS",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "department",
      "where",
      "division",
      "=",
      "value"
    ],
    "question": "What is the number of departments in Division \"AS\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "departments",
      "in",
      "Division",
      "``",
      "AS",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"AS\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "storm",
      "WHERE",
      "Number_Deaths",
      ">",
      "0"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "storm",
      "where",
      "number_deaths",
      ">",
      "value"
    ],
    "question": "How many storms had death records?",
    "question_toks": [
      "How",
      "many",
      "storms",
      "had",
      "death",
      "records",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          0.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";",
    "query_toks": [
      "SELECT",
      "highest_elevation",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "delaware",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "highest_elevation",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how tall is the highest point in delaware",
    "question_toks": [
      "how",
      "tall",
      "is",
      "the",
      "highest",
      "point",
      "in",
      "delaware"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"delaware\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT Delegate FROM election WHERE District  =  1",
    "query_toks": [
      "SELECT",
      "Delegate",
      "FROM",
      "election",
      "WHERE",
      "District",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "delegate",
      "from",
      "election",
      "where",
      "district",
      "=",
      "value"
    ],
    "question": "Show the delegate from district 1 in election.",
    "question_toks": [
      "Show",
      "the",
      "delegate",
      "from",
      "district",
      "1",
      "in",
      "election",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268",
    "query_toks": [
      "SELECT",
      "DPhone",
      "FROM",
      "DEPARTMENT",
      "WHERE",
      "Room",
      "=",
      "268"
    ],
    "query_toks_no_value": [
      "select",
      "dphone",
      "from",
      "department",
      "where",
      "room",
      "=",
      "value"
    ],
    "question": "Give the phones for departments in room 268.",
    "question_toks": [
      "Give",
      "the",
      "phones",
      "for",
      "departments",
      "in",
      "room",
      "268",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          268.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(DISTINCT allergy) FROM Allergy_type",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "allergy",
      ")",
      "FROM",
      "Allergy_type"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "allergy",
      ")",
      "from",
      "allergy_type"
    ],
    "question": "How many allergy entries are there?",
    "question_toks": [
      "How",
      "many",
      "allergy",
      "entries",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                1,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT DISTINCT city FROM addresses",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "city",
      "FROM",
      "addresses"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "city",
      "from",
      "addresses"
    ],
    "question": "List all the distinct cities",
    "question_toks": [
      "List",
      "all",
      "the",
      "distinct",
      "cities"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT DISTINCT home_city FROM driver",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "home_city",
      "FROM",
      "driver"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "home_city",
      "from",
      "driver"
    ],
    "question": "Show all different home cities.",
    "question_toks": [
      "Show",
      "all",
      "different",
      "home",
      "cities",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT count(DISTINCT Governor) FROM party",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Governor",
      ")",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "governor",
      ")",
      "from",
      "party"
    ],
    "question": "Count the number of distinct governors.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "governors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Title FROM ALBUM ORDER BY Title",
    "query_toks": [
      "SELECT",
      "Title",
      "FROM",
      "ALBUM",
      "ORDER",
      "BY",
      "Title"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "album",
      "order",
      "by",
      "title"
    ],
    "question": "What are all the album titles, in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "album",
      "titles",
      ",",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM Ref_locations",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_locations"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_locations"
    ],
    "question": "Show the number of locations.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "locations",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airlines",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines"
    ],
    "question": "How many airlines are there?",
    "question_toks": [
      "How",
      "many",
      "airlines",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT city ) FROM business WHERE name  =  \"Panda Express\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "business",
      "WHERE",
      "name",
      "=",
      "``",
      "Panda",
      "Express",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "business",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Return me the number of cities that has \" Panda Express \" .",
    "question_toks": [
      "Return",
      "me",
      "the",
      "number",
      "of",
      "cities",
      "that",
      "has",
      "``",
      "Panda",
      "Express",
      "``",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Panda Express\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Has_allergy WHERE Allergy  =  \"Cat\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Has_allergy",
      "WHERE",
      "Allergy",
      "=",
      "``",
      "Cat",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "has_allergy",
      "where",
      "allergy",
      "=",
      "value"
    ],
    "question": "How many students have cat allergies?",
    "question_toks": [
      "How",
      "many",
      "students",
      "have",
      "cat",
      "allergies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Cat\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "PersonFriend",
      "GROUP",
      "BY",
      "name",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "personfriend",
      "group",
      "by",
      "name",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value"
    ],
    "question": "What are the names of everybody who has exactly one friend?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "everybody",
      "who",
      "has",
      "exactly",
      "one",
      "friend",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          2,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Faculty",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "faculty"
    ],
    "question": "What is the total number of faculty members?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "faculty",
      "members",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT count(*) FROM Band",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Band"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "band"
    ],
    "question": "How many bands are there?",
    "question_toks": [
      "How",
      "many",
      "bands",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(DISTINCT dormid) FROM has_amenity",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dormid",
      ")",
      "FROM",
      "has_amenity"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dormid",
      ")",
      "from",
      "has_amenity"
    ],
    "question": "How many dorms have amenities?",
    "question_toks": [
      "How",
      "many",
      "dorms",
      "have",
      "amenities",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT course_name FROM courses ORDER BY course_name",
    "query_toks": [
      "SELECT",
      "course_name",
      "FROM",
      "courses",
      "ORDER",
      "BY",
      "course_name"
    ],
    "query_toks_no_value": [
      "select",
      "course_name",
      "from",
      "courses",
      "order",
      "by",
      "course_name"
    ],
    "question": "What are the names of the courses in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "courses",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "Team",
      "FROM",
      "technician",
      "GROUP",
      "BY",
      "Team",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "team",
      "from",
      "technician",
      "group",
      "by",
      "team",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show the team that have at least two technicians.",
    "question_toks": [
      "Show",
      "the",
      "team",
      "that",
      "have",
      "at",
      "least",
      "two",
      "technicians",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\"",
    "query_toks": [
      "SELECT",
      "last_name",
      "FROM",
      "staff",
      "WHERE",
      "email_address",
      "LIKE",
      "``",
      "%",
      "wrau",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "last_name",
      "from",
      "staff",
      "where",
      "email_address",
      "like",
      "value"
    ],
    "question": "Find the last name of the staff whose email address contains \"wrau\".",
    "question_toks": [
      "Find",
      "the",
      "last",
      "name",
      "of",
      "the",
      "staff",
      "whose",
      "email",
      "address",
      "contains",
      "``",
      "wrau",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"%wrau%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "performance_attendance",
    "query": "SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Date",
      "FROM",
      "performance",
      "ORDER",
      "BY",
      "Attendance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      "from",
      "performance",
      "order",
      "by",
      "attendance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the date of the performance with the highest number of attendees?",
    "question_toks": [
      "What",
      "is",
      "the",
      "date",
      "of",
      "the",
      "performance",
      "with",
      "the",
      "highest",
      "number",
      "of",
      "attendees",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts"
    ],
    "question": "How many accounts do we have?",
    "question_toks": [
      "How",
      "many",
      "accounts",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC",
    "query_toks": [
      "SELECT",
      "Party_Theme",
      "FROM",
      "party",
      "ORDER",
      "BY",
      "Number_of_hosts",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "party_theme",
      "from",
      "party",
      "order",
      "by",
      "number_of_hosts",
      "asc"
    ],
    "question": "What are the themes of parties ordered by the number of hosts in ascending manner?",
    "question_toks": [
      "What",
      "are",
      "the",
      "themes",
      "of",
      "parties",
      "ordered",
      "by",
      "the",
      "number",
      "of",
      "hosts",
      "in",
      "ascending",
      "manner",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT Description FROM aircraft",
    "query_toks": [
      "SELECT",
      "Description",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "description",
      "from",
      "aircraft"
    ],
    "question": "What are the descriptions for the aircrafts?",
    "question_toks": [
      "What",
      "are",
      "the",
      "descriptions",
      "for",
      "the",
      "aircrafts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT * FROM item",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "item"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "item"
    ],
    "question": "List all information in the item table.",
    "question_toks": [
      "List",
      "all",
      "information",
      "in",
      "the",
      "item",
      "table",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "border",
      ")",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "border",
      ")",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "number of states bordering kentucky",
    "question_toks": [
      "number",
      "of",
      "states",
      "bordering",
      "kentucky"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "browser_web",
    "query": "SELECT name FROM browser ORDER BY market_share DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "browser",
      "ORDER",
      "BY",
      "market_share",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "browser",
      "order",
      "by",
      "market_share",
      "desc"
    ],
    "question": "List the name of browsers in descending order by market share.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "browsers",
      "in",
      "descending",
      "order",
      "by",
      "market",
      "share",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob",
    "query_toks": [
      "SELECT",
      "emp_fname",
      "FROM",
      "employee",
      "WHERE",
      "emp_jobcode",
      "=",
      "'PROF",
      "'",
      "ORDER",
      "BY",
      "emp_dob"
    ],
    "query_toks_no_value": [
      "select",
      "emp_fname",
      "from",
      "employee",
      "where",
      "emp_jobcode",
      "=",
      "value",
      "order",
      "by",
      "emp_dob"
    ],
    "question": "List the first name of all employees with job code PROF ordered by their date of birth.",
    "question_toks": [
      "List",
      "the",
      "first",
      "name",
      "of",
      "all",
      "employees",
      "with",
      "job",
      "code",
      "PROF",
      "ordered",
      "by",
      "their",
      "date",
      "of",
      "birth",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"PROF\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT name FROM people ORDER BY date_of_birth",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "people",
      "ORDER",
      "BY",
      "date_of_birth"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "order",
      "by",
      "date_of_birth"
    ],
    "question": "What are the names of all people, ordered by their date of birth?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "people",
      ",",
      "ordered",
      "by",
      "their",
      "date",
      "of",
      "birth",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT count(*) FROM claims_processing_stages",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "claims_processing_stages"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "claims_processing_stages"
    ],
    "question": "How many claim processing stages are there in total?",
    "question_toks": [
      "How",
      "many",
      "claim",
      "processing",
      "stages",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Project_outcomes",
      "WHERE",
      "outcome_code",
      "=",
      "'Patent",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "project_outcomes",
      "where",
      "outcome_code",
      "=",
      "value"
    ],
    "question": "How many patents outcomes were listed for all the projects?",
    "question_toks": [
      "How",
      "many",
      "patents",
      "outcomes",
      "were",
      "listed",
      "for",
      "all",
      "the",
      "projects",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Patent\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT avg(enr) FROM College WHERE state  =  'FL'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "enr",
      ")",
      "FROM",
      "College",
      "WHERE",
      "state",
      "=",
      "'FL",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enr",
      ")",
      "from",
      "college",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "What is average enrollment of colleges in the state FL?",
    "question_toks": [
      "What",
      "is",
      "average",
      "enrollment",
      "of",
      "colleges",
      "in",
      "the",
      "state",
      "FL",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"FL\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "airlines",
      "WHERE",
      "name",
      "LIKE",
      "'Orbit",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airlines",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "What are the countries of all airlines whose names start with Orbit?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "of",
      "all",
      "airlines",
      "whose",
      "names",
      "start",
      "with",
      "Orbit",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Orbit%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(*) FROM address WHERE district  =  'California'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "address",
      "WHERE",
      "district",
      "=",
      "'California",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "address",
      "where",
      "district",
      "=",
      "value"
    ],
    "question": "How many addresses are in the district of California?",
    "question_toks": [
      "How",
      "many",
      "addresses",
      "are",
      "in",
      "the",
      "district",
      "of",
      "California",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"California\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy",
      "GROUP",
      "BY",
      "StuID",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "has_allergy",
      "group",
      "by",
      "stuid",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the students ids of students who have more than one allergy?",
    "question_toks": [
      "What",
      "are",
      "the",
      "students",
      "ids",
      "of",
      "students",
      "who",
      "have",
      "more",
      "than",
      "one",
      "allergy",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT name FROM procedures ORDER BY cost LIMIT 3",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "procedures",
      "ORDER",
      "BY",
      "cost",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "procedures",
      "order",
      "by",
      "cost",
      "limit",
      "value"
    ],
    "question": "What are the three most costly procedures?",
    "question_toks": [
      "What",
      "are",
      "the",
      "three",
      "most",
      "costly",
      "procedures",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT name FROM procedures ORDER BY cost LIMIT 3",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "procedures",
      "ORDER",
      "BY",
      "cost",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "procedures",
      "order",
      "by",
      "cost",
      "limit",
      "value"
    ],
    "question": "Find the three most expensive procedures.",
    "question_toks": [
      "Find",
      "the",
      "three",
      "most",
      "expensive",
      "procedures",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "browser_web",
    "query": "SELECT count(DISTINCT client) FROM web_client_accelerator",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "client",
      ")",
      "FROM",
      "web_client_accelerator"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "client",
      ")",
      "from",
      "web_client_accelerator"
    ],
    "question": "How many different kinds of clients are supported by the web clients accelerators?",
    "question_toks": [
      "How",
      "many",
      "different",
      "kinds",
      "of",
      "clients",
      "are",
      "supported",
      "by",
      "the",
      "web",
      "clients",
      "accelerators",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3",
    "query_toks": [
      "SELECT",
      "max_page_size",
      "FROM",
      "product",
      "GROUP",
      "BY",
      "max_page_size",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "max_page_size",
      "from",
      "product",
      "group",
      "by",
      "max_page_size",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What is the maximum page size for everything that has more than 3 products listed?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "page",
      "size",
      "for",
      "everything",
      "that",
      "has",
      "more",
      "than",
      "3",
      "products",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\"",
    "query_toks": [
      "SELECT",
      "Customer_Phone",
      "FROM",
      "PERFORMERS",
      "WHERE",
      "Customer_Name",
      "=",
      "``",
      "Ashley",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      "from",
      "performers",
      "where",
      "customer_name",
      "=",
      "value"
    ],
    "question": "Find the phone number of performer \"Ashley\".",
    "question_toks": [
      "Find",
      "the",
      "phone",
      "number",
      "of",
      "performer",
      "``",
      "Ashley",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          "\"Ashley\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\"",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Ref_document_types",
      "WHERE",
      "document_type_name",
      "=",
      "``",
      "Paper",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "ref_document_types",
      "where",
      "document_type_name",
      "=",
      "value"
    ],
    "question": "What is the document type code for document type \"Paper\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "document",
      "type",
      "code",
      "for",
      "document",
      "type",
      "``",
      "Paper",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Paper\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "poll_source",
      "FROM",
      "candidate",
      "ORDER",
      "BY",
      "oppose_rate",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "poll_source",
      "from",
      "candidate",
      "order",
      "by",
      "oppose_rate",
      "desc",
      "limit",
      "value"
    ],
    "question": "which poll source does the highest oppose rate come from?",
    "question_toks": [
      "which",
      "poll",
      "source",
      "does",
      "the",
      "highest",
      "oppose",
      "rate",
      "come",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "channel",
      "WHERE",
      "OWNER",
      "!",
      "=",
      "'CCTV",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "channel",
      "where",
      "owner",
      "!",
      "=",
      "value"
    ],
    "question": "Which channels are not owned by CCTV? Give me the channel names.",
    "question_toks": [
      "Which",
      "channels",
      "are",
      "not",
      "owned",
      "by",
      "CCTV",
      "?",
      "Give",
      "me",
      "the",
      "channel",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"CCTV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1",
    "query_toks": [
      "SELECT",
      "Winery",
      "FROM",
      "WINE",
      "ORDER",
      "BY",
      "SCORE",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "winery",
      "from",
      "wine",
      "order",
      "by",
      "score",
      "limit",
      "value"
    ],
    "question": "Which winery is the wine that has the highest score from?",
    "question_toks": [
      "Which",
      "winery",
      "is",
      "the",
      "wine",
      "that",
      "has",
      "the",
      "highest",
      "score",
      "from",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Player FROM match_season WHERE College  =  \"UCLA\"",
    "query_toks": [
      "SELECT",
      "Player",
      "FROM",
      "match_season",
      "WHERE",
      "College",
      "=",
      "``",
      "UCLA",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "player",
      "from",
      "match_season",
      "where",
      "college",
      "=",
      "value"
    ],
    "question": "Who are the players from UCLA?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "players",
      "from",
      "UCLA",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"UCLA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(*) FROM classroom WHERE building != 'Lamberton'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "classroom",
      "WHERE",
      "building",
      "!",
      "=",
      "'Lamberton",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "classroom",
      "where",
      "building",
      "!",
      "=",
      "value"
    ],
    "question": "Count the number of rooms that are not in the Lamberton building.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "rooms",
      "that",
      "are",
      "not",
      "in",
      "the",
      "Lamberton",
      "building",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Lamberton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT count(*) FROM Settlements",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Settlements"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "settlements"
    ],
    "question": "Count the total number of settlements made.",
    "question_toks": [
      "Count",
      "the",
      "total",
      "number",
      "of",
      "settlements",
      "made",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT count(*) FROM customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "Return the total number of distinct customers.",
    "question_toks": [
      "Return",
      "the",
      "total",
      "number",
      "of",
      "distinct",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT name ) FROM organization WHERE continent  =  \"North America\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "organization",
      "WHERE",
      "continent",
      "=",
      "``",
      "North",
      "America",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "organization",
      "where",
      "continent",
      "=",
      "value"
    ],
    "question": "return me the number of the organizations in \" North America \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "the",
      "organizations",
      "in",
      "``",
      "North",
      "America",
      "``",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                35,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              33,
              false
            ],
            null
          ],
          "\"North America\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT Description FROM aircraft",
    "query_toks": [
      "SELECT",
      "Description",
      "FROM",
      "aircraft"
    ],
    "query_toks_no_value": [
      "select",
      "description",
      "from",
      "aircraft"
    ],
    "question": "List the description of all aircrafts.",
    "question_toks": [
      "List",
      "the",
      "description",
      "of",
      "all",
      "aircrafts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "albums",
      "WHERE",
      "title",
      "LIKE",
      "'A",
      "%",
      "'",
      "ORDER",
      "BY",
      "title",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "albums",
      "where",
      "title",
      "like",
      "value",
      "order",
      "by",
      "title"
    ],
    "question": "What are the titles of all albums that start with A in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "titles",
      "of",
      "all",
      "albums",
      "that",
      "start",
      "with",
      "A",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"A%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "formula_1",
    "query": "SELECT DISTINCT name FROM races ORDER BY name DESC",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "name",
      "FROM",
      "races",
      "ORDER",
      "BY",
      "name",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "races",
      "order",
      "by",
      "name",
      "desc"
    ],
    "question": "List the names of all distinct races in reversed  lexicographic order?",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "distinct",
      "races",
      "in",
      "reversed",
      "lexicographic",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT count(*) FROM Tasks",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Tasks"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tasks"
    ],
    "question": "How many tasks are there?",
    "question_toks": [
      "How",
      "many",
      "tasks",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(*) FROM scientists",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "scientists"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "scientists"
    ],
    "question": "How many scientists are there?",
    "question_toks": [
      "How",
      "many",
      "scientists",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT count(*) FROM Tasks",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Tasks"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "tasks"
    ],
    "question": "How many tasks are there in total?",
    "question_toks": [
      "How",
      "many",
      "tasks",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT avg(International_Passengers) FROM airport",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "International_Passengers",
      ")",
      "FROM",
      "airport"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "international_passengers",
      ")",
      "from",
      "airport"
    ],
    "question": "What is the average number of international passengers for an airport?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "international",
      "passengers",
      "for",
      "an",
      "airport",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT count(*) FROM technician",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "technician"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "technician"
    ],
    "question": "What is the number of technicians?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "technicians",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "perpetrator",
    "query": "SELECT max(YEAR) FROM perpetrator;",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "YEAR",
      ")",
      "FROM",
      "perpetrator",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "year",
      ")",
      "from",
      "perpetrator"
    ],
    "question": "In which year did the most recent crime happen?",
    "question_toks": [
      "In",
      "which",
      "year",
      "did",
      "the",
      "most",
      "recent",
      "crime",
      "happen",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT LName FROM STUDENT WHERE Sex  =  \"F\" ORDER BY Age DESC",
    "query_toks": [
      "SELECT",
      "LName",
      "FROM",
      "STUDENT",
      "WHERE",
      "Sex",
      "=",
      "``",
      "F",
      "''",
      "ORDER",
      "BY",
      "Age",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value",
      "order",
      "by",
      "age",
      "desc"
    ],
    "question": "Find the last name of female (sex is F) students in the descending order of age.",
    "question_toks": [
      "Find",
      "the",
      "last",
      "name",
      "of",
      "female",
      "(",
      "sex",
      "is",
      "F",
      ")",
      "students",
      "in",
      "the",
      "descending",
      "order",
      "of",
      "age",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT count(patient) FROM stay WHERE room  =  112",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "patient",
      ")",
      "FROM",
      "stay",
      "WHERE",
      "room",
      "=",
      "112"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "patient",
      ")",
      "from",
      "stay",
      "where",
      "room",
      "=",
      "value"
    ],
    "question": "How many patients stay in room 112?",
    "question_toks": [
      "How",
      "many",
      "patients",
      "stay",
      "in",
      "room",
      "112",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            13
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          112.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT name FROM enzyme ORDER BY name DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "enzyme",
      "ORDER",
      "BY",
      "name",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "enzyme",
      "order",
      "by",
      "name",
      "desc"
    ],
    "question": "List the name of enzymes in descending lexicographical order.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "enzymes",
      "in",
      "descending",
      "lexicographical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "policy_type_code",
      "FROM",
      "policies",
      "GROUP",
      "BY",
      "policy_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "policy_type_code",
      "from",
      "policies",
      "group",
      "by",
      "policy_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find all the policy types that are used by more than 2 customers.",
    "question_toks": [
      "Find",
      "all",
      "the",
      "policy",
      "types",
      "that",
      "are",
      "used",
      "by",
      "more",
      "than",
      "2",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "what state is springfield located in",
    "question_toks": [
      "what",
      "state",
      "is",
      "springfield",
      "located",
      "in"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT role_description FROM ROLES WHERE role_code = \"ED\";",
    "query_toks": [
      "SELECT",
      "role_description",
      "FROM",
      "ROLES",
      "WHERE",
      "role_code",
      "=",
      "``",
      "ED",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "role_description",
      "from",
      "roles",
      "where",
      "role_code",
      "=",
      "value"
    ],
    "question": "What is the description of role code ED?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "role",
      "code",
      "ED",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"ED\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "california",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how many people live in california",
    "question_toks": [
      "how",
      "many",
      "people",
      "live",
      "in",
      "california"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"california\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Working_Horses",
      ")",
      "FROM",
      "farm",
      "WHERE",
      "Total_Horses",
      ">",
      "5000"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "working_horses",
      ")",
      "from",
      "farm",
      "where",
      "total_horses",
      ">",
      "value"
    ],
    "question": "What is the average number of working horses of farms with more than 5000 total number of horses?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "working",
      "horses",
      "of",
      "farms",
      "with",
      "more",
      "than",
      "5000",
      "total",
      "number",
      "of",
      "horses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          5000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT LOCATION FROM school ORDER BY Enrollment ASC",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "school",
      "ORDER",
      "BY",
      "Enrollment",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "school",
      "order",
      "by",
      "enrollment",
      "asc"
    ],
    "question": "What is the list of school locations sorted in ascending order of school enrollment?",
    "question_toks": [
      "What",
      "is",
      "the",
      "list",
      "of",
      "school",
      "locations",
      "sorted",
      "in",
      "ascending",
      "order",
      "of",
      "school",
      "enrollment",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT dept_name FROM department ORDER BY budget LIMIT 1",
    "query_toks": [
      "SELECT",
      "dept_name",
      "FROM",
      "department",
      "ORDER",
      "BY",
      "budget",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "dept_name",
      "from",
      "department",
      "order",
      "by",
      "budget",
      "limit",
      "value"
    ],
    "question": "Which department has the lowest budget?",
    "question_toks": [
      "Which",
      "department",
      "has",
      "the",
      "lowest",
      "budget",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\"",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Points",
      ")",
      "FROM",
      "climber",
      "WHERE",
      "Country",
      "=",
      "``",
      "United",
      "Kingdom",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "points",
      ")",
      "from",
      "climber",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "Return the maximum number of points for climbers from the United Kingdom.",
    "question_toks": [
      "Return",
      "the",
      "maximum",
      "number",
      "of",
      "points",
      "for",
      "climbers",
      "from",
      "the",
      "United",
      "Kingdom",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"United Kingdom\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "cinema",
      "WHERE",
      "capacity",
      ">",
      "300",
      "GROUP",
      "BY",
      "LOCATION",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "cinema",
      "where",
      "capacity",
      ">",
      "value",
      "group",
      "by",
      "location",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Which locations have 2 or more cinemas with capacity over 300?",
    "question_toks": [
      "Which",
      "locations",
      "have",
      "2",
      "or",
      "more",
      "cinemas",
      "with",
      "capacity",
      "over",
      "300",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          300.0,
          null
        ]
      ],
      "groupBy": [
        [
          0,
          12,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT count(DISTINCT school_id) FROM basketball_match",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "school_id",
      ")",
      "FROM",
      "basketball_match"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "school_id",
      ")",
      "from",
      "basketball_match"
    ],
    "question": "How many schools are in the basketball match?",
    "question_toks": [
      "How",
      "many",
      "schools",
      "are",
      "in",
      "the",
      "basketball",
      "match",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "news_report",
    "query": "SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Nationality",
      "FROM",
      "journalist",
      "ORDER",
      "BY",
      "Years_working",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "nationality",
      "from",
      "journalist",
      "order",
      "by",
      "years_working",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the nationality of the journalist with the largest number of years working?",
    "question_toks": [
      "What",
      "is",
      "the",
      "nationality",
      "of",
      "the",
      "journalist",
      "with",
      "the",
      "largest",
      "number",
      "of",
      "years",
      "working",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM products",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products"
    ],
    "question": "Count the number of products.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "products",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT dept_name) FROM department",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dept_name",
      ")",
      "FROM",
      "department"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dept_name",
      ")",
      "from",
      "department"
    ],
    "question": "How many different departments are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "departments",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Age FROM artist",
    "query_toks": [
      "SELECT",
      "Age",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "age",
      "from",
      "artist"
    ],
    "question": "What are the ages of all music artists?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ages",
      "of",
      "all",
      "music",
      "artists",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "project_id",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "project_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "project_id",
      "from",
      "documents",
      "group",
      "by",
      "project_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show the ids for projects with at least 2 documents.",
    "question_toks": [
      "Show",
      "the",
      "ids",
      "for",
      "projects",
      "with",
      "at",
      "least",
      "2",
      "documents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( city_name ) FROM city;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "city_name",
      ")",
      "FROM",
      "city",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "city_name",
      ")",
      "from",
      "city"
    ],
    "question": "how many cities are there in the us",
    "question_toks": [
      "how",
      "many",
      "cities",
      "are",
      "there",
      "in",
      "the",
      "us"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      "FROM",
      "catalog_contents",
      "ORDER",
      "BY",
      "capacity",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      "from",
      "catalog_contents",
      "order",
      "by",
      "capacity",
      "asc",
      "limit",
      "value"
    ],
    "question": "Find the name of the product that has the smallest capacity.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "product",
      "that",
      "has",
      "the",
      "smallest",
      "capacity",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              22,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "EXCEPT",
      "SELECT",
      "StuID",
      "FROM",
      "Plays_games"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "except",
      "select",
      "stuid",
      "from",
      "plays_games"
    ],
    "question": "Show ids of students who don't play video game.",
    "question_toks": [
      "Show",
      "ids",
      "of",
      "students",
      "who",
      "do",
      "n't",
      "play",
      "video",
      "game",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  12,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT count(DISTINCT student_id) FROM Students_in_Detention",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "student_id",
      ")",
      "FROM",
      "Students_in_Detention"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "student_id",
      ")",
      "from",
      "students_in_detention"
    ],
    "question": "How many distinct students have been in detention?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "students",
      "have",
      "been",
      "in",
      "detention",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                62,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3",
    "query_toks": [
      "SELECT",
      "location_code",
      "FROM",
      "Document_locations",
      "GROUP",
      "BY",
      "location_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "location_code",
      "from",
      "document_locations",
      "group",
      "by",
      "location_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show the location codes with at least 3 documents.",
    "question_toks": [
      "Show",
      "the",
      "location",
      "codes",
      "with",
      "at",
      "least",
      "3",
      "documents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufacturer",
    "query": "SELECT sum(num_of_component) FROM furniture",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "num_of_component",
      ")",
      "FROM",
      "furniture"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "num_of_component",
      ")",
      "from",
      "furniture"
    ],
    "question": "How many furniture components are there in total?",
    "question_toks": [
      "How",
      "many",
      "furniture",
      "components",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT StuID FROM Student WHERE city_code  =  \"CHI\"",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "city_code",
      "=",
      "``",
      "CHI",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "city_code",
      "=",
      "value"
    ],
    "question": "Show ids for all students who live in CHI.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "all",
      "students",
      "who",
      "live",
      "in",
      "CHI",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"CHI\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Issue_Date",
      "FROM",
      "volume",
      "ORDER",
      "BY",
      "Weeks_on_Top",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "issue_date",
      "from",
      "volume",
      "order",
      "by",
      "weeks_on_top",
      "asc",
      "limit",
      "value"
    ],
    "question": "Return the issue date of the volume that has spent the fewest weeks on top.",
    "question_toks": [
      "Return",
      "the",
      "issue",
      "date",
      "of",
      "the",
      "volume",
      "that",
      "has",
      "spent",
      "the",
      "fewest",
      "weeks",
      "on",
      "top",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT budget FROM movie WHERE title  =  \"Finding Nemo\";",
    "query_toks": [
      "SELECT",
      "budget",
      "FROM",
      "movie",
      "WHERE",
      "title",
      "=",
      "``",
      "Finding",
      "Nemo",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "budget",
      "from",
      "movie",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "How much was the budget of \" Finding Nemo \"",
    "question_toks": [
      "How",
      "much",
      "was",
      "the",
      "budget",
      "of",
      "``",
      "Finding",
      "Nemo",
      "``"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"Finding Nemo\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "student",
      "WHERE",
      "dept_name",
      "=",
      "'History",
      "'",
      "ORDER",
      "BY",
      "tot_cred",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "student",
      "where",
      "dept_name",
      "=",
      "value",
      "order",
      "by",
      "tot_cred",
      "desc",
      "limit",
      "value"
    ],
    "question": "Give the name of the student in the History department with the most credits.",
    "question_toks": [
      "Give",
      "the",
      "name",
      "of",
      "the",
      "student",
      "in",
      "the",
      "History",
      "department",
      "with",
      "the",
      "most",
      "credits",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"History\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "student_course_attendance",
      "WHERE",
      "course_id",
      "=",
      "301"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "value"
    ],
    "question": "What are the id of students who registered course 301?",
    "question_toks": [
      "What",
      "are",
      "the",
      "id",
      "of",
      "students",
      "who",
      "registered",
      "course",
      "301",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          301.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Price FROM WINE WHERE YEAR  <  2010",
    "query_toks": [
      "SELECT",
      "Price",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "<",
      "2010"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "wine",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "What are the prices of wines produced before the year of 2010?",
    "question_toks": [
      "What",
      "are",
      "the",
      "prices",
      "of",
      "wines",
      "produced",
      "before",
      "the",
      "year",
      "of",
      "2010",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "which state is the city springfield located in",
    "question_toks": [
      "which",
      "state",
      "is",
      "the",
      "city",
      "springfield",
      "located",
      "in"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Name FROM WINE WHERE score  >  90",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "WINE",
      "WHERE",
      "score",
      ">",
      "90"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wine",
      "where",
      "score",
      ">",
      "value"
    ],
    "question": "List the names of all distinct wines that have scores higher than 90.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "distinct",
      "wines",
      "that",
      "have",
      "scores",
      "higher",
      "than",
      "90",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          90.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT avg(age) FROM Person",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "age",
      ")",
      "FROM",
      "Person"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "person"
    ],
    "question": "What is the average age for all person?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "age",
      "for",
      "all",
      "person",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT max(group_equity_shareholding) FROM operate_company",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "group_equity_shareholding",
      ")",
      "FROM",
      "operate_company"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "group_equity_shareholding",
      ")",
      "from",
      "operate_company"
    ],
    "question": "What is maximum group equity shareholding of the companies?",
    "question_toks": [
      "What",
      "is",
      "maximum",
      "group",
      "equity",
      "shareholding",
      "of",
      "the",
      "companies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT LOCATION FROM school ORDER BY Founded DESC",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "school",
      "ORDER",
      "BY",
      "Founded",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "school",
      "order",
      "by",
      "founded",
      "desc"
    ],
    "question": "What is the list of school locations sorted in descending order of school foundation year?",
    "question_toks": [
      "What",
      "is",
      "the",
      "list",
      "of",
      "school",
      "locations",
      "sorted",
      "in",
      "descending",
      "order",
      "of",
      "school",
      "foundation",
      "year",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT ResName FROM Restaurant;",
    "query_toks": [
      "SELECT",
      "ResName",
      "FROM",
      "Restaurant",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "resname",
      "from",
      "restaurant"
    ],
    "question": "Show me all the restaurants.",
    "question_toks": [
      "Show",
      "me",
      "all",
      "the",
      "restaurants",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "festival_detail",
      "ORDER",
      "BY",
      "Num_of_Audience",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "festival_detail",
      "order",
      "by",
      "num_of_audience",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the location of the festival with the largest number of audience?",
    "question_toks": [
      "What",
      "is",
      "the",
      "location",
      "of",
      "the",
      "festival",
      "with",
      "the",
      "largest",
      "number",
      "of",
      "audience",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_for_hire",
    "query": "SELECT daily_hire_cost FROM Products_for_hire WHERE product_name LIKE '%Book%'",
    "query_toks": [
      "SELECT",
      "daily_hire_cost",
      "FROM",
      "Products_for_hire",
      "WHERE",
      "product_name",
      "LIKE",
      "'",
      "%",
      "Book",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "daily_hire_cost",
      "from",
      "products_for_hire",
      "where",
      "product_name",
      "like",
      "value"
    ],
    "question": "What are the daily hire costs for the products with substring 'Book' in its name?",
    "question_toks": [
      "What",
      "are",
      "the",
      "daily",
      "hire",
      "costs",
      "for",
      "the",
      "products",
      "with",
      "substring",
      "'Book",
      "'",
      "in",
      "its",
      "name",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"%Book%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_for_hire",
    "query": "SELECT avg(amount_due) FROM payments",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "amount_due",
      ")",
      "FROM",
      "payments"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "amount_due",
      ")",
      "from",
      "payments"
    ],
    "question": "What is the average amount due for all the payments?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "amount",
      "due",
      "for",
      "all",
      "the",
      "payments",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT DISTINCT building_description FROM Apartment_Buildings",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "building_description",
      "FROM",
      "Apartment_Buildings"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "building_description",
      "from",
      "apartment_buildings"
    ],
    "question": "Show all distinct building descriptions.",
    "question_toks": [
      "Show",
      "all",
      "distinct",
      "building",
      "descriptions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
    "query_toks": [
      "SELECT",
      "region_name",
      "FROM",
      "region",
      "WHERE",
      "region_name",
      "!",
      "=",
      "'Denmark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "region_name",
      "from",
      "region",
      "where",
      "region_name",
      "!",
      "=",
      "value"
    ],
    "question": "Show names for all regions except for Denmark.",
    "question_toks": [
      "Show",
      "names",
      "for",
      "all",
      "regions",
      "except",
      "for",
      "Denmark",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Denmark\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT count(DISTINCT Governor) FROM party",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Governor",
      ")",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "governor",
      ")",
      "from",
      "party"
    ],
    "question": "How many distinct governors are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "governors",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_products_contacts",
    "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "product_type_code",
      "FROM",
      "products",
      "GROUP",
      "BY",
      "product_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "product_type_code",
      "from",
      "products",
      "group",
      "by",
      "product_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show the product type codes which have at least two products.",
    "question_toks": [
      "Show",
      "the",
      "product",
      "type",
      "codes",
      "which",
      "have",
      "at",
      "least",
      "two",
      "products",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT count(DISTINCT POSITION) FROM player",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "POSITION",
      ")",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "position",
      ")",
      "from",
      "player"
    ],
    "question": "How many different position for players are listed?",
    "question_toks": [
      "How",
      "many",
      "different",
      "position",
      "for",
      "players",
      "are",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                13,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "coffee_shop",
    "query": "SELECT Membership_card FROM member GROUP BY Membership_card HAVING count(*)  >  5",
    "query_toks": [
      "SELECT",
      "Membership_card",
      "FROM",
      "member",
      "GROUP",
      "BY",
      "Membership_card",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "membership_card",
      "from",
      "member",
      "group",
      "by",
      "membership_card",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which membership card has more than 5 members?",
    "question_toks": [
      "Which",
      "membership",
      "card",
      "has",
      "more",
      "than",
      "5",
      "members",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC",
    "query_toks": [
      "SELECT",
      "College",
      "FROM",
      "match_season",
      "GROUP",
      "BY",
      "College",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2",
      "ORDER",
      "BY",
      "College",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "college",
      "from",
      "match_season",
      "group",
      "by",
      "college",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value",
      "order",
      "by",
      "college",
      "desc"
    ],
    "question": "Show the name of colleges that have at least two players in descending alphabetical order.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "of",
      "colleges",
      "that",
      "have",
      "at",
      "least",
      "two",
      "players",
      "in",
      "descending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT name FROM media_types;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "media_types",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "media_types"
    ],
    "question": "List all media types.",
    "question_toks": [
      "List",
      "all",
      "media",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                48,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "railway",
    "query": "SELECT avg(Age) FROM manager",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Age",
      ")",
      "FROM",
      "manager"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "manager"
    ],
    "question": "What is the average age for all managers?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "age",
      "for",
      "all",
      "managers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\"",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Points",
      ")",
      "FROM",
      "climber",
      "WHERE",
      "Country",
      "=",
      "``",
      "United",
      "Kingdom",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "points",
      ")",
      "from",
      "climber",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "What is the maximum point for climbers whose country is United Kingdom?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "point",
      "for",
      "climbers",
      "whose",
      "country",
      "is",
      "United",
      "Kingdom",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"United Kingdom\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "wrestler",
      "GROUP",
      "BY",
      "LOCATION",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "wrestler",
      "group",
      "by",
      "location",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which locations are shared by more than two wrestlers?",
    "question_toks": [
      "Which",
      "locations",
      "are",
      "shared",
      "by",
      "more",
      "than",
      "two",
      "wrestlers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT max(share_count) FROM TRANSACTIONS WHERE amount_of_transaction  <  10000",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "share_count",
      ")",
      "FROM",
      "TRANSACTIONS",
      "WHERE",
      "amount_of_transaction",
      "<",
      "10000"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "share_count",
      ")",
      "from",
      "transactions",
      "where",
      "amount_of_transaction",
      "<",
      "value"
    ],
    "question": "Show the maximum share count of transactions where the amount is smaller than 10000",
    "question_toks": [
      "Show",
      "the",
      "maximum",
      "share",
      "count",
      "of",
      "transactions",
      "where",
      "the",
      "amount",
      "is",
      "smaller",
      "than",
      "10000"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          10000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT count(DISTINCT label) FROM albums",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "label",
      ")",
      "FROM",
      "albums"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "label",
      ")",
      "from",
      "albums"
    ],
    "question": "What are the unique labels for the albums?",
    "question_toks": [
      "What",
      "are",
      "the",
      "unique",
      "labels",
      "for",
      "the",
      "albums",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts"
    ],
    "question": "Count the number of accounts.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "accounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"Mergenthaler\"",
    "query_toks": [
      "SELECT",
      "DName",
      "FROM",
      "DEPARTMENT",
      "WHERE",
      "Building",
      "=",
      "``",
      "Mergenthaler",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "dname",
      "from",
      "department",
      "where",
      "building",
      "=",
      "value"
    ],
    "question": "Find the department name that is in Building \"Mergenthaler\".",
    "question_toks": [
      "Find",
      "the",
      "department",
      "name",
      "that",
      "is",
      "in",
      "Building",
      "``",
      "Mergenthaler",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Mergenthaler\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3",
    "query_toks": [
      "SELECT",
      "Team",
      "FROM",
      "elimination",
      "GROUP",
      "BY",
      "Team",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "team",
      "from",
      "elimination",
      "group",
      "by",
      "team",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which teams had more than 3 eliminations?",
    "question_toks": [
      "Which",
      "teams",
      "had",
      "more",
      "than",
      "3",
      "eliminations",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "payment_date",
      "FROM",
      "payment",
      "ORDER",
      "BY",
      "payment_date",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "payment_date",
      "from",
      "payment",
      "order",
      "by",
      "payment_date",
      "asc",
      "limit",
      "value"
    ],
    "question": "What was the date of the earliest payment?",
    "question_toks": [
      "What",
      "was",
      "the",
      "date",
      "of",
      "the",
      "earliest",
      "payment",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                66,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              66,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "railway",
    "query": "SELECT DISTINCT Country FROM manager",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Country",
      "FROM",
      "manager"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "country",
      "from",
      "manager"
    ],
    "question": "Show the distinct countries of managers.",
    "question_toks": [
      "Show",
      "the",
      "distinct",
      "countries",
      "of",
      "managers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_and_lot",
    "query": "SELECT other_details FROM Residents WHERE other_details LIKE '%Miss%'",
    "query_toks": [
      "SELECT",
      "other_details",
      "FROM",
      "Residents",
      "WHERE",
      "other_details",
      "LIKE",
      "'",
      "%",
      "Miss",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "other_details",
      "from",
      "residents",
      "where",
      "other_details",
      "like",
      "value"
    ],
    "question": "What are the resident details containing the substring 'Miss'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "resident",
      "details",
      "containing",
      "the",
      "substring",
      "'Miss",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"%Miss%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "border",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "border",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what states are next to kentucky",
    "question_toks": [
      "what",
      "states",
      "are",
      "next",
      "to",
      "kentucky"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\"",
    "query_toks": [
      "SELECT",
      "location_code",
      "FROM",
      "Ref_locations",
      "WHERE",
      "location_name",
      "=",
      "``",
      "Canada",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "location_code",
      "from",
      "ref_locations",
      "where",
      "location_name",
      "=",
      "value"
    ],
    "question": "What is the location code for the country \"Canada\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "location",
      "code",
      "for",
      "the",
      "country",
      "``",
      "Canada",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Canada\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT count(DISTINCT role_code) FROM Project_Staff",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "role_code",
      ")",
      "FROM",
      "Project_Staff"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "role_code",
      ")",
      "from",
      "project_staff"
    ],
    "question": "How many kinds of roles are there for the staff?",
    "question_toks": [
      "How",
      "many",
      "kinds",
      "of",
      "roles",
      "are",
      "there",
      "for",
      "the",
      "staff",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                25,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "ohio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "which state has the ohio river",
    "question_toks": [
      "which",
      "state",
      "has",
      "the",
      "ohio",
      "river"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"ohio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "YEAR",
      "FROM",
      "competition",
      "WHERE",
      "Competition_type",
      "!",
      "=",
      "``",
      "Tournament",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "year",
      "from",
      "competition",
      "where",
      "competition_type",
      "!",
      "=",
      "value"
    ],
    "question": "What are the distinct years in which the competitions type is not \"Tournament\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "years",
      "in",
      "which",
      "the",
      "competitions",
      "type",
      "is",
      "not",
      "``",
      "Tournament",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Tournament\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT count(DISTINCT incident_type_code) FROM Behavior_Incident",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "incident_type_code",
      ")",
      "FROM",
      "Behavior_Incident"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "incident_type_code",
      ")",
      "from",
      "behavior_incident"
    ],
    "question": "How many distinct incident type codes are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "incident",
      "type",
      "codes",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                42,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(DISTINCT advisor) FROM Student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "advisor",
      ")",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "advisor",
      ")",
      "from",
      "student"
    ],
    "question": "How many different advisors are listed?",
    "question_toks": [
      "How",
      "many",
      "different",
      "advisors",
      "are",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "station_weather",
    "query": "SELECT origin FROM train GROUP BY origin HAVING count(*)  >  1",
    "query_toks": [
      "SELECT",
      "origin",
      "FROM",
      "train",
      "GROUP",
      "BY",
      "origin",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      "from",
      "train",
      "group",
      "by",
      "origin",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the origins from which more than 1 train starts.",
    "question_toks": [
      "Find",
      "the",
      "origins",
      "from",
      "which",
      "more",
      "than",
      "1",
      "train",
      "starts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT DISTINCT label FROM Albums",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "label",
      "FROM",
      "Albums"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "label",
      "from",
      "albums"
    ],
    "question": "What are the different album labels listed?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "album",
      "labels",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT DISTINCT CLASS FROM race",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "CLASS",
      "FROM",
      "race"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "class",
      "from",
      "race"
    ],
    "question": "Return the different classes of races.",
    "question_toks": [
      "Return",
      "the",
      "different",
      "classes",
      "of",
      "races",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "boulder",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "number of people in boulder",
    "question_toks": [
      "number",
      "of",
      "people",
      "in",
      "boulder"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"boulder\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT StuID FROM Student WHERE city_code  =  \"CHI\"",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "city_code",
      "=",
      "``",
      "CHI",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "city_code",
      "=",
      "value"
    ],
    "question": "What are the ids of all students who live in CHI?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "students",
      "who",
      "live",
      "in",
      "CHI",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"CHI\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clublocation FROM club WHERE clubname  =  \"Hopkins Student Enterprises\"",
    "query_toks": [
      "SELECT",
      "clublocation",
      "FROM",
      "club",
      "WHERE",
      "clubname",
      "=",
      "``",
      "Hopkins",
      "Student",
      "Enterprises",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clublocation",
      "from",
      "club",
      "where",
      "clubname",
      "=",
      "value"
    ],
    "question": "Tell me the location of the club \"Hopkins Student Enterprises\".",
    "question_toks": [
      "Tell",
      "me",
      "the",
      "location",
      "of",
      "the",
      "club",
      "``",
      "Hopkins",
      "Student",
      "Enterprises",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Hopkins Student Enterprises\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Age",
      "FROM",
      "people",
      "ORDER",
      "BY",
      "Height",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "age",
      "from",
      "people",
      "order",
      "by",
      "height",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the age of the tallest person?",
    "question_toks": [
      "What",
      "is",
      "the",
      "age",
      "of",
      "the",
      "tallest",
      "person",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "College",
      "FROM",
      "match_season",
      "GROUP",
      "BY",
      "College",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "college",
      "from",
      "match_season",
      "group",
      "by",
      "college",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the names of all colleges that have two or more players?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "colleges",
      "that",
      "have",
      "two",
      "or",
      "more",
      "players",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT DISTINCT location_code FROM Document_locations",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "location_code",
      "FROM",
      "Document_locations"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "location_code",
      "from",
      "document_locations"
    ],
    "question": "What are the different location codes for documents?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "location",
      "codes",
      "for",
      "documents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT count(*) FROM users WHERE user_login  =  1",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "users",
      "WHERE",
      "user_login",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "users",
      "where",
      "user_login",
      "=",
      "value"
    ],
    "question": "Count the number of users that are logged in.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "users",
      "that",
      "are",
      "logged",
      "in",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(DISTINCT StuID) FROM Sportsinfo",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "StuID",
      ")",
      "FROM",
      "Sportsinfo"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "stuid",
      ")",
      "from",
      "sportsinfo"
    ],
    "question": "How many different students are involved in sports?",
    "question_toks": [
      "How",
      "many",
      "different",
      "students",
      "are",
      "involved",
      "in",
      "sports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT count(*) FROM film",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "film"
    ],
    "question": "How many film are there?",
    "question_toks": [
      "How",
      "many",
      "film",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Cancelled\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Lessons",
      "WHERE",
      "lesson_status_code",
      "=",
      "``",
      "Cancelled",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "lessons",
      "where",
      "lesson_status_code",
      "=",
      "value"
    ],
    "question": "How many lessons have been cancelled?",
    "question_toks": [
      "How",
      "many",
      "lessons",
      "have",
      "been",
      "cancelled",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"Cancelled\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "boulder",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "how many citizens in boulder",
    "question_toks": [
      "how",
      "many",
      "citizens",
      "in",
      "boulder"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"boulder\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT journalid FROM paper WHERE YEAR  =  2011 GROUP BY journalid;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "journalid",
      "FROM",
      "paper",
      "WHERE",
      "YEAR",
      "=",
      "2011",
      "GROUP",
      "BY",
      "journalid",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "journalid",
      "from",
      "paper",
      "where",
      "year",
      "=",
      "value",
      "group",
      "by",
      "journalid"
    ],
    "question": "List the journals published in March , 2011",
    "question_toks": [
      "List",
      "the",
      "journals",
      "published",
      "in",
      "March",
      ",",
      "2011"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2011.0,
          null
        ]
      ],
      "groupBy": [
        [
          0,
          17,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "EXCEPT",
      "SELECT",
      "StuID",
      "FROM",
      "Plays_games"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "except",
      "select",
      "stuid",
      "from",
      "plays_games"
    ],
    "question": "What are the ids of all students who are not video game players?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "students",
      "who",
      "are",
      "not",
      "video",
      "game",
      "players",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  12,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "border",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "border",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what states surround kentucky",
    "question_toks": [
      "what",
      "states",
      "surround",
      "kentucky"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(DISTINCT gtype) FROM Video_games",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "gtype",
      ")",
      "FROM",
      "Video_games"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "gtype",
      ")",
      "from",
      "video_games"
    ],
    "question": "What is the count of different game types?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "different",
      "game",
      "types",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "PersonFriend",
      "GROUP",
      "BY",
      "name",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "personfriend",
      "group",
      "by",
      "name",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value"
    ],
    "question": "Find the person who has exactly one friend.",
    "question_toks": [
      "Find",
      "the",
      "person",
      "who",
      "has",
      "exactly",
      "one",
      "friend",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          2,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT DISTINCT rank FROM Faculty",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "rank",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "rank",
      "from",
      "faculty"
    ],
    "question": "What ranks do we have for faculty?",
    "question_toks": [
      "What",
      "ranks",
      "do",
      "we",
      "have",
      "for",
      "faculty",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "roller_coaster",
    "query": "SELECT avg(Speed) FROM roller_coaster",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Speed",
      ")",
      "FROM",
      "roller_coaster"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "speed",
      ")",
      "from",
      "roller_coaster"
    ],
    "question": "What is the average speed of roller coasters?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "speed",
      "of",
      "roller",
      "coasters",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT count(*) FROM track",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "track"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "track"
    ],
    "question": "Count the number of tracks.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "tracks",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "illinois",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "name all the rivers in illinois",
    "question_toks": [
      "name",
      "all",
      "the",
      "rivers",
      "in",
      "illinois"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"illinois\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\"",
    "query_toks": [
      "SELECT",
      "customer_details",
      "FROM",
      "customers",
      "WHERE",
      "customer_details",
      "LIKE",
      "``",
      "%",
      "Diana",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_details",
      "from",
      "customers",
      "where",
      "customer_details",
      "like",
      "value"
    ],
    "question": "Find the names of customers whose name contains \"Diana\".",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "customers",
      "whose",
      "name",
      "contains",
      "``",
      "Diana",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"%Diana%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\"",
    "query_toks": [
      "SELECT",
      "claim_status_description",
      "FROM",
      "claims_processing_stages",
      "WHERE",
      "claim_status_name",
      "=",
      "``",
      "Open",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "claim_status_description",
      "from",
      "claims_processing_stages",
      "where",
      "claim_status_name",
      "=",
      "value"
    ],
    "question": "Find the description of the claim status \"Open\".",
    "question_toks": [
      "Find",
      "the",
      "description",
      "of",
      "the",
      "claim",
      "status",
      "``",
      "Open",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Open\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entertainment_awards",
    "query": "SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "Festival_Name",
      "FROM",
      "festival_detail",
      "ORDER",
      "BY",
      "YEAR",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "festival_name",
      "from",
      "festival_detail",
      "order",
      "by",
      "year",
      "desc",
      "limit",
      "value"
    ],
    "question": "Show the names of the three most recent festivals.",
    "question_toks": [
      "Show",
      "the",
      "names",
      "of",
      "the",
      "three",
      "most",
      "recent",
      "festivals",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT school_code FROM department WHERE dept_name  =  \"Accounting\"",
    "query_toks": [
      "SELECT",
      "school_code",
      "FROM",
      "department",
      "WHERE",
      "dept_name",
      "=",
      "``",
      "Accounting",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "school_code",
      "from",
      "department",
      "where",
      "dept_name",
      "=",
      "value"
    ],
    "question": "What is the school code of the accounting department?",
    "question_toks": [
      "What",
      "is",
      "the",
      "school",
      "code",
      "of",
      "the",
      "accounting",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Accounting\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT COUNT (DISTINCT team) FROM elimination",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "team",
      ")",
      "FROM",
      "elimination"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "team",
      ")",
      "from",
      "elimination"
    ],
    "question": "How many different teams have had eliminated wrestlers?",
    "question_toks": [
      "How",
      "many",
      "different",
      "teams",
      "have",
      "had",
      "eliminated",
      "wrestlers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT count(*) FROM ship",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ship"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ship"
    ],
    "question": "What is the number of ships?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "ships",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "ohio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "what states have rivers named ohio",
    "question_toks": [
      "what",
      "states",
      "have",
      "rivers",
      "named",
      "ohio"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"ohio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT headquarter FROM manufacturers WHERE founder  =  'James'",
    "query_toks": [
      "SELECT",
      "headquarter",
      "FROM",
      "manufacturers",
      "WHERE",
      "founder",
      "=",
      "'James",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "headquarter",
      "from",
      "manufacturers",
      "where",
      "founder",
      "=",
      "value"
    ],
    "question": "What is the headquarter of the company whose founder is James?",
    "question_toks": [
      "What",
      "is",
      "the",
      "headquarter",
      "of",
      "the",
      "company",
      "whose",
      "founder",
      "is",
      "James",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"James\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "document_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "<",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "documents",
      "group",
      "by",
      "document_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      "<",
      "value"
    ],
    "question": "Show the document type code with fewer than 3 documents.",
    "question_toks": [
      "Show",
      "the",
      "document",
      "type",
      "code",
      "with",
      "fewer",
      "than",
      "3",
      "documents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [
        [
          false,
          4,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "coffee_shop",
    "query": "SELECT count(*) FROM member WHERE address != 'Hartford'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "member",
      "WHERE",
      "address",
      "!",
      "=",
      "'Hartford",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "member",
      "where",
      "address",
      "!",
      "=",
      "value"
    ],
    "question": "How many members are not living in Hartford?",
    "question_toks": [
      "How",
      "many",
      "members",
      "are",
      "not",
      "living",
      "in",
      "Hartford",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Hartford\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "illinois",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "what are the rivers in the state of illinois",
    "question_toks": [
      "what",
      "are",
      "the",
      "rivers",
      "in",
      "the",
      "state",
      "of",
      "illinois"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"illinois\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "california",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how many citizens in california",
    "question_toks": [
      "how",
      "many",
      "citizens",
      "in",
      "california"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"california\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "district_name",
      "FROM",
      "district",
      "ORDER",
      "BY",
      "city_area",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "district_name",
      "from",
      "district",
      "order",
      "by",
      "city_area",
      "asc",
      "limit",
      "value"
    ],
    "question": "Which district has the least area?",
    "question_toks": [
      "Which",
      "district",
      "has",
      "the",
      "least",
      "area",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT gname FROM Video_games WHERE gtype  =  \"Collectible card game\"",
    "query_toks": [
      "SELECT",
      "gname",
      "FROM",
      "Video_games",
      "WHERE",
      "gtype",
      "=",
      "``",
      "Collectible",
      "card",
      "game",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "gname",
      "from",
      "video_games",
      "where",
      "gtype",
      "=",
      "value"
    ],
    "question": "What are the names of all video games that are collectible cards?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "video",
      "games",
      "that",
      "are",
      "collectible",
      "cards",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Collectible card game\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT title FROM movie WHERE release_year  =  2015;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "movie",
      "WHERE",
      "release_year",
      "=",
      "2015",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "movie",
      "where",
      "release_year",
      "=",
      "value"
    ],
    "question": "Find all movies produced in 2015",
    "question_toks": [
      "Find",
      "all",
      "movies",
      "produced",
      "in",
      "2015"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2015.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "california",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how many people reside in california",
    "question_toks": [
      "how",
      "many",
      "people",
      "reside",
      "in",
      "california"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"california\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "ohio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "what states does the ohio river run through",
    "question_toks": [
      "what",
      "states",
      "does",
      "the",
      "ohio",
      "river",
      "run",
      "through"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"ohio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT count(*) FROM HOTELS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "HOTELS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "hotels"
    ],
    "question": "How many available hotels are there in total?",
    "question_toks": [
      "How",
      "many",
      "available",
      "hotels",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT count(*) FROM cinema",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "cinema"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "cinema"
    ],
    "question": "How many cinema do we have?",
    "question_toks": [
      "How",
      "many",
      "cinema",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\"",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "LOCATION",
      "=",
      "``",
      "Chico",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "location",
      "=",
      "value"
    ],
    "question": "What campuses are located in Chico?",
    "question_toks": [
      "What",
      "campuses",
      "are",
      "located",
      "in",
      "Chico",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Chico\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_1",
    "query": "SELECT avg(weight) FROM Player",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "weight",
      ")",
      "FROM",
      "Player"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "weight",
      ")",
      "from",
      "player"
    ],
    "question": "What is the average weight of all players?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "weight",
      "of",
      "all",
      "players",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "body_builder",
    "query": "SELECT count(*) FROM body_builder",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "body_builder"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "body_builder"
    ],
    "question": "How many body builders are there?",
    "question_toks": [
      "How",
      "many",
      "body",
      "builders",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\"",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "customer_name",
      "LIKE",
      "``",
      "%",
      "Alex",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers",
      "where",
      "customer_name",
      "like",
      "value"
    ],
    "question": "Which customer's name contains \"Alex\"? Find the full name.",
    "question_toks": [
      "Which",
      "customer",
      "'s",
      "name",
      "contains",
      "``",
      "Alex",
      "''",
      "?",
      "Find",
      "the",
      "full",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"%Alex%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "debate",
    "query": "SELECT Date FROM debate WHERE Num_of_Audience  >  150",
    "query_toks": [
      "SELECT",
      "Date",
      "FROM",
      "debate",
      "WHERE",
      "Num_of_Audience",
      ">",
      "150"
    ],
    "query_toks_no_value": [
      "select",
      "date",
      "from",
      "debate",
      "where",
      "num_of_audience",
      ">",
      "value"
    ],
    "question": "List the dates of debates with number of audience bigger than 150",
    "question_toks": [
      "List",
      "the",
      "dates",
      "of",
      "debates",
      "with",
      "number",
      "of",
      "audience",
      "bigger",
      "than",
      "150"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          150.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "artist",
      "WHERE",
      "country",
      "=",
      "``",
      "Bangladesh",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artist",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many artists are from Bangladesh?",
    "question_toks": [
      "How",
      "many",
      "artists",
      "are",
      "from",
      "Bangladesh",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Bangladesh\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT count(*) FROM county_public_safety",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "county_public_safety"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "county_public_safety"
    ],
    "question": "Count the number of countries.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "countries",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT * FROM swimmer",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "swimmer"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "swimmer"
    ],
    "question": "Find all details for each swimmer.",
    "question_toks": [
      "Find",
      "all",
      "details",
      "for",
      "each",
      "swimmer",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT avg(pages_per_minute_color) FROM product",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "pages_per_minute_color",
      ")",
      "FROM",
      "product"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "pages_per_minute_color",
      ")",
      "from",
      "product"
    ],
    "question": "What is the average pages per minute color?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "pages",
      "per",
      "minute",
      "color",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors",
    "query_toks": [
      "SELECT",
      "address_line_1",
      "FROM",
      "Course_Authors_and_Tutors"
    ],
    "query_toks_no_value": [
      "select",
      "address_line_1",
      "from",
      "course_authors_and_tutors"
    ],
    "question": "What is the address of each course author or tutor?",
    "question_toks": [
      "What",
      "is",
      "the",
      "address",
      "of",
      "each",
      "course",
      "author",
      "or",
      "tutor",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT paperid ) FROM paper;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "paperid",
      ")",
      "FROM",
      "paper",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "paperid",
      ")",
      "from",
      "paper"
    ],
    "question": "How many papers are there ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT name FROM airports WHERE city  =  'Goroka'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "airports",
      "WHERE",
      "city",
      "=",
      "'Goroka",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "airports",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "Find the name of the airport in the city of Goroka.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "airport",
      "in",
      "the",
      "city",
      "of",
      "Goroka",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Goroka\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT count(*) FROM claims_processing_stages",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "claims_processing_stages"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "claims_processing_stages"
    ],
    "question": "Find the number of distinct stages in claim processing.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "stages",
      "in",
      "claim",
      "processing",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "College",
      "FROM",
      "match_season",
      "GROUP",
      "BY",
      "College",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "college",
      "from",
      "match_season",
      "group",
      "by",
      "college",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show the name of colleges that have at least two players.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "of",
      "colleges",
      "that",
      "have",
      "at",
      "least",
      "two",
      "players",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT count(*) FROM follows GROUP BY f1",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "follows",
      "GROUP",
      "BY",
      "f1"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "follows",
      "group",
      "by",
      "value"
    ],
    "question": "Find the number of followers for each user.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "followers",
      "for",
      "each",
      "user",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "in which state is springfield",
    "question_toks": [
      "in",
      "which",
      "state",
      "is",
      "springfield"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT song_name FROM song WHERE languages  =  \"english\"",
    "query_toks": [
      "SELECT",
      "song_name",
      "FROM",
      "song",
      "WHERE",
      "languages",
      "=",
      "``",
      "english",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      "from",
      "song",
      "where",
      "languages",
      "=",
      "value"
    ],
    "question": "Find the names of all English songs.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "English",
      "songs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"english\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "workshop_paper",
    "query": "SELECT count(*) FROM submission",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "submission"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "submission"
    ],
    "question": "Count the number of submissions.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "submissions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\"",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "shipments",
      "WHERE",
      "shipment_date",
      ">",
      "``",
      "2000-01-01",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "shipments",
      "where",
      "shipment_date",
      ">",
      "value"
    ],
    "question": "Find the ids of orders which are shipped after 2000-01-01.",
    "question_toks": [
      "Find",
      "the",
      "ids",
      "of",
      "orders",
      "which",
      "are",
      "shipped",
      "after",
      "2000-01-01",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"2000-01-01\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\"",
    "query_toks": [
      "SELECT",
      "rID",
      "FROM",
      "Reviewer",
      "WHERE",
      "name",
      "=",
      "``",
      "Daniel",
      "Lewis",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "rid",
      "from",
      "reviewer",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What is the reviewer id of Daniel Lewis?",
    "question_toks": [
      "What",
      "is",
      "the",
      "reviewer",
      "id",
      "of",
      "Daniel",
      "Lewis",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Daniel Lewis\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT capital FROM state WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "capital",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "capital",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "can you tell me the capital of texas",
    "question_toks": [
      "can",
      "you",
      "tell",
      "me",
      "the",
      "capital",
      "of",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Artist_ID",
      ")",
      "FROM",
      "volume"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "artist_id",
      ")",
      "from",
      "volume"
    ],
    "question": "How many distinct artists do the volumes associate to?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "artists",
      "do",
      "the",
      "volumes",
      "associate",
      "to",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT COUNT (DISTINCT id) FROM teaches",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "id",
      ")",
      "FROM",
      "teaches"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "id",
      ")",
      "from",
      "teaches"
    ],
    "question": "Count the number of distinct instructors who have taught a course.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "distinct",
      "instructors",
      "who",
      "have",
      "taught",
      "a",
      "course",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                22,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT count(*) FROM products",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products"
    ],
    "question": "How many products are there?",
    "question_toks": [
      "How",
      "many",
      "products",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airlines WHERE country  =  'Russia'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines",
      "WHERE",
      "country",
      "=",
      "'Russia",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many airlines does Russia has?",
    "question_toks": [
      "How",
      "many",
      "airlines",
      "does",
      "Russia",
      "has",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Russia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(DISTINCT cName) FROM tryout",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "cName",
      ")",
      "FROM",
      "tryout"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "cname",
      ")",
      "from",
      "tryout"
    ],
    "question": "How many different colleges were represented at tryouts?",
    "question_toks": [
      "How",
      "many",
      "different",
      "colleges",
      "were",
      "represented",
      "at",
      "tryouts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT sum(Amount_Settled) FROM Settlements",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Amount_Settled",
      ")",
      "FROM",
      "Settlements"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount_settled",
      ")",
      "from",
      "settlements"
    ],
    "question": "Compute the total amount of settlement across all the settlements.",
    "question_toks": [
      "Compute",
      "the",
      "total",
      "amount",
      "of",
      "settlement",
      "across",
      "all",
      "the",
      "settlements",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT player FROM match_season ORDER BY College ASC",
    "query_toks": [
      "SELECT",
      "player",
      "FROM",
      "match_season",
      "ORDER",
      "BY",
      "College",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "player",
      "from",
      "match_season",
      "order",
      "by",
      "college",
      "asc"
    ],
    "question": "Return all players sorted by college in ascending alphabetical order.",
    "question_toks": [
      "Return",
      "all",
      "players",
      "sorted",
      "by",
      "college",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "claim_outcome_code",
      ")",
      "FROM",
      "claims_processing"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "claim_outcome_code",
      ")",
      "from",
      "claims_processing"
    ],
    "question": "How many distinct claim outcome codes are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "claim",
      "outcome",
      "codes",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                28,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT fname FROM authors ORDER BY fname",
    "query_toks": [
      "SELECT",
      "fname",
      "FROM",
      "authors",
      "ORDER",
      "BY",
      "fname"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "authors",
      "order",
      "by",
      "fname"
    ],
    "question": "Find the first names of all the authors ordered in alphabetical order.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "names",
      "of",
      "all",
      "the",
      "authors",
      "ordered",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT CName FROM COURSE ORDER BY Credits",
    "query_toks": [
      "SELECT",
      "CName",
      "FROM",
      "COURSE",
      "ORDER",
      "BY",
      "Credits"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "course",
      "order",
      "by",
      "credits"
    ],
    "question": "What are the course names, ordered by credits?",
    "question_toks": [
      "What",
      "are",
      "the",
      "course",
      "names",
      ",",
      "ordered",
      "by",
      "credits",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( state_name ) FROM state;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "state_name",
      ")",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "state_name",
      ")",
      "from",
      "state"
    ],
    "question": "how many states are in the united states",
    "question_toks": [
      "how",
      "many",
      "states",
      "are",
      "in",
      "the",
      "united",
      "states"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( river_name ) FROM river WHERE river_name  =  \"colorado\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "river_name",
      ")",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "colorado",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "river_name",
      ")",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "how many colorado rivers are there",
    "question_toks": [
      "how",
      "many",
      "colorado",
      "rivers",
      "are",
      "there"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"colorado\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "apt_number",
      "FROM",
      "Apartments",
      "ORDER",
      "BY",
      "bedroom_count",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "apt_number",
      "from",
      "apartments",
      "order",
      "by",
      "bedroom_count",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the apartment number with the largest number of bedrooms.",
    "question_toks": [
      "Return",
      "the",
      "apartment",
      "number",
      "with",
      "the",
      "largest",
      "number",
      "of",
      "bedrooms",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\"",
    "query_toks": [
      "SELECT",
      "date_of_transaction",
      "FROM",
      "TRANSACTIONS",
      "WHERE",
      "transaction_type_code",
      "=",
      "``",
      "SALE",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_of_transaction",
      "from",
      "transactions",
      "where",
      "transaction_type_code",
      "=",
      "value"
    ],
    "question": "Show all dates of transactions whose type code is \"SALE\".",
    "question_toks": [
      "Show",
      "all",
      "dates",
      "of",
      "transactions",
      "whose",
      "type",
      "code",
      "is",
      "``",
      "SALE",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"SALE\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT title FROM film WHERE rating  =  'R'",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "film",
      "WHERE",
      "rating",
      "=",
      "'R",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "film",
      "where",
      "rating",
      "=",
      "value"
    ],
    "question": "Return the titles of any movies with an R rating.",
    "question_toks": [
      "Return",
      "the",
      "titles",
      "of",
      "any",
      "movies",
      "with",
      "an",
      "R",
      "rating",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              42,
              false
            ],
            null
          ],
          "\"R\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'",
    "query_toks": [
      "SELECT",
      "founder",
      "FROM",
      "manufacturers",
      "WHERE",
      "name",
      "LIKE",
      "'S",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "founder",
      "from",
      "manufacturers",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Who is the founders of companies whose first letter is S?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "founders",
      "of",
      "companies",
      "whose",
      "first",
      "letter",
      "is",
      "S",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"S%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_and_lot",
    "query": "SELECT max(date_moved_in) FROM Residents",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "date_moved_in",
      ")",
      "FROM",
      "Residents"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "date_moved_in",
      ")",
      "from",
      "residents"
    ],
    "question": "When is the last day any resident moved in?",
    "question_toks": [
      "When",
      "is",
      "the",
      "last",
      "day",
      "any",
      "resident",
      "moved",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "border",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "border",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "give me the states that border kentucky",
    "question_toks": [
      "give",
      "me",
      "the",
      "states",
      "that",
      "border",
      "kentucky"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  \"Fail\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student_Tests_Taken",
      "WHERE",
      "test_result",
      "=",
      "``",
      "Fail",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student_tests_taken",
      "where",
      "test_result",
      "=",
      "value"
    ],
    "question": "How many tests have result \"Fail\"?",
    "question_toks": [
      "How",
      "many",
      "tests",
      "have",
      "result",
      "``",
      "Fail",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              32,
              false
            ],
            null
          ],
          "\"Fail\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT sum(Amount_Settled) FROM Settlements",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Amount_Settled",
      ")",
      "FROM",
      "Settlements"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount_settled",
      ")",
      "from",
      "settlements"
    ],
    "question": "What is the total amount of settlement made for all the settlements?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "amount",
      "of",
      "settlement",
      "made",
      "for",
      "all",
      "the",
      "settlements",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT Name FROM ship ORDER BY Tonnage ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "ship",
      "ORDER",
      "BY",
      "Tonnage",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "ship",
      "order",
      "by",
      "tonnage",
      "asc"
    ],
    "question": "what are the names of the ships ordered by ascending tonnage?",
    "question_toks": [
      "what",
      "are",
      "the",
      "names",
      "of",
      "the",
      "ships",
      "ordered",
      "by",
      "ascending",
      "tonnage",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"",
    "query_toks": [
      "SELECT",
      "unit_of_measure",
      "FROM",
      "ref_product_categories",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Herbs",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "unit_of_measure",
      "from",
      "ref_product_categories",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "Return the unit of measure for 'Herb' products.",
    "question_toks": [
      "Return",
      "the",
      "unit",
      "of",
      "measure",
      "for",
      "'Herb",
      "'",
      "products",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Herbs\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT flno FROM Flight WHERE distance  >  2000",
    "query_toks": [
      "SELECT",
      "flno",
      "FROM",
      "Flight",
      "WHERE",
      "distance",
      ">",
      "2000"
    ],
    "query_toks_no_value": [
      "select",
      "flno",
      "from",
      "flight",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the numbers of all flights that can cover a distance of more than 2000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "numbers",
      "of",
      "all",
      "flights",
      "that",
      "can",
      "cover",
      "a",
      "distance",
      "of",
      "more",
      "than",
      "2000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "perpetrator",
    "query": "SELECT count(*) FROM perpetrator",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "perpetrator"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "perpetrator"
    ],
    "question": "How many perpetrators are there?",
    "question_toks": [
      "How",
      "many",
      "perpetrators",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_company",
    "query": "SELECT country FROM airport GROUP BY country HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "airport",
      "GROUP",
      "BY",
      "country",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airport",
      "group",
      "by",
      "country",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "which countries have more than 2 airports?",
    "question_toks": [
      "which",
      "countries",
      "have",
      "more",
      "than",
      "2",
      "airports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT Name FROM ship WHERE Nationality != \"United States\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "ship",
      "WHERE",
      "Nationality",
      "!",
      "=",
      "``",
      "United",
      "States",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "ship",
      "where",
      "nationality",
      "!",
      "=",
      "value"
    ],
    "question": "List the name of ships whose nationality is not \"United States\".",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "ships",
      "whose",
      "nationality",
      "is",
      "not",
      "``",
      "United",
      "States",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"United States\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "blockcode",
      "FROM",
      "room",
      "WHERE",
      "unavailable",
      "=",
      "0"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "blockcode",
      "from",
      "room",
      "where",
      "unavailable",
      "=",
      "value"
    ],
    "question": "Tell me the distinct block codes where some rooms are available.",
    "question_toks": [
      "Tell",
      "me",
      "the",
      "distinct",
      "block",
      "codes",
      "where",
      "some",
      "rooms",
      "are",
      "available",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              52,
              false
            ],
            null
          ],
          0.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM Person ORDER BY age DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Person",
      "ORDER",
      "BY",
      "age",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "person",
      "order",
      "by",
      "age",
      "desc"
    ],
    "question": "What are the names of everybody sorted by age in descending order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "everybody",
      "sorted",
      "by",
      "age",
      "in",
      "descending",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT crs_code) FROM CLASS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "crs_code",
      ")",
      "FROM",
      "CLASS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "crs_code",
      ")",
      "from",
      "class"
    ],
    "question": "What are the number of different course codes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "number",
      "of",
      "different",
      "course",
      "codes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_gen_characteristics",
    "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\"",
    "query_toks": [
      "SELECT",
      "product_category_description",
      "FROM",
      "ref_product_categories",
      "WHERE",
      "product_category_code",
      "=",
      "``",
      "Spices",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_category_description",
      "from",
      "ref_product_categories",
      "where",
      "product_category_code",
      "=",
      "value"
    ],
    "question": "What is the description of the product category with the code 'Spices'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "product",
      "category",
      "with",
      "the",
      "code",
      "'Spices",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Spices\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT count(*) FROM ADDRESSES WHERE zip_postcode  =  \"197\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ADDRESSES",
      "WHERE",
      "zip_postcode",
      "=",
      "``",
      "197",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "where",
      "zip_postcode",
      "=",
      "value"
    ],
    "question": "How many addresses have zip code 197?",
    "question_toks": [
      "How",
      "many",
      "addresses",
      "have",
      "zip",
      "code",
      "197",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"197\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT count(*) FROM artist",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artist"
    ],
    "question": "Count the number of artists.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "artists",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT density FROM state WHERE state_name  =  \"wyoming\";",
    "query_toks": [
      "SELECT",
      "density",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "wyoming",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "density",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the density of the wyoming",
    "question_toks": [
      "what",
      "is",
      "the",
      "density",
      "of",
      "the",
      "wyoming"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"wyoming\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(DISTINCT language_id) FROM film",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "language_id",
      ")",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "language_id",
      ")",
      "from",
      "film"
    ],
    "question": "Count the number of different languages in these films.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "languages",
      "in",
      "these",
      "films",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                36,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7;",
    "query_toks": [
      "SELECT",
      "mailing_date",
      "FROM",
      "Documents_Mailed",
      "WHERE",
      "document_id",
      "=",
      "7",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "mailing_date",
      "from",
      "documents_mailed",
      "where",
      "document_id",
      "=",
      "value"
    ],
    "question": "What is the mail date of the document with id 7?",
    "question_toks": [
      "What",
      "is",
      "the",
      "mail",
      "date",
      "of",
      "the",
      "document",
      "with",
      "id",
      "7",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              33,
              false
            ],
            null
          ],
          7.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in",
    "query_toks": [
      "SELECT",
      "FacID",
      "FROM",
      "Faculty",
      "EXCEPT",
      "SELECT",
      "FacID",
      "FROM",
      "Faculty_participates_in"
    ],
    "query_toks_no_value": [
      "select",
      "facid",
      "from",
      "faculty",
      "except",
      "select",
      "facid",
      "from",
      "faculty_participates_in"
    ],
    "question": "Show the ids of the faculty who don't participate in any activity.",
    "question_toks": [
      "Show",
      "the",
      "ids",
      "of",
      "the",
      "faculty",
      "who",
      "do",
      "n't",
      "participate",
      "in",
      "any",
      "activity",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  5,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airlines WHERE country  =  'Russia'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airlines",
      "WHERE",
      "country",
      "=",
      "'Russia",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airlines",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "What is the number of airlines based in Russia?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "airlines",
      "based",
      "in",
      "Russia",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"Russia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT CName FROM COURSE WHERE Credits  =  1",
    "query_toks": [
      "SELECT",
      "CName",
      "FROM",
      "COURSE",
      "WHERE",
      "Credits",
      "=",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "course",
      "where",
      "credits",
      "=",
      "value"
    ],
    "question": "List all names of courses with 1 credit?",
    "question_toks": [
      "List",
      "all",
      "names",
      "of",
      "courses",
      "with",
      "1",
      "credit",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\"",
    "query_toks": [
      "SELECT",
      "date_test_taken",
      "FROM",
      "Student_Tests_Taken",
      "WHERE",
      "test_result",
      "=",
      "``",
      "Pass",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_test_taken",
      "from",
      "student_tests_taken",
      "where",
      "test_result",
      "=",
      "value"
    ],
    "question": "Find the dates of the tests taken with result \"Pass\".",
    "question_toks": [
      "Find",
      "the",
      "dates",
      "of",
      "the",
      "tests",
      "taken",
      "with",
      "result",
      "``",
      "Pass",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              32,
              false
            ],
            null
          ],
          "\"Pass\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(DISTINCT gender) FROM dorm",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "gender",
      ")",
      "FROM",
      "dorm"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "gender",
      ")",
      "from",
      "dorm"
    ],
    "question": "Find the number of distinct gender for dorms.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "gender",
      "for",
      "dorms",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(*) FROM student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student"
    ],
    "question": "How many students exist?",
    "question_toks": [
      "How",
      "many",
      "students",
      "exist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT Name FROM Products",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "Products"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "products"
    ],
    "question": "Select the names of all the products in the store.",
    "question_toks": [
      "Select",
      "the",
      "names",
      "of",
      "all",
      "the",
      "products",
      "in",
      "the",
      "store",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "EXCEPT",
      "SELECT",
      "StuID",
      "FROM",
      "Has_allergy"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "except",
      "select",
      "stuid",
      "from",
      "has_allergy"
    ],
    "question": "Which students are unaffected by allergies?",
    "question_toks": [
      "Which",
      "students",
      "are",
      "unaffected",
      "by",
      "allergies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "EMPLOYEE"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "employee"
    ],
    "question": "Find the number of different cities that employees live in.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "different",
      "cities",
      "that",
      "employees",
      "live",
      "in",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                27,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT SUM ( area ) FROM state;",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "area",
      ")",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "area",
      ")",
      "from",
      "state"
    ],
    "question": "what is the area of all the states combined",
    "question_toks": [
      "what",
      "is",
      "the",
      "area",
      "of",
      "all",
      "the",
      "states",
      "combined"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(*) FROM Video_games",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Video_games"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "video_games"
    ],
    "question": "How many video games do you have?",
    "question_toks": [
      "How",
      "many",
      "video",
      "games",
      "do",
      "you",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT count(*) FROM Apartment_Bookings",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Apartment_Bookings"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "apartment_bookings"
    ],
    "question": "Count the total number of apartment bookings.",
    "question_toks": [
      "Count",
      "the",
      "total",
      "number",
      "of",
      "apartment",
      "bookings",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT lastname FROM teachers WHERE classroom  =  109",
    "query_toks": [
      "SELECT",
      "lastname",
      "FROM",
      "teachers",
      "WHERE",
      "classroom",
      "=",
      "109"
    ],
    "query_toks_no_value": [
      "select",
      "lastname",
      "from",
      "teachers",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "Which teachers teach in classroom 109? Give me their last names.",
    "question_toks": [
      "Which",
      "teachers",
      "teach",
      "in",
      "classroom",
      "109",
      "?",
      "Give",
      "me",
      "their",
      "last",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          109.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq",
    "query_toks": [
      "SELECT",
      "course_id",
      "FROM",
      "course",
      "EXCEPT",
      "SELECT",
      "course_id",
      "FROM",
      "prereq"
    ],
    "query_toks_no_value": [
      "select",
      "course_id",
      "from",
      "course",
      "except",
      "select",
      "course_id",
      "from",
      "prereq"
    ],
    "question": "Find the id of the courses that do not have any prerequisite?",
    "question_toks": [
      "Find",
      "the",
      "id",
      "of",
      "the",
      "courses",
      "that",
      "do",
      "not",
      "have",
      "any",
      "prerequisite",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              10
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  45,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Song",
      "FROM",
      "volume",
      "ORDER",
      "BY",
      "Weeks_on_Top",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "song",
      "from",
      "volume",
      "order",
      "by",
      "weeks_on_top",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the song in the volume with the maximum weeks on top?",
    "question_toks": [
      "What",
      "is",
      "the",
      "song",
      "in",
      "the",
      "volume",
      "with",
      "the",
      "maximum",
      "weeks",
      "on",
      "top",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE state = \"CA\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "state",
      "=",
      "``",
      "CA",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "How many customers are from California?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "are",
      "from",
      "California",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"CA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "university",
      "WHERE",
      "LOCATION",
      "LIKE",
      "``",
      "%",
      "NY",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "university",
      "where",
      "location",
      "like",
      "value"
    ],
    "question": "How many universities have a location that contains NY?",
    "question_toks": [
      "How",
      "many",
      "universities",
      "have",
      "a",
      "location",
      "that",
      "contains",
      "NY",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"%NY%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT city FROM addresses WHERE zip_postcode  =  255",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "addresses",
      "WHERE",
      "zip_postcode",
      "=",
      "255"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "addresses",
      "where",
      "zip_postcode",
      "=",
      "value"
    ],
    "question": "Find the city with post code 255.",
    "question_toks": [
      "Find",
      "the",
      "city",
      "with",
      "post",
      "code",
      "255",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          255.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "ohio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "what states does the ohio river go through",
    "question_toks": [
      "what",
      "states",
      "does",
      "the",
      "ohio",
      "river",
      "go",
      "through"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"ohio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT title FROM papers WHERE title LIKE \"%ML%\"",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "papers",
      "WHERE",
      "title",
      "LIKE",
      "``",
      "%",
      "ML",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "papers",
      "where",
      "title",
      "like",
      "value"
    ],
    "question": "Find the titles of the papers that contain the word \"ML\".",
    "question_toks": [
      "Find",
      "the",
      "titles",
      "of",
      "the",
      "papers",
      "that",
      "contain",
      "the",
      "word",
      "``",
      "ML",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"%ML%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM Flight",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Flight"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "flight"
    ],
    "question": "What is the number of flights?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "flights",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Artist_ID",
      ")",
      "FROM",
      "volume"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "artist_id",
      ")",
      "from",
      "volume"
    ],
    "question": "Count the number of artists who have had volumes.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "artists",
      "who",
      "have",
      "had",
      "volumes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( river_name ) FROM river WHERE river_name  =  \"colorado\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "river_name",
      ")",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "colorado",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "river_name",
      ")",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "how many rivers are called colorado",
    "question_toks": [
      "how",
      "many",
      "rivers",
      "are",
      "called",
      "colorado"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"colorado\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "amount",
      "FROM",
      "payment",
      "ORDER",
      "BY",
      "amount",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "amount",
      "from",
      "payment",
      "order",
      "by",
      "amount",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the largest payment amount?",
    "question_toks": [
      "What",
      "is",
      "the",
      "largest",
      "payment",
      "amount",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                65,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              65,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\"",
    "query_toks": [
      "SELECT",
      "date_test_taken",
      "FROM",
      "Student_Tests_Taken",
      "WHERE",
      "test_result",
      "=",
      "``",
      "Pass",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_test_taken",
      "from",
      "student_tests_taken",
      "where",
      "test_result",
      "=",
      "value"
    ],
    "question": "Which tests have \"Pass\" results? Return the dates when the tests were taken.",
    "question_toks": [
      "Which",
      "tests",
      "have",
      "``",
      "Pass",
      "''",
      "results",
      "?",
      "Return",
      "the",
      "dates",
      "when",
      "the",
      "tests",
      "were",
      "taken",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              32,
              false
            ],
            null
          ],
          "\"Pass\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\"",
    "query_toks": [
      "SELECT",
      "price_range",
      "FROM",
      "HOTELS",
      "WHERE",
      "star_rating_code",
      "=",
      "``",
      "5",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "price_range",
      "from",
      "hotels",
      "where",
      "star_rating_code",
      "=",
      "value"
    ],
    "question": "What are the price ranges of five star hotels?",
    "question_toks": [
      "What",
      "are",
      "the",
      "price",
      "ranges",
      "of",
      "five",
      "star",
      "hotels",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"5\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"Studio\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "room_count",
      ")",
      "FROM",
      "Apartments",
      "WHERE",
      "apt_type_code",
      "=",
      "``",
      "Studio",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "room_count",
      ")",
      "from",
      "apartments",
      "where",
      "apt_type_code",
      "=",
      "value"
    ],
    "question": "What is the average number of rooms of apartments with type code \"Studio\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "rooms",
      "of",
      "apartments",
      "with",
      "type",
      "code",
      "``",
      "Studio",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Studio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts"
    ],
    "question": "Count the number of accounts.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "accounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "TOURIST_ATTRACTIONS",
      "WHERE",
      "How_to_Get_There",
      "=",
      "``",
      "bus",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "tourist_attractions",
      "where",
      "how_to_get_there",
      "=",
      "value"
    ],
    "question": "Which tourist attractions can we get to by bus? Tell me the names of the attractions.",
    "question_toks": [
      "Which",
      "tourist",
      "attractions",
      "can",
      "we",
      "get",
      "to",
      "by",
      "bus",
      "?",
      "Tell",
      "me",
      "the",
      "names",
      "of",
      "the",
      "attractions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"bus\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "what states have cities named springfield",
    "question_toks": [
      "what",
      "states",
      "have",
      "cities",
      "named",
      "springfield"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"",
    "query_toks": [
      "SELECT",
      "Location_Name",
      "FROM",
      "LOCATIONS",
      "WHERE",
      "Location_Name",
      "LIKE",
      "``",
      "%",
      "film",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "location_name",
      "from",
      "locations",
      "where",
      "location_name",
      "like",
      "value"
    ],
    "question": "Find all the locations whose names contain the word \"film\".",
    "question_toks": [
      "Find",
      "all",
      "the",
      "locations",
      "whose",
      "names",
      "contain",
      "the",
      "word",
      "``",
      "film",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%film%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT count(DISTINCT role_code) FROM Project_Staff",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "role_code",
      ")",
      "FROM",
      "Project_Staff"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "role_code",
      ")",
      "from",
      "project_staff"
    ],
    "question": "How many different roles are there on the project staff?",
    "question_toks": [
      "How",
      "many",
      "different",
      "roles",
      "are",
      "there",
      "on",
      "the",
      "project",
      "staff",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                25,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT Fname FROM STUDENT WHERE Age  >  22",
    "query_toks": [
      "SELECT",
      "Fname",
      "FROM",
      "STUDENT",
      "WHERE",
      "Age",
      ">",
      "22"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "student",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "What are the first names of all the students aged above 22?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "all",
      "the",
      "students",
      "aged",
      "above",
      "22",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          22.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT customer_name FROM customers WHERE payment_method  =  \"Cash\"",
    "query_toks": [
      "SELECT",
      "customer_name",
      "FROM",
      "customers",
      "WHERE",
      "payment_method",
      "=",
      "``",
      "Cash",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "customer_name",
      "from",
      "customers",
      "where",
      "payment_method",
      "=",
      "value"
    ],
    "question": "Which customers use \"Cash\" for payment method? Return the customer names.",
    "question_toks": [
      "Which",
      "customers",
      "use",
      "``",
      "Cash",
      "''",
      "for",
      "payment",
      "method",
      "?",
      "Return",
      "the",
      "customer",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Cash\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "channel",
      "ORDER",
      "BY",
      "rating_in_percent",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "channel",
      "order",
      "by",
      "rating_in_percent",
      "desc"
    ],
    "question": "Give me a list of all the channel names sorted by the channel rating in descending order.",
    "question_toks": [
      "Give",
      "me",
      "a",
      "list",
      "of",
      "all",
      "the",
      "channel",
      "names",
      "sorted",
      "by",
      "the",
      "channel",
      "rating",
      "in",
      "descending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses",
    "query_toks": [
      "SELECT",
      "document_id",
      "FROM",
      "Documents",
      "EXCEPT",
      "SELECT",
      "document_id",
      "FROM",
      "Documents_with_expenses"
    ],
    "query_toks_no_value": [
      "select",
      "document_id",
      "from",
      "documents",
      "except",
      "select",
      "document_id",
      "from",
      "documents_with_expenses"
    ],
    "question": "What are the ids of documents which don't have expense budgets?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "documents",
      "which",
      "do",
      "n't",
      "have",
      "expense",
      "budgets",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              5
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  17,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "mountain_photos",
    "query": "SELECT avg(prominence) FROM mountain WHERE country  =  'Morocco'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "prominence",
      ")",
      "FROM",
      "mountain",
      "WHERE",
      "country",
      "=",
      "'Morocco",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "prominence",
      ")",
      "from",
      "mountain",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "What are the average prominence of the mountains in country 'Morocco'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "average",
      "prominence",
      "of",
      "the",
      "mountains",
      "in",
      "country",
      "'Morocco",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Morocco\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "riding_club",
    "query": "SELECT count(*) FROM player",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "player"
    ],
    "question": "How many players are there?",
    "question_toks": [
      "How",
      "many",
      "players",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\"",
    "query_toks": [
      "SELECT",
      "card_number",
      "FROM",
      "member",
      "WHERE",
      "Hometown",
      "LIKE",
      "``",
      "%",
      "Kentucky",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "card_number",
      "from",
      "member",
      "where",
      "hometown",
      "like",
      "value"
    ],
    "question": "What are the card numbers of members from Kentucky?",
    "question_toks": [
      "What",
      "are",
      "the",
      "card",
      "numbers",
      "of",
      "members",
      "from",
      "Kentucky",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%Kentucky%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "epinions_1",
    "query": "SELECT count(DISTINCT u_id) FROM review",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "u_id",
      ")",
      "FROM",
      "review"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "u_id",
      ")",
      "from",
      "review"
    ],
    "question": "How many different users wrote some reviews?",
    "question_toks": [
      "How",
      "many",
      "different",
      "users",
      "wrote",
      "some",
      "reviews",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT Name FROM ship ORDER BY Tonnage ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "ship",
      "ORDER",
      "BY",
      "Tonnage",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "ship",
      "order",
      "by",
      "tonnage",
      "asc"
    ],
    "question": "List the name of ships in ascending order of tonnage.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "ships",
      "in",
      "ascending",
      "order",
      "of",
      "tonnage",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT count(*) FROM farm",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "farm"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "farm"
    ],
    "question": "How many farms are there?",
    "question_toks": [
      "How",
      "many",
      "farms",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM Aircraft WHERE distance  >  1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "Show ids for all aircrafts with more than 1000 distance.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "all",
      "aircrafts",
      "with",
      "more",
      "than",
      "1000",
      "distance",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT venueid FROM paper WHERE YEAR  =  2013;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "venueid",
      "FROM",
      "paper",
      "WHERE",
      "YEAR",
      "=",
      "2013",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "venueid",
      "from",
      "paper",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "conferences in 2013",
    "question_toks": [
      "conferences",
      "in",
      "2013"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2013.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "solvency_ii",
    "query": "SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Product_Name",
      "FROM",
      "Products",
      "ORDER",
      "BY",
      "Product_Price",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      "from",
      "products",
      "order",
      "by",
      "product_price",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the product with the highest price?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "product",
      "with",
      "the",
      "highest",
      "price",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT title FROM songs WHERE title LIKE '% the %'",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "songs",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "%",
      "the",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "songs",
      "where",
      "title",
      "like",
      "value"
    ],
    "question": "What are the names of the songs whose title has the word \"the\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "songs",
      "whose",
      "title",
      "has",
      "the",
      "word",
      "``",
      "the",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"% the %\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT count(*) FROM technician",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "technician"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "technician"
    ],
    "question": "How many technicians are there?",
    "question_toks": [
      "How",
      "many",
      "technicians",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "County_name",
      "FROM",
      "county",
      "ORDER",
      "BY",
      "Population",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "county_name",
      "from",
      "county",
      "order",
      "by",
      "population",
      "desc",
      "limit",
      "value"
    ],
    "question": "Show the name of the county with the biggest population.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "of",
      "the",
      "county",
      "with",
      "the",
      "biggest",
      "population",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_management",
    "query": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3",
    "query_toks": [
      "SELECT",
      "born_state",
      "FROM",
      "head",
      "GROUP",
      "BY",
      "born_state",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "born_state",
      "from",
      "head",
      "group",
      "by",
      "born_state",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the names of the states where at least 3 heads were born?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "states",
      "where",
      "at",
      "least",
      "3",
      "heads",
      "were",
      "born",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT count(*) FROM services",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "services"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "services"
    ],
    "question": "Count the number of services.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "services",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT sum(enr) FROM College",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "enr",
      ")",
      "FROM",
      "College"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "enr",
      ")",
      "from",
      "college"
    ],
    "question": "How many students are enrolled in college?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "enrolled",
      "in",
      "college",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Companies",
      "WHERE",
      "Headquarters",
      "!",
      "=",
      "'USA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "companies",
      "where",
      "headquarters",
      "!",
      "=",
      "value"
    ],
    "question": "Find the names of the companies whose headquarters are not located in \"USA\".",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "the",
      "companies",
      "whose",
      "headquarters",
      "are",
      "not",
      "located",
      "in",
      "``",
      "USA",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"USA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT count(*) FROM Rooms;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Rooms",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "rooms"
    ],
    "question": "What is the total number of rooms available in this inn?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "rooms",
      "available",
      "in",
      "this",
      "inn",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT CName FROM COURSE ORDER BY Credits",
    "query_toks": [
      "SELECT",
      "CName",
      "FROM",
      "COURSE",
      "ORDER",
      "BY",
      "Credits"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "course",
      "order",
      "by",
      "credits"
    ],
    "question": "List the course name of courses sorted by credits.",
    "question_toks": [
      "List",
      "the",
      "course",
      "name",
      "of",
      "courses",
      "sorted",
      "by",
      "credits",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1",
    "query_toks": [
      "SELECT",
      "Winery",
      "FROM",
      "WINE",
      "ORDER",
      "BY",
      "SCORE",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "winery",
      "from",
      "wine",
      "order",
      "by",
      "score",
      "limit",
      "value"
    ],
    "question": "What is the winery at which the wine with the highest score was made?",
    "question_toks": [
      "What",
      "is",
      "the",
      "winery",
      "at",
      "which",
      "the",
      "wine",
      "with",
      "the",
      "highest",
      "score",
      "was",
      "made",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "organization_name",
      "FROM",
      "organizations",
      "ORDER",
      "BY",
      "date_formed",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "organization_name",
      "from",
      "organizations",
      "order",
      "by",
      "date_formed",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the organization that was formed most recently?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "organization",
      "that",
      "was",
      "formed",
      "most",
      "recently",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT count(DISTINCT label) FROM albums",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "label",
      ")",
      "FROM",
      "albums"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "label",
      ")",
      "from",
      "albums"
    ],
    "question": "How many unique labels are there for albums?",
    "question_toks": [
      "How",
      "many",
      "unique",
      "labels",
      "are",
      "there",
      "for",
      "albums",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "river_name",
      ")",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "idaho",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "river_name",
      ")",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "how many rivers in idaho",
    "question_toks": [
      "how",
      "many",
      "rivers",
      "in",
      "idaho"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"idaho\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM Employee",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Employee"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employee"
    ],
    "question": "How many employees do we have?",
    "question_toks": [
      "How",
      "many",
      "employees",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT citation_num FROM publication WHERE title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "citation_num",
      "FROM",
      "publication",
      "WHERE",
      "title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "citation_num",
      "from",
      "publication",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "return me the number of citations of \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "citations",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT count(*) FROM club WHERE clublocation  =  \"HHH\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "club",
      "WHERE",
      "clublocation",
      "=",
      "``",
      "HHH",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "club",
      "where",
      "clublocation",
      "=",
      "value"
    ],
    "question": "How many clubs are located at \"HHH\"?",
    "question_toks": [
      "How",
      "many",
      "clubs",
      "are",
      "located",
      "at",
      "``",
      "HHH",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"HHH\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";",
    "query_toks": [
      "SELECT",
      "LENGTH",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "rio",
      "grande",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "length",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "how long is the rio grande river in miles",
    "question_toks": [
      "how",
      "long",
      "is",
      "the",
      "rio",
      "grande",
      "river",
      "in",
      "miles"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"rio grande\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "OWNER",
      "FROM",
      "channel",
      "ORDER",
      "BY",
      "rating_in_percent",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "owner",
      "from",
      "channel",
      "order",
      "by",
      "rating_in_percent",
      "desc",
      "limit",
      "value"
    ],
    "question": "Show me the owner of the channel with the highest rating.",
    "question_toks": [
      "Show",
      "me",
      "the",
      "owner",
      "of",
      "the",
      "channel",
      "with",
      "the",
      "highest",
      "rating",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT count(*) FROM club_rank WHERE Total  <  10",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "club_rank",
      "WHERE",
      "Total",
      "<",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "club_rank",
      "where",
      "total",
      "<",
      "value"
    ],
    "question": "What is the total number of clubs that have less than 10 medals in total?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "clubs",
      "that",
      "have",
      "less",
      "than",
      "10",
      "medals",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "border",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "border",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "states bordering kentucky",
    "question_toks": [
      "states",
      "bordering",
      "kentucky"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE country_name != \"usa\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "country_name",
      "!",
      "=",
      "``",
      "usa",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "country_name",
      "!",
      "=",
      "value"
    ],
    "question": "which rivers do not run through usa",
    "question_toks": [
      "which",
      "rivers",
      "do",
      "not",
      "run",
      "through",
      "usa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          "\"usa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "payment_date",
      "FROM",
      "payment",
      "ORDER",
      "BY",
      "payment_date",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "payment_date",
      "from",
      "payment",
      "order",
      "by",
      "payment_date",
      "asc",
      "limit",
      "value"
    ],
    "question": "When did the first payment happen?",
    "question_toks": [
      "When",
      "did",
      "the",
      "first",
      "payment",
      "happen",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                66,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              66,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT avg(bedroom_count) FROM Apartments",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "bedroom_count",
      ")",
      "FROM",
      "Apartments"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "bedroom_count",
      ")",
      "from",
      "apartments"
    ],
    "question": "Find the average number of bedrooms of all the apartments.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "number",
      "of",
      "bedrooms",
      "of",
      "all",
      "the",
      "apartments",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clublocation FROM club WHERE clubname  =  \"Tennis Club\"",
    "query_toks": [
      "SELECT",
      "clublocation",
      "FROM",
      "club",
      "WHERE",
      "clubname",
      "=",
      "``",
      "Tennis",
      "Club",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clublocation",
      "from",
      "club",
      "where",
      "clubname",
      "=",
      "value"
    ],
    "question": "What is the location of the club named \"Tennis Club\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "location",
      "of",
      "the",
      "club",
      "named",
      "``",
      "Tennis",
      "Club",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Tennis Club\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC",
    "query_toks": [
      "SELECT",
      "Party_Theme",
      "FROM",
      "party",
      "ORDER",
      "BY",
      "Number_of_hosts",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "party_theme",
      "from",
      "party",
      "order",
      "by",
      "number_of_hosts",
      "asc"
    ],
    "question": "List the themes of parties in ascending order of number of hosts.",
    "question_toks": [
      "List",
      "the",
      "themes",
      "of",
      "parties",
      "in",
      "ascending",
      "order",
      "of",
      "number",
      "of",
      "hosts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT DISTINCT cName FROM tryout ORDER BY cName",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "cName",
      "FROM",
      "tryout",
      "ORDER",
      "BY",
      "cName"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "cname",
      "from",
      "tryout",
      "order",
      "by",
      "cname"
    ],
    "question": "What are the different names of the colleges involved in the tryout in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "names",
      "of",
      "the",
      "colleges",
      "involved",
      "in",
      "the",
      "tryout",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT DISTINCT payment_method FROM customers",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "payment_method",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "payment_method",
      "from",
      "customers"
    ],
    "question": "What are all the payment methods?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "payment",
      "methods",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT count(*) FROM inst",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "inst"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "inst"
    ],
    "question": "How many institutions are there?",
    "question_toks": [
      "How",
      "many",
      "institutions",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT ResTypeName FROM Restaurant_Type;",
    "query_toks": [
      "SELECT",
      "ResTypeName",
      "FROM",
      "Restaurant_Type",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "restypename",
      "from",
      "restaurant_type"
    ],
    "question": "List all restaurant types.",
    "question_toks": [
      "List",
      "all",
      "restaurant",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "student_id",
      ")",
      "FROM",
      "Student_Course_Enrolment"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "student_id",
      ")",
      "from",
      "student_course_enrolment"
    ],
    "question": "How many distinct students are enrolled in courses?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "students",
      "are",
      "enrolled",
      "in",
      "courses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "airports",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "airports",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value"
    ],
    "question": "What are the cities with exactly two airports?",
    "question_toks": [
      "What",
      "are",
      "the",
      "cities",
      "with",
      "exactly",
      "two",
      "airports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          2,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT distinct(catalog_entry_name) FROM catalog_contents",
    "query_toks": [
      "SELECT",
      "distinct",
      "(",
      "catalog_entry_name",
      ")",
      "FROM",
      "catalog_contents"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "(",
      "catalog_entry_name",
      ")",
      "from",
      "catalog_contents"
    ],
    "question": "What are all the catalog entry names?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "catalog",
      "entry",
      "names",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts",
    "query_toks": [
      "SELECT",
      "customer_id",
      "FROM",
      "Customers",
      "EXCEPT",
      "SELECT",
      "customer_id",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      "from",
      "customers",
      "except",
      "select",
      "customer_id",
      "from",
      "accounts"
    ],
    "question": "What are the customer ids for customers who do not have an account?",
    "question_toks": [
      "What",
      "are",
      "the",
      "customer",
      "ids",
      "for",
      "customers",
      "who",
      "do",
      "not",
      "have",
      "an",
      "account",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              3
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  21,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT DISTINCT Name FROM WINE ORDER BY price",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Name",
      "FROM",
      "WINE",
      "ORDER",
      "BY",
      "price"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "wine",
      "order",
      "by",
      "price"
    ],
    "question": "List the names of all distinct wines ordered by price.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "distinct",
      "wines",
      "ordered",
      "by",
      "price",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT count(*) FROM club",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "club"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "club"
    ],
    "question": "How many clubs are there?",
    "question_toks": [
      "How",
      "many",
      "clubs",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "query": "SELECT DISTINCT premises_type FROM premises",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "premises_type",
      "FROM",
      "premises"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "premises_type",
      "from",
      "premises"
    ],
    "question": "What are all the distinct premise types?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "distinct",
      "premise",
      "types",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Store_Name FROM Drama_Workshop_Groups",
    "query_toks": [
      "SELECT",
      "Store_Name",
      "FROM",
      "Drama_Workshop_Groups"
    ],
    "query_toks_no_value": [
      "select",
      "store_name",
      "from",
      "drama_workshop_groups"
    ],
    "question": "Show all the Store_Name of drama workshop groups.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "Store_Name",
      "of",
      "drama",
      "workshop",
      "groups",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT fname FROM student WHERE age  >  20",
    "query_toks": [
      "SELECT",
      "fname",
      "FROM",
      "student",
      "WHERE",
      "age",
      ">",
      "20"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "student",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "Find the first name of students who is older than 20.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "name",
      "of",
      "students",
      "who",
      "is",
      "older",
      "than",
      "20",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          20.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "ohio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "what are the states that the ohio run through",
    "question_toks": [
      "what",
      "are",
      "the",
      "states",
      "that",
      "the",
      "ohio",
      "run",
      "through"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"ohio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT avg(Money_Requested) FROM entrepreneur",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Money_Requested",
      ")",
      "FROM",
      "entrepreneur"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "money_requested",
      ")",
      "from",
      "entrepreneur"
    ],
    "question": "What is the average money requested by all entrepreneurs?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "money",
      "requested",
      "by",
      "all",
      "entrepreneurs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "railway",
    "query": "SELECT count(*) FROM railway",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "railway"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "railway"
    ],
    "question": "How many railways are there?",
    "question_toks": [
      "How",
      "many",
      "railways",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "illinois",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "what river flows through illinois",
    "question_toks": [
      "what",
      "river",
      "flows",
      "through",
      "illinois"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"illinois\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM scientists ORDER BY name",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "scientists",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "scientists",
      "order",
      "by",
      "name"
    ],
    "question": "List the names of all scientists sorted in alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "scientists",
      "sorted",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT count(*) FROM COURSE WHERE Credits  >  2",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "COURSE",
      "WHERE",
      "Credits",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "course",
      "where",
      "credits",
      ">",
      "value"
    ],
    "question": "Count the number of courses with more than 2 credits.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "courses",
      "with",
      "more",
      "than",
      "2",
      "credits",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'",
    "query_toks": [
      "SELECT",
      "Hosts",
      "FROM",
      "farm_competition",
      "WHERE",
      "Theme",
      "!",
      "=",
      "'Aliens",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "hosts",
      "from",
      "farm_competition",
      "where",
      "theme",
      "!",
      "=",
      "value"
    ],
    "question": "Return the hosts of competitions for which the theme is not Aliens?",
    "question_toks": [
      "Return",
      "the",
      "hosts",
      "of",
      "competitions",
      "for",
      "which",
      "the",
      "theme",
      "is",
      "not",
      "Aliens",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Aliens\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT customer_phone FROM available_policies",
    "query_toks": [
      "SELECT",
      "customer_phone",
      "FROM",
      "available_policies"
    ],
    "query_toks_no_value": [
      "select",
      "customer_phone",
      "from",
      "available_policies"
    ],
    "question": "Find all the phone numbers.",
    "question_toks": [
      "Find",
      "all",
      "the",
      "phone",
      "numbers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT DISTINCT TYPE FROM vocals",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "TYPE",
      "FROM",
      "vocals"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "type",
      "from",
      "vocals"
    ],
    "question": "Find all the vocal types.",
    "question_toks": [
      "Find",
      "all",
      "the",
      "vocal",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "border",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "border",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what are the neighboring states for kentucky",
    "question_toks": [
      "what",
      "are",
      "the",
      "neighboring",
      "states",
      "for",
      "kentucky"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT city_name FROM city WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "city_name",
      "FROM",
      "city",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "city_name",
      "from",
      "city",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what are the cities in texas",
    "question_toks": [
      "what",
      "are",
      "the",
      "cities",
      "in",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "illinois",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "what rivers run through illinois",
    "question_toks": [
      "what",
      "rivers",
      "run",
      "through",
      "illinois"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"illinois\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT name FROM club ORDER BY name DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "club",
      "ORDER",
      "BY",
      "name",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "club",
      "order",
      "by",
      "name",
      "desc"
    ],
    "question": "List all club names in descending alphabetical order.",
    "question_toks": [
      "List",
      "all",
      "club",
      "names",
      "in",
      "descending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = \"Sandwich\";",
    "query_toks": [
      "SELECT",
      "ResTypeDescription",
      "FROM",
      "Restaurant_Type",
      "WHERE",
      "ResTypeName",
      "=",
      "``",
      "Sandwich",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "restypedescription",
      "from",
      "restaurant_type",
      "where",
      "restypename",
      "=",
      "value"
    ],
    "question": "What is the description of the restaurant type Sandwich?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "restaurant",
      "type",
      "Sandwich",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Sandwich\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  \"Cancelled\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "customer_id",
      ")",
      "FROM",
      "customer_orders",
      "WHERE",
      "order_status",
      "=",
      "``",
      "Cancelled",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "customer_id",
      ")",
      "from",
      "customer_orders",
      "where",
      "order_status",
      "=",
      "value"
    ],
    "question": "How many customers have at least one order with status \"Cancelled\"?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "have",
      "at",
      "least",
      "one",
      "order",
      "with",
      "status",
      "``",
      "Cancelled",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Cancelled\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE city = \"Prague\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "city",
      "=",
      "``",
      "Prague",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "How many customers live in Prague city?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "live",
      "in",
      "Prague",
      "city",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          "\"Prague\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3",
    "query_toks": [
      "SELECT",
      "max_page_size",
      "FROM",
      "product",
      "GROUP",
      "BY",
      "max_page_size",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "max_page_size",
      "from",
      "product",
      "group",
      "by",
      "max_page_size",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the list of page size which have more than 3 product listed",
    "question_toks": [
      "Find",
      "the",
      "list",
      "of",
      "page",
      "size",
      "which",
      "have",
      "more",
      "than",
      "3",
      "product",
      "listed"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(DISTINCT allergy) FROM Allergy_type",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "allergy",
      ")",
      "FROM",
      "Allergy_type"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "allergy",
      ")",
      "from",
      "allergy_type"
    ],
    "question": "How many allergies are there?",
    "question_toks": [
      "How",
      "many",
      "allergies",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                1,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4",
    "query_toks": [
      "SELECT",
      "policy_type_code",
      "FROM",
      "available_policies",
      "GROUP",
      "BY",
      "policy_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "4"
    ],
    "query_toks_no_value": [
      "select",
      "policy_type_code",
      "from",
      "available_policies",
      "group",
      "by",
      "policy_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the policy types more than 4 customers use. Show their type code.",
    "question_toks": [
      "Find",
      "the",
      "policy",
      "types",
      "more",
      "than",
      "4",
      "customers",
      "use",
      ".",
      "Show",
      "their",
      "type",
      "code",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT COUNT (DISTINCT director) FROM movie",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "director",
      ")",
      "FROM",
      "movie"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "director",
      ")",
      "from",
      "movie"
    ],
    "question": "How many movie directors are there?",
    "question_toks": [
      "How",
      "many",
      "movie",
      "directors",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "body_builder",
    "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "Birth_Place",
      "FROM",
      "people",
      "GROUP",
      "BY",
      "Birth_Place",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "birth_place",
      "from",
      "people",
      "group",
      "by",
      "birth_place",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the birth places that are shared by at least two people?",
    "question_toks": [
      "What",
      "are",
      "the",
      "birth",
      "places",
      "that",
      "are",
      "shared",
      "by",
      "at",
      "least",
      "two",
      "people",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM state;",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "state"
    ],
    "question": "give me all the states of usa",
    "question_toks": [
      "give",
      "me",
      "all",
      "the",
      "states",
      "of",
      "usa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM Person WHERE age  <  30",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Person",
      "WHERE",
      "age",
      "<",
      "30"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "person",
      "where",
      "age",
      "<",
      "value"
    ],
    "question": "Who is the person whose age is below 30?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "person",
      "whose",
      "age",
      "is",
      "below",
      "30",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          30.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT count(DISTINCT payment_method_code) FROM parties",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "payment_method_code",
      ")",
      "FROM",
      "parties"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "payment_method_code",
      ")",
      "from",
      "parties"
    ],
    "question": "Count the number of different payment method codes used by parties.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "payment",
      "method",
      "codes",
      "used",
      "by",
      "parties",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT SUM ( area ) FROM state;",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "area",
      ")",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "area",
      ")",
      "from",
      "state"
    ],
    "question": "what is the total area of the usa",
    "question_toks": [
      "what",
      "is",
      "the",
      "total",
      "area",
      "of",
      "the",
      "usa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT DISTINCT firstname FROM list WHERE classroom  =  107",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "firstname",
      "FROM",
      "list",
      "WHERE",
      "classroom",
      "=",
      "107"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "firstname",
      "from",
      "list",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "List the first names of all the students in room 107.",
    "question_toks": [
      "List",
      "the",
      "first",
      "names",
      "of",
      "all",
      "the",
      "students",
      "in",
      "room",
      "107",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          107.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "bname",
      "FROM",
      "bank",
      "ORDER",
      "BY",
      "no_of_customers",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "bname",
      "from",
      "bank",
      "order",
      "by",
      "no_of_customers",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the branch name of the bank that has the most number of customers.",
    "question_toks": [
      "Find",
      "the",
      "branch",
      "name",
      "of",
      "the",
      "bank",
      "that",
      "has",
      "the",
      "most",
      "number",
      "of",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "problem_log_id",
      "FROM",
      "problem_log",
      "ORDER",
      "BY",
      "log_entry_date",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "problem_log_id",
      "from",
      "problem_log",
      "order",
      "by",
      "log_entry_date",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which problem log was created most recently? Give me the log id.",
    "question_toks": [
      "Which",
      "problem",
      "log",
      "was",
      "created",
      "most",
      "recently",
      "?",
      "Give",
      "me",
      "the",
      "log",
      "id",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "california",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how many people stay in california",
    "question_toks": [
      "how",
      "many",
      "people",
      "stay",
      "in",
      "california"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"california\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\"",
    "query_toks": [
      "SELECT",
      "date_stored",
      "FROM",
      "All_documents",
      "WHERE",
      "Document_name",
      "=",
      "``",
      "Marry",
      "CV",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_stored",
      "from",
      "all_documents",
      "where",
      "document_name",
      "=",
      "value"
    ],
    "question": "When was the document named \"Marry CV\" stored? Give me the date.",
    "question_toks": [
      "When",
      "was",
      "the",
      "document",
      "named",
      "``",
      "Marry",
      "CV",
      "''",
      "stored",
      "?",
      "Give",
      "me",
      "the",
      "date",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Marry CV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "decoration_competition",
    "query": "SELECT count(*) FROM member",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "member"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "member"
    ],
    "question": "How many members are there?",
    "question_toks": [
      "How",
      "many",
      "members",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\"",
    "query_toks": [
      "SELECT",
      "BirthDate",
      "FROM",
      "EMPLOYEE",
      "WHERE",
      "City",
      "=",
      "``",
      "Edmonton",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "birthdate",
      "from",
      "employee",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "Find the birth dates corresponding to employees who live in the city of Edmonton.",
    "question_toks": [
      "Find",
      "the",
      "birth",
      "dates",
      "corresponding",
      "to",
      "employees",
      "who",
      "live",
      "in",
      "the",
      "city",
      "of",
      "Edmonton",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          "\"Edmonton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT DISTINCT Visit_Date FROM VISITS",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Visit_Date",
      "FROM",
      "VISITS"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "visit_date",
      "from",
      "visits"
    ],
    "question": "What are the distinct visit dates?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "visit",
      "dates",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            12
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "date_to",
      "FROM",
      "Project_Staff",
      "ORDER",
      "BY",
      "date_to",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "date_to",
      "from",
      "project_staff",
      "order",
      "by",
      "date_to",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the last date that a staff member left a project?",
    "question_toks": [
      "What",
      "is",
      "the",
      "last",
      "date",
      "that",
      "a",
      "staff",
      "member",
      "left",
      "a",
      "project",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT count(*) FROM VOTING_RECORD",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "VOTING_RECORD"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "voting_record"
    ],
    "question": "Find the number of voting records in total.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "voting",
      "records",
      "in",
      "total",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\"",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Domestic_Passengers",
      ")",
      "FROM",
      "airport",
      "WHERE",
      "Airport_Name",
      "LIKE",
      "``",
      "%",
      "London",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "domestic_passengers",
      ")",
      "from",
      "airport",
      "where",
      "airport_name",
      "like",
      "value"
    ],
    "question": "What are the total number of domestic passengers at all London airports?",
    "question_toks": [
      "What",
      "are",
      "the",
      "total",
      "number",
      "of",
      "domestic",
      "passengers",
      "at",
      "all",
      "London",
      "airports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"%London%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT roomName FROM Rooms ORDER BY basePrice;",
    "query_toks": [
      "SELECT",
      "roomName",
      "FROM",
      "Rooms",
      "ORDER",
      "BY",
      "basePrice",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "roomname",
      "from",
      "rooms",
      "order",
      "by",
      "baseprice"
    ],
    "question": "List the name of all rooms sorted by their prices.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "all",
      "rooms",
      "sorted",
      "by",
      "their",
      "prices",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pilot_record",
    "query": "SELECT DISTINCT POSITION FROM pilot WHERE Age  >  30",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "POSITION",
      "FROM",
      "pilot",
      "WHERE",
      "Age",
      ">",
      "30"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "position",
      "from",
      "pilot",
      "where",
      "age",
      ">",
      "value"
    ],
    "question": "List the distinct positions of pilots older than 30.",
    "question_toks": [
      "List",
      "the",
      "distinct",
      "positions",
      "of",
      "pilots",
      "older",
      "than",
      "30",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          30.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT * FROM people",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "people"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "people"
    ],
    "question": "List all info about all people.",
    "question_toks": [
      "List",
      "all",
      "info",
      "about",
      "all",
      "people",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "solvency_ii",
    "query": "SELECT avg(Product_Price) FROM Products",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Product_Price",
      ")",
      "FROM",
      "Products"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "product_price",
      ")",
      "from",
      "products"
    ],
    "question": "What is the average price for products?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "price",
      "for",
      "products",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\"",
    "query_toks": [
      "SELECT",
      "problem_id",
      "FROM",
      "problems",
      "WHERE",
      "date_problem_reported",
      ">",
      "``",
      "1978-06-26",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "problem_id",
      "from",
      "problems",
      "where",
      "date_problem_reported",
      ">",
      "value"
    ],
    "question": "What are the ids of the problems which are reported after 1978-06-26?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "the",
      "problems",
      "which",
      "are",
      "reported",
      "after",
      "1978-06-26",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"1978-06-26\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT DISTINCT Region FROM club ORDER BY Region ASC",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Region",
      "FROM",
      "club",
      "ORDER",
      "BY",
      "Region",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "region",
      "from",
      "club",
      "order",
      "by",
      "region",
      "asc"
    ],
    "question": "What are the different regions of clubs in ascending alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "regions",
      "of",
      "clubs",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"East\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Police_force",
      "FROM",
      "county_public_safety",
      "WHERE",
      "LOCATION",
      "!",
      "=",
      "``",
      "East",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "police_force",
      "from",
      "county_public_safety",
      "where",
      "location",
      "!",
      "=",
      "value"
    ],
    "question": "What are the different police forces of counties that are not located in the East?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "police",
      "forces",
      "of",
      "counties",
      "that",
      "are",
      "not",
      "located",
      "in",
      "the",
      "East",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"East\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "no_of_customers",
      ")",
      "FROM",
      "bank",
      "WHERE",
      "state",
      "=",
      "'Utah",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "no_of_customers",
      ")",
      "from",
      "bank",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "Find the average number of customers in all banks of Utah state.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "number",
      "of",
      "customers",
      "in",
      "all",
      "banks",
      "of",
      "Utah",
      "state",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Utah\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Date_Claim_Made",
      "FROM",
      "Claims",
      "ORDER",
      "BY",
      "Date_Claim_Made",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "date_claim_made",
      "from",
      "claims",
      "order",
      "by",
      "date_claim_made",
      "asc",
      "limit",
      "value"
    ],
    "question": "Of all the claims, what was the earliest date when any claim was made?",
    "question_toks": [
      "Of",
      "all",
      "the",
      "claims",
      ",",
      "what",
      "was",
      "the",
      "earliest",
      "date",
      "when",
      "any",
      "claim",
      "was",
      "made",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_software_problems",
    "query": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\"",
    "query_toks": [
      "SELECT",
      "problem_id",
      "FROM",
      "problems",
      "WHERE",
      "date_problem_reported",
      ">",
      "``",
      "1978-06-26",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "problem_id",
      "from",
      "problems",
      "where",
      "date_problem_reported",
      ">",
      "value"
    ],
    "question": "Find the ids of the problems reported after 1978-06-26.",
    "question_toks": [
      "Find",
      "the",
      "ids",
      "of",
      "the",
      "problems",
      "reported",
      "after",
      "1978-06-26",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"1978-06-26\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT avg(Money_Requested) FROM entrepreneur",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Money_Requested",
      ")",
      "FROM",
      "entrepreneur"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "money_requested",
      ")",
      "from",
      "entrepreneur"
    ],
    "question": "Return the average money requested across all entrepreneurs.",
    "question_toks": [
      "Return",
      "the",
      "average",
      "money",
      "requested",
      "across",
      "all",
      "entrepreneurs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "ship",
      "ORDER",
      "BY",
      "Tonnage",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "ship",
      "order",
      "by",
      "tonnage",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the ship with the largest amount of tonnage called?",
    "question_toks": [
      "What",
      "is",
      "the",
      "ship",
      "with",
      "the",
      "largest",
      "amount",
      "of",
      "tonnage",
      "called",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT avg(price) FROM products",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "price",
      ")",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "price",
      ")",
      "from",
      "products"
    ],
    "question": "Compute the average price of all the products.",
    "question_toks": [
      "Compute",
      "the",
      "average",
      "price",
      "of",
      "all",
      "the",
      "products",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT count(*) FROM customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "How many customers are there?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC",
    "query_toks": [
      "SELECT",
      "pName",
      "FROM",
      "Player",
      "WHERE",
      "yCard",
      "=",
      "'yes",
      "'",
      "ORDER",
      "BY",
      "HS",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "pname",
      "from",
      "player",
      "where",
      "ycard",
      "=",
      "value",
      "order",
      "by",
      "hs",
      "desc"
    ],
    "question": "What are the name of the players who received a card in descending order of the hours of training?",
    "question_toks": [
      "What",
      "are",
      "the",
      "name",
      "of",
      "the",
      "players",
      "who",
      "received",
      "a",
      "card",
      "in",
      "descending",
      "order",
      "of",
      "the",
      "hours",
      "of",
      "training",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"yes\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\"",
    "query_toks": [
      "SELECT",
      "allergytype",
      "FROM",
      "Allergy_type",
      "WHERE",
      "allergy",
      "=",
      "``",
      "Cat",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "allergytype",
      "from",
      "allergy_type",
      "where",
      "allergy",
      "=",
      "value"
    ],
    "question": "What is the type of allergy Cat?",
    "question_toks": [
      "What",
      "is",
      "the",
      "type",
      "of",
      "allergy",
      "Cat",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Cat\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT count(*) FROM COURSE WHERE Credits  >  2",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "COURSE",
      "WHERE",
      "Credits",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "course",
      "where",
      "credits",
      ">",
      "value"
    ],
    "question": "How many courses have more than 2 credits?",
    "question_toks": [
      "How",
      "many",
      "courses",
      "have",
      "more",
      "than",
      "2",
      "credits",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM Player WHERE HS  >  1000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Player",
      "WHERE",
      "HS",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "player",
      "where",
      "hs",
      ">",
      "value"
    ],
    "question": "How many players have more than 1000 hours of training?",
    "question_toks": [
      "How",
      "many",
      "players",
      "have",
      "more",
      "than",
      "1000",
      "hours",
      "of",
      "training",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"AS\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "DEPARTMENT",
      "WHERE",
      "Division",
      "=",
      "``",
      "AS",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "department",
      "where",
      "division",
      "=",
      "value"
    ],
    "question": "How many departments are in the division AS?",
    "question_toks": [
      "How",
      "many",
      "departments",
      "are",
      "in",
      "the",
      "division",
      "AS",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"AS\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "state_name",
      ")",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "state_name",
      ")",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "how many states have a city named springfield",
    "question_toks": [
      "how",
      "many",
      "states",
      "have",
      "a",
      "city",
      "named",
      "springfield"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT city FROM city WHERE regional_population  >  10000000",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "city",
      "WHERE",
      "regional_population",
      ">",
      "10000000"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "city",
      "where",
      "regional_population",
      ">",
      "value"
    ],
    "question": "Please give me a list of cities whose regional population is over 10000000.",
    "question_toks": [
      "Please",
      "give",
      "me",
      "a",
      "list",
      "of",
      "cities",
      "whose",
      "regional",
      "population",
      "is",
      "over",
      "10000000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          10000000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC",
    "query_toks": [
      "SELECT",
      "Total_Points",
      "FROM",
      "gymnast",
      "ORDER",
      "BY",
      "Floor_Exercise_Points",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "total_points",
      "from",
      "gymnast",
      "order",
      "by",
      "floor_exercise_points",
      "desc"
    ],
    "question": "What are the total points of gymnasts, ordered by their floor exercise points descending?",
    "question_toks": [
      "What",
      "are",
      "the",
      "total",
      "points",
      "of",
      "gymnasts",
      ",",
      "ordered",
      "by",
      "their",
      "floor",
      "exercise",
      "points",
      "descending",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "minister",
      "FROM",
      "party",
      "ORDER",
      "BY",
      "left_office",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "minister",
      "from",
      "party",
      "order",
      "by",
      "left_office",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the minister who left office at the latest time.",
    "question_toks": [
      "Return",
      "the",
      "minister",
      "who",
      "left",
      "office",
      "at",
      "the",
      "latest",
      "time",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( traverse ) FROM river WHERE LENGTH  >  750;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "traverse",
      ")",
      "FROM",
      "river",
      "WHERE",
      "LENGTH",
      ">",
      "750",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "traverse",
      ")",
      "from",
      "river",
      "where",
      "length",
      ">",
      "value"
    ],
    "question": "how many states have major rivers",
    "question_toks": [
      "how",
      "many",
      "states",
      "have",
      "major",
      "rivers"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              27,
              false
            ],
            null
          ],
          750.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT DISTINCT instrument FROM Instruments",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "instrument",
      "FROM",
      "Instruments"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "instrument",
      "from",
      "instruments"
    ],
    "question": "What are all the instruments used?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "instruments",
      "used",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM state WHERE capital  =  \"salem\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "state",
      "WHERE",
      "capital",
      "=",
      "``",
      "salem",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "state",
      "where",
      "capital",
      "=",
      "value"
    ],
    "question": "what state has the capital salem",
    "question_toks": [
      "what",
      "state",
      "has",
      "the",
      "capital",
      "salem"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"salem\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      "FROM",
      "catalog_contents",
      "ORDER",
      "BY",
      "price_in_dollars",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      "from",
      "catalog_contents",
      "order",
      "by",
      "price_in_dollars",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the entry name of the catalog with the highest price (in USD).",
    "question_toks": [
      "Find",
      "the",
      "entry",
      "name",
      "of",
      "the",
      "catalog",
      "with",
      "the",
      "highest",
      "price",
      "(",
      "in",
      "USD",
      ")",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wedding",
    "query": "SELECT count(*) FROM wedding WHERE YEAR  =  2016",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "wedding",
      "WHERE",
      "YEAR",
      "=",
      "2016"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "wedding",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "How many weddings are there in year 2016?",
    "question_toks": [
      "How",
      "many",
      "weddings",
      "are",
      "there",
      "in",
      "year",
      "2016",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'",
    "query_toks": [
      "SELECT",
      "role_description",
      "FROM",
      "Staff_Roles",
      "WHERE",
      "role_code",
      "=",
      "'researcher",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "role_description",
      "from",
      "staff_roles",
      "where",
      "role_code",
      "=",
      "value"
    ],
    "question": "What is the complete description of the researcher role.",
    "question_toks": [
      "What",
      "is",
      "the",
      "complete",
      "description",
      "of",
      "the",
      "researcher",
      "role",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          "\"researcher\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT reference_num FROM publication WHERE title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "reference_num",
      "FROM",
      "publication",
      "WHERE",
      "title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "reference_num",
      "from",
      "publication",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "return me the references of \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "references",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            9
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT count(*) FROM actor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "actor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "actor"
    ],
    "question": "Count the number of actors.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "actors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "addresses",
      "WHERE",
      "state_province_county",
      "=",
      "``",
      "Colorado",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "where",
      "state_province_county",
      "=",
      "value"
    ],
    "question": "How many cities are there in state \"Colorado\"?",
    "question_toks": [
      "How",
      "many",
      "cities",
      "are",
      "there",
      "in",
      "state",
      "``",
      "Colorado",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Colorado\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT count(*) FROM entrepreneur",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "entrepreneur"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "entrepreneur"
    ],
    "question": "Count the number of entrepreneurs.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "entrepreneurs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "illinois",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "what is the river that cross over illinois",
    "question_toks": [
      "what",
      "is",
      "the",
      "river",
      "that",
      "cross",
      "over",
      "illinois"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"illinois\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT avg(capacity) FROM stadium WHERE opening_year  =  2005",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "capacity",
      ")",
      "FROM",
      "stadium",
      "WHERE",
      "opening_year",
      "=",
      "2005"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "capacity",
      ")",
      "from",
      "stadium",
      "where",
      "opening_year",
      "=",
      "value"
    ],
    "question": "What is the average capacity of the stadiums that were opened in year 2005?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "capacity",
      "of",
      "the",
      "stadiums",
      "that",
      "were",
      "opened",
      "in",
      "year",
      "2005",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "buildings",
      "WHERE",
      "Status",
      "=",
      "``",
      "on-hold",
      "''",
      "ORDER",
      "BY",
      "Stories",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "buildings",
      "where",
      "status",
      "=",
      "value",
      "order",
      "by",
      "stories",
      "asc"
    ],
    "question": "Find the names of the buildings in \"on-hold\" status, and sort them in ascending order of building stories.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "the",
      "buildings",
      "in",
      "``",
      "on-hold",
      "''",
      "status",
      ",",
      "and",
      "sort",
      "them",
      "in",
      "ascending",
      "order",
      "of",
      "building",
      "stories",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"on-hold\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Customers;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "How many customers in total?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC",
    "query_toks": [
      "SELECT",
      "Company",
      "FROM",
      "entrepreneur",
      "ORDER",
      "BY",
      "Money_Requested",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "company",
      "from",
      "entrepreneur",
      "order",
      "by",
      "money_requested",
      "desc"
    ],
    "question": "List the companies of entrepreneurs in descending order of money requested.",
    "question_toks": [
      "List",
      "the",
      "companies",
      "of",
      "entrepreneurs",
      "in",
      "descending",
      "order",
      "of",
      "money",
      "requested",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Ref_budget_codes",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_budget_codes"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_budget_codes"
    ],
    "question": "Count the number of budget codes.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "budget",
      "codes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  105",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "grade",
      "FROM",
      "list",
      "WHERE",
      "classroom",
      "=",
      "105"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "grade",
      "from",
      "list",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "Which grade is studying in room 105?",
    "question_toks": [
      "Which",
      "grade",
      "is",
      "studying",
      "in",
      "room",
      "105",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          105.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "highest_point",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "highest_point",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the high point of texas",
    "question_toks": [
      "what",
      "is",
      "the",
      "high",
      "point",
      "of",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "roller_coaster",
    "query": "SELECT Park FROM roller_coaster ORDER BY Speed DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Park",
      "FROM",
      "roller_coaster",
      "ORDER",
      "BY",
      "Speed",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "park",
      "from",
      "roller_coaster",
      "order",
      "by",
      "speed",
      "desc",
      "limit",
      "value"
    ],
    "question": "Show the park of the roller coaster with the highest speed.",
    "question_toks": [
      "Show",
      "the",
      "park",
      "of",
      "the",
      "roller",
      "coaster",
      "with",
      "the",
      "highest",
      "speed",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "which states have cities named springfield",
    "question_toks": [
      "which",
      "states",
      "have",
      "cities",
      "named",
      "springfield"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\"",
    "query_toks": [
      "SELECT",
      "employee_ID",
      "FROM",
      "Employees",
      "WHERE",
      "employee_name",
      "=",
      "``",
      "Ebba",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      "from",
      "employees",
      "where",
      "employee_name",
      "=",
      "value"
    ],
    "question": "What is the id for the employee called Ebba?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "for",
      "the",
      "employee",
      "called",
      "Ebba",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Ebba\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT crs_code) FROM CLASS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "crs_code",
      ")",
      "FROM",
      "CLASS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "crs_code",
      ")",
      "from",
      "class"
    ],
    "question": "How many courses are offered?",
    "question_toks": [
      "How",
      "many",
      "courses",
      "are",
      "offered",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT count(*) FROM track",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "track"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "track"
    ],
    "question": "How many tracks do we have?",
    "question_toks": [
      "How",
      "many",
      "tracks",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT title FROM papers WHERE title LIKE \"%Database%\"",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "papers",
      "WHERE",
      "title",
      "LIKE",
      "``",
      "%",
      "Database",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "papers",
      "where",
      "title",
      "like",
      "value"
    ],
    "question": "Which papers have the substring \"Database\" in their titles? Show the titles of the papers.",
    "question_toks": [
      "Which",
      "papers",
      "have",
      "the",
      "substring",
      "``",
      "Database",
      "''",
      "in",
      "their",
      "titles",
      "?",
      "Show",
      "the",
      "titles",
      "of",
      "the",
      "papers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"%Database%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV'",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Share_in_percent",
      ")",
      "FROM",
      "channel",
      "WHERE",
      "OWNER",
      "=",
      "'CCTV",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "share_in_percent",
      ")",
      "from",
      "channel",
      "where",
      "owner",
      "=",
      "value"
    ],
    "question": "find the total percentage share of all channels owned by CCTV.",
    "question_toks": [
      "find",
      "the",
      "total",
      "percentage",
      "share",
      "of",
      "all",
      "channels",
      "owned",
      "by",
      "CCTV",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"CCTV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(DISTINCT dept_name) FROM course",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dept_name",
      ")",
      "FROM",
      "course"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dept_name",
      ")",
      "from",
      "course"
    ],
    "question": "How many departments offer courses?",
    "question_toks": [
      "How",
      "many",
      "departments",
      "offer",
      "courses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                9,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(DISTINCT name) FROM projects",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "projects"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "projects"
    ],
    "question": "Find the number of distinct projects.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "projects",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "wrestler",
      "ORDER",
      "BY",
      "Days_held",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wrestler",
      "order",
      "by",
      "days_held",
      "asc",
      "limit",
      "value"
    ],
    "question": "Return the name of the wrestler who had the lowest number of days held.",
    "question_toks": [
      "Return",
      "the",
      "name",
      "of",
      "the",
      "wrestler",
      "who",
      "had",
      "the",
      "lowest",
      "number",
      "of",
      "days",
      "held",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "river_name",
      ")",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "idaho",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "river_name",
      ")",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "how many rivers are there in idaho",
    "question_toks": [
      "how",
      "many",
      "rivers",
      "are",
      "there",
      "in",
      "idaho"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"idaho\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"Second time\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customer_orders",
      "WHERE",
      "order_details",
      "=",
      "``",
      "Second",
      "time",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customer_orders",
      "where",
      "order_details",
      "=",
      "value"
    ],
    "question": "Tell me the number of orders with \"Second time\" as order detail.",
    "question_toks": [
      "Tell",
      "me",
      "the",
      "number",
      "of",
      "orders",
      "with",
      "``",
      "Second",
      "time",
      "''",
      "as",
      "order",
      "detail",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Second time\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "county",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "What campuses are located in the county of Los Angeles?",
    "question_toks": [
      "What",
      "campuses",
      "are",
      "located",
      "in",
      "the",
      "county",
      "of",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(DISTINCT transaction_type) FROM Financial_Transactions",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "transaction_type",
      ")",
      "FROM",
      "Financial_Transactions"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "transaction_type",
      ")",
      "from",
      "financial_transactions"
    ],
    "question": "How many different types of transactions are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "types",
      "of",
      "transactions",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                23,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\"",
    "query_toks": [
      "SELECT",
      "CName",
      "FROM",
      "COURSE",
      "WHERE",
      "Days",
      "=",
      "``",
      "MTW",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "course",
      "where",
      "days",
      "=",
      "value"
    ],
    "question": "What are the course names for courses taught on MTW?",
    "question_toks": [
      "What",
      "are",
      "the",
      "course",
      "names",
      "for",
      "courses",
      "taught",
      "on",
      "MTW",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          "\"MTW\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT avg(bedroom_count) FROM Apartments",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "bedroom_count",
      ")",
      "FROM",
      "Apartments"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "bedroom_count",
      ")",
      "from",
      "apartments"
    ],
    "question": "What is the average number of bedrooms of all apartments?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "bedrooms",
      "of",
      "all",
      "apartments",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT name FROM enzyme ORDER BY name DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "enzyme",
      "ORDER",
      "BY",
      "name",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "enzyme",
      "order",
      "by",
      "name",
      "desc"
    ],
    "question": "What are the names of enzymes in descending order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "enzymes",
      "in",
      "descending",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "musical",
    "query": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2",
    "query_toks": [
      "SELECT",
      "Nominee",
      "FROM",
      "musical",
      "GROUP",
      "BY",
      "Nominee",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "nominee",
      "from",
      "musical",
      "group",
      "by",
      "nominee",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Who are the nominees who have been nominated more than two times?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "nominees",
      "who",
      "have",
      "been",
      "nominated",
      "more",
      "than",
      "two",
      "times",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(DISTINCT s_id) FROM advisor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "s_id",
      ")",
      "FROM",
      "advisor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "s_id",
      ")",
      "from",
      "advisor"
    ],
    "question": "How many students have advisors?",
    "question_toks": [
      "How",
      "many",
      "students",
      "have",
      "advisors",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                37,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "highest_point",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "highest_point",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the highest mountain in texas",
    "question_toks": [
      "what",
      "is",
      "the",
      "highest",
      "mountain",
      "in",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT DISTINCT customer_details FROM Customers",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "customer_details",
      "FROM",
      "Customers"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "customer_details",
      "from",
      "customers"
    ],
    "question": "What are all the distinct details of the customers?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "distinct",
      "details",
      "of",
      "the",
      "customers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT area FROM state WHERE state_name  =  \"new mexico\";",
    "query_toks": [
      "SELECT",
      "area",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "new",
      "mexico",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "area",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how large is new mexico",
    "question_toks": [
      "how",
      "large",
      "is",
      "new",
      "mexico"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"new mexico\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1",
    "query_toks": [
      "SELECT",
      "Song",
      "FROM",
      "volume",
      "WHERE",
      "Weeks_on_Top",
      ">",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "song",
      "from",
      "volume",
      "where",
      "weeks_on_top",
      ">",
      "value"
    ],
    "question": "What are the songs in volumes with more than 1 week on top?",
    "question_toks": [
      "What",
      "are",
      "the",
      "songs",
      "in",
      "volumes",
      "with",
      "more",
      "than",
      "1",
      "week",
      "on",
      "top",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "roomName",
      "FROM",
      "Rooms",
      "ORDER",
      "BY",
      "maxOccupancy",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "roomname",
      "from",
      "rooms",
      "order",
      "by",
      "maxoccupancy",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name of the room with the maximum occupancy.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "the",
      "room",
      "with",
      "the",
      "maximum",
      "occupancy",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT receipt_date FROM Documents WHERE document_id = 3;",
    "query_toks": [
      "SELECT",
      "receipt_date",
      "FROM",
      "Documents",
      "WHERE",
      "document_id",
      "=",
      "3",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "receipt_date",
      "from",
      "documents",
      "where",
      "document_id",
      "=",
      "value"
    ],
    "question": "What is the receipt date of the document with id 3?",
    "question_toks": [
      "What",
      "is",
      "the",
      "receipt",
      "date",
      "of",
      "the",
      "document",
      "with",
      "id",
      "3",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT title FROM songs WHERE title LIKE '% the %'",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "songs",
      "WHERE",
      "title",
      "LIKE",
      "'",
      "%",
      "the",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "songs",
      "where",
      "title",
      "like",
      "value"
    ],
    "question": "Find all the songs whose name contains the word \"the\".",
    "question_toks": [
      "Find",
      "all",
      "the",
      "songs",
      "whose",
      "name",
      "contains",
      "the",
      "word",
      "``",
      "the",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"% the %\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT name FROM captain ORDER BY age LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "captain",
      "ORDER",
      "BY",
      "age",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "captain",
      "order",
      "by",
      "age",
      "limit",
      "value"
    ],
    "question": "What is the name of the youngest captain?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "youngest",
      "captain",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "APPELLATIONS",
      "WHERE",
      "County",
      "=",
      "``",
      "Napa",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "appellations",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "How many appelations are in Napa Country?",
    "question_toks": [
      "How",
      "many",
      "appelations",
      "are",
      "in",
      "Napa",
      "Country",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Napa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "pilot_record",
    "query": "SELECT count(*) FROM pilot",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "pilot"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "pilot"
    ],
    "question": "How many pilots are there?",
    "question_toks": [
      "How",
      "many",
      "pilots",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT lowest_elevation FROM highlow WHERE state_name  =  \"pennsylvania\";",
    "query_toks": [
      "SELECT",
      "lowest_elevation",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "pennsylvania",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "lowest_elevation",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the lowest elevation in pennsylvania",
    "question_toks": [
      "what",
      "is",
      "the",
      "lowest",
      "elevation",
      "in",
      "pennsylvania"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"pennsylvania\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT building FROM Faculty WHERE rank  =  \"Professor\" GROUP BY building HAVING count(*)  >=  10",
    "query_toks": [
      "SELECT",
      "building",
      "FROM",
      "Faculty",
      "WHERE",
      "rank",
      "=",
      "``",
      "Professor",
      "''",
      "GROUP",
      "BY",
      "building",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "10"
    ],
    "query_toks_no_value": [
      "select",
      "building",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value",
      "group",
      "by",
      "building",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show all the buildings that have at least 10 professors.",
    "question_toks": [
      "Show",
      "all",
      "the",
      "buildings",
      "that",
      "have",
      "at",
      "least",
      "10",
      "professors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          22,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT name FROM enzyme WHERE product != 'Heme'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "enzyme",
      "WHERE",
      "product",
      "!",
      "=",
      "'Heme",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "enzyme",
      "where",
      "product",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of enzymes who does not produce 'Heme'?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "enzymes",
      "who",
      "does",
      "not",
      "produce",
      "'Heme",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Heme\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river;",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river"
    ],
    "question": "what states have rivers running through them",
    "question_toks": [
      "what",
      "states",
      "have",
      "rivers",
      "running",
      "through",
      "them"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT max(amount_of_transaction) FROM TRANSACTIONS",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "amount_of_transaction",
      ")",
      "FROM",
      "TRANSACTIONS"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "amount_of_transaction",
      ")",
      "from",
      "transactions"
    ],
    "question": "Show the maximum amount of transaction.",
    "question_toks": [
      "Show",
      "the",
      "maximum",
      "amount",
      "of",
      "transaction",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "EXCEPT",
      "SELECT",
      "StuID",
      "FROM",
      "Sportsinfo"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "except",
      "select",
      "stuid",
      "from",
      "sportsinfo"
    ],
    "question": "Show student ids who don't have any sports.",
    "question_toks": [
      "Show",
      "student",
      "ids",
      "who",
      "do",
      "n't",
      "have",
      "any",
      "sports",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              3
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  15,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "documents",
      "GROUP",
      "BY",
      "document_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "4"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "documents",
      "group",
      "by",
      "document_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the types of documents with more than 4 documents.",
    "question_toks": [
      "Find",
      "the",
      "types",
      "of",
      "documents",
      "with",
      "more",
      "than",
      "4",
      "documents",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          20,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT count(DISTINCT LEVEL) FROM member",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "LEVEL",
      ")",
      "FROM",
      "member"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "level",
      ")",
      "from",
      "member"
    ],
    "question": "What are the different membership levels?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "membership",
      "levels",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river;",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river"
    ],
    "question": "which states have a river",
    "question_toks": [
      "which",
      "states",
      "have",
      "a",
      "river"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT count(DISTINCT Software_Platform) FROM device",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Software_Platform",
      ")",
      "FROM",
      "device"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "software_platform",
      ")",
      "from",
      "device"
    ],
    "question": "How many different software platforms are there for devices?",
    "question_toks": [
      "How",
      "many",
      "different",
      "software",
      "platforms",
      "are",
      "there",
      "for",
      "devices",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Documents",
      "GROUP",
      "BY",
      "document_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "<",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "documents",
      "group",
      "by",
      "document_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      "<",
      "value"
    ],
    "question": "What are the codes corresponding to document types for which there are less than 3 documents?",
    "question_toks": [
      "What",
      "are",
      "the",
      "codes",
      "corresponding",
      "to",
      "document",
      "types",
      "for",
      "which",
      "there",
      "are",
      "less",
      "than",
      "3",
      "documents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [
        [
          false,
          4,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "small_bank_1",
    "query": "SELECT name FROM accounts ORDER BY name",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "accounts",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "accounts",
      "order",
      "by",
      "name"
    ],
    "question": "What are the names of all the customers in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "customers",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "news_report",
    "query": "SELECT Name FROM journalist ORDER BY Years_working ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "journalist",
      "ORDER",
      "BY",
      "Years_working",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "journalist",
      "order",
      "by",
      "years_working",
      "asc"
    ],
    "question": "List the names of journalists in ascending order of years working.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "journalists",
      "in",
      "ascending",
      "order",
      "of",
      "years",
      "working",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts",
    "query_toks": [
      "SELECT",
      "customer_id",
      "FROM",
      "Customers",
      "EXCEPT",
      "SELECT",
      "customer_id",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "customer_id",
      "from",
      "customers",
      "except",
      "select",
      "customer_id",
      "from",
      "accounts"
    ],
    "question": "Show customer ids who don't have an account.",
    "question_toks": [
      "Show",
      "customer",
      "ids",
      "who",
      "do",
      "n't",
      "have",
      "an",
      "account",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              3
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  21,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "roller_coaster",
    "query": "SELECT Name FROM roller_coaster ORDER BY LENGTH ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "roller_coaster",
      "ORDER",
      "BY",
      "LENGTH",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "roller_coaster",
      "order",
      "by",
      "length",
      "asc"
    ],
    "question": "List the names of roller coasters by ascending order of length.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "roller",
      "coasters",
      "by",
      "ascending",
      "order",
      "of",
      "length",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT distinct(UnitPrice) FROM TRACK",
    "query_toks": [
      "SELECT",
      "distinct",
      "(",
      "UnitPrice",
      ")",
      "FROM",
      "TRACK"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "(",
      "unitprice",
      ")",
      "from",
      "track"
    ],
    "question": "Find the distinct unit prices for tracks.",
    "question_toks": [
      "Find",
      "the",
      "distinct",
      "unit",
      "prices",
      "for",
      "tracks",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                64,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "railway",
    "query": "SELECT max(LEVEL) FROM manager WHERE Country != \"Australia\t\"",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "LEVEL",
      ")",
      "FROM",
      "manager",
      "WHERE",
      "Country",
      "!",
      "=",
      "``",
      "Australia",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "level",
      ")",
      "from",
      "manager",
      "where",
      "country",
      "!",
      "=",
      "value"
    ],
    "question": "What is the maximum level of managers in countries that are not \"Australia\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "level",
      "of",
      "managers",
      "in",
      "countries",
      "that",
      "are",
      "not",
      "``",
      "Australia",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Australia\t\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT DISTINCT product_size FROM Products",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "product_size",
      "FROM",
      "Products"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "product_size",
      "from",
      "products"
    ],
    "question": "Show all product sizes.",
    "question_toks": [
      "Show",
      "all",
      "product",
      "sizes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC",
    "query_toks": [
      "SELECT",
      "apt_number",
      "FROM",
      "Apartments",
      "ORDER",
      "BY",
      "room_count",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "apt_number",
      "from",
      "apartments",
      "order",
      "by",
      "room_count",
      "asc"
    ],
    "question": "Return all the apartment numbers sorted by the room count in ascending order.",
    "question_toks": [
      "Return",
      "all",
      "the",
      "apartment",
      "numbers",
      "sorted",
      "by",
      "the",
      "room",
      "count",
      "in",
      "ascending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT avg(Enrollment) FROM school",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Enrollment",
      ")",
      "FROM",
      "school"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "enrollment",
      ")",
      "from",
      "school"
    ],
    "question": "What is the average enrollment of schools?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "enrollment",
      "of",
      "schools",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "date_from",
      "FROM",
      "Project_Staff",
      "ORDER",
      "BY",
      "date_from",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "date_from",
      "from",
      "project_staff",
      "order",
      "by",
      "date_from",
      "asc",
      "limit",
      "value"
    ],
    "question": "When did the first staff member start working?",
    "question_toks": [
      "When",
      "did",
      "the",
      "first",
      "staff",
      "member",
      "start",
      "working",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Stories",
      "FROM",
      "buildings",
      "ORDER",
      "BY",
      "Height",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "stories",
      "from",
      "buildings",
      "order",
      "by",
      "height",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the stories of highest building?",
    "question_toks": [
      "What",
      "is",
      "the",
      "stories",
      "of",
      "highest",
      "building",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "poll_source",
      "FROM",
      "candidate",
      "ORDER",
      "BY",
      "oppose_rate",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "poll_source",
      "from",
      "candidate",
      "order",
      "by",
      "oppose_rate",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the poll source corresponding to the candidate who has the oppose rate.",
    "question_toks": [
      "Return",
      "the",
      "poll",
      "source",
      "corresponding",
      "to",
      "the",
      "candidate",
      "who",
      "has",
      "the",
      "oppose",
      "rate",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4",
    "query_toks": [
      "SELECT",
      "policy_type_code",
      "FROM",
      "available_policies",
      "GROUP",
      "BY",
      "policy_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "4"
    ],
    "query_toks_no_value": [
      "select",
      "policy_type_code",
      "from",
      "available_policies",
      "group",
      "by",
      "policy_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the policy type used by more than 4 customers.",
    "question_toks": [
      "Find",
      "the",
      "policy",
      "type",
      "used",
      "by",
      "more",
      "than",
      "4",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT founder FROM manufacturers WHERE name  =  'Sony'",
    "query_toks": [
      "SELECT",
      "founder",
      "FROM",
      "manufacturers",
      "WHERE",
      "name",
      "=",
      "'Sony",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "founder",
      "from",
      "manufacturers",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Return the founder of Sony.",
    "question_toks": [
      "Return",
      "the",
      "founder",
      "of",
      "Sony",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Sony\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "illinois",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "what are all the rivers in illinois",
    "question_toks": [
      "what",
      "are",
      "all",
      "the",
      "rivers",
      "in",
      "illinois"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"illinois\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT DISTINCT headquarter FROM manufacturers",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "headquarter",
      "FROM",
      "manufacturers"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "headquarter",
      "from",
      "manufacturers"
    ],
    "question": "What are the different cities listed?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "cities",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'",
    "query_toks": [
      "SELECT",
      "Hosts",
      "FROM",
      "farm_competition",
      "WHERE",
      "Theme",
      "!",
      "=",
      "'Aliens",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "hosts",
      "from",
      "farm_competition",
      "where",
      "theme",
      "!",
      "=",
      "value"
    ],
    "question": "What are the hosts of competitions whose theme is not \"Aliens\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "hosts",
      "of",
      "competitions",
      "whose",
      "theme",
      "is",
      "not",
      "``",
      "Aliens",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Aliens\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "documents",
      "GROUP",
      "BY",
      "document_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "4"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "documents",
      "group",
      "by",
      "document_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the codes of types of documents of which there are for or more?",
    "question_toks": [
      "What",
      "are",
      "the",
      "codes",
      "of",
      "types",
      "of",
      "documents",
      "of",
      "which",
      "there",
      "are",
      "for",
      "or",
      "more",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          20,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          4.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT school_code FROM department WHERE dept_name  =  \"Accounting\"",
    "query_toks": [
      "SELECT",
      "school_code",
      "FROM",
      "department",
      "WHERE",
      "dept_name",
      "=",
      "``",
      "Accounting",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "school_code",
      "from",
      "department",
      "where",
      "dept_name",
      "=",
      "value"
    ],
    "question": "What is the code of the school where the accounting department belongs to?",
    "question_toks": [
      "What",
      "is",
      "the",
      "code",
      "of",
      "the",
      "school",
      "where",
      "the",
      "accounting",
      "department",
      "belongs",
      "to",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Accounting\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT DISTINCT rank FROM Faculty",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "rank",
      "FROM",
      "Faculty"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "rank",
      "from",
      "faculty"
    ],
    "question": "Find the list of distinct ranks for faculty.",
    "question_toks": [
      "Find",
      "the",
      "list",
      "of",
      "distinct",
      "ranks",
      "for",
      "faculty",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "solvency_ii",
    "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "Product_Type_Code",
      "FROM",
      "Products",
      "GROUP",
      "BY",
      "Product_Type_Code",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "product_type_code",
      "from",
      "products",
      "group",
      "by",
      "product_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show the product type codes that have at least two products.",
    "question_toks": [
      "Show",
      "the",
      "product",
      "type",
      "codes",
      "that",
      "have",
      "at",
      "least",
      "two",
      "products",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          6,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT Name FROM technician ORDER BY Age ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "technician",
      "ORDER",
      "BY",
      "Age",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "technician",
      "order",
      "by",
      "age",
      "asc"
    ],
    "question": "List the names of technicians in ascending order of age.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "technicians",
      "in",
      "ascending",
      "order",
      "of",
      "age",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_learning",
    "query": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "Course_Authors_and_Tutors",
      "ORDER",
      "BY",
      "personal_name"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "course_authors_and_tutors",
      "order",
      "by",
      "personal_name"
    ],
    "question": "List all the information about course authors and tutors in alphabetical order of the personal name.",
    "question_toks": [
      "List",
      "all",
      "the",
      "information",
      "about",
      "course",
      "authors",
      "and",
      "tutors",
      "in",
      "alphabetical",
      "order",
      "of",
      "the",
      "personal",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "dept_address",
      ")",
      "FROM",
      "department",
      "WHERE",
      "school_code",
      "=",
      "'BUS",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "dept_address",
      ")",
      "from",
      "department",
      "where",
      "school_code",
      "=",
      "value"
    ],
    "question": "How many different locations does the school with code BUS has?",
    "question_toks": [
      "How",
      "many",
      "different",
      "locations",
      "does",
      "the",
      "school",
      "with",
      "code",
      "BUS",
      "has",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                15,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"BUS\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "state_name",
      ")",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "state_name",
      ")",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "how many states have cities named springfield",
    "question_toks": [
      "how",
      "many",
      "states",
      "have",
      "cities",
      "named",
      "springfield"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT city FROM business WHERE rating  <  1.5;",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "business",
      "WHERE",
      "rating",
      "<",
      "1.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "business",
      "where",
      "rating",
      "<",
      "value"
    ],
    "question": "Find the cities of businesses rated below 1.5",
    "question_toks": [
      "Find",
      "the",
      "cities",
      "of",
      "businesses",
      "rated",
      "below",
      "1.5"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          1.5,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT count(DISTINCT LEVEL) FROM member",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "LEVEL",
      ")",
      "FROM",
      "member"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "level",
      ")",
      "from",
      "member"
    ],
    "question": "How many different levels do members have?",
    "question_toks": [
      "How",
      "many",
      "different",
      "levels",
      "do",
      "members",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT count(*) FROM medicine WHERE FDA_approved  =  'No'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "medicine",
      "WHERE",
      "FDA_approved",
      "=",
      "'No",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "medicine",
      "where",
      "fda_approved",
      "=",
      "value"
    ],
    "question": "How many medicines have the FDA approval status 'No' ?",
    "question_toks": [
      "How",
      "many",
      "medicines",
      "have",
      "the",
      "FDA",
      "approval",
      "status",
      "'No",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"No\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT count(*) FROM Documents WHERE document_status_code = \"done\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents",
      "WHERE",
      "document_status_code",
      "=",
      "``",
      "done",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents",
      "where",
      "document_status_code",
      "=",
      "value"
    ],
    "question": "How many documents have the status code done?",
    "question_toks": [
      "How",
      "many",
      "documents",
      "have",
      "the",
      "status",
      "code",
      "done",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"done\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT highest_point FROM highlow;",
    "query_toks": [
      "SELECT",
      "highest_point",
      "FROM",
      "highlow",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "highest_point",
      "from",
      "highlow"
    ],
    "question": "what are the highest points of all the states",
    "question_toks": [
      "what",
      "are",
      "the",
      "highest",
      "points",
      "of",
      "all",
      "the",
      "states"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT city FROM business WHERE name  =  \"Taj Mahal\";",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "business",
      "WHERE",
      "name",
      "=",
      "``",
      "Taj",
      "Mahal",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "business",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Find all cities which has a \" Taj Mahal \" .",
    "question_toks": [
      "Find",
      "all",
      "cities",
      "which",
      "has",
      "a",
      "``",
      "Taj",
      "Mahal",
      "``",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Taj Mahal\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "workshop_paper",
    "query": "SELECT avg(Scores) FROM submission",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Scores",
      ")",
      "FROM",
      "submission"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "scores",
      ")",
      "from",
      "submission"
    ],
    "question": "What is the average score of submissions?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "score",
      "of",
      "submissions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT sum(Points) FROM player",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Points",
      ")",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "points",
      ")",
      "from",
      "player"
    ],
    "question": "Show total points of all players.",
    "question_toks": [
      "Show",
      "total",
      "points",
      "of",
      "all",
      "players",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election_representative",
    "query": "SELECT count(DISTINCT Party) FROM representative",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Party",
      ")",
      "FROM",
      "representative"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "party",
      ")",
      "from",
      "representative"
    ],
    "question": "How many distinct parties are there for representatives?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "parties",
      "are",
      "there",
      "for",
      "representatives",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT avg(HS) FROM Player",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "HS",
      ")",
      "FROM",
      "Player"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "hs",
      ")",
      "from",
      "player"
    ],
    "question": "What is the average training hours of all players?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "training",
      "hours",
      "of",
      "all",
      "players",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Name FROM Team",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "Team"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "team"
    ],
    "question": "Show all team names.",
    "question_toks": [
      "Show",
      "all",
      "team",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC",
    "query_toks": [
      "SELECT",
      "team_name",
      "FROM",
      "basketball_match",
      "ORDER",
      "BY",
      "All_Home",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "team_name",
      "from",
      "basketball_match",
      "order",
      "by",
      "all_home",
      "desc"
    ],
    "question": "What are the names of all the teams in the basketball competition, sorted by all home scores in descending order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "teams",
      "in",
      "the",
      "basketball",
      "competition",
      ",",
      "sorted",
      "by",
      "all",
      "home",
      "scores",
      "in",
      "descending",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT sum(Amount_Claimed) FROM Claims",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Amount_Claimed",
      ")",
      "FROM",
      "Claims"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount_claimed",
      ")",
      "from",
      "claims"
    ],
    "question": "What is total amount claimed summed across all the claims?",
    "question_toks": [
      "What",
      "is",
      "total",
      "amount",
      "claimed",
      "summed",
      "across",
      "all",
      "the",
      "claims",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT count(patient) FROM stay WHERE room  =  112",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "patient",
      ")",
      "FROM",
      "stay",
      "WHERE",
      "room",
      "=",
      "112"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "patient",
      ")",
      "from",
      "stay",
      "where",
      "room",
      "=",
      "value"
    ],
    "question": "Count the number of patients who stayed in room 112.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "patients",
      "who",
      "stayed",
      "in",
      "room",
      "112",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            13
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          112.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "President_Vote",
      ")",
      "FROM",
      "VOTING_RECORD"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "president_vote",
      ")",
      "from",
      "voting_record"
    ],
    "question": "How many distinct president votes are recorded?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "president",
      "votes",
      "are",
      "recorded",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_mission",
    "query": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2",
    "query_toks": [
      "SELECT",
      "Nationality",
      "FROM",
      "ship",
      "GROUP",
      "BY",
      "Nationality",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "nationality",
      "from",
      "ship",
      "group",
      "by",
      "nationality",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "List the nations that have more than two ships.",
    "question_toks": [
      "List",
      "the",
      "nations",
      "that",
      "have",
      "more",
      "than",
      "two",
      "ships",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT count(*) FROM artist",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artist"
    ],
    "question": "Count the number of artists.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "artists",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT distinct(Famous_Release_date) FROM artist",
    "query_toks": [
      "SELECT",
      "distinct",
      "(",
      "Famous_Release_date",
      ")",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "(",
      "famous_release_date",
      ")",
      "from",
      "artist"
    ],
    "question": "Give the distinct famous release dates for all artists.",
    "question_toks": [
      "Give",
      "the",
      "distinct",
      "famous",
      "release",
      "dates",
      "for",
      "all",
      "artists",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT avg(Horizontal_Bar_Points) FROM gymnast",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Horizontal_Bar_Points",
      ")",
      "FROM",
      "gymnast"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "horizontal_bar_points",
      ")",
      "from",
      "gymnast"
    ],
    "question": "Return the average horizontal bar points across all gymnasts.",
    "question_toks": [
      "Return",
      "the",
      "average",
      "horizontal",
      "bar",
      "points",
      "across",
      "all",
      "gymnasts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT country FROM stadium GROUP BY country HAVING count(*)  <=  3",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "stadium",
      "GROUP",
      "BY",
      "country",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "<",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "stadium",
      "group",
      "by",
      "country",
      "having",
      "count",
      "(",
      "*",
      ")",
      "<",
      "=",
      "value"
    ],
    "question": "Which country has at most 3 stadiums listed?",
    "question_toks": [
      "Which",
      "country",
      "has",
      "at",
      "most",
      "3",
      "stadiums",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          16,
          false
        ]
      ],
      "having": [
        [
          false,
          6,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"",
    "query_toks": [
      "SELECT",
      "Address",
      "FROM",
      "LOCATIONS",
      "WHERE",
      "Location_Name",
      "=",
      "``",
      "UK",
      "Gallery",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "locations",
      "where",
      "location_name",
      "=",
      "value"
    ],
    "question": "What is the address of the location \"UK Gallery\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "address",
      "of",
      "the",
      "location",
      "``",
      "UK",
      "Gallery",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"UK Gallery\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "mountain_photos",
    "query": "SELECT count(DISTINCT brand) FROM camera_lens",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "brand",
      ")",
      "FROM",
      "camera_lens"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "brand",
      ")",
      "from",
      "camera_lens"
    ],
    "question": "How many different kinds of lens brands are there?",
    "question_toks": [
      "How",
      "many",
      "different",
      "kinds",
      "of",
      "lens",
      "brands",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                8,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "boulder",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "how big is the city of boulder",
    "question_toks": [
      "how",
      "big",
      "is",
      "the",
      "city",
      "of",
      "boulder"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"boulder\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT count(*) FROM Player WHERE HS  >  1000",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Player",
      "WHERE",
      "HS",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "player",
      "where",
      "hs",
      ">",
      "value"
    ],
    "question": "How many different players trained for more than 1000 hours?",
    "question_toks": [
      "How",
      "many",
      "different",
      "players",
      "trained",
      "for",
      "more",
      "than",
      "1000",
      "hours",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Name FROM city ORDER BY White DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "city",
      "ORDER",
      "BY",
      "White",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "city",
      "order",
      "by",
      "white",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the names of the five cities with the greatest proportion of white people?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "five",
      "cities",
      "with",
      "the",
      "greatest",
      "proportion",
      "of",
      "white",
      "people",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 5,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT DISTINCT transaction_type FROM Financial_Transactions",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "transaction_type",
      "FROM",
      "Financial_Transactions"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "transaction_type",
      "from",
      "financial_transactions"
    ],
    "question": "Show all transaction types.",
    "question_toks": [
      "Show",
      "all",
      "transaction",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Currency_Code",
      ")",
      "FROM",
      "Drama_Workshop_Groups"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "currency_code",
      ")",
      "from",
      "drama_workshop_groups"
    ],
    "question": "Find the number of distinct currency codes used in drama workshop groups.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "distinct",
      "currency",
      "codes",
      "used",
      "in",
      "drama",
      "workshop",
      "groups",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT count(*) FROM CUSTOMERS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CUSTOMERS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "How many customers do we have?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_store",
    "query": "SELECT count(DISTINCT product_type_code) FROM products",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "product_type_code",
      ")",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "product_type_code",
      ")",
      "from",
      "products"
    ],
    "question": "Find the number of different product types.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "different",
      "product",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;",
    "query_toks": [
      "SELECT",
      "vehicle_details",
      "FROM",
      "Vehicles",
      "WHERE",
      "vehicle_id",
      "=",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "vehicle_details",
      "from",
      "vehicles",
      "where",
      "vehicle_id",
      "=",
      "value"
    ],
    "question": "Show the detail of vehicle with id 1.",
    "question_toks": [
      "Show",
      "the",
      "detail",
      "of",
      "vehicle",
      "with",
      "id",
      "1",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT avg(Quantity) FROM stock",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Quantity",
      ")",
      "FROM",
      "stock"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "quantity",
      ")",
      "from",
      "stock"
    ],
    "question": "What is the average quantity of stocks?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "quantity",
      "of",
      "stocks",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT Name FROM GENRE",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "GENRE"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "genre"
    ],
    "question": "List the names of all music genres.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "all",
      "music",
      "genres",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Documents_with_expenses",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Documents_with_expenses"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "documents_with_expenses"
    ],
    "question": "How many documents have expenses?",
    "question_toks": [
      "How",
      "many",
      "documents",
      "have",
      "expenses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "river_name",
      ")",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "idaho",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "river_name",
      ")",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "how many rivers are in idaho",
    "question_toks": [
      "how",
      "many",
      "rivers",
      "are",
      "in",
      "idaho"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"idaho\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT avg(Profits_billion) FROM Companies",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Profits_billion",
      ")",
      "FROM",
      "Companies"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "profits_billion",
      ")",
      "from",
      "companies"
    ],
    "question": "Compute the average profits companies make.",
    "question_toks": [
      "Compute",
      "the",
      "average",
      "profits",
      "companies",
      "make",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Financial_transactions",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Financial_transactions"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "financial_transactions"
    ],
    "question": "How many transactions do we have?",
    "question_toks": [
      "How",
      "many",
      "transactions",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "border",
      ")",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "border",
      ")",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "kentucky borders how many states",
    "question_toks": [
      "kentucky",
      "borders",
      "how",
      "many",
      "states"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
    "query_toks": [
      "SELECT",
      "employee_id",
      "FROM",
      "Employees",
      "EXCEPT",
      "SELECT",
      "Destroyed_by_Employee_ID",
      "FROM",
      "Documents_to_be_destroyed"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      "from",
      "employees",
      "except",
      "select",
      "destroyed_by_employee_id",
      "from",
      "documents_to_be_destroyed"
    ],
    "question": "Which employees do not destroy any document? Find their employee ids.",
    "question_toks": [
      "Which",
      "employees",
      "do",
      "not",
      "destroy",
      "any",
      "document",
      "?",
      "Find",
      "their",
      "employee",
      "ids",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              7
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  30,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "river_name",
      ")",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "idaho",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "river_name",
      ")",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "how many rivers does idaho have",
    "question_toks": [
      "how",
      "many",
      "rivers",
      "does",
      "idaho",
      "have"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"idaho\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT Team FROM player ORDER BY Team ASC",
    "query_toks": [
      "SELECT",
      "Team",
      "FROM",
      "player",
      "ORDER",
      "BY",
      "Team",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "team",
      "from",
      "player",
      "order",
      "by",
      "team",
      "asc"
    ],
    "question": "Find the team of each player and sort them in ascending alphabetical order.",
    "question_toks": [
      "Find",
      "the",
      "team",
      "of",
      "each",
      "player",
      "and",
      "sort",
      "them",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT employee_name FROM Employees WHERE role_code  =  \"HR\"",
    "query_toks": [
      "SELECT",
      "employee_name",
      "FROM",
      "Employees",
      "WHERE",
      "role_code",
      "=",
      "``",
      "HR",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "employee_name",
      "from",
      "employees",
      "where",
      "role_code",
      "=",
      "value"
    ],
    "question": "Which employees have the role with code \"HR\"? Find their names.",
    "question_toks": [
      "Which",
      "employees",
      "have",
      "the",
      "role",
      "with",
      "code",
      "``",
      "HR",
      "''",
      "?",
      "Find",
      "their",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"HR\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "illinois",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "name the rivers in illinois",
    "question_toks": [
      "name",
      "the",
      "rivers",
      "in",
      "illinois"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"illinois\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT DISTINCT card_type_code FROM Customers_Cards",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "card_type_code",
      "FROM",
      "Customers_Cards"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "card_type_code",
      "from",
      "customers_cards"
    ],
    "question": "What are the different card type codes?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "card",
      "type",
      "codes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "performance_attendance",
    "query": "SELECT HOST FROM performance ORDER BY Attendance ASC",
    "query_toks": [
      "SELECT",
      "HOST",
      "FROM",
      "performance",
      "ORDER",
      "BY",
      "Attendance",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "host",
      "from",
      "performance",
      "order",
      "by",
      "attendance",
      "asc"
    ],
    "question": "List the hosts of performances in ascending order of attendance.",
    "question_toks": [
      "List",
      "the",
      "hosts",
      "of",
      "performances",
      "in",
      "ascending",
      "order",
      "of",
      "attendance",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT LName FROM STUDENT WHERE Sex  =  \"F\" ORDER BY Age DESC",
    "query_toks": [
      "SELECT",
      "LName",
      "FROM",
      "STUDENT",
      "WHERE",
      "Sex",
      "=",
      "``",
      "F",
      "''",
      "ORDER",
      "BY",
      "Age",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "lname",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value",
      "order",
      "by",
      "age",
      "desc"
    ],
    "question": "What are the last names of female students, ordered by age descending?",
    "question_toks": [
      "What",
      "are",
      "the",
      "last",
      "names",
      "of",
      "female",
      "students",
      ",",
      "ordered",
      "by",
      "age",
      "descending",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT firstname FROM teachers WHERE classroom  =  110",
    "query_toks": [
      "SELECT",
      "firstname",
      "FROM",
      "teachers",
      "WHERE",
      "classroom",
      "=",
      "110"
    ],
    "query_toks_no_value": [
      "select",
      "firstname",
      "from",
      "teachers",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "Which teachers teach in classroom 110? Give me their first names.",
    "question_toks": [
      "Which",
      "teachers",
      "teach",
      "in",
      "classroom",
      "110",
      "?",
      "Give",
      "me",
      "their",
      "first",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          110.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "browser_web",
    "query": "SELECT count(*) FROM browser WHERE market_share  >=  5",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "browser",
      "WHERE",
      "market_share",
      ">",
      "=",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "browser",
      "where",
      "market_share",
      ">",
      "=",
      "value"
    ],
    "question": "How many main stream browsers whose market share is at least 5 exist?",
    "question_toks": [
      "How",
      "many",
      "main",
      "stream",
      "browsers",
      "whose",
      "market",
      "share",
      "is",
      "at",
      "least",
      "5",
      "exist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(DISTINCT rating) FROM film",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "rating",
      ")",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "rating",
      ")",
      "from",
      "film"
    ],
    "question": "Count the number of different film ratings.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "film",
      "ratings",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                42,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate",
    "query_toks": [
      "SELECT",
      "eid",
      "FROM",
      "Employee",
      "EXCEPT",
      "SELECT",
      "eid",
      "FROM",
      "Certificate"
    ],
    "query_toks_no_value": [
      "select",
      "eid",
      "from",
      "employee",
      "except",
      "select",
      "eid",
      "from",
      "certificate"
    ],
    "question": "Show ids for all employees who don't have a certificate.",
    "question_toks": [
      "Show",
      "ids",
      "for",
      "all",
      "employees",
      "who",
      "do",
      "n't",
      "have",
      "a",
      "certificate",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              3
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  15,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Projects",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Projects"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "projects"
    ],
    "question": "Show the number of projects.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "projects",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT count(*) FROM club",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "club"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "club"
    ],
    "question": "How many clubs are there?",
    "question_toks": [
      "How",
      "many",
      "clubs",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300",
    "query_toks": [
      "SELECT",
      "dorm_name",
      "FROM",
      "dorm",
      "WHERE",
      "student_capacity",
      ">",
      "300"
    ],
    "query_toks_no_value": [
      "select",
      "dorm_name",
      "from",
      "dorm",
      "where",
      "student_capacity",
      ">",
      "value"
    ],
    "question": "What are the names of all the dorms that can accomdate more than 300 students?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "dorms",
      "that",
      "can",
      "accomdate",
      "more",
      "than",
      "300",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          300.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "host_city",
      "FROM",
      "hosting_city",
      "ORDER",
      "BY",
      "YEAR",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "host_city",
      "from",
      "hosting_city",
      "order",
      "by",
      "year",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the city that hosted some events in the most recent year. What is the id of this city?",
    "question_toks": [
      "Find",
      "the",
      "city",
      "that",
      "hosted",
      "some",
      "events",
      "in",
      "the",
      "most",
      "recent",
      "year",
      ".",
      "What",
      "is",
      "the",
      "id",
      "of",
      "this",
      "city",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\"",
    "query_toks": [
      "SELECT",
      "location_code",
      "FROM",
      "Ref_locations",
      "WHERE",
      "location_name",
      "=",
      "``",
      "Canada",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "location_code",
      "from",
      "ref_locations",
      "where",
      "location_name",
      "=",
      "value"
    ],
    "question": "Show the location code of the country \"Canada\".",
    "question_toks": [
      "Show",
      "the",
      "location",
      "code",
      "of",
      "the",
      "country",
      "``",
      "Canada",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Canada\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT max(Age) FROM STUDENT",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "Age",
      ")",
      "FROM",
      "STUDENT"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "age",
      ")",
      "from",
      "student"
    ],
    "question": "Find the maximum age of all the students.",
    "question_toks": [
      "Find",
      "the",
      "maximum",
      "age",
      "of",
      "all",
      "the",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;",
    "query_toks": [
      "SELECT",
      "salary",
      "FROM",
      "salary",
      "WHERE",
      "YEAR",
      "=",
      "2001",
      "ORDER",
      "BY",
      "salary",
      "DESC",
      "LIMIT",
      "3",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "salary",
      "from",
      "salary",
      "where",
      "year",
      "=",
      "value",
      "order",
      "by",
      "salary",
      "desc",
      "limit",
      "value"
    ],
    "question": "How much salary did the top 3 well-paid players get in 2001?",
    "question_toks": [
      "How",
      "much",
      "salary",
      "did",
      "the",
      "top",
      "3",
      "well-paid",
      "players",
      "get",
      "in",
      "2001",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            20
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                276,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              272,
              false
            ],
            null
          ],
          2001.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              276,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "performance_attendance",
    "query": "SELECT LOCATION FROM performance GROUP BY LOCATION HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "performance",
      "GROUP",
      "BY",
      "LOCATION",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "performance",
      "group",
      "by",
      "location",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show the locations that have at least two performances.",
    "question_toks": [
      "Show",
      "the",
      "locations",
      "that",
      "have",
      "at",
      "least",
      "two",
      "performances",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          8,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( city_name ) FROM city;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "city_name",
      ")",
      "FROM",
      "city",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "city_name",
      ")",
      "from",
      "city"
    ],
    "question": "how many cities does the usa have",
    "question_toks": [
      "how",
      "many",
      "cities",
      "does",
      "the",
      "usa",
      "have"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT DISTINCT city_code FROM Student",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "city_code",
      "FROM",
      "Student"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "city_code",
      "from",
      "student"
    ],
    "question": "Show all cities where students live.",
    "question_toks": [
      "Show",
      "all",
      "cities",
      "where",
      "students",
      "live",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_deliveries",
    "query": "SELECT count(*) FROM customers",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "Find the number of customers in total.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "customers",
      "in",
      "total",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(DISTINCT sportname) FROM Sportsinfo",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "sportname",
      ")",
      "FROM",
      "Sportsinfo"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "sportname",
      ")",
      "from",
      "sportsinfo"
    ],
    "question": "How many sports do we have?",
    "question_toks": [
      "How",
      "many",
      "sports",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                16,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT DISTINCT LOCATION FROM cinema",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "LOCATION",
      "FROM",
      "cinema"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "location",
      "from",
      "cinema"
    ],
    "question": "What are all the locations with a cinema?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "locations",
      "with",
      "a",
      "cinema",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT area FROM state WHERE state_name  =  \"new mexico\";",
    "query_toks": [
      "SELECT",
      "area",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "new",
      "mexico",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "area",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how big is new mexico",
    "question_toks": [
      "how",
      "big",
      "is",
      "new",
      "mexico"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"new mexico\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC",
    "query_toks": [
      "SELECT",
      "Case_burden",
      "FROM",
      "county_public_safety",
      "ORDER",
      "BY",
      "Population",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "case_burden",
      "from",
      "county_public_safety",
      "order",
      "by",
      "population",
      "desc"
    ],
    "question": "Show the case burden of counties in descending order of population.",
    "question_toks": [
      "Show",
      "the",
      "case",
      "burden",
      "of",
      "counties",
      "in",
      "descending",
      "order",
      "of",
      "population",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clubname FROM club WHERE clublocation  =  \"AKW\"",
    "query_toks": [
      "SELECT",
      "clubname",
      "FROM",
      "club",
      "WHERE",
      "clublocation",
      "=",
      "``",
      "AKW",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clubname",
      "from",
      "club",
      "where",
      "clublocation",
      "=",
      "value"
    ],
    "question": "Find the name of all the clubs at \"AKW\".",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "all",
      "the",
      "clubs",
      "at",
      "``",
      "AKW",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"AKW\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM park WHERE state  =  'NY';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "park",
      "WHERE",
      "state",
      "=",
      "'NY",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "park",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "How many parks are there in the state of NY?",
    "question_toks": [
      "How",
      "many",
      "parks",
      "are",
      "there",
      "in",
      "the",
      "state",
      "of",
      "NY",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            17
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              210,
              false
            ],
            null
          ],
          "\"NY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Secretary_Vote",
      "FROM",
      "VOTING_RECORD",
      "WHERE",
      "ELECTION_CYCLE",
      "=",
      "``",
      "Fall",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "secretary_vote",
      "from",
      "voting_record",
      "where",
      "election_cycle",
      "=",
      "value"
    ],
    "question": "What are the distinct secretary votes in the fall election cycle?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "secretary",
      "votes",
      "in",
      "the",
      "fall",
      "election",
      "cycle",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Fall\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT count(DISTINCT UID) FROM tweets",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "UID",
      ")",
      "FROM",
      "tweets"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "uid",
      ")",
      "from",
      "tweets"
    ],
    "question": "Find the number of users who posted some tweets.",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "users",
      "who",
      "posted",
      "some",
      "tweets",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                4,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM ROLES",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ROLES"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "roles"
    ],
    "question": "Count the total number of roles listed.",
    "question_toks": [
      "Count",
      "the",
      "total",
      "number",
      "of",
      "roles",
      "listed",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT name FROM driver ORDER BY age DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "driver",
      "ORDER",
      "BY",
      "age",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "driver",
      "order",
      "by",
      "age",
      "desc"
    ],
    "question": "Show the name of drivers in descending order of age.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "of",
      "drivers",
      "in",
      "descending",
      "order",
      "of",
      "age",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT count(DISTINCT gender) FROM dorm",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "gender",
      ")",
      "FROM",
      "dorm"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "gender",
      ")",
      "from",
      "dorm"
    ],
    "question": "How many different genders are there in the dorms?",
    "question_toks": [
      "How",
      "many",
      "different",
      "genders",
      "are",
      "there",
      "in",
      "the",
      "dorms",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      "FROM",
      "catalog_contents",
      "WHERE",
      "next_entry_id",
      ">",
      "8"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      "from",
      "catalog_contents",
      "where",
      "next_entry_id",
      ">",
      "value"
    ],
    "question": "Name all the products with next entry ID greater than 8.",
    "question_toks": [
      "Name",
      "all",
      "the",
      "products",
      "with",
      "next",
      "entry",
      "ID",
      "greater",
      "than",
      "8",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          8.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";",
    "query_toks": [
      "SELECT",
      "lowest_point",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "iowa",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "lowest_point",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the lowest point in the state of iowa",
    "question_toks": [
      "what",
      "is",
      "the",
      "lowest",
      "point",
      "in",
      "the",
      "state",
      "of",
      "iowa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"iowa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\"",
    "query_toks": [
      "SELECT",
      "budget_type_description",
      "FROM",
      "Ref_budget_codes",
      "WHERE",
      "budget_type_code",
      "=",
      "``",
      "ORG",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "budget_type_description",
      "from",
      "ref_budget_codes",
      "where",
      "budget_type_code",
      "=",
      "value"
    ],
    "question": "What is the description for the budget type with code ORG?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "for",
      "the",
      "budget",
      "type",
      "with",
      "code",
      "ORG",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ORG\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT count(*) FROM Employee",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Employee"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "employee"
    ],
    "question": "What is the number of employees?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "employees",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "person",
      "EXCEPT",
      "SELECT",
      "name",
      "FROM",
      "PersonFriend"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "person",
      "except",
      "select",
      "name",
      "from",
      "personfriend"
    ],
    "question": "Who is the person that has no friend?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "person",
      "that",
      "has",
      "no",
      "friend",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  6,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT name FROM event ORDER BY YEAR DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "event",
      "ORDER",
      "BY",
      "YEAR",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "event",
      "order",
      "by",
      "year",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the event that happened in the most recent year?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "event",
      "that",
      "happened",
      "in",
      "the",
      "most",
      "recent",
      "year",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "baseball_1",
    "query": "SELECT count(*) FROM park WHERE city = 'Atlanta';",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "park",
      "WHERE",
      "city",
      "=",
      "'Atlanta",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "park",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "How many parks does Atlanta city have?",
    "question_toks": [
      "How",
      "many",
      "parks",
      "does",
      "Atlanta",
      "city",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            17
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              209,
              false
            ],
            null
          ],
          "\"Atlanta\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Student WHERE age  =  18",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student",
      "WHERE",
      "age",
      "=",
      "18"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "where",
      "age",
      "=",
      "value"
    ],
    "question": "How many students are age 18?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "age",
      "18",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          18.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "solvency_ii",
    "query": "SELECT count(*) FROM Products",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Products"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products"
    ],
    "question": "How many products are there?",
    "question_toks": [
      "How",
      "many",
      "products",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "county_public_safety",
      "ORDER",
      "BY",
      "Population",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "county_public_safety",
      "order",
      "by",
      "population",
      "desc"
    ],
    "question": "List the names of counties in descending order of population.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "counties",
      "in",
      "descending",
      "order",
      "of",
      "population",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\"",
    "query_toks": [
      "SELECT",
      "date_stored",
      "FROM",
      "All_documents",
      "WHERE",
      "Document_name",
      "=",
      "``",
      "Marry",
      "CV",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "date_stored",
      "from",
      "all_documents",
      "where",
      "document_name",
      "=",
      "value"
    ],
    "question": "What is the date when the document \"Marry CV\" was stored?",
    "question_toks": [
      "What",
      "is",
      "the",
      "date",
      "when",
      "the",
      "document",
      "``",
      "Marry",
      "CV",
      "''",
      "was",
      "stored",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Marry CV\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM ROLES",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "ROLES"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "roles"
    ],
    "question": "How many roles are there?",
    "question_toks": [
      "How",
      "many",
      "roles",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT dept_name FROM department ORDER BY budget LIMIT 1",
    "query_toks": [
      "SELECT",
      "dept_name",
      "FROM",
      "department",
      "ORDER",
      "BY",
      "budget",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "dept_name",
      "from",
      "department",
      "order",
      "by",
      "budget",
      "limit",
      "value"
    ],
    "question": "Give the name of the department with the lowest budget.",
    "question_toks": [
      "Give",
      "the",
      "name",
      "of",
      "the",
      "department",
      "with",
      "the",
      "lowest",
      "budget",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sakila_1",
    "query": "SELECT count(DISTINCT last_name) FROM actor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "last_name",
      ")",
      "FROM",
      "actor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "last_name",
      ")",
      "from",
      "actor"
    ],
    "question": "How many different last names do the actors and actresses have?",
    "question_toks": [
      "How",
      "many",
      "different",
      "last",
      "names",
      "do",
      "the",
      "actors",
      "and",
      "actresses",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT count(*) FROM VOTING_RECORD",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "VOTING_RECORD"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "voting_record"
    ],
    "question": "How many voting records do we have?",
    "question_toks": [
      "How",
      "many",
      "voting",
      "records",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT homepage FROM conference WHERE name  =  \"VLDB\";",
    "query_toks": [
      "SELECT",
      "homepage",
      "FROM",
      "conference",
      "WHERE",
      "name",
      "=",
      "``",
      "VLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "homepage",
      "from",
      "conference",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "return me the homepage of the VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "homepage",
      "of",
      "the",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "flno",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "flno",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "value"
    ],
    "question": "Show all flight number from Los Angeles.",
    "question_toks": [
      "Show",
      "all",
      "flight",
      "number",
      "from",
      "Los",
      "Angeles",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "orders",
      "ORDER",
      "BY",
      "date_order_placed",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "orders",
      "order",
      "by",
      "date_order_placed",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the id of the most recent order?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "most",
      "recent",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_management",
    "query": "SELECT name FROM head WHERE born_state != 'California'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "head",
      "WHERE",
      "born_state",
      "!",
      "=",
      "'California",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "head",
      "where",
      "born_state",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of the heads who are born outside the California state?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "heads",
      "who",
      "are",
      "born",
      "outside",
      "the",
      "California",
      "state",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"California\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "EXCEPT",
      "SELECT",
      "StuID",
      "FROM",
      "Sportsinfo"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "except",
      "select",
      "stuid",
      "from",
      "sportsinfo"
    ],
    "question": "What are the ids of all students who don't play sports?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "students",
      "who",
      "do",
      "n't",
      "play",
      "sports",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              3
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  15,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT detention_summary FROM Detention",
    "query_toks": [
      "SELECT",
      "detention_summary",
      "FROM",
      "Detention"
    ],
    "query_toks_no_value": [
      "select",
      "detention_summary",
      "from",
      "detention"
    ],
    "question": "Return all detention summaries.",
    "question_toks": [
      "Return",
      "all",
      "detention",
      "summaries",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                54,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "airport",
      "ORDER",
      "BY",
      "International_Passengers",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "airport",
      "order",
      "by",
      "international_passengers",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is all the information on the airport with the largest number of international passengers?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "information",
      "on",
      "the",
      "airport",
      "with",
      "the",
      "largest",
      "number",
      "of",
      "international",
      "passengers",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Student WHERE age  =  18",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Student",
      "WHERE",
      "age",
      "=",
      "18"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student",
      "where",
      "age",
      "=",
      "value"
    ],
    "question": "How many students are 18 years old?",
    "question_toks": [
      "How",
      "many",
      "students",
      "are",
      "18",
      "years",
      "old",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          18.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM state WHERE capital  =  \"salem\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "state",
      "WHERE",
      "capital",
      "=",
      "``",
      "salem",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "state",
      "where",
      "capital",
      "=",
      "value"
    ],
    "question": "salem is the capital of which state",
    "question_toks": [
      "salem",
      "is",
      "the",
      "capital",
      "of",
      "which",
      "state"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"salem\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "catalog_entry_name",
      "FROM",
      "catalog_contents",
      "ORDER",
      "BY",
      "height",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "catalog_entry_name",
      "from",
      "catalog_contents",
      "order",
      "by",
      "height",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which catalog content has the highest height? Give me the catalog entry name.",
    "question_toks": [
      "Which",
      "catalog",
      "content",
      "has",
      "the",
      "highest",
      "height",
      "?",
      "Give",
      "me",
      "the",
      "catalog",
      "entry",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "FacID",
      ")",
      "FROM",
      "Faculty_participates_in"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "facid",
      ")",
      "from",
      "faculty_participates_in"
    ],
    "question": "How many faculty members participate in an activity?",
    "question_toks": [
      "How",
      "many",
      "faculty",
      "members",
      "participate",
      "in",
      "an",
      "activity",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT job_title FROM jobs WHERE min_salary  >  9000",
    "query_toks": [
      "SELECT",
      "job_title",
      "FROM",
      "jobs",
      "WHERE",
      "min_salary",
      ">",
      "9000"
    ],
    "query_toks_no_value": [
      "select",
      "job_title",
      "from",
      "jobs",
      "where",
      "min_salary",
      ">",
      "value"
    ],
    "question": "display the job title of jobs which minimum salary is greater than 9000.",
    "question_toks": [
      "display",
      "the",
      "job",
      "title",
      "of",
      "jobs",
      "which",
      "minimum",
      "salary",
      "is",
      "greater",
      "than",
      "9000",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          9000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "city",
      "FROM",
      "branch",
      "WHERE",
      "membership_amount",
      ">",
      "=",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "city",
      "from",
      "branch",
      "where",
      "membership_amount",
      ">",
      "=",
      "value"
    ],
    "question": "What are the different cities that have more than 100 memberships?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "cities",
      "that",
      "have",
      "more",
      "than",
      "100",
      "memberships",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_host",
    "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "party",
      "ORDER",
      "BY",
      "Number_of_hosts",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "party",
      "order",
      "by",
      "number_of_hosts",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the location of the party with the most hosts?",
    "question_toks": [
      "What",
      "is",
      "the",
      "location",
      "of",
      "the",
      "party",
      "with",
      "the",
      "most",
      "hosts",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "query": "SELECT DISTINCT address_type_code FROM customer_addresses",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "address_type_code",
      "FROM",
      "customer_addresses"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "address_type_code",
      "from",
      "customer_addresses"
    ],
    "question": "What are the distinct address type codes for all customer addresses?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "address",
      "type",
      "codes",
      "for",
      "all",
      "customer",
      "addresses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT city FROM addresses WHERE zip_postcode  =  255",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "addresses",
      "WHERE",
      "zip_postcode",
      "=",
      "255"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "addresses",
      "where",
      "zip_postcode",
      "=",
      "value"
    ],
    "question": "Which city is post code 255 located in?",
    "question_toks": [
      "Which",
      "city",
      "is",
      "post",
      "code",
      "255",
      "located",
      "in",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          255.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";",
    "query_toks": [
      "SELECT",
      "river_name",
      "FROM",
      "river",
      "WHERE",
      "traverse",
      "=",
      "``",
      "illinois",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "river_name",
      "from",
      "river",
      "where",
      "traverse",
      "=",
      "value"
    ],
    "question": "what are the rivers in illinois",
    "question_toks": [
      "what",
      "are",
      "the",
      "rivers",
      "in",
      "illinois"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"illinois\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT count(DISTINCT party_name) FROM party",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "party_name",
      ")",
      "FROM",
      "party"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "party_name",
      ")",
      "from",
      "party"
    ],
    "question": "Count the number of different parties.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "parties",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT count(*) FROM artist",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artist"
    ],
    "question": "How many artists do we have?",
    "question_toks": [
      "How",
      "many",
      "artists",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "riding_club",
    "query": "SELECT Player_name FROM player ORDER BY Votes ASC",
    "query_toks": [
      "SELECT",
      "Player_name",
      "FROM",
      "player",
      "ORDER",
      "BY",
      "Votes",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "player_name",
      "from",
      "player",
      "order",
      "by",
      "votes",
      "asc"
    ],
    "question": "List the names of players in ascending order of votes.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "players",
      "in",
      "ascending",
      "order",
      "of",
      "votes",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "workshop_paper",
    "query": "SELECT avg(Scores) FROM submission",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Scores",
      ")",
      "FROM",
      "submission"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "scores",
      ")",
      "from",
      "submission"
    ],
    "question": "Compute the average score of submissions.",
    "question_toks": [
      "Compute",
      "the",
      "average",
      "score",
      "of",
      "submissions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Name FROM mountain ORDER BY Name ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "mountain",
      "ORDER",
      "BY",
      "Name",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "mountain",
      "order",
      "by",
      "name",
      "asc"
    ],
    "question": "What are the names of mountains in ascending alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "mountains",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"animal\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Allergy_type",
      "WHERE",
      "allergytype",
      "=",
      "``",
      "animal",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "allergy_type",
      "where",
      "allergytype",
      "=",
      "value"
    ],
    "question": "How many allergies have type animal?",
    "question_toks": [
      "How",
      "many",
      "allergies",
      "have",
      "type",
      "animal",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"animal\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "chinook_1",
    "query": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\"",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "CUSTOMER",
      "WHERE",
      "State",
      "=",
      "``",
      "NY",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "customer",
      "where",
      "state",
      "=",
      "value"
    ],
    "question": "Find all the customer information in state NY.",
    "question_toks": [
      "Find",
      "all",
      "the",
      "customer",
      "information",
      "in",
      "state",
      "NY",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"NY\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "state_name",
      ")",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "state_name",
      ")",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "how many states have a city called springfield",
    "question_toks": [
      "how",
      "many",
      "states",
      "have",
      "a",
      "city",
      "called",
      "springfield"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election_representative",
    "query": "SELECT Party FROM representative GROUP BY Party HAVING COUNT(*)  >=  3",
    "query_toks": [
      "SELECT",
      "Party",
      "FROM",
      "representative",
      "GROUP",
      "BY",
      "Party",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "party",
      "from",
      "representative",
      "group",
      "by",
      "party",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What parties have at least three representatives?",
    "question_toks": [
      "What",
      "parties",
      "have",
      "at",
      "least",
      "three",
      "representatives",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT DISTINCT LOCATION FROM cinema",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "LOCATION",
      "FROM",
      "cinema"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "location",
      "from",
      "cinema"
    ],
    "question": "Find the distinct locations that has a cinema.",
    "question_toks": [
      "Find",
      "the",
      "distinct",
      "locations",
      "that",
      "has",
      "a",
      "cinema",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "university_basketball",
    "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "founded",
      "FROM",
      "university",
      "ORDER",
      "BY",
      "enrollment",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "founded",
      "from",
      "university",
      "order",
      "by",
      "enrollment",
      "desc",
      "limit",
      "value"
    ],
    "question": "When was the school with the largest enrollment founded?",
    "question_toks": [
      "When",
      "was",
      "the",
      "school",
      "with",
      "the",
      "largest",
      "enrollment",
      "founded",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT Fname FROM FACULTY WHERE Rank  =  \"Professor\" ORDER BY Fname",
    "query_toks": [
      "SELECT",
      "Fname",
      "FROM",
      "FACULTY",
      "WHERE",
      "Rank",
      "=",
      "``",
      "Professor",
      "''",
      "ORDER",
      "BY",
      "Fname"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value",
      "order",
      "by",
      "fname"
    ],
    "question": "What are the first names for all faculty professors, ordered by first name?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "for",
      "all",
      "faculty",
      "professors",
      ",",
      "ordered",
      "by",
      "first",
      "name",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5",
    "query_toks": [
      "SELECT",
      "card_type_code",
      "FROM",
      "Customers_cards",
      "GROUP",
      "BY",
      "card_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "card_type_code",
      "from",
      "customers_cards",
      "group",
      "by",
      "card_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show card type codes with at least 5 cards.",
    "question_toks": [
      "Show",
      "card",
      "type",
      "codes",
      "with",
      "at",
      "least",
      "5",
      "cards",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_for_hire",
    "query": "SELECT product_id FROM products_booked GROUP BY product_id HAVING count(*)  =  3",
    "query_toks": [
      "SELECT",
      "product_id",
      "FROM",
      "products_booked",
      "GROUP",
      "BY",
      "product_id",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "=",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "product_id",
      "from",
      "products_booked",
      "group",
      "by",
      "product_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value"
    ],
    "question": "What is the id of the product that is booked for 3 times?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "product",
      "that",
      "is",
      "booked",
      "for",
      "3",
      "times",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                37,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          37,
          false
        ]
      ],
      "having": [
        [
          false,
          2,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT firstname FROM list WHERE classroom  =  108",
    "query_toks": [
      "SELECT",
      "firstname",
      "FROM",
      "list",
      "WHERE",
      "classroom",
      "=",
      "108"
    ],
    "query_toks_no_value": [
      "select",
      "firstname",
      "from",
      "list",
      "where",
      "classroom",
      "=",
      "value"
    ],
    "question": "What are the first names of students in room 108?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "students",
      "in",
      "room",
      "108",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          108.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "candidate_poll",
    "query": "SELECT name FROM people ORDER BY date_of_birth",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "people",
      "ORDER",
      "BY",
      "date_of_birth"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "order",
      "by",
      "date_of_birth"
    ],
    "question": "List all people names in the order of their date of birth from old to young.",
    "question_toks": [
      "List",
      "all",
      "people",
      "names",
      "in",
      "the",
      "order",
      "of",
      "their",
      "date",
      "of",
      "birth",
      "from",
      "old",
      "to",
      "young",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\"",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "StuID",
      ")",
      "FROM",
      "ENROLLED_IN",
      "WHERE",
      "Grade",
      "=",
      "``",
      "B",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "stuid",
      ")",
      "from",
      "enrolled_in",
      "where",
      "grade",
      "=",
      "value"
    ],
    "question": "How many students have had at least one \"B\" grade?",
    "question_toks": [
      "How",
      "many",
      "students",
      "have",
      "had",
      "at",
      "least",
      "one",
      "``",
      "B",
      "''",
      "grade",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                35,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          "\"B\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT count(*) FROM race",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "race"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "race"
    ],
    "question": "Count the number of races.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "races",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_products_contacts",
    "query": "SELECT count(*) FROM addresses WHERE country  =  'USA'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "addresses",
      "WHERE",
      "country",
      "=",
      "'USA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many addresses are there in country USA?",
    "question_toks": [
      "How",
      "many",
      "addresses",
      "are",
      "there",
      "in",
      "country",
      "USA",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"USA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "border",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "border",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "which state borders kentucky",
    "question_toks": [
      "which",
      "state",
      "borders",
      "kentucky"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT title FROM papers WHERE title LIKE \"%Database%\"",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "papers",
      "WHERE",
      "title",
      "LIKE",
      "``",
      "%",
      "Database",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "papers",
      "where",
      "title",
      "like",
      "value"
    ],
    "question": "Which paper's title contains the word \"Database\"?",
    "question_toks": [
      "Which",
      "paper",
      "'s",
      "title",
      "contains",
      "the",
      "word",
      "``",
      "Database",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"%Database%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT count(*) FROM airports WHERE name LIKE '%International%'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "name",
      "LIKE",
      "'",
      "%",
      "International",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "airports",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "How many airports' names have the word Interanation in them?",
    "question_toks": [
      "How",
      "many",
      "airports",
      "'",
      "names",
      "have",
      "the",
      "word",
      "Interanation",
      "in",
      "them",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"%International%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM scientists ORDER BY name",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "scientists",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "scientists",
      "order",
      "by",
      "name"
    ],
    "question": "What are the names of all the scientists in alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "scientists",
      "in",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT count(*) FROM entrepreneur",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "entrepreneur"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "entrepreneur"
    ],
    "question": "How many entrepreneurs are there?",
    "question_toks": [
      "How",
      "many",
      "entrepreneurs",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "driving_school",
    "query": "SELECT count(*) FROM Addresses WHERE state_province_county = \"Georgia\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Addresses",
      "WHERE",
      "state_province_county",
      "=",
      "``",
      "Georgia",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "addresses",
      "where",
      "state_province_county",
      "=",
      "value"
    ],
    "question": "How many staff live in state Georgia?",
    "question_toks": [
      "How",
      "many",
      "staff",
      "live",
      "in",
      "state",
      "Georgia",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Georgia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"Pass\"",
    "query_toks": [
      "SELECT",
      "candidate_id",
      "FROM",
      "candidate_assessments",
      "WHERE",
      "asessment_outcome_code",
      "=",
      "``",
      "Pass",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "candidate_id",
      "from",
      "candidate_assessments",
      "where",
      "asessment_outcome_code",
      "=",
      "value"
    ],
    "question": "Find id of candidates whose assessment code is \"Pass\"?",
    "question_toks": [
      "Find",
      "id",
      "of",
      "candidates",
      "whose",
      "assessment",
      "code",
      "is",
      "``",
      "Pass",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          "\"Pass\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT sum(no_of_customers) FROM bank",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "no_of_customers",
      ")",
      "FROM",
      "bank"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "no_of_customers",
      ")",
      "from",
      "bank"
    ],
    "question": "How many customers are there?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "order_id",
      "FROM",
      "orders",
      "ORDER",
      "BY",
      "date_order_placed"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "order_id",
      "from",
      "orders",
      "order",
      "by",
      "date_order_placed"
    ],
    "question": "What are ids of the all distinct orders, sorted by placement date?",
    "question_toks": [
      "What",
      "are",
      "ids",
      "of",
      "the",
      "all",
      "distinct",
      "orders",
      ",",
      "sorted",
      "by",
      "placement",
      "date",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"",
    "query_toks": [
      "SELECT",
      "origin",
      "FROM",
      "Flight",
      "WHERE",
      "destination",
      "=",
      "``",
      "Honolulu",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "origin",
      "from",
      "flight",
      "where",
      "destination",
      "=",
      "value"
    ],
    "question": "What are the origins of all flights that are headed to Honolulu?",
    "question_toks": [
      "What",
      "are",
      "the",
      "origins",
      "of",
      "all",
      "flights",
      "that",
      "are",
      "headed",
      "to",
      "Honolulu",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Honolulu\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT DISTINCT CLASS FROM race",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "CLASS",
      "FROM",
      "race"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "class",
      "from",
      "race"
    ],
    "question": "What are the distinct classes that races can have?",
    "question_toks": [
      "What",
      "are",
      "the",
      "distinct",
      "classes",
      "that",
      "races",
      "can",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT dept_address FROM department WHERE dept_name  =  'History'",
    "query_toks": [
      "SELECT",
      "dept_address",
      "FROM",
      "department",
      "WHERE",
      "dept_name",
      "=",
      "'History",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "dept_address",
      "from",
      "department",
      "where",
      "dept_name",
      "=",
      "value"
    ],
    "question": "what is the address of history department?",
    "question_toks": [
      "what",
      "is",
      "the",
      "address",
      "of",
      "history",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"History\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "behavior_monitoring",
    "query": "SELECT city FROM Addresses ORDER BY city",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "Addresses",
      "ORDER",
      "BY",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "addresses",
      "order",
      "by",
      "city"
    ],
    "question": "List all cities of addresses in alphabetical order.",
    "question_toks": [
      "List",
      "all",
      "cities",
      "of",
      "addresses",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "query": "SELECT count(*) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts"
    ],
    "question": "How many accounts do we have?",
    "question_toks": [
      "How",
      "many",
      "accounts",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "departments",
      "WHERE",
      "department_name",
      "=",
      "'Marketing",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "departments",
      "where",
      "department_name",
      "=",
      "value"
    ],
    "question": "display all the information about the department Marketing.",
    "question_toks": [
      "display",
      "all",
      "the",
      "information",
      "about",
      "the",
      "department",
      "Marketing",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Marketing\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "cName",
      "FROM",
      "college",
      "ORDER",
      "BY",
      "enr",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "college",
      "order",
      "by",
      "enr",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the names of schools with the top 3 largest size?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "schools",
      "with",
      "the",
      "top",
      "3",
      "largest",
      "size",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT dept_name FROM department ORDER BY dept_name",
    "query_toks": [
      "SELECT",
      "dept_name",
      "FROM",
      "department",
      "ORDER",
      "BY",
      "dept_name"
    ],
    "query_toks_no_value": [
      "select",
      "dept_name",
      "from",
      "department",
      "order",
      "by",
      "dept_name"
    ],
    "question": "list names of all departments ordered by their names.",
    "question_toks": [
      "list",
      "names",
      "of",
      "all",
      "departments",
      "ordered",
      "by",
      "their",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "pilot",
      "WHERE",
      "Age",
      "<",
      "=",
      "30",
      "ORDER",
      "BY",
      "Name",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "pilot",
      "where",
      "age",
      "<",
      "=",
      "value",
      "order",
      "by",
      "name",
      "desc"
    ],
    "question": "What are the names of all pilots 30 years old or young in descending alphabetical order?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "pilots",
      "30",
      "years",
      "old",
      "or",
      "young",
      "in",
      "descending",
      "alphabetical",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          6,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          30.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT DISTINCT name FROM nurse ORDER BY name",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "name",
      "FROM",
      "nurse",
      "ORDER",
      "BY",
      "name"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "name",
      "from",
      "nurse",
      "order",
      "by",
      "name"
    ],
    "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
    "question_toks": [
      "What",
      "is",
      "the",
      "alphabetically",
      "ordered",
      "list",
      "of",
      "all",
      "the",
      "distinct",
      "names",
      "of",
      "nurses",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "storm_record",
    "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'",
    "query_toks": [
      "SELECT",
      "region_name",
      "FROM",
      "region",
      "WHERE",
      "region_name",
      "!",
      "=",
      "'Denmark",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "region_name",
      "from",
      "region",
      "where",
      "region_name",
      "!",
      "=",
      "value"
    ],
    "question": "Return the names of all regions other than Denmark.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "all",
      "regions",
      "other",
      "than",
      "Denmark",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Denmark\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT StuID FROM Student WHERE Sex  =  'M'",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "WHERE",
      "Sex",
      "=",
      "'M",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "What are the student ids for all male students?",
    "question_toks": [
      "What",
      "are",
      "the",
      "student",
      "ids",
      "for",
      "all",
      "male",
      "students",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"M\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "Team",
      "FROM",
      "player",
      "ORDER",
      "BY",
      "Age",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "team",
      "from",
      "player",
      "order",
      "by",
      "age",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the teams that have the 5 oldest players?",
    "question_toks": [
      "What",
      "are",
      "the",
      "teams",
      "that",
      "have",
      "the",
      "5",
      "oldest",
      "players",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 5,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'",
    "query_toks": [
      "SELECT",
      "minister",
      "FROM",
      "party",
      "WHERE",
      "party_name",
      "!",
      "=",
      "'Progress",
      "Party",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "minister",
      "from",
      "party",
      "where",
      "party_name",
      "!",
      "=",
      "value"
    ],
    "question": "Show all ministers who do not belong to Progress Party.",
    "question_toks": [
      "Show",
      "all",
      "ministers",
      "who",
      "do",
      "not",
      "belong",
      "to",
      "Progress",
      "Party",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Progress Party\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "icfp_1",
    "query": "SELECT count(*) FROM inst",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "inst"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "inst"
    ],
    "question": "Count the number of institutions.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "institutions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "event_name",
      "FROM",
      "party_events",
      "GROUP",
      "BY",
      "event_name",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "event_name",
      "from",
      "party_events",
      "group",
      "by",
      "event_name",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which event names were used more than twice for party events?",
    "question_toks": [
      "Which",
      "event",
      "names",
      "were",
      "used",
      "more",
      "than",
      "twice",
      "for",
      "party",
      "events",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "boulder",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "people in boulder",
    "question_toks": [
      "people",
      "in",
      "boulder"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"boulder\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "border",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "border",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the adjacent state of kentucky",
    "question_toks": [
      "what",
      "is",
      "the",
      "adjacent",
      "state",
      "of",
      "kentucky"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "document_management",
    "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "documents",
      "GROUP",
      "BY",
      "document_type_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "documents",
      "group",
      "by",
      "document_type_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What document types have more than 2 corresponding documents?",
    "question_toks": [
      "What",
      "document",
      "types",
      "have",
      "more",
      "than",
      "2",
      "corresponding",
      "documents",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          20,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT avg(Age) FROM artist",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Age",
      ")",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "artist"
    ],
    "question": "Return the average age across all artists.",
    "question_toks": [
      "Return",
      "the",
      "average",
      "age",
      "across",
      "all",
      "artists",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Name FROM Team",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "Team"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "team"
    ],
    "question": "What are the names of all teams?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "teams",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_3",
    "query": "SELECT Fname FROM FACULTY WHERE Rank  =  \"Professor\" ORDER BY Fname",
    "query_toks": [
      "SELECT",
      "Fname",
      "FROM",
      "FACULTY",
      "WHERE",
      "Rank",
      "=",
      "``",
      "Professor",
      "''",
      "ORDER",
      "BY",
      "Fname"
    ],
    "query_toks_no_value": [
      "select",
      "fname",
      "from",
      "faculty",
      "where",
      "rank",
      "=",
      "value",
      "order",
      "by",
      "fname"
    ],
    "question": "Find the first names of faculties of rank Professor in alphabetic order.",
    "question_toks": [
      "Find",
      "the",
      "first",
      "names",
      "of",
      "faculties",
      "of",
      "rank",
      "Professor",
      "in",
      "alphabetic",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Professor\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\"",
    "query_toks": [
      "SELECT",
      "price_range",
      "FROM",
      "HOTELS",
      "WHERE",
      "star_rating_code",
      "=",
      "``",
      "5",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "price_range",
      "from",
      "hotels",
      "where",
      "star_rating_code",
      "=",
      "value"
    ],
    "question": "Show the price ranges of hotels with 5 star ratings.",
    "question_toks": [
      "Show",
      "the",
      "price",
      "ranges",
      "of",
      "hotels",
      "with",
      "5",
      "star",
      "ratings",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"5\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( state_name ) FROM state;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "state_name",
      ")",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "state_name",
      ")",
      "from",
      "state"
    ],
    "question": "how many states are in the usa",
    "question_toks": [
      "how",
      "many",
      "states",
      "are",
      "in",
      "the",
      "usa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT Name FROM wrestler WHERE Days_held  <  100",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "wrestler",
      "WHERE",
      "Days_held",
      "<",
      "100"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "wrestler",
      "where",
      "days_held",
      "<",
      "value"
    ],
    "question": "Return the names of wrestlers with fewer than 100 days held.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "wrestlers",
      "with",
      "fewer",
      "than",
      "100",
      "days",
      "held",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wine_1",
    "query": "SELECT Price FROM WINE WHERE YEAR  <  2010",
    "query_toks": [
      "SELECT",
      "Price",
      "FROM",
      "WINE",
      "WHERE",
      "YEAR",
      "<",
      "2010"
    ],
    "query_toks_no_value": [
      "select",
      "price",
      "from",
      "wine",
      "where",
      "year",
      "<",
      "value"
    ],
    "question": "Return the prices of wines produced before 2010.",
    "question_toks": [
      "Return",
      "the",
      "prices",
      "of",
      "wines",
      "produced",
      "before",
      "2010",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT count(*) FROM products WHERE price >= 180",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products",
      "WHERE",
      "price",
      ">",
      "=",
      "180"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products",
      "where",
      "price",
      ">",
      "=",
      "value"
    ],
    "question": "How many products have prices of at least 180?",
    "question_toks": [
      "How",
      "many",
      "products",
      "have",
      "prices",
      "of",
      "at",
      "least",
      "180",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          180.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT count(*) FROM Songs",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Songs"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "songs"
    ],
    "question": "How many songs are there?",
    "question_toks": [
      "How",
      "many",
      "songs",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\"",
    "query_toks": [
      "SELECT",
      "product_description",
      "FROM",
      "products",
      "WHERE",
      "product_name",
      "=",
      "``",
      "Chocolate",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "product_description",
      "from",
      "products",
      "where",
      "product_name",
      "=",
      "value"
    ],
    "question": "What is the description of the product named \"Chocolate\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "product",
      "named",
      "``",
      "Chocolate",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              20,
              false
            ],
            null
          ],
          "\"Chocolate\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT count(*) FROM services",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "services"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "services"
    ],
    "question": "Count the total number of available services.",
    "question_toks": [
      "Count",
      "the",
      "total",
      "number",
      "of",
      "available",
      "services",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";",
    "query_toks": [
      "SELECT",
      "lowest_point",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "iowa",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "lowest_point",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "where is the lowest spot in iowa",
    "question_toks": [
      "where",
      "is",
      "the",
      "lowest",
      "spot",
      "in",
      "iowa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"iowa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Name FROM climber WHERE Country != \"Switzerland\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "climber",
      "WHERE",
      "Country",
      "!",
      "=",
      "``",
      "Switzerland",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "climber",
      "where",
      "country",
      "!",
      "=",
      "value"
    ],
    "question": "List the names of climbers whose country is not Switzerland.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "climbers",
      "whose",
      "country",
      "is",
      "not",
      "Switzerland",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Switzerland\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT count(*) FROM follows",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "follows"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "follows"
    ],
    "question": "How many followers does each user have?",
    "question_toks": [
      "How",
      "many",
      "followers",
      "does",
      "each",
      "user",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "allergy_1",
    "query": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"food\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "allergy",
      "FROM",
      "Allergy_type",
      "WHERE",
      "allergytype",
      "=",
      "``",
      "food",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "allergy",
      "from",
      "allergy_type",
      "where",
      "allergytype",
      "=",
      "value"
    ],
    "question": "What are all the different food allergies?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "different",
      "food",
      "allergies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"food\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC",
    "query_toks": [
      "SELECT",
      "pName",
      "FROM",
      "Player",
      "WHERE",
      "yCard",
      "=",
      "'yes",
      "'",
      "ORDER",
      "BY",
      "HS",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "pname",
      "from",
      "player",
      "where",
      "ycard",
      "=",
      "value",
      "order",
      "by",
      "hs",
      "desc"
    ],
    "question": "Find the name of players whose card is yes in the descending order of training hours.",
    "question_toks": [
      "Find",
      "the",
      "name",
      "of",
      "players",
      "whose",
      "card",
      "is",
      "yes",
      "in",
      "the",
      "descending",
      "order",
      "of",
      "training",
      "hours",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"yes\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( city_name ) FROM city WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "city_name",
      ")",
      "FROM",
      "city",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "city_name",
      ")",
      "from",
      "city",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how many cities does texas have",
    "question_toks": [
      "how",
      "many",
      "cities",
      "does",
      "texas",
      "have"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\"",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "TOURIST_ATTRACTIONS",
      "WHERE",
      "How_to_Get_There",
      "=",
      "``",
      "bus",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "tourist_attractions",
      "where",
      "how_to_get_there",
      "=",
      "value"
    ],
    "question": "What are the names of the tourist attractions that can be accessed by bus?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "tourist",
      "attractions",
      "that",
      "can",
      "be",
      "accessed",
      "by",
      "bus",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"bus\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "beds",
      ")",
      "FROM",
      "Rooms",
      "WHERE",
      "bedtype",
      "=",
      "'King",
      "'",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "beds",
      ")",
      "from",
      "rooms",
      "where",
      "bedtype",
      "=",
      "value"
    ],
    "question": "Find the total number of king beds available.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "king",
      "beds",
      "available",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"King\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "files",
      "WHERE",
      "duration",
      "LIKE",
      "``",
      "4",
      ":",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "files",
      "where",
      "duration",
      "like",
      "value"
    ],
    "question": "How many songs have 4 minute duration?",
    "question_toks": [
      "How",
      "many",
      "songs",
      "have",
      "4",
      "minute",
      "duration",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"4:%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "elevation",
      ")",
      "FROM",
      "airports",
      "WHERE",
      "country",
      "=",
      "'Iceland",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "elevation",
      ")",
      "from",
      "airports",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "What is the highest elevation of an airport in the country of Iceland?",
    "question_toks": [
      "What",
      "is",
      "the",
      "highest",
      "elevation",
      "of",
      "an",
      "airport",
      "in",
      "the",
      "country",
      "of",
      "Iceland",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Iceland\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "bike_1",
    "query": "SELECT count(DISTINCT city) FROM station",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "station"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "station"
    ],
    "question": "What is the number of distinct cities the stations are located at?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "distinct",
      "cities",
      "the",
      "stations",
      "are",
      "located",
      "at",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clubname FROM club",
    "query_toks": [
      "SELECT",
      "clubname",
      "FROM",
      "club"
    ],
    "query_toks_no_value": [
      "select",
      "clubname",
      "from",
      "club"
    ],
    "question": "What are the names of all clubs?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "clubs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob",
    "query_toks": [
      "SELECT",
      "emp_fname",
      "FROM",
      "employee",
      "WHERE",
      "emp_jobcode",
      "=",
      "'PROF",
      "'",
      "ORDER",
      "BY",
      "emp_dob"
    ],
    "query_toks_no_value": [
      "select",
      "emp_fname",
      "from",
      "employee",
      "where",
      "emp_jobcode",
      "=",
      "value",
      "order",
      "by",
      "emp_dob"
    ],
    "question": "What are the first names of all employees that are professors ordered by date of birth?",
    "question_toks": [
      "What",
      "are",
      "the",
      "first",
      "names",
      "of",
      "all",
      "employees",
      "that",
      "are",
      "professors",
      "ordered",
      "by",
      "date",
      "of",
      "birth",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"PROF\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "pilot",
      "WHERE",
      "Age",
      "<",
      "=",
      "30",
      "ORDER",
      "BY",
      "Name",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "pilot",
      "where",
      "age",
      "<",
      "=",
      "value",
      "order",
      "by",
      "name",
      "desc"
    ],
    "question": "List names of all pilot aged 30 or younger in descending alphabetical order.",
    "question_toks": [
      "List",
      "names",
      "of",
      "all",
      "pilot",
      "aged",
      "30",
      "or",
      "younger",
      "in",
      "descending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          6,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          30.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "artist",
      "WHERE",
      "country",
      "=",
      "``",
      "Bangladesh",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "artist",
      "where",
      "country",
      "=",
      "value"
    ],
    "question": "How many Bangladeshi artists are listed?",
    "question_toks": [
      "How",
      "many",
      "Bangladeshi",
      "artists",
      "are",
      "listed",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Bangladesh\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Name FROM climber ORDER BY Points DESC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "climber",
      "ORDER",
      "BY",
      "Points",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "climber",
      "order",
      "by",
      "points",
      "desc"
    ],
    "question": "What are the names of the climbers, ordered by points descending?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "climbers",
      ",",
      "ordered",
      "by",
      "points",
      "descending",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "news_report",
    "query": "SELECT avg(Years_working) FROM journalist",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Years_working",
      ")",
      "FROM",
      "journalist"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "years_working",
      ")",
      "from",
      "journalist"
    ],
    "question": "What is the average number of years spent working as a journalist?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "years",
      "spent",
      "working",
      "as",
      "a",
      "journalist",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "buildings",
      "WHERE",
      "Status",
      "=",
      "``",
      "on-hold",
      "''",
      "ORDER",
      "BY",
      "Stories",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "buildings",
      "where",
      "status",
      "=",
      "value",
      "order",
      "by",
      "stories",
      "asc"
    ],
    "question": "Please show the names of the buildings whose status is \"on-hold\", in ascending order of stories.",
    "question_toks": [
      "Please",
      "show",
      "the",
      "names",
      "of",
      "the",
      "buildings",
      "whose",
      "status",
      "is",
      "``",
      "on-hold",
      "''",
      ",",
      "in",
      "ascending",
      "order",
      "of",
      "stories",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"on-hold\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";",
    "query_toks": [
      "SELECT",
      "highest_point",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "highest_point",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the highest point in texas",
    "question_toks": [
      "what",
      "is",
      "the",
      "highest",
      "point",
      "in",
      "texas"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"texas\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "twitter_1",
    "query": "SELECT text FROM tweets WHERE text LIKE '%intern%'",
    "query_toks": [
      "SELECT",
      "text",
      "FROM",
      "tweets",
      "WHERE",
      "text",
      "LIKE",
      "'",
      "%",
      "intern",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "text",
      "from",
      "tweets",
      "where",
      "text",
      "like",
      "value"
    ],
    "question": "Return the text of tweets about the topic 'intern'.",
    "question_toks": [
      "Return",
      "the",
      "text",
      "of",
      "tweets",
      "about",
      "the",
      "topic",
      "'intern",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"%intern%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_1",
    "query": "SELECT count(*) FROM dependent WHERE sex  =  'F'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "dependent",
      "WHERE",
      "sex",
      "=",
      "'F",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "dependent",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "how many female dependents are there?",
    "question_toks": [
      "how",
      "many",
      "female",
      "dependents",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "ship_1",
    "query": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2",
    "query_toks": [
      "SELECT",
      "CLASS",
      "FROM",
      "captain",
      "GROUP",
      "BY",
      "CLASS",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "class",
      "from",
      "captain",
      "group",
      "by",
      "class",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Which classes have more than two captains?",
    "question_toks": [
      "Which",
      "classes",
      "have",
      "more",
      "than",
      "two",
      "captains",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          5,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Product_Name",
      "FROM",
      "PRODUCTS",
      "ORDER",
      "BY",
      "Product_Price",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "product_name",
      "from",
      "products",
      "order",
      "by",
      "product_price",
      "desc",
      "limit",
      "value"
    ],
    "question": "Tell me the name of the most pricy product.",
    "question_toks": [
      "Tell",
      "me",
      "the",
      "name",
      "of",
      "the",
      "most",
      "pricy",
      "product",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT song_name FROM song WHERE languages  =  \"english\"",
    "query_toks": [
      "SELECT",
      "song_name",
      "FROM",
      "song",
      "WHERE",
      "languages",
      "=",
      "``",
      "english",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      "from",
      "song",
      "where",
      "languages",
      "=",
      "value"
    ],
    "question": "What are the names of all songs in English?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "songs",
      "in",
      "English",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"english\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "match_season",
    "query": "SELECT Player FROM match_season WHERE College  =  \"UCLA\"",
    "query_toks": [
      "SELECT",
      "Player",
      "FROM",
      "match_season",
      "WHERE",
      "College",
      "=",
      "``",
      "UCLA",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "player",
      "from",
      "match_season",
      "where",
      "college",
      "=",
      "value"
    ],
    "question": "Show the players from college UCLA.",
    "question_toks": [
      "Show",
      "the",
      "players",
      "from",
      "college",
      "UCLA",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"UCLA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "query": "SELECT count(*) FROM CUSTOMERS",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "CUSTOMERS"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers"
    ],
    "question": "Count the number of customers recorded.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "customers",
      "recorded",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\"",
    "query_toks": [
      "SELECT",
      "clubdesc",
      "FROM",
      "club",
      "WHERE",
      "clubname",
      "=",
      "``",
      "Tennis",
      "Club",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "clubdesc",
      "from",
      "club",
      "where",
      "clubname",
      "=",
      "value"
    ],
    "question": "What is the description of the club named \"Tennis Club\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "club",
      "named",
      "``",
      "Tennis",
      "Club",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Tennis Club\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "query": "SELECT max(OMIM) FROM enzyme",
    "query_toks": [
      "SELECT",
      "max",
      "(",
      "OMIM",
      ")",
      "FROM",
      "enzyme"
    ],
    "query_toks_no_value": [
      "select",
      "max",
      "(",
      "omim",
      ")",
      "from",
      "enzyme"
    ],
    "question": "What is the maximum Online Mendelian Inheritance in Man (OMIM) value of the enzymes?",
    "question_toks": [
      "What",
      "is",
      "the",
      "maximum",
      "Online",
      "Mendelian",
      "Inheritance",
      "in",
      "Man",
      "(",
      "OMIM",
      ")",
      "value",
      "of",
      "the",
      "enzymes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            1,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT count(*) FROM Ref_document_types",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Ref_document_types"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "ref_document_types"
    ],
    "question": "Show the number of document types.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "document",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT count(*) FROM customers WHERE city = \"Prague\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "customers",
      "WHERE",
      "city",
      "=",
      "``",
      "Prague",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers",
      "where",
      "city",
      "=",
      "value"
    ],
    "question": "How many customers live in the city of Prague?",
    "question_toks": [
      "How",
      "many",
      "customers",
      "live",
      "in",
      "the",
      "city",
      "of",
      "Prague",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          "\"Prague\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Famous_Release_date",
      "FROM",
      "artist",
      "ORDER",
      "BY",
      "Age",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "famous_release_date",
      "from",
      "artist",
      "order",
      "by",
      "age",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the famous release date for the oldest artist.",
    "question_toks": [
      "Return",
      "the",
      "famous",
      "release",
      "date",
      "for",
      "the",
      "oldest",
      "artist",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "wrestler",
    "query": "SELECT count(*) FROM wrestler",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "wrestler"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "wrestler"
    ],
    "question": "Count the number of wrestlers.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "wrestlers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM employees WHERE department_id  =  \"null\"",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "employees",
      "WHERE",
      "department_id",
      "=",
      "``",
      "null",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "employees",
      "where",
      "department_id",
      "=",
      "value"
    ],
    "question": "Return all the information for all employees without any department number.",
    "question_toks": [
      "Return",
      "all",
      "the",
      "information",
      "for",
      "all",
      "employees",
      "without",
      "any",
      "department",
      "number",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"null\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT name ) FROM USER WHERE name  =  \"Michelle\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "USER",
      "WHERE",
      "name",
      "=",
      "``",
      "Michelle",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "user",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Find the number of users called Michelle",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "users",
      "called",
      "Michelle"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                17,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Michelle\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2",
    "query_toks": [
      "SELECT",
      "employee_id",
      "FROM",
      "job_history",
      "GROUP",
      "BY",
      "employee_id",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      "from",
      "job_history",
      "group",
      "by",
      "employee_id",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "display the ID for those employees who did two or more jobs in the past.",
    "question_toks": [
      "display",
      "the",
      "ID",
      "for",
      "those",
      "employees",
      "who",
      "did",
      "two",
      "or",
      "more",
      "jobs",
      "in",
      "the",
      "past",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT count(DISTINCT scientist) FROM assignedto",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "scientist",
      ")",
      "FROM",
      "assignedto"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "scientist",
      ")",
      "from",
      "assignedto"
    ],
    "question": "Count the number of different scientists assigned to any project.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "different",
      "scientists",
      "assigned",
      "to",
      "any",
      "project",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                6,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "swimming",
    "query": "SELECT count(*) FROM stadium WHERE country != 'Russia'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "stadium",
      "WHERE",
      "country",
      "!",
      "=",
      "'Russia",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "stadium",
      "where",
      "country",
      "!",
      "=",
      "value"
    ],
    "question": "How many stadiums are not in country \"Russia\"?",
    "question_toks": [
      "How",
      "many",
      "stadiums",
      "are",
      "not",
      "in",
      "country",
      "``",
      "Russia",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"Russia\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT text FROM review WHERE rating  <  1;",
    "query_toks": [
      "SELECT",
      "text",
      "FROM",
      "review",
      "WHERE",
      "rating",
      "<",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "text",
      "from",
      "review",
      "where",
      "rating",
      "<",
      "value"
    ],
    "question": "List all the reviews which rated a business less than 1",
    "question_toks": [
      "List",
      "all",
      "the",
      "reviews",
      "which",
      "rated",
      "a",
      "business",
      "less",
      "than",
      "1"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT DISTINCT directed_by FROM film",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "directed_by",
      "FROM",
      "film"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "directed_by",
      "from",
      "film"
    ],
    "question": "Who are all the directors?",
    "question_toks": [
      "Who",
      "are",
      "all",
      "the",
      "directors",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "query": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = \"Paper\";",
    "query_toks": [
      "SELECT",
      "document_type_description",
      "FROM",
      "Ref_Document_Types",
      "WHERE",
      "document_type_code",
      "=",
      "``",
      "Paper",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_description",
      "from",
      "ref_document_types",
      "where",
      "document_type_code",
      "=",
      "value"
    ],
    "question": "What is the description of document type 'Paper'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "document",
      "type",
      "'Paper",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Paper\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT DISTINCT transaction_type FROM Financial_Transactions",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "transaction_type",
      "FROM",
      "Financial_Transactions"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "transaction_type",
      "from",
      "financial_transactions"
    ],
    "question": "What are the different types of transactions?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "types",
      "of",
      "transactions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT journalid FROM paper WHERE YEAR  =  2011 GROUP BY journalid;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "journalid",
      "FROM",
      "paper",
      "WHERE",
      "YEAR",
      "=",
      "2011",
      "GROUP",
      "BY",
      "journalid",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "journalid",
      "from",
      "paper",
      "where",
      "year",
      "=",
      "value",
      "group",
      "by",
      "journalid"
    ],
    "question": "List today 's journals",
    "question_toks": [
      "List",
      "today",
      "'s",
      "journals"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2011.0,
          null
        ]
      ],
      "groupBy": [
        [
          0,
          17,
          false
        ]
      ],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "city_name",
      ")",
      "FROM",
      "city",
      "WHERE",
      "population",
      ">",
      "150000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "city_name",
      ")",
      "from",
      "city",
      "where",
      "population",
      ">",
      "value"
    ],
    "question": "how many major cities are there",
    "question_toks": [
      "how",
      "many",
      "major",
      "cities",
      "are",
      "there"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          150000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'",
    "query_toks": [
      "SELECT",
      "founder",
      "FROM",
      "manufacturers",
      "WHERE",
      "name",
      "LIKE",
      "'S",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "founder",
      "from",
      "manufacturers",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "Find the founder of the company whose name begins with the letter 'S'.",
    "question_toks": [
      "Find",
      "the",
      "founder",
      "of",
      "the",
      "company",
      "whose",
      "name",
      "begins",
      "with",
      "the",
      "letter",
      "'S",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"S%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_grants_for_research",
    "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Document_Types",
      "WHERE",
      "document_description",
      "LIKE",
      "'Initial",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "document_types",
      "where",
      "document_description",
      "like",
      "value"
    ],
    "question": "What is the type of the document whose description starts with the word 'Initial'?",
    "question_toks": [
      "What",
      "is",
      "the",
      "type",
      "of",
      "the",
      "document",
      "whose",
      "description",
      "starts",
      "with",
      "the",
      "word",
      "'Initial",
      "'",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Initial%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT DISTINCT product_name FROM products ORDER BY product_name",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "product_name",
      "FROM",
      "products",
      "ORDER",
      "BY",
      "product_name"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "product_name",
      "from",
      "products",
      "order",
      "by",
      "product_name"
    ],
    "question": "Sort all the distinct products in alphabetical order.",
    "question_toks": [
      "Sort",
      "all",
      "the",
      "distinct",
      "products",
      "in",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "Artist_ID",
      ")",
      "FROM",
      "volume"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "artist_id",
      ")",
      "from",
      "volume"
    ],
    "question": "How many distinct artists have volumes?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "artists",
      "have",
      "volumes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_player",
    "query": "SELECT LOCATION FROM school ORDER BY Enrollment ASC",
    "query_toks": [
      "SELECT",
      "LOCATION",
      "FROM",
      "school",
      "ORDER",
      "BY",
      "Enrollment",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "location",
      "from",
      "school",
      "order",
      "by",
      "enrollment",
      "asc"
    ],
    "question": "List the locations of schools in ascending order of enrollment.",
    "question_toks": [
      "List",
      "the",
      "locations",
      "of",
      "schools",
      "in",
      "ascending",
      "order",
      "of",
      "enrollment",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT count(*) FROM county_public_safety",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "county_public_safety"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "county_public_safety"
    ],
    "question": "How many counties are there?",
    "question_toks": [
      "How",
      "many",
      "counties",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "products_for_hire",
    "query": "SELECT DISTINCT payment_type_code FROM payments",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "payment_type_code",
      "FROM",
      "payments"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "payment_type_code",
      "from",
      "payments"
    ],
    "question": "What are all the distinct payment types?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "distinct",
      "payment",
      "types",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                31,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT count(DISTINCT StuID) FROM Plays_games",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "StuID",
      ")",
      "FROM",
      "Plays_games"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "stuid",
      ")",
      "from",
      "plays_games"
    ],
    "question": "How many students play video games?",
    "question_toks": [
      "How",
      "many",
      "students",
      "play",
      "video",
      "games",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT Name FROM pilot ORDER BY Name ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "pilot",
      "ORDER",
      "BY",
      "Name",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "pilot",
      "order",
      "by",
      "name",
      "asc"
    ],
    "question": "List all pilot names in ascending alphabetical order.",
    "question_toks": [
      "List",
      "all",
      "pilot",
      "names",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "film_rank",
    "query": "SELECT Country FROM market ORDER BY Country ASC",
    "query_toks": [
      "SELECT",
      "Country",
      "FROM",
      "market",
      "ORDER",
      "BY",
      "Country",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "market",
      "order",
      "by",
      "country",
      "asc"
    ],
    "question": "What are the countries for each market, ordered alphabetically?",
    "question_toks": [
      "What",
      "are",
      "the",
      "countries",
      "for",
      "each",
      "market",
      ",",
      "ordered",
      "alphabetically",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_item_id FROM order_items WHERE product_id = 11",
    "query_toks": [
      "SELECT",
      "order_item_id",
      "FROM",
      "order_items",
      "WHERE",
      "product_id",
      "=",
      "11"
    ],
    "query_toks_no_value": [
      "select",
      "order_item_id",
      "from",
      "order_items",
      "where",
      "product_id",
      "=",
      "value"
    ],
    "question": "Find the ids of all the order items whose product id is 11.",
    "question_toks": [
      "Find",
      "the",
      "ids",
      "of",
      "all",
      "the",
      "order",
      "items",
      "whose",
      "product",
      "id",
      "is",
      "11",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          11.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Tourist_Details FROM VISITORS",
    "query_toks": [
      "SELECT",
      "Tourist_Details",
      "FROM",
      "VISITORS"
    ],
    "query_toks_no_value": [
      "select",
      "tourist_details",
      "from",
      "visitors"
    ],
    "question": "What is the detail of each visitor?",
    "question_toks": [
      "What",
      "is",
      "the",
      "detail",
      "of",
      "each",
      "visitor",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT DISTINCT product_details FROM products",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "product_details",
      "FROM",
      "products"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "product_details",
      "from",
      "products"
    ],
    "question": "Return the the details of all products.",
    "question_toks": [
      "Return",
      "the",
      "the",
      "details",
      "of",
      "all",
      "products",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_market",
    "query": "SELECT DISTINCT Carrier FROM phone WHERE Memory_in_G  >  32",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Carrier",
      "FROM",
      "phone",
      "WHERE",
      "Memory_in_G",
      ">",
      "32"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "carrier",
      "from",
      "phone",
      "where",
      "memory_in_g",
      ">",
      "value"
    ],
    "question": "List the distinct carriers of phones with memories bigger than 32.",
    "question_toks": [
      "List",
      "the",
      "distinct",
      "carriers",
      "of",
      "phones",
      "with",
      "memories",
      "bigger",
      "than",
      "32",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          32.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "airports",
      "GROUP",
      "BY",
      "city",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "airports",
      "group",
      "by",
      "city",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value"
    ],
    "question": "Find the cities which have exactly two airports.",
    "question_toks": [
      "Find",
      "the",
      "cities",
      "which",
      "have",
      "exactly",
      "two",
      "airports",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          2,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Companies",
      "WHERE",
      "Headquarters",
      "!",
      "=",
      "'USA",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "companies",
      "where",
      "headquarters",
      "!",
      "=",
      "value"
    ],
    "question": "What are the names of companies whose headquarters are not \"USA\"?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "companies",
      "whose",
      "headquarters",
      "are",
      "not",
      "``",
      "USA",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"USA\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "mountain",
      "ORDER",
      "BY",
      "Height",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "mountain",
      "order",
      "by",
      "height",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the highest mountain?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "highest",
      "mountain",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "voter_2",
    "query": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\"",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Age",
      ")",
      "FROM",
      "STUDENT",
      "WHERE",
      "Sex",
      "=",
      "``",
      "F",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "age",
      ")",
      "from",
      "student",
      "where",
      "sex",
      "=",
      "value"
    ],
    "question": "Find the average age of female students.",
    "question_toks": [
      "Find",
      "the",
      "average",
      "age",
      "of",
      "female",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"F\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "perpetrator",
    "query": "SELECT count(DISTINCT LOCATION) FROM perpetrator",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "LOCATION",
      ")",
      "FROM",
      "perpetrator"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "location",
      ")",
      "from",
      "perpetrator"
    ],
    "question": "How many distinct locations of perpetrators are there?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "locations",
      "of",
      "perpetrators",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_1",
    "query": "SELECT name FROM playlists;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "playlists",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "playlists"
    ],
    "question": "List the name of all playlist.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "all",
      "playlist",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            10
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                64,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "culture_company",
    "query": "SELECT DISTINCT publisher FROM book_club",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "publisher",
      "FROM",
      "book_club"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "publisher",
      "from",
      "book_club"
    ],
    "question": "Show all distinct publishers for books.",
    "question_toks": [
      "Show",
      "all",
      "distinct",
      "publishers",
      "for",
      "books",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT homepage FROM organization WHERE name  =  \"University of Michigan\";",
    "query_toks": [
      "SELECT",
      "homepage",
      "FROM",
      "organization",
      "WHERE",
      "name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "homepage",
      "from",
      "organization",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "return me the homepage of \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "homepage",
      "of",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "minister",
      "FROM",
      "party",
      "ORDER",
      "BY",
      "left_office",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "minister",
      "from",
      "party",
      "order",
      "by",
      "left_office",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which minister left office the latest?",
    "question_toks": [
      "Which",
      "minister",
      "left",
      "office",
      "the",
      "latest",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT sum(Amount_Payment) FROM Payments",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Amount_Payment",
      ")",
      "FROM",
      "Payments"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount_payment",
      ")",
      "from",
      "payments"
    ],
    "question": "What is the total amount of payment?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "amount",
      "of",
      "payment",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "product_catalog",
    "query": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\"",
    "query_toks": [
      "SELECT",
      "distinct",
      "(",
      "catalog_publisher",
      ")",
      "FROM",
      "catalogs",
      "WHERE",
      "catalog_publisher",
      "LIKE",
      "``",
      "%",
      "Murray",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "(",
      "catalog_publisher",
      ")",
      "from",
      "catalogs",
      "where",
      "catalog_publisher",
      "like",
      "value"
    ],
    "question": "Find all the catalog publishers whose name contains \"Murray\"",
    "question_toks": [
      "Find",
      "all",
      "the",
      "catalog",
      "publishers",
      "whose",
      "name",
      "contains",
      "``",
      "Murray",
      "''"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"%Murray%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT Title FROM book ORDER BY Issues ASC",
    "query_toks": [
      "SELECT",
      "Title",
      "FROM",
      "book",
      "ORDER",
      "BY",
      "Issues",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "book",
      "order",
      "by",
      "issues",
      "asc"
    ],
    "question": "List the titles of the books in ascending order of issues.",
    "question_toks": [
      "List",
      "the",
      "titles",
      "of",
      "the",
      "books",
      "in",
      "ascending",
      "order",
      "of",
      "issues",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT DISTINCT payment_method FROM customers",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "payment_method",
      "FROM",
      "customers"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "payment_method",
      "from",
      "customers"
    ],
    "question": "Return all the distinct payment methods used by customers.",
    "question_toks": [
      "Return",
      "all",
      "the",
      "distinct",
      "payment",
      "methods",
      "used",
      "by",
      "customers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "f_id",
      "FROM",
      "files",
      "ORDER",
      "BY",
      "duration",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "f_id",
      "from",
      "files",
      "order",
      "by",
      "duration",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the id of the longest song?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "longest",
      "song",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\"",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "YEAR",
      "FROM",
      "competition",
      "WHERE",
      "Competition_type",
      "!",
      "=",
      "``",
      "Tournament",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "year",
      "from",
      "competition",
      "where",
      "competition_type",
      "!",
      "=",
      "value"
    ],
    "question": "What are the different years for all competitions that are not of type equal to tournament?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "years",
      "for",
      "all",
      "competitions",
      "that",
      "are",
      "not",
      "of",
      "type",
      "equal",
      "to",
      "tournament",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Tournament\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "airport",
      "ORDER",
      "BY",
      "International_Passengers",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "airport",
      "order",
      "by",
      "international_passengers",
      "desc",
      "limit",
      "value"
    ],
    "question": "Show all information on the airport that has the largest number of international passengers.",
    "question_toks": [
      "Show",
      "all",
      "information",
      "on",
      "the",
      "airport",
      "that",
      "has",
      "the",
      "largest",
      "number",
      "of",
      "international",
      "passengers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_addresses",
    "query": "SELECT avg(order_quantity) FROM order_items",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "order_quantity",
      ")",
      "FROM",
      "order_items"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "order_quantity",
      ")",
      "from",
      "order_items"
    ],
    "question": "What is the average amount of items ordered in each order?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "amount",
      "of",
      "items",
      "ordered",
      "in",
      "each",
      "order",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                32,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "decoration_competition",
    "query": "SELECT Name FROM member ORDER BY Name ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "member",
      "ORDER",
      "BY",
      "Name",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "member",
      "order",
      "by",
      "name",
      "asc"
    ],
    "question": "List the names of members in ascending alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "names",
      "of",
      "members",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "station_weather",
    "query": "SELECT count(*) FROM train WHERE name LIKE \"%Express%\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "train",
      "WHERE",
      "name",
      "LIKE",
      "``",
      "%",
      "Express",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "train",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "How many trains have 'Express' in their names?",
    "question_toks": [
      "How",
      "many",
      "trains",
      "have",
      "'Express",
      "'",
      "in",
      "their",
      "names",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"%Express%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "departments",
      "WHERE",
      "department_name",
      "=",
      "'Marketing",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "departments",
      "where",
      "department_name",
      "=",
      "value"
    ],
    "question": "What is all the information about the Marketing department?",
    "question_toks": [
      "What",
      "is",
      "all",
      "the",
      "information",
      "about",
      "the",
      "Marketing",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Marketing\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT count(*) FROM appointment",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "appointment"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "appointment"
    ],
    "question": "Count how many appointments have been made in total.",
    "question_toks": [
      "Count",
      "how",
      "many",
      "appointments",
      "have",
      "been",
      "made",
      "in",
      "total",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT avg(Gold) FROM club_rank",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Gold",
      ")",
      "FROM",
      "club_rank"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "gold",
      ")",
      "from",
      "club_rank"
    ],
    "question": "What is the average number of gold medals for clubs?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "gold",
      "medals",
      "for",
      "clubs",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT name FROM organization;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "organization",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "organization"
    ],
    "question": "return me all the organizations .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "organizations",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            11
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(DISTINCT transaction_type) FROM Financial_Transactions",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "transaction_type",
      ")",
      "FROM",
      "Financial_Transactions"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "transaction_type",
      ")",
      "from",
      "financial_transactions"
    ],
    "question": "Show the number of transaction types.",
    "question_toks": [
      "Show",
      "the",
      "number",
      "of",
      "transaction",
      "types",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                23,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "boulder",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "what is the population of boulder city",
    "question_toks": [
      "what",
      "is",
      "the",
      "population",
      "of",
      "boulder",
      "city"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"boulder\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "movie_1",
    "query": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\"",
    "query_toks": [
      "SELECT",
      "rID",
      "FROM",
      "Reviewer",
      "WHERE",
      "name",
      "LIKE",
      "``",
      "%",
      "Mike",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "rid",
      "from",
      "reviewer",
      "where",
      "name",
      "like",
      "value"
    ],
    "question": "What is the id of the reviewer whose name includes the word \"Mike\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "reviewer",
      "whose",
      "name",
      "includes",
      "the",
      "word",
      "``",
      "Mike",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"%Mike%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "border",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "border",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "which state border kentucky",
    "question_toks": [
      "which",
      "state",
      "border",
      "kentucky"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "branch",
      "ORDER",
      "BY",
      "membership_amount",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "branch",
      "order",
      "by",
      "membership_amount",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the names for the 3 branches that have the most memberships?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "for",
      "the",
      "3",
      "branches",
      "that",
      "have",
      "the",
      "most",
      "memberships",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM state;",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "state"
    ],
    "question": "what are the states",
    "question_toks": [
      "what",
      "are",
      "the",
      "states"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT count(DISTINCT POSITION) FROM player",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "POSITION",
      ")",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "position",
      ")",
      "from",
      "player"
    ],
    "question": "how many different positions are there?",
    "question_toks": [
      "how",
      "many",
      "different",
      "positions",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                13,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "county_public_safety",
    "query": "SELECT Name FROM city ORDER BY Name ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "city",
      "ORDER",
      "BY",
      "Name",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "city",
      "order",
      "by",
      "name",
      "asc"
    ],
    "question": "Return the names of cities, ordered alphabetically.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "cities",
      ",",
      "ordered",
      "alphabetically",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "flno",
      "FROM",
      "Flight",
      "WHERE",
      "origin",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "flno",
      "from",
      "flight",
      "where",
      "origin",
      "=",
      "value"
    ],
    "question": "What are the numbers of all flights coming from Los Angeles?",
    "question_toks": [
      "What",
      "are",
      "the",
      "numbers",
      "of",
      "all",
      "flights",
      "coming",
      "from",
      "Los",
      "Angeles",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT avg(Population) FROM county",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Population",
      ")",
      "FROM",
      "county"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "population",
      ")",
      "from",
      "county"
    ],
    "question": "Show the average population of all counties.",
    "question_toks": [
      "Show",
      "the",
      "average",
      "population",
      "of",
      "all",
      "counties",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "performance_attendance",
    "query": "SELECT avg(Attendance) FROM performance",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "Attendance",
      ")",
      "FROM",
      "performance"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "attendance",
      ")",
      "from",
      "performance"
    ],
    "question": "What is the average number of attendees for performances?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "number",
      "of",
      "attendees",
      "for",
      "performances",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT count(*) FROM Activity",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Activity"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "activity"
    ],
    "question": "How many activities do we have?",
    "question_toks": [
      "How",
      "many",
      "activities",
      "do",
      "we",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "election",
    "query": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2",
    "query_toks": [
      "SELECT",
      "Party",
      "FROM",
      "party",
      "GROUP",
      "BY",
      "Party",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "party",
      "from",
      "party",
      "group",
      "by",
      "party",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show the name of the party that has at least two records.",
    "question_toks": [
      "Show",
      "the",
      "name",
      "of",
      "the",
      "party",
      "that",
      "has",
      "at",
      "least",
      "two",
      "records",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_and_eClaims",
    "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\"",
    "query_toks": [
      "SELECT",
      "claim_status_description",
      "FROM",
      "claims_processing_stages",
      "WHERE",
      "claim_status_name",
      "=",
      "``",
      "Open",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "claim_status_description",
      "from",
      "claims_processing_stages",
      "where",
      "claim_status_name",
      "=",
      "value"
    ],
    "question": "What is the description of the claim status \"Open\"?",
    "question_toks": [
      "What",
      "is",
      "the",
      "description",
      "of",
      "the",
      "claim",
      "status",
      "``",
      "Open",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Open\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customer_complaints",
    "query": "SELECT count(DISTINCT complaint_type_code) FROM complaints",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "complaint_type_code",
      ")",
      "FROM",
      "complaints"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "complaint_type_code",
      ")",
      "from",
      "complaints"
    ],
    "question": "How many distinct complaint type codes are there in the database?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "complaint",
      "type",
      "codes",
      "are",
      "there",
      "in",
      "the",
      "database",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                28,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";",
    "query_toks": [
      "SELECT",
      "lowest_point",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "iowa",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "lowest_point",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the lowest point in iowa",
    "question_toks": [
      "what",
      "is",
      "the",
      "lowest",
      "point",
      "in",
      "iowa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"iowa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_card_transactions",
    "query": "SELECT count(*) FROM Customers_cards",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Customers_cards"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "customers_cards"
    ],
    "question": "How many customer cards are there?",
    "question_toks": [
      "How",
      "many",
      "customer",
      "cards",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "body_builder",
    "query": "SELECT Total FROM body_builder ORDER BY Total ASC",
    "query_toks": [
      "SELECT",
      "Total",
      "FROM",
      "body_builder",
      "ORDER",
      "BY",
      "Total",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "total",
      "from",
      "body_builder",
      "order",
      "by",
      "total",
      "asc"
    ],
    "question": "List the total scores of body builders in ascending order.",
    "question_toks": [
      "List",
      "the",
      "total",
      "scores",
      "of",
      "body",
      "builders",
      "in",
      "ascending",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT sum(Points) FROM player",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Points",
      ")",
      "FROM",
      "player"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "points",
      ")",
      "from",
      "player"
    ],
    "question": "What is the total number of points for all players?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "points",
      "for",
      "all",
      "players",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT count(*) FROM products WHERE price >= 180",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "products",
      "WHERE",
      "price",
      ">",
      "=",
      "180"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "products",
      "where",
      "price",
      ">",
      "=",
      "value"
    ],
    "question": "Compute the number of products with a price larger than or equal to $180.",
    "question_toks": [
      "Compute",
      "the",
      "number",
      "of",
      "products",
      "with",
      "a",
      "price",
      "larger",
      "than",
      "or",
      "equal",
      "to",
      "$",
      "180",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          180.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"",
    "query_toks": [
      "SELECT",
      "campus",
      "FROM",
      "campuses",
      "WHERE",
      "county",
      "=",
      "``",
      "Los",
      "Angeles",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "campus",
      "from",
      "campuses",
      "where",
      "county",
      "=",
      "value"
    ],
    "question": "Report the name of all campuses in Los Angeles county.",
    "question_toks": [
      "Report",
      "the",
      "name",
      "of",
      "all",
      "campuses",
      "in",
      "Los",
      "Angeles",
      "county",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "which state is springfield in",
    "question_toks": [
      "which",
      "state",
      "is",
      "springfield",
      "in"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "class_section",
      ")",
      "FROM",
      "CLASS",
      "WHERE",
      "crs_code",
      "=",
      "'ACCT-211",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "class_section",
      ")",
      "from",
      "class",
      "where",
      "crs_code",
      "=",
      "value"
    ],
    "question": "What is the number of different class sections offered in the course ACCT-211?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "different",
      "class",
      "sections",
      "offered",
      "in",
      "the",
      "course",
      "ACCT-211",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACCT-211\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "party_people",
    "query": "SELECT count(*) FROM region",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "region"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "region"
    ],
    "question": "Count the number of regions.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "regions",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "boulder",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "what is the population of boulder",
    "question_toks": [
      "what",
      "is",
      "the",
      "population",
      "of",
      "boulder"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"boulder\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT * FROM Albums WHERE YEAR  =  2010",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "Albums",
      "WHERE",
      "YEAR",
      "=",
      "2010"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "albums",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What information is there on albums from 2010?",
    "question_toks": [
      "What",
      "information",
      "is",
      "there",
      "on",
      "albums",
      "from",
      "2010",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\"",
    "query_toks": [
      "SELECT",
      "gtype",
      "FROM",
      "Video_games",
      "WHERE",
      "gname",
      "=",
      "``",
      "Call",
      "of",
      "Destiny",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "gtype",
      "from",
      "video_games",
      "where",
      "gname",
      "=",
      "value"
    ],
    "question": "What type of game is Call of Destiny?",
    "question_toks": [
      "What",
      "type",
      "of",
      "game",
      "is",
      "Call",
      "of",
      "Destiny",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Call of Destiny\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "farm",
    "query": "SELECT count(DISTINCT Status) FROM city",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "Status",
      ")",
      "FROM",
      "city"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "status",
      ")",
      "from",
      "city"
    ],
    "question": "How many different statuses do cities have?",
    "question_toks": [
      "How",
      "many",
      "different",
      "statuses",
      "do",
      "cities",
      "have",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT density FROM state WHERE state_name  =  \"wyoming\";",
    "query_toks": [
      "SELECT",
      "density",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "wyoming",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "density",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the density of wyoming",
    "question_toks": [
      "what",
      "is",
      "the",
      "density",
      "of",
      "wyoming"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"wyoming\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "journal_committee",
    "query": "SELECT count(*) FROM editor",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "editor"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "editor"
    ],
    "question": "How many editors are there?",
    "question_toks": [
      "How",
      "many",
      "editors",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "aircraft",
    "query": "SELECT Name FROM pilot WHERE Age  >=  25",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "pilot",
      "WHERE",
      "Age",
      ">",
      "=",
      "25"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "pilot",
      "where",
      "age",
      ">",
      "=",
      "value"
    ],
    "question": "what is the name of every pilot who is at least 25 years old?",
    "question_toks": [
      "what",
      "is",
      "the",
      "name",
      "of",
      "every",
      "pilot",
      "who",
      "is",
      "at",
      "least",
      "25",
      "years",
      "old",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          25.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "candidate_id",
      "FROM",
      "candidate_assessments",
      "ORDER",
      "BY",
      "assessment_date",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "candidate_id",
      "from",
      "candidate_assessments",
      "order",
      "by",
      "assessment_date",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the id of the candidate who most recently accessed the course?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "candidate",
      "who",
      "most",
      "recently",
      "accessed",
      "the",
      "course",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            8
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Sportsinfo",
      "WHERE",
      "onscholarship",
      "=",
      "'Y",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "sportsinfo",
      "where",
      "onscholarship",
      "=",
      "value"
    ],
    "question": "List ids for all student who are on scholarship.",
    "question_toks": [
      "List",
      "ids",
      "for",
      "all",
      "student",
      "who",
      "are",
      "on",
      "scholarship",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Y\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_share_transactions",
    "query": "SELECT sum(share_count) FROM TRANSACTIONS",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "share_count",
      ")",
      "FROM",
      "TRANSACTIONS"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "share_count",
      ")",
      "from",
      "transactions"
    ],
    "question": "What is the total share of transactions?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "share",
      "of",
      "transactions",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_fnol",
    "query": "SELECT count(*) FROM services",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "services"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "services"
    ],
    "question": "How many services are there?",
    "question_toks": [
      "How",
      "many",
      "services",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "People",
      "ORDER",
      "BY",
      "Age",
      "DESC",
      "LIMIT",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "order",
      "by",
      "age",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the names of the five oldest people?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "five",
      "oldest",
      "people",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 5,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "headquarters",
      "FROM",
      "company",
      "WHERE",
      "main_industry",
      "=",
      "'Banking",
      "'",
      "GROUP",
      "BY",
      "headquarters",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "headquarters",
      "from",
      "company",
      "where",
      "main_industry",
      "=",
      "value",
      "group",
      "by",
      "headquarters",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "Show headquarters with at least two companies in the banking industry.",
    "question_toks": [
      "Show",
      "headquarters",
      "with",
      "at",
      "least",
      "two",
      "companies",
      "in",
      "the",
      "banking",
      "industry",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Banking\"",
          null
        ]
      ],
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT DISTINCT fname FROM student",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "fname",
      "FROM",
      "student"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "fname",
      "from",
      "student"
    ],
    "question": "Find each student's first name.",
    "question_toks": [
      "Find",
      "each",
      "student",
      "'s",
      "first",
      "name",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gas_company",
    "query": "SELECT count(*) FROM company",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "company"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "company"
    ],
    "question": "What is the total number of companies?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "companies",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in",
    "query_toks": [
      "SELECT",
      "FacID",
      "FROM",
      "Faculty",
      "EXCEPT",
      "SELECT",
      "FacID",
      "FROM",
      "Faculty_participates_in"
    ],
    "query_toks_no_value": [
      "select",
      "facid",
      "from",
      "faculty",
      "except",
      "select",
      "facid",
      "from",
      "faculty_participates_in"
    ],
    "question": "Which faculty do not participate in any activity? Find their faculty ids.",
    "question_toks": [
      "Which",
      "faculty",
      "do",
      "not",
      "participate",
      "in",
      "any",
      "activity",
      "?",
      "Find",
      "their",
      "faculty",
      "ids",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              2
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  5,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";",
    "query_toks": [
      "SELECT",
      "lowest_point",
      "FROM",
      "highlow",
      "WHERE",
      "state_name",
      "=",
      "``",
      "iowa",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "lowest_point",
      "from",
      "highlow",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what is the lowest point in iowa in meters",
    "question_toks": [
      "what",
      "is",
      "the",
      "lowest",
      "point",
      "in",
      "iowa",
      "in",
      "meters"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"iowa\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "csu_1",
    "query": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996",
    "query_toks": [
      "SELECT",
      "avg",
      "(",
      "campusfee",
      ")",
      "FROM",
      "csu_fees",
      "WHERE",
      "YEAR",
      "=",
      "1996"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "campusfee",
      ")",
      "from",
      "csu_fees",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What is the average fee for a CSU campus in the year of 1996?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "fee",
      "for",
      "a",
      "CSU",
      "campus",
      "in",
      "the",
      "year",
      "of",
      "1996",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          1996.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "activity_1",
    "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in",
    "query_toks": [
      "SELECT",
      "StuID",
      "FROM",
      "Student",
      "EXCEPT",
      "SELECT",
      "StuID",
      "FROM",
      "Participates_in"
    ],
    "query_toks_no_value": [
      "select",
      "stuid",
      "from",
      "student",
      "except",
      "select",
      "stuid",
      "from",
      "participates_in"
    ],
    "question": "Show the ids of the students who don't participate in any activity.",
    "question_toks": [
      "Show",
      "the",
      "ids",
      "of",
      "the",
      "students",
      "who",
      "do",
      "n't",
      "participate",
      "in",
      "any",
      "activity",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              1
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  3,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "wedding",
    "query": "SELECT COUNT (DISTINCT church_id) FROM wedding WHERE YEAR  =  2016",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "church_id",
      ")",
      "FROM",
      "wedding",
      "WHERE",
      "YEAR",
      "=",
      "2016"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "church_id",
      ")",
      "from",
      "wedding",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "How many churches have a wedding in year 2016?",
    "question_toks": [
      "How",
      "many",
      "churches",
      "have",
      "a",
      "wedding",
      "in",
      "year",
      "2016",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "what state has the city springfield",
    "question_toks": [
      "what",
      "state",
      "has",
      "the",
      "city",
      "springfield"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "insurance_policies",
    "query": "SELECT sum(Amount_Payment) FROM Payments",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "Amount_Payment",
      ")",
      "FROM",
      "Payments"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "amount_payment",
      ")",
      "from",
      "payments"
    ],
    "question": "Compute the total amount of payment processed.",
    "question_toks": [
      "Compute",
      "the",
      "total",
      "amount",
      "of",
      "payment",
      "processed",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hospital_1",
    "query": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "patient",
      "FROM",
      "stay",
      "WHERE",
      "room",
      "=",
      "111",
      "ORDER",
      "BY",
      "staystart",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "patient",
      "from",
      "stay",
      "where",
      "room",
      "=",
      "value",
      "order",
      "by",
      "staystart",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the id of the patient who stayed in room 111 most recently?",
    "question_toks": [
      "What",
      "is",
      "the",
      "id",
      "of",
      "the",
      "patient",
      "who",
      "stayed",
      "in",
      "room",
      "111",
      "most",
      "recently",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            13
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              60,
              false
            ],
            null
          ],
          111.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              61,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "manufactory_1",
    "query": "SELECT DISTINCT headquarter FROM manufacturers",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "headquarter",
      "FROM",
      "manufacturers"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "headquarter",
      "from",
      "manufacturers"
    ],
    "question": "Give the distinct headquarters of manufacturers.",
    "question_toks": [
      "Give",
      "the",
      "distinct",
      "headquarters",
      "of",
      "manufacturers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";",
    "query_toks": [
      "SELECT",
      "traverse",
      "FROM",
      "river",
      "WHERE",
      "river_name",
      "=",
      "``",
      "ohio",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "traverse",
      "from",
      "river",
      "where",
      "river_name",
      "=",
      "value"
    ],
    "question": "where is the ohio river",
    "question_toks": [
      "where",
      "is",
      "the",
      "ohio",
      "river"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"ohio\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT count(*) FROM Songs",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Songs"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "songs"
    ],
    "question": "Count the number of songs.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "songs",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "sports_competition",
    "query": "SELECT name FROM club ORDER BY Start_year ASC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "club",
      "ORDER",
      "BY",
      "Start_year",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "club",
      "order",
      "by",
      "start_year",
      "asc"
    ],
    "question": "What are the names of all the clubs starting with the oldest?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "the",
      "clubs",
      "starting",
      "with",
      "the",
      "oldest",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_1",
    "query": "SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count(*)  >  3",
    "query_toks": [
      "SELECT",
      "Accreditation_level",
      "FROM",
      "phone",
      "GROUP",
      "BY",
      "Accreditation_level",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "accreditation_level",
      "from",
      "phone",
      "group",
      "by",
      "accreditation_level",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Find the accreditation level that more than 3 phones use.",
    "question_toks": [
      "Find",
      "the",
      "accreditation",
      "level",
      "that",
      "more",
      "than",
      "3",
      "phones",
      "use",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "book_2",
    "query": "SELECT Writer FROM book ORDER BY Writer ASC",
    "query_toks": [
      "SELECT",
      "Writer",
      "FROM",
      "book",
      "ORDER",
      "BY",
      "Writer",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "writer",
      "from",
      "book",
      "order",
      "by",
      "writer",
      "asc"
    ],
    "question": "List the writers of the books in ascending alphabetical order.",
    "question_toks": [
      "List",
      "the",
      "writers",
      "of",
      "the",
      "books",
      "in",
      "ascending",
      "alphabetical",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "restaurant_1",
    "query": "SELECT Rating FROM Restaurant WHERE ResName = \"Subway\";",
    "query_toks": [
      "SELECT",
      "Rating",
      "FROM",
      "Restaurant",
      "WHERE",
      "ResName",
      "=",
      "``",
      "Subway",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "rating",
      "from",
      "restaurant",
      "where",
      "resname",
      "=",
      "value"
    ],
    "question": "What is the rating of the restaurant Subway?",
    "question_toks": [
      "What",
      "is",
      "the",
      "rating",
      "of",
      "the",
      "restaurant",
      "Subway",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Subway\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Song",
      "FROM",
      "volume",
      "ORDER",
      "BY",
      "Weeks_on_Top",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "song",
      "from",
      "volume",
      "order",
      "by",
      "weeks_on_top",
      "desc",
      "limit",
      "value"
    ],
    "question": "Return the song in the volume that has spent the most weeks on top?",
    "question_toks": [
      "Return",
      "the",
      "song",
      "in",
      "the",
      "volume",
      "that",
      "has",
      "spent",
      "the",
      "most",
      "weeks",
      "on",
      "top",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"",
    "query_toks": [
      "SELECT",
      "Address",
      "FROM",
      "LOCATIONS",
      "WHERE",
      "Location_Name",
      "=",
      "``",
      "UK",
      "Gallery",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "address",
      "from",
      "locations",
      "where",
      "location_name",
      "=",
      "value"
    ],
    "question": "Find the address of the location named \"UK Gallery\".",
    "question_toks": [
      "Find",
      "the",
      "address",
      "of",
      "the",
      "location",
      "named",
      "``",
      "UK",
      "Gallery",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"UK Gallery\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "store_product",
    "query": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "city_population",
      ")",
      "FROM",
      "district",
      "ORDER",
      "BY",
      "city_area",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "city_population",
      ")",
      "from",
      "district",
      "order",
      "by",
      "city_area",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the total number of residents for the districts with the 3 largest areas?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "residents",
      "for",
      "the",
      "districts",
      "with",
      "the",
      "3",
      "largest",
      "areas",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT count(*) FROM Companies",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Companies"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "companies"
    ],
    "question": "Count the number of companies.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "companies",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "dorm_1",
    "query": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "dorm_name",
      "FROM",
      "dorm",
      "ORDER",
      "BY",
      "student_capacity",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "dorm_name",
      "from",
      "dorm",
      "order",
      "by",
      "student_capacity",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the names of the dorm with the largest capacity?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "dorm",
      "with",
      "the",
      "largest",
      "capacity",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\"",
    "query_toks": [
      "SELECT",
      "document_type_code",
      "FROM",
      "Ref_document_types",
      "WHERE",
      "document_type_name",
      "=",
      "``",
      "Paper",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "document_type_code",
      "from",
      "ref_document_types",
      "where",
      "document_type_name",
      "=",
      "value"
    ],
    "question": "Find the code of the document type \"Paper\".",
    "question_toks": [
      "Find",
      "the",
      "code",
      "of",
      "the",
      "document",
      "type",
      "``",
      "Paper",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Paper\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT city_name FROM city;",
    "query_toks": [
      "SELECT",
      "city_name",
      "FROM",
      "city",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "city_name",
      "from",
      "city"
    ],
    "question": "give me the cities in usa",
    "question_toks": [
      "give",
      "me",
      "the",
      "cities",
      "in",
      "usa"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "race_track",
    "query": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2",
    "query_toks": [
      "SELECT",
      "CLASS",
      "FROM",
      "race",
      "GROUP",
      "BY",
      "CLASS",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "class",
      "from",
      "race",
      "group",
      "by",
      "class",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "What are the classes of races that have two or more corresponding races?",
    "question_toks": [
      "What",
      "are",
      "the",
      "classes",
      "of",
      "races",
      "that",
      "have",
      "two",
      "or",
      "more",
      "corresponding",
      "races",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "loan_1",
    "query": "SELECT cust_name FROM customer ORDER BY acc_bal",
    "query_toks": [
      "SELECT",
      "cust_name",
      "FROM",
      "customer",
      "ORDER",
      "BY",
      "acc_bal"
    ],
    "query_toks_no_value": [
      "select",
      "cust_name",
      "from",
      "customer",
      "order",
      "by",
      "acc_bal"
    ],
    "question": "What are the names of all customers, ordered by account balance?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "all",
      "customers",
      ",",
      "ordered",
      "by",
      "account",
      "balance",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "machine_repair",
    "query": "SELECT Name FROM technician ORDER BY Age ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "technician",
      "ORDER",
      "BY",
      "Age",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "technician",
      "order",
      "by",
      "age",
      "asc"
    ],
    "question": "What are the names of the technicians by ascending order of age?",
    "question_toks": [
      "What",
      "are",
      "the",
      "names",
      "of",
      "the",
      "technicians",
      "by",
      "ascending",
      "order",
      "of",
      "age",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "california",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how many people are in the state of california",
    "question_toks": [
      "how",
      "many",
      "people",
      "are",
      "in",
      "the",
      "state",
      "of",
      "california"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"california\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_1",
    "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  5",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "classroom",
      "FROM",
      "list",
      "WHERE",
      "grade",
      "=",
      "5"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "classroom",
      "from",
      "list",
      "where",
      "grade",
      "=",
      "value"
    ],
    "question": "Which classrooms are used by grade 5?",
    "question_toks": [
      "Which",
      "classrooms",
      "are",
      "used",
      "by",
      "grade",
      "5",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "program_id",
      ")",
      "FROM",
      "broadcast",
      "WHERE",
      "time_of_day",
      "=",
      "'Night",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "program_id",
      ")",
      "from",
      "broadcast",
      "where",
      "time_of_day",
      "=",
      "value"
    ],
    "question": "How many distinct programs are broadcast at \"Night\" time?",
    "question_toks": [
      "How",
      "many",
      "distinct",
      "programs",
      "are",
      "broadcast",
      "at",
      "``",
      "Night",
      "''",
      "time",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Night\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT DISTINCT TYPE FROM vocals",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "TYPE",
      "FROM",
      "vocals"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "type",
      "from",
      "vocals"
    ],
    "question": "What are the different types of vocals?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "types",
      "of",
      "vocals",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "department_management",
    "query": "SELECT count(DISTINCT temporary_acting) FROM management",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "temporary_acting",
      ")",
      "FROM",
      "management"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "temporary_acting",
      ")",
      "from",
      "management"
    ],
    "question": "How many acting statuses are there?",
    "question_toks": [
      "How",
      "many",
      "acting",
      "statuses",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                13,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_office",
    "query": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2",
    "query_toks": [
      "SELECT",
      "Headquarters",
      "FROM",
      "Companies",
      "GROUP",
      "BY",
      "Headquarters",
      "HAVING",
      "COUNT",
      "(",
      "*",
      ")",
      ">",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "headquarters",
      "from",
      "companies",
      "group",
      "by",
      "headquarters",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "Show the headquarters shared by more than two companies.",
    "question_toks": [
      "Show",
      "the",
      "headquarters",
      "shared",
      "by",
      "more",
      "than",
      "two",
      "companies",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "files",
      "WHERE",
      "duration",
      "LIKE",
      "``",
      "4",
      ":",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "files",
      "where",
      "duration",
      "like",
      "value"
    ],
    "question": "What is the count of the songs that last approximately 4 minutes?",
    "question_toks": [
      "What",
      "is",
      "the",
      "count",
      "of",
      "the",
      "songs",
      "that",
      "last",
      "approximately",
      "4",
      "minutes",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"4:%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "hr_1",
    "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "departments",
      "WHERE",
      "department_name",
      "=",
      "'Marketing",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "departments",
      "where",
      "department_name",
      "=",
      "value"
    ],
    "question": "Display all the information about the department Marketing.",
    "question_toks": [
      "Display",
      "all",
      "the",
      "information",
      "about",
      "the",
      "department",
      "Marketing",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"Marketing\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "news_report",
    "query": "SELECT count(*) FROM journalist",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "journalist"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "journalist"
    ],
    "question": "How many journalists are there?",
    "question_toks": [
      "How",
      "many",
      "journalists",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "school_bus",
    "query": "SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2",
    "query_toks": [
      "SELECT",
      "TYPE",
      "FROM",
      "school",
      "GROUP",
      "BY",
      "TYPE",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      "=",
      "2"
    ],
    "query_toks_no_value": [
      "select",
      "type",
      "from",
      "school",
      "group",
      "by",
      "type",
      "having",
      "count",
      "(",
      "*",
      ")",
      "=",
      "value"
    ],
    "question": "Show the types of schools that have two schools.",
    "question_toks": [
      "Show",
      "the",
      "types",
      "of",
      "schools",
      "that",
      "have",
      "two",
      "schools",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [
        [
          false,
          2,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM state;",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "state"
    ],
    "question": "list the states",
    "question_toks": [
      "list",
      "the",
      "states"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Theme_park",
    "query": "SELECT Tourist_Details FROM VISITORS",
    "query_toks": [
      "SELECT",
      "Tourist_Details",
      "FROM",
      "VISITORS"
    ],
    "query_toks_no_value": [
      "select",
      "tourist_details",
      "from",
      "visitors"
    ],
    "question": "Show details of all visitors.",
    "question_toks": [
      "Show",
      "details",
      "of",
      "all",
      "visitors",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "student_assessment",
    "query": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "student_id",
      "FROM",
      "student_course_attendance",
      "WHERE",
      "course_id",
      "=",
      "301",
      "ORDER",
      "BY",
      "date_of_attendance",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "student_id",
      "from",
      "student_course_attendance",
      "where",
      "course_id",
      "=",
      "value",
      "order",
      "by",
      "date_of_attendance",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the ids of the students who registered for course 301 most recently?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "the",
      "students",
      "who",
      "registered",
      "for",
      "course",
      "301",
      "most",
      "recently",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            6
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          301.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              32,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "gymnast",
    "query": "SELECT Name FROM People ORDER BY Name ASC",
    "query_toks": [
      "SELECT",
      "Name",
      "FROM",
      "People",
      "ORDER",
      "BY",
      "Name",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "people",
      "order",
      "by",
      "name",
      "asc"
    ],
    "question": "Return the names of people, ordered alphabetically.",
    "question_toks": [
      "Return",
      "the",
      "names",
      "of",
      "people",
      ",",
      "ordered",
      "alphabetically",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "network_2",
    "query": "SELECT name FROM Person ORDER BY age DESC",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "Person",
      "ORDER",
      "BY",
      "age",
      "DESC"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "person",
      "order",
      "by",
      "age",
      "desc"
    ],
    "question": "Find the names of all person sorted in the descending order using age.",
    "question_toks": [
      "Find",
      "the",
      "names",
      "of",
      "all",
      "person",
      "sorted",
      "in",
      "the",
      "descending",
      "order",
      "using",
      "age",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC",
    "query_toks": [
      "SELECT",
      "apt_number",
      "FROM",
      "Apartments",
      "ORDER",
      "BY",
      "room_count",
      "ASC"
    ],
    "query_toks_no_value": [
      "select",
      "apt_number",
      "from",
      "apartments",
      "order",
      "by",
      "room_count",
      "asc"
    ],
    "question": "Sort the apartment numbers in ascending order of room count.",
    "question_toks": [
      "Sort",
      "the",
      "apartment",
      "numbers",
      "in",
      "ascending",
      "order",
      "of",
      "room",
      "count",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_2",
    "query": "SELECT count(*) FROM classroom WHERE building != 'Lamberton'",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "classroom",
      "WHERE",
      "building",
      "!",
      "=",
      "'Lamberton",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "classroom",
      "where",
      "building",
      "!",
      "=",
      "value"
    ],
    "question": "How many classrooms are not in Lamberton?",
    "question_toks": [
      "How",
      "many",
      "classrooms",
      "are",
      "not",
      "in",
      "Lamberton",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"Lamberton\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_1",
    "query": "SELECT count(*) FROM phone WHERE Company_name = \"Nokia Corporation\";",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "phone",
      "WHERE",
      "Company_name",
      "=",
      "``",
      "Nokia",
      "Corporation",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "phone",
      "where",
      "company_name",
      "=",
      "value"
    ],
    "question": "How many phone hardware models are produced by the company named \"Nokia Corporation\"?",
    "question_toks": [
      "How",
      "many",
      "phone",
      "hardware",
      "models",
      "are",
      "produced",
      "by",
      "the",
      "company",
      "named",
      "``",
      "Nokia",
      "Corporation",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Nokia Corporation\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "tracking_orders",
    "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\"",
    "query_toks": [
      "SELECT",
      "order_id",
      "FROM",
      "shipments",
      "WHERE",
      "shipment_tracking_number",
      "=",
      "``",
      "3452",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "order_id",
      "from",
      "shipments",
      "where",
      "shipment_tracking_number",
      "=",
      "value"
    ],
    "question": "Which order's shipment tracking number is \"3452\"? Give me the id of the order.",
    "question_toks": [
      "Which",
      "order",
      "'s",
      "shipment",
      "tracking",
      "number",
      "is",
      "``",
      "3452",
      "''",
      "?",
      "Give",
      "me",
      "the",
      "id",
      "of",
      "the",
      "order",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              23,
              false
            ],
            null
          ],
          "\"3452\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "border",
      ")",
      "FROM",
      "border_info",
      "WHERE",
      "state_name",
      "=",
      "``",
      "kentucky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "border",
      ")",
      "from",
      "border_info",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "how many states border kentucky",
    "question_toks": [
      "how",
      "many",
      "states",
      "border",
      "kentucky"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"kentucky\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\"",
    "query_toks": [
      "SELECT",
      "apt_number",
      "FROM",
      "Apartments",
      "WHERE",
      "apt_type_code",
      "=",
      "``",
      "Flat",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "apt_number",
      "from",
      "apartments",
      "where",
      "apt_type_code",
      "=",
      "value"
    ],
    "question": "Which apartments have type code \"Flat\"? Give me their apartment numbers.",
    "question_toks": [
      "Which",
      "apartments",
      "have",
      "type",
      "code",
      "``",
      "Flat",
      "''",
      "?",
      "Give",
      "me",
      "their",
      "apartment",
      "numbers",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Flat\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";",
    "query_toks": [
      "SELECT",
      "state_name",
      "FROM",
      "city",
      "WHERE",
      "city_name",
      "=",
      "``",
      "springfield",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state_name",
      "from",
      "city",
      "where",
      "city_name",
      "=",
      "value"
    ],
    "question": "what states in the united states have a city of springfield",
    "question_toks": [
      "what",
      "states",
      "in",
      "the",
      "united",
      "states",
      "have",
      "a",
      "city",
      "of",
      "springfield"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"springfield\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
    "query_toks": [
      "SELECT",
      "employee_id",
      "FROM",
      "Employees",
      "EXCEPT",
      "SELECT",
      "Destruction_Authorised_by_Employee_ID",
      "FROM",
      "Documents_to_be_destroyed"
    ],
    "query_toks_no_value": [
      "select",
      "employee_id",
      "from",
      "employees",
      "except",
      "select",
      "destruction_authorised_by_employee_id",
      "from",
      "documents_to_be_destroyed"
    ],
    "question": "Show the ids of the employees who don't authorize destruction for any document.",
    "question_toks": [
      "Show",
      "the",
      "ids",
      "of",
      "the",
      "employees",
      "who",
      "do",
      "n't",
      "authorize",
      "destruction",
      "for",
      "any",
      "document",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": {
        "from": {
          "table_units": [
            [
              "table_unit",
              7
            ]
          ],
          "conds": []
        },
        "select": [
          false,
          [
            [
              0,
              [
                0,
                [
                  0,
                  29,
                  false
                ],
                null
              ]
            ]
          ]
        ],
        "where": [],
        "groupBy": [],
        "having": [],
        "orderBy": [],
        "limit": null,
        "intersect": null,
        "union": null,
        "except": null
      }
    }
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "query": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Destruction_Authorised_by_Employee_ID",
      "FROM",
      "Documents_to_be_destroyed"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "destruction_authorised_by_employee_id",
      "from",
      "documents_to_be_destroyed"
    ],
    "question": "What are the ids of all the employees who authorize document destruction?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "the",
      "employees",
      "who",
      "authorize",
      "document",
      "destruction",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            7
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_1",
    "query": "SELECT song_name FROM song ORDER BY resolution",
    "query_toks": [
      "SELECT",
      "song_name",
      "FROM",
      "song",
      "ORDER",
      "BY",
      "resolution"
    ],
    "query_toks_no_value": [
      "select",
      "song_name",
      "from",
      "song",
      "order",
      "by",
      "resolution"
    ],
    "question": "Give me a list of the names of all songs ordered by their resolution.",
    "question_toks": [
      "Give",
      "me",
      "a",
      "list",
      "of",
      "the",
      "names",
      "of",
      "all",
      "songs",
      "ordered",
      "by",
      "their",
      "resolution",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT DISTINCT instrument FROM Instruments",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "instrument",
      "FROM",
      "Instruments"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "instrument",
      "from",
      "instruments"
    ],
    "question": "What are the different instruments listed in the database?",
    "question_toks": [
      "What",
      "are",
      "the",
      "different",
      "instruments",
      "listed",
      "in",
      "the",
      "database",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "device",
    "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Shop_Name",
      "FROM",
      "shop",
      "ORDER",
      "BY",
      "Open_Year",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "shop_name",
      "from",
      "shop",
      "order",
      "by",
      "open_year",
      "desc",
      "limit",
      "value"
    ],
    "question": "List the name of the shop with the latest open year.",
    "question_toks": [
      "List",
      "the",
      "name",
      "of",
      "the",
      "shop",
      "with",
      "the",
      "latest",
      "open",
      "year",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "local_govt_in_alabama",
    "query": "SELECT count(DISTINCT participant_id) FROM participants_in_Events",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "participant_id",
      ")",
      "FROM",
      "participants_in_Events"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "participant_id",
      ")",
      "from",
      "participants_in_events"
    ],
    "question": "What are all the distinct participant ids who attended any events?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "distinct",
      "participant",
      "ids",
      "who",
      "attended",
      "any",
      "events",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                10,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "climbing",
    "query": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "Range",
      "FROM",
      "mountain",
      "ORDER",
      "BY",
      "Prominence",
      "DESC",
      "LIMIT",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "range",
      "from",
      "mountain",
      "order",
      "by",
      "prominence",
      "desc",
      "limit",
      "value"
    ],
    "question": "List the distinct ranges of the mountains with the top 3 prominence.",
    "question_toks": [
      "List",
      "the",
      "distinct",
      "ranges",
      "of",
      "the",
      "mountains",
      "with",
      "the",
      "top",
      "3",
      "prominence",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 3,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_2",
    "query": "SELECT count(*) FROM instruments WHERE instrument  =  \"drums\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "instruments",
      "WHERE",
      "instrument",
      "=",
      "``",
      "drums",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "instruments",
      "where",
      "instrument",
      "=",
      "value"
    ],
    "question": "How many songs have used the instrument \"drums\"?",
    "question_toks": [
      "How",
      "many",
      "songs",
      "have",
      "used",
      "the",
      "instrument",
      "``",
      "drums",
      "''",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"drums\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "inn_1",
    "query": "SELECT count(*) FROM Rooms;",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Rooms",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "rooms"
    ],
    "question": "How many rooms are there?",
    "question_toks": [
      "How",
      "many",
      "rooms",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "cinema",
    "query": "SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\"",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "film",
      "WHERE",
      "title",
      "LIKE",
      "``",
      "%",
      "Dummy",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "film",
      "where",
      "title",
      "like",
      "value"
    ],
    "question": "Count the number of films whose title contains the word 'Dummy'.",
    "question_toks": [
      "Count",
      "the",
      "number",
      "of",
      "films",
      "whose",
      "title",
      "contains",
      "the",
      "word",
      "'Dummy",
      "'",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%Dummy%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "club_1",
    "query": "SELECT count(*) FROM student",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "student"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "student"
    ],
    "question": "Count the total number of students.",
    "question_toks": [
      "Count",
      "the",
      "total",
      "number",
      "of",
      "students",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName",
    "query_toks": [
      "SELECT",
      "cName",
      "FROM",
      "College",
      "WHERE",
      "enr",
      ">",
      "18000",
      "ORDER",
      "BY",
      "cName"
    ],
    "query_toks_no_value": [
      "select",
      "cname",
      "from",
      "college",
      "where",
      "enr",
      ">",
      "value",
      "order",
      "by",
      "cname"
    ],
    "question": "What is the name of every college in alphabetical order that has more than 18000 students enrolled?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "every",
      "college",
      "in",
      "alphabetical",
      "order",
      "that",
      "has",
      "more",
      "than",
      "18000",
      "students",
      "enrolled",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          18000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ]
        ]
      ],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scientist_1",
    "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "projects",
      "ORDER",
      "BY",
      "hours",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "projects",
      "order",
      "by",
      "hours",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the name of the project with the most hours?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "the",
      "project",
      "with",
      "the",
      "most",
      "hours",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "customers_and_invoices",
    "query": "SELECT count(*) FROM Accounts",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Accounts"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "accounts"
    ],
    "question": "How many accounts are there?",
    "question_toks": [
      "How",
      "many",
      "accounts",
      "are",
      "there",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "city_record",
    "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "gdp",
      "FROM",
      "city",
      "ORDER",
      "BY",
      "Regional_Population",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "gdp",
      "from",
      "city",
      "order",
      "by",
      "regional_population",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the GDP of the city with the largest regional population.",
    "question_toks": [
      "Find",
      "the",
      "GDP",
      "of",
      "the",
      "city",
      "with",
      "the",
      "largest",
      "regional",
      "population",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT venueid FROM venue WHERE venuename  =  \"Neuroscience\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "venueid",
      "FROM",
      "venue",
      "WHERE",
      "venuename",
      "=",
      "``",
      "Neuroscience",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "venueid",
      "from",
      "venue",
      "where",
      "venuename",
      "=",
      "value"
    ],
    "question": "What venues are for Neuroscience ?",
    "question_toks": [
      "What",
      "venues",
      "are",
      "for",
      "Neuroscience",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Neuroscience\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "music_4",
    "query": "SELECT Age FROM artist",
    "query_toks": [
      "SELECT",
      "Age",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "age",
      "from",
      "artist"
    ],
    "question": "List the age of all music artists.",
    "question_toks": [
      "List",
      "the",
      "age",
      "of",
      "all",
      "music",
      "artists",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT highest_elevation FROM highlow;",
    "query_toks": [
      "SELECT",
      "highest_elevation",
      "FROM",
      "highlow",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "highest_elevation",
      "from",
      "highlow"
    ],
    "question": "how high are the highest points of all the states",
    "question_toks": [
      "how",
      "high",
      "are",
      "the",
      "highest",
      "points",
      "of",
      "all",
      "the",
      "states"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "small_bank_1",
    "query": "SELECT sum(balance) FROM checking",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "balance",
      ")",
      "FROM",
      "checking"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "balance",
      ")",
      "from",
      "checking"
    ],
    "question": "Find the total balance across checking accounts.",
    "question_toks": [
      "Find",
      "the",
      "total",
      "balance",
      "across",
      "checking",
      "accounts",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "geo",
    "query": "SELECT population FROM state WHERE state_name  =  \"california\";",
    "query_toks": [
      "SELECT",
      "population",
      "FROM",
      "state",
      "WHERE",
      "state_name",
      "=",
      "``",
      "california",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "population",
      "from",
      "state",
      "where",
      "state_name",
      "=",
      "value"
    ],
    "question": "what can you tell me about the population of california",
    "question_toks": [
      "what",
      "can",
      "you",
      "tell",
      "me",
      "about",
      "the",
      "population",
      "of",
      "california"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              1,
              false
            ],
            null
          ],
          "\"california\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "entrepreneur",
    "query": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Weight",
      "FROM",
      "people",
      "ORDER",
      "BY",
      "Height",
      "ASC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "weight",
      "from",
      "people",
      "order",
      "by",
      "height",
      "asc",
      "limit",
      "value"
    ],
    "question": "What is the weight of the shortest person?",
    "question_toks": [
      "What",
      "is",
      "the",
      "weight",
      "of",
      "the",
      "shortest",
      "person",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "phone_1",
    "query": "SELECT * FROM chip_model",
    "query_toks": [
      "SELECT",
      "*",
      "FROM",
      "chip_model"
    ],
    "query_toks_no_value": [
      "select",
      "*",
      "from",
      "chip_model"
    ],
    "question": "Find the details for all chip models.",
    "question_toks": [
      "Find",
      "the",
      "details",
      "for",
      "all",
      "chip",
      "models",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_4",
    "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "country",
      "FROM",
      "airports",
      "ORDER",
      "BY",
      "elevation",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "country",
      "from",
      "airports",
      "order",
      "by",
      "elevation",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the country of the airport with the highest elevation?",
    "question_toks": [
      "What",
      "is",
      "the",
      "country",
      "of",
      "the",
      "airport",
      "with",
      "the",
      "highest",
      "elevation",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "college_1",
    "query": "SELECT count(DISTINCT school_code) FROM department",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "DISTINCT",
      "school_code",
      ")",
      "FROM",
      "department"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "school_code",
      ")",
      "from",
      "department"
    ],
    "question": "How many schools are there in the department?",
    "question_toks": [
      "How",
      "many",
      "schools",
      "are",
      "there",
      "in",
      "the",
      "department",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            2
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                13,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "theme_gallery",
    "query": "SELECT DISTINCT country FROM artist",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "country",
      "FROM",
      "artist"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "country",
      "from",
      "artist"
    ],
    "question": "Return the different countries for artists.",
    "question_toks": [
      "Return",
      "the",
      "different",
      "countries",
      "for",
      "artists",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "flight_1",
    "query": "SELECT aid FROM Aircraft WHERE distance  >  1000",
    "query_toks": [
      "SELECT",
      "aid",
      "FROM",
      "Aircraft",
      "WHERE",
      "distance",
      ">",
      "1000"
    ],
    "query_toks_no_value": [
      "select",
      "aid",
      "from",
      "aircraft",
      "where",
      "distance",
      ">",
      "value"
    ],
    "question": "What are the ids of all aircrafts that can cover a distance of more than 1000?",
    "question_toks": [
      "What",
      "are",
      "the",
      "ids",
      "of",
      "all",
      "aircrafts",
      "that",
      "can",
      "cover",
      "a",
      "distance",
      "of",
      "more",
      "than",
      "1000",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          1000.0,
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "soccer_2",
    "query": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "pName",
      "FROM",
      "Player",
      "WHERE",
      "pName",
      "LIKE",
      "'",
      "%",
      "a",
      "%",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "pname",
      "from",
      "player",
      "where",
      "pname",
      "like",
      "value"
    ],
    "question": "Who are the players that have names containing the letter a?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "players",
      "that",
      "have",
      "names",
      "containing",
      "the",
      "letter",
      "a",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"%a%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "shop_membership",
    "query": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\"",
    "query_toks": [
      "SELECT",
      "card_number",
      "FROM",
      "member",
      "WHERE",
      "Hometown",
      "LIKE",
      "``",
      "%",
      "Kentucky",
      "%",
      "''"
    ],
    "query_toks_no_value": [
      "select",
      "card_number",
      "from",
      "member",
      "where",
      "hometown",
      "like",
      "value"
    ],
    "question": "list the card number of all members whose hometown address includes word \"Kentucky\".",
    "question_toks": [
      "list",
      "the",
      "card",
      "number",
      "of",
      "all",
      "members",
      "whose",
      "hometown",
      "address",
      "includes",
      "word",
      "``",
      "Kentucky",
      "''",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"%Kentucky%\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "e_government",
    "query": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3",
    "query_toks": [
      "SELECT",
      "payment_method_code",
      "FROM",
      "parties",
      "GROUP",
      "BY",
      "payment_method_code",
      "HAVING",
      "count",
      "(",
      "*",
      ")",
      ">",
      "3"
    ],
    "query_toks_no_value": [
      "select",
      "payment_method_code",
      "from",
      "parties",
      "group",
      "by",
      "payment_method_code",
      "having",
      "count",
      "(",
      "*",
      ")",
      ">",
      "value"
    ],
    "question": "What are the payment method codes that have been used by more than 3 parties?",
    "question_toks": [
      "What",
      "are",
      "the",
      "payment",
      "method",
      "codes",
      "that",
      "have",
      "been",
      "used",
      "by",
      "more",
      "than",
      "3",
      "parties",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            5
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [
        [
          0,
          29,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              0,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "company_employee",
    "query": "SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1",
    "query_toks": [
      "SELECT",
      "Headquarters",
      "FROM",
      "company",
      "ORDER",
      "BY",
      "Sales_in_Billion",
      "DESC",
      "LIMIT",
      "1"
    ],
    "query_toks_no_value": [
      "select",
      "headquarters",
      "from",
      "company",
      "order",
      "by",
      "sales_in_billion",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the headquarter of the company with the largest sales?",
    "question_toks": [
      "What",
      "is",
      "the",
      "headquarter",
      "of",
      "the",
      "company",
      "with",
      "the",
      "largest",
      "sales",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            1
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ]
        ]
      ],
      "limit": 1,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "apartment_rentals",
    "query": "SELECT count(*) FROM Apartment_Bookings",
    "query_toks": [
      "SELECT",
      "count",
      "(",
      "*",
      ")",
      "FROM",
      "Apartment_Bookings"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "apartment_bookings"
    ],
    "question": "How many apartment bookings are there in total?",
    "question_toks": [
      "How",
      "many",
      "apartment",
      "bookings",
      "are",
      "there",
      "in",
      "total",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            4
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "game_1",
    "query": "SELECT sum(gamesplayed) FROM Sportsinfo",
    "query_toks": [
      "SELECT",
      "sum",
      "(",
      "gamesplayed",
      ")",
      "FROM",
      "Sportsinfo"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "gamesplayed",
      ")",
      "from",
      "sportsinfo"
    ],
    "question": "What is the total number of games played?",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "number",
      "of",
      "games",
      "played",
      "?"
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            3
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  },
  {
    "db_id": "program_share",
    "query": "SELECT name FROM program WHERE origin != 'Beijing'",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "program",
      "WHERE",
      "origin",
      "!",
      "=",
      "'Beijing",
      "'"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "program",
      "where",
      "origin",
      "!",
      "=",
      "value"
    ],
    "question": "Which programs' origins are not \"Beijing\"? Give me the program names.",
    "question_toks": [
      "Which",
      "programs",
      "'",
      "origins",
      "are",
      "not",
      "``",
      "Beijing",
      "''",
      "?",
      "Give",
      "me",
      "the",
      "program",
      "names",
      "."
    ],
    "sql": {
      "from": {
        "table_units": [
          [
            "table_unit",
            0
          ]
        ],
        "conds": []
      },
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Beijing\"",
          null
        ]
      ],
      "groupBy": [],
      "having": [],
      "orderBy": [],
      "limit": null,
      "intersect": null,
      "union": null,
      "except": null
    }
  }
]